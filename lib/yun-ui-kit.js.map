{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///yun-ui-kit.js","webpack:///webpack/bootstrap e534ca49fe25e7e5d28f","webpack:///./~/react/~/fbjs/lib/invariant.js","webpack:///./~/react/lib/Object.assign.js","webpack:///./~/react/~/fbjs/lib/warning.js","webpack:///./~/react/~/fbjs/lib/ExecutionEnvironment.js","webpack:///./~/react/lib/ReactMount.js","webpack:///./~/react/lib/ReactElement.js","webpack:///./~/react/lib/ReactPerf.js","webpack:///./~/react/lib/ReactUpdates.js","webpack:///./~/react/~/fbjs/lib/emptyFunction.js","webpack:///./~/react/lib/EventConstants.js","webpack:///./~/react/lib/ReactCurrentOwner.js","webpack:///./~/react/lib/PooledClass.js","webpack:///./~/react/~/fbjs/lib/keyOf.js","webpack:///./~/ramda/dist/ramda.js","webpack:///./~/react/lib/ReactReconciler.js","webpack:///./~/react/lib/SyntheticEvent.js","webpack:///./~/react/lib/DOMProperty.js","webpack:///./~/react/lib/ReactInstanceHandles.js","webpack:///./~/react/lib/EventPluginHub.js","webpack:///./~/react/lib/EventPropagators.js","webpack:///./~/react/lib/ReactInstanceMap.js","webpack:///./~/react/lib/SyntheticUIEvent.js","webpack:///./~/react/~/fbjs/lib/emptyObject.js","webpack:///./~/react/react.js","webpack:///./~/react/lib/ReactBrowserEventEmitter.js","webpack:///./~/react/lib/ReactPropTypeLocationNames.js","webpack:///./~/react/lib/ReactPropTypeLocations.js","webpack:///./~/react/lib/SyntheticMouseEvent.js","webpack:///./~/react/lib/Transaction.js","webpack:///./~/react/lib/canDefineProperty.js","webpack:///./~/react/lib/escapeTextContentForBrowser.js","webpack:///./~/react/lib/setInnerHTML.js","webpack:///./~/react/~/fbjs/lib/keyMirror.js","webpack:///./~/ramda-extras/lib/ramda-extras.js","webpack:///./~/react/lib/CallbackQueue.js","webpack:///./~/react/lib/DOMPropertyOperations.js","webpack:///./~/react/lib/LinkedValueUtils.js","webpack:///./~/react/lib/ReactComponentBrowserEnvironment.js","webpack:///./~/react/lib/ReactComponentEnvironment.js","webpack:///./~/react/lib/ReactDOMIDOperations.js","webpack:///./~/react/lib/ReactUpdateQueue.js","webpack:///./~/react/lib/ReactVersion.js","webpack:///./~/react/lib/findDOMNode.js","webpack:///./~/react/lib/getEventCharCode.js","webpack:///./~/react/lib/getEventModifierState.js","webpack:///./~/react/lib/getEventTarget.js","webpack:///./~/react/lib/getIteratorFn.js","webpack:///./~/react/lib/instantiateReactComponent.js","webpack:///./~/react/lib/isEventSupported.js","webpack:///./~/react/lib/setTextContent.js","webpack:///./~/react/lib/shouldUpdateReactComponent.js","webpack:///./~/react/lib/traverseAllChildren.js","webpack:///./~/react/lib/validateDOMNesting.js","webpack:///./src/utils/react.coffee","webpack:///./src/utils/url.coffee","webpack:///./src/views/Link.coffee","webpack:///./~/react/lib/CSSProperty.js","webpack:///./~/react/lib/DOMChildrenOperations.js","webpack:///./~/react/lib/EventPluginRegistry.js","webpack:///./~/react/lib/ReactChildren.js","webpack:///./~/react/lib/ReactClass.js","webpack:///./~/react/lib/ReactComponent.js","webpack:///./~/react/lib/ReactDOM.js","webpack:///./~/react/lib/ReactDOMFeatureFlags.js","webpack:///./~/react/lib/ReactDOMSelect.js","webpack:///./~/react/lib/ReactDOMTextComponent.js","webpack:///./~/react/lib/ReactDefaultBatchingStrategy.js","webpack:///./~/react/lib/ReactDefaultInjection.js","webpack:///./~/react/lib/ReactElementValidator.js","webpack:///./~/react/lib/ReactEmptyComponent.js","webpack:///./~/react/lib/ReactEmptyComponentRegistry.js","webpack:///./~/react/lib/ReactErrorUtils.js","webpack:///./~/react/lib/ReactInputSelection.js","webpack:///./~/react/lib/ReactMarkupChecksum.js","webpack:///./~/react/lib/ReactMultiChildUpdateTypes.js","webpack:///./~/react/lib/ReactNativeComponent.js","webpack:///./~/react/lib/ReactNoopUpdateQueue.js","webpack:///./~/react/lib/ReactPropTypes.js","webpack:///./~/react/lib/ReactRootIndex.js","webpack:///./~/react/lib/ViewportMetrics.js","webpack:///./~/react/lib/accumulateInto.js","webpack:///./~/react/lib/forEachAccumulated.js","webpack:///./~/react/lib/getTextContentAccessor.js","webpack:///./~/react/lib/isTextInputElement.js","webpack:///./~/react/~/fbjs/lib/EventListener.js","webpack:///./~/react/~/fbjs/lib/containsNode.js","webpack:///./~/react/~/fbjs/lib/focusNode.js","webpack:///./~/react/~/fbjs/lib/getActiveElement.js","webpack:///./~/react/~/fbjs/lib/getMarkupWrap.js","webpack:///./~/react/~/fbjs/lib/shallowEqual.js","webpack:///external \"radium\"","webpack:///./src/themes/ThemeDefault.coffee","webpack:///./src/themes/ThemeMaterialDesign.coffee","webpack:///./src/views/Dialog.coffee","webpack:///./src/views/Portal.coffee","webpack:///./src/yun.coffee","webpack:///./~/lodash/lodash.js","webpack:///./~/react-dom/index.js","webpack:///./~/react/lib/AutoFocusUtils.js","webpack:///./~/react/lib/BeforeInputEventPlugin.js","webpack:///./~/react/lib/CSSPropertyOperations.js","webpack:///./~/react/lib/ChangeEventPlugin.js","webpack:///./~/react/lib/ClientReactRootIndex.js","webpack:///./~/react/lib/Danger.js","webpack:///./~/react/lib/DefaultEventPluginOrder.js","webpack:///./~/react/lib/EnterLeaveEventPlugin.js","webpack:///./~/react/lib/EventPluginUtils.js","webpack:///./~/react/lib/FallbackCompositionState.js","webpack:///./~/react/lib/HTMLDOMPropertyConfig.js","webpack:///./~/react/lib/React.js","webpack:///./~/react/lib/ReactBrowserComponentMixin.js","webpack:///./~/react/lib/ReactChildReconciler.js","webpack:///./~/react/lib/ReactCompositeComponent.js","webpack:///./~/react/lib/ReactDOMButton.js","webpack:///./~/react/lib/ReactDOMComponent.js","webpack:///./~/react/lib/ReactDOMFactories.js","webpack:///./~/react/lib/ReactDOMInput.js","webpack:///./~/react/lib/ReactDOMOption.js","webpack:///./~/react/lib/ReactDOMSelection.js","webpack:///./~/react/lib/ReactDOMServer.js","webpack:///./~/react/lib/ReactDOMTextarea.js","webpack:///./~/react/lib/ReactEventEmitterMixin.js","webpack:///./~/react/lib/ReactEventListener.js","webpack:///./~/react/lib/ReactInjection.js","webpack:///./~/react/lib/ReactIsomorphic.js","webpack:///./~/react/lib/ReactMultiChild.js","webpack:///./~/react/lib/ReactOwner.js","webpack:///./~/react/lib/ReactReconcileTransaction.js","webpack:///./~/react/lib/ReactRef.js","webpack:///./~/react/lib/ReactServerBatchingStrategy.js","webpack:///./~/react/lib/ReactServerRendering.js","webpack:///./~/react/lib/ReactServerRenderingTransaction.js","webpack:///./~/react/lib/SVGDOMPropertyConfig.js","webpack:///./~/react/lib/SelectEventPlugin.js","webpack:///./~/react/lib/ServerReactRootIndex.js","webpack:///./~/react/lib/SimpleEventPlugin.js","webpack:///./~/react/lib/SyntheticClipboardEvent.js","webpack:///./~/react/lib/SyntheticCompositionEvent.js","webpack:///./~/react/lib/SyntheticDragEvent.js","webpack:///./~/react/lib/SyntheticFocusEvent.js","webpack:///./~/react/lib/SyntheticInputEvent.js","webpack:///./~/react/lib/SyntheticKeyboardEvent.js","webpack:///./~/react/lib/SyntheticTouchEvent.js","webpack:///./~/react/lib/SyntheticWheelEvent.js","webpack:///./~/react/lib/adler32.js","webpack:///./~/react/lib/dangerousStyleValue.js","webpack:///./~/react/lib/deprecated.js","webpack:///./~/react/lib/flattenChildren.js","webpack:///./~/react/lib/getEventKey.js","webpack:///./~/react/lib/getNodeForCharacterOffset.js","webpack:///./~/react/lib/onlyChild.js","webpack:///./~/react/lib/quoteAttributeValueForBrowser.js","webpack:///./~/react/lib/renderSubtreeIntoContainer.js","webpack:///./~/react/~/fbjs/lib/camelize.js","webpack:///./~/react/~/fbjs/lib/camelizeStyleName.js","webpack:///./~/react/~/fbjs/lib/createArrayFromMixed.js","webpack:///./~/react/~/fbjs/lib/createNodesFromMarkup.js","webpack:///./~/react/~/fbjs/lib/getUnboundedScrollPosition.js","webpack:///./~/react/~/fbjs/lib/hyphenate.js","webpack:///./~/react/~/fbjs/lib/hyphenateStyleName.js","webpack:///./~/react/~/fbjs/lib/isNode.js","webpack:///./~/react/~/fbjs/lib/isTextNode.js","webpack:///./~/react/~/fbjs/lib/mapObject.js","webpack:///./~/react/~/fbjs/lib/memoizeStringOnly.js","webpack:///./~/react/~/fbjs/lib/toArray.js","webpack:///(webpack)/buildin/module.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_91__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","invariant","condition","format","a","b","d","e","f","error","undefined","Error","args","argIndex","replace","name","framesToPop","assign","target","sources","TypeError","to","Object","hasOwnProperty","prototype","nextIndex","arguments","length","nextSource","from","key","emptyFunction","warning","canUseDOM","window","document","createElement","ExecutionEnvironment","canUseWorkers","Worker","canUseEventListeners","addEventListener","attachEvent","canUseViewport","screen","isInWorker","firstDifferenceIndex","string1","string2","minLen","Math","min","i","charAt","getReactRootElementInContainer","container","nodeType","DOC_NODE_TYPE","documentElement","firstChild","getReactRootID","rootElement","ReactMount","getID","node","internalGetID","nodeCache","cached","isValid","getAttribute","ATTR_NAME","setID","oldID","setAttribute","getNode","findReactNodeByID","getNodeFromInstance","instance","ReactInstanceMap","get","_rootNodeID","ReactEmptyComponentRegistry","isNullComponentID","findReactContainerForID","containsNode","purgeID","findDeepestCachedAncestorImpl","ancestorID","ancestor","deepestNodeSoFar","findDeepestCachedAncestor","targetID","ReactInstanceHandles","traverseAncestors","foundNode","mountComponentIntoNode","componentInstance","rootID","transaction","shouldReuseMarkup","context","ReactDOMFeatureFlags","useCreateElement","ownerDocumentContextKey","ownerDocument","markup","ReactReconciler","mountComponent","_renderedComponent","_topLevelWrapper","_mountImageIntoNode","batchedMountComponentIntoNode","ReactUpdates","ReactReconcileTransaction","getPooled","perform","release","unmountComponentFromNode","unmountComponent","lastChild","removeChild","hasNonRootReactChild","reactRootID","getReactRootIDFromNodeID","findFirstReactDOMImpl","parentNode","nodeID","lastID","current","containersByReactRootID","DOMProperty","ReactBrowserEventEmitter","ReactElement","ReactMarkupChecksum","ReactPerf","ReactUpdateQueue","emptyObject","instantiateReactComponent","setInnerHTML","shouldUpdateReactComponent","ID_ATTRIBUTE_NAME","ELEMENT_NODE_TYPE","DOCUMENT_FRAGMENT_NODE_TYPE","random","toString","slice","instancesByReactRootID","findComponentRootReusableArray","TopLevelWrapper","isReactComponent","render","props","_instancesByReactRootID","scrollMonitor","renderCallback","_updateRootComponent","prevComponent","nextElement","callback","enqueueElementInternal","enqueueCallbackInternal","_registerComponent","nextComponent","ensureScrollValueMonitoring","registerContainer","_renderNewRootComponent","batchedUpdates","renderSubtreeIntoContainer","parentComponent","_reactInternalInstance","_renderSubtreeIntoContainer","isValidElement","nextWrappedElement","prevWrappedElement","_currentElement","prevElement","publicInst","getPublicInstance","updatedCallback","unmountComponentAtNode","reactRootElement","containerHasReactMarkup","containerHasNonRootReactChild","component","_processChildContext","_context","createReactRootID","containerID","reactRoot","findComponentRoot","getFirstReactDOM","ancestorNode","firstChildren","childIndex","deepestAncestor","targetChild","child","childID","isAncestorIDOf","push","nextSibling","canReuseMarkup","checksum","CHECKSUM_ATTR_NAME","removeAttribute","rootMarkup","outerHTML","normalizedMarkup","diffIndex","substring","appendChild","measureMethods","ReactCurrentOwner","REACT_ELEMENT_TYPE","Symbol","RESERVED_PROPS","ref","__self","__source","type","self","source","owner","element","$$typeof","_owner","config","children","propName","childrenLength","childArray","Array","defaultProps","createFactory","bind","cloneAndReplaceKey","oldElement","newKey","newElement","_self","_source","cloneAndReplaceProps","newProps","cloneElement","object","_noMeasure","objName","fnName","func","enableMeasure","storedMeasure","objectName","methodNames","measure","injection","injectMeasure","ensureInjected","batchingStrategy","ReactUpdatesFlushTransaction","reinitializeTransaction","dirtyComponentsLength","callbackQueue","CallbackQueue","reconcileTransaction","mountOrderComparator","c1","c2","_mountOrder","runBatchedUpdates","len","dirtyComponents","sort","callbacks","_pendingCallbacks","performUpdateIfNecessary","j","enqueue","enqueueUpdate","isBatchingUpdates","asap","asapCallbackQueue","asapEnqueued","PooledClass","Transaction","NESTED_UPDATES","initialize","close","splice","flushBatchedUpdates","UPDATE_QUEUEING","reset","notifyAll","TRANSACTION_WRAPPERS","Mixin","getTransactionWrappers","destructor","method","scope","addPoolingTo","queue","ReactUpdatesInjection","injectReconcileTransaction","ReconcileTransaction","injectBatchingStrategy","_batchingStrategy","makeEmptyFunction","arg","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","keyMirror","PropagationPhases","bubbled","captured","topLevelTypes","topAbort","topBlur","topCanPlay","topCanPlayThrough","topChange","topClick","topCompositionEnd","topCompositionStart","topCompositionUpdate","topContextMenu","topCopy","topCut","topDoubleClick","topDrag","topDragEnd","topDragEnter","topDragExit","topDragLeave","topDragOver","topDragStart","topDrop","topDurationChange","topEmptied","topEncrypted","topEnded","topError","topFocus","topInput","topKeyDown","topKeyPress","topKeyUp","topLoad","topLoadedData","topLoadedMetadata","topLoadStart","topMouseDown","topMouseMove","topMouseOut","topMouseOver","topMouseUp","topPaste","topPause","topPlay","topPlaying","topProgress","topRateChange","topReset","topScroll","topSeeked","topSeeking","topSelectionChange","topStalled","topSubmit","topSuspend","topTextInput","topTimeUpdate","topTouchCancel","topTouchEnd","topTouchMove","topTouchStart","topVolumeChange","topWaiting","topWheel","EventConstants","oneArgumentPooler","copyFieldsFrom","Klass","instancePool","pop","twoArgumentPooler","a1","a2","threeArgumentPooler","a3","fourArgumentPooler","a4","fiveArgumentPooler","a5","standardReleaser","poolSize","DEFAULT_POOL_SIZE","DEFAULT_POOLER","CopyConstructor","pooler","NewKlass","keyOf","oneKeyObj","__","@@functional/placeholder","_arity","n","fn","apply","a0","a6","a7","a8","a9","_arrayFromIterator","iter","next","list","done","value","_cloneRegExp","pattern","RegExp","global","ignoreCase","multiline","sticky","unicode","_complement","_concat","set1","set2","idx","len1","len2","result","_containsWith","pred","x","_filter","_forceReduced","@@transducer/value","@@transducer/reduced","_has","prop","obj","_identity","_isArguments","_isArray","isArray","val","_isInteger","Number","isInteger","_isNumber","_isObject","_isPlaceholder","_isRegExp","_isString","_isTransformer","_map","functor","_of","_pipe","g","_pipeP","ctx","then","_quote","s","escaped","_reduced","_slice","max","_toISOString","pad","Date","toISOString","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","_xfBase","init","xf","_xwrap","XWrap","acc","_aperture","limit","_checkForMethod","methodname","_curry1","f1","_curry2","f2","_b","_a","_curry3","f3","_c","_curryN","received","combined","argsIdx","left","combinedIdx","_dispatchable","transducer","_dropLastWhile","_xall","XAll","all","input","_xany","XAny","any","_xaperture","XAperture","pos","full","store","getCopy","_xdrop","XDrop","_xdropLast","XDropLast","_xdropRepeatsWith","XDropRepeatsWith","lastValue","seenFirstValue","sameAsLast","_xdropWhile","XDropWhile","_xfilter","XFilter","_xfind","XFind","found","_xfindIndex","XFindIndex","_xfindLast","XFindLast","last","_xfindLastIndex","XFindLastIndex","lastIdx","_xmap","XMap","_xtake","XTake","_xtakeWhile","XTakeWhile","add","adjust","start","_idx","_list","always","and","aperture","append","el","assoc","assocPath","path","thisObj","both","comparator","cond","pairs","countBy","counts","curryN","dec","defaultTo","v","differenceWith","first","second","out","firstLen","dissoc","dissocPath","head","tail","divide","dropWhile","either","empty","constructor","evolve","transformations","transformation","find","findIndex","findLast","findLastIndex","forEach","fromPairs","gt","gte","has","hasIn","identical","identity","ifElse","onTrue","onFalse","inc","insert","elt","insertAll","elts","intersperse","separator","is","Ctor","isArrayLike","String","isNil","keys","hasEnumBug","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","contains","item","nIdx","ks","checkArgsLength","keysIn","NaN","lt","lte","mapAccum","tuple","mapAccumRight","match","rx","str","mathMod","maxBy","mergeWithKey","l","r","k","minBy","modulo","multiply","nAry","negate","none","not","nth","offset","nthArg","objOf","of","once","called","or","over","Identity","map","lens","y","pair","fst","snd","paths","pathOr","pathSatisfies","propPath","pick","names","pickAll","pickBy","test","prepend","propOr","propSatisfies","ps","range","reduceRight","reduced","remove","count","regex","replacement","reverse","split","join","scan","set","fromIndex","toIndex","sortBy","aa","bb","splitAt","index","array","splitEvery","splitWhen","prefix","subtract","Infinity","take","xs","takeLastWhile","takeWhile","tap","times","isNaN","RangeError","toPairs","toPairsIn","transpose","outerlist","innerlist","trim","ws","zeroWidth","hasProtoTrim","beginRx","endRx","unapply","unary","uncurryN","depth","endIdx","currentDepth","unfold","seed","uniqWith","unless","whenFalseFn","update","useWith","transformers","concat","values","vals","valuesIn","vs","view","Const","when","whenTrueFn","where","spec","testObj","wrap","wrapper","xprod","ilen","jlen","zip","rv","zipObj","zipWith","F","T","_clone","refFrom","refTo","copy","copiedValue","valueOf","_createPartialApplicator","_dropLast","_equals","stackA","stackB","equals","message","entries","keysA","_makeFlat","recursive","flatt","_reduce","_arrayReduce","_iterableReduce","step","_methodReduce","reduce","symIterator","iterator","_xdropLastWhile","XDropLastWhile","retained","retain","flush","_xgroupBy","XGroupBy","inputs","addIndex","origFn","binary","clone","curry","drop","dropLast","dropLastWhile","filter","filterable","flatten","flip","groupBy","indexBy","elem","intersectionWith","list1","list2","results","invert","invertObj","isEmpty","lastIndexOf","mapObjIndexed","mergeWith","_","_l","_r","partial","partialRight","partition","pathEq","_path","pluck","project","propEq","propIs","reject","repeat","sum","takeLast","transduce","unionWith","whereEq","_flatCat","preservingReduced","@@transducer/init","@@transducer/result","@@transducer/step","ret","rxf","_indexOf","inf","indexOf","_xchain","allPass","preds","allUniq","anyPass","ap","applicative","chain","monad","commuteMap","consF","constructN","Fn","$0","$1","$2","$3","$4","$5","$6","$7","$8","$9","converge","after","fns","dropRepeatsWith","eqBy","eqProps","obj1","obj2","juxt","getter","setter","lensIndex","lensPath","lensProp","liftN","arity","lifted","mean","median","width","merge","mergeAll","pipe","pipeP","product","sequence","traversable","traverse","unnest","_contains","_stepCat","_stepCatArray","_stepCatString","_stepCatObject","_toString","seen","recur","mapPairs","repr","commute","compose","composeK","composeP","construct","difference","dropRepeats","into","lift","omit","pipeK","uniqBy","Set","appliedItem","applied","newSetSize","prevSetSize","nullExists","negZeroExists","size","without","complement","invoker","Function","memoize","cache","toLower","toUpper","uniq","intersection","symmetricDifference","symmetricDifferenceWith","union","R","attachRefs","ReactRef","internalInstance","getReactMountReady","detachRefs","receiveComponent","refsChanged","shouldUpdateRefs","SyntheticEvent","dispatchConfig","dispatchMarker","nativeEvent","nativeEventTarget","Interface","normalize","defaultPrevented","returnValue","isDefaultPrevented","isPropagationStopped","EventInterface","currentTarget","eventPhase","bubbles","cancelable","timeStamp","event","now","isTrusted","preventDefault","stopPropagation","cancelBubble","persist","isPersistent","augmentClass","Class","Super","create","checkMask","bitmask","DOMPropertyInjection","MUST_USE_ATTRIBUTE","MUST_USE_PROPERTY","HAS_SIDE_EFFECTS","HAS_BOOLEAN_VALUE","HAS_NUMERIC_VALUE","HAS_POSITIVE_NUMERIC_VALUE","HAS_OVERLOADED_BOOLEAN_VALUE","injectDOMPropertyConfig","domPropertyConfig","Injection","Properties","DOMAttributeNamespaces","DOMAttributeNames","DOMPropertyNames","DOMMutationMethods","isCustomAttribute","_isCustomAttributeFunctions","properties","lowerCased","toLowerCase","propConfig","propertyInfo","attributeName","attributeNamespace","propertyName","mutationMethod","mustUseAttribute","mustUseProperty","hasSideEffects","hasBooleanValue","hasNumericValue","hasPositiveNumericValue","hasOverloadedBooleanValue","defaultValueCache","getPossibleStandardName","isCustomAttributeFn","getDefaultValueForProperty","nodeName","testElement","nodeDefaults","getReactRootIDString","SEPARATOR","isBoundary","isValidID","descendantID","getParentID","substr","getNextDescendantID","destinationID","SEPARATOR_LENGTH","getFirstCommonAncestorID","oneID","twoID","minLength","lastCommonMarkerIndex","longestCommonID","traverseParentPath","stop","cb","skipFirst","skipLast","traverseUp","MAX_TREE_DEPTH","ReactRootIndex","createReactRootIndex","createReactID","traverseEnterLeave","leaveID","enterID","upArg","downArg","traverseTwoPhase","traverseTwoPhaseSkipTarget","_getNextDescendantID","EventPluginRegistry","EventPluginUtils","ReactErrorUtils","accumulateInto","forEachAccumulated","listenerBank","eventQueue","executeDispatchesAndRelease","simulated","executeDispatchesInOrder","executeDispatchesAndReleaseSimulated","executeDispatchesAndReleaseTopLevel","InstanceHandle","EventPluginHub","injectMount","injectInstanceHandle","InjectedInstanceHandle","getInstanceHandle","injectEventPluginOrder","injectEventPluginsByName","eventNameDispatchConfigs","registrationNameModules","putListener","registrationName","listener","bankForRegistrationName","PluginModule","didPutListener","getListener","deleteListener","willDeleteListener","deleteAllListeners","extractEvents","topLevelType","topLevelTarget","topLevelTargetID","events","plugins","possiblePlugin","extractedEvents","enqueueEvents","processEventQueue","processingEventQueue","rethrowCaughtError","__purge","__getListenerBank","listenerAtPhase","propagationPhase","phasedRegistrationNames","accumulateDirectionalDispatches","domID","upwards","phase","_dispatchListeners","_dispatchIDs","accumulateTwoPhaseDispatchesSingle","accumulateTwoPhaseDispatchesSingleSkipTarget","accumulateDispatches","ignoredDirection","accumulateDirectDispatchesSingle","accumulateTwoPhaseDispatches","accumulateTwoPhaseDispatchesSkipTarget","accumulateEnterLeaveDispatches","leave","enter","fromID","toID","accumulateDirectDispatches","EventPropagators","SyntheticUIEvent","getEventTarget","UIEventInterface","doc","defaultView","parentWindow","detail","getListeningForDocument","mountAt","topListenersIDKey","reactTopListenersCounter","alreadyListeningTo","ReactEventEmitterMixin","ViewportMetrics","isEventSupported","isMonitoringScrollValue","topEventMapping","ReactEventListener","injectReactEventListener","setHandleTopLevel","handleTopLevel","setEnabled","enabled","isEnabled","listenTo","contentDocumentHandle","isListening","dependencies","registrationNameDependencies","dependency","trapBubbledEvent","trapCapturedEvent","WINDOW_HANDLE","handlerBaseName","handle","refresh","refreshScrollValues","monitorScrollValue","ReactPropTypeLocationNames","ReactPropTypeLocations","childContext","SyntheticMouseEvent","getEventModifierState","MouseEventInterface","screenX","screenY","clientX","clientY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","button","buttons","relatedTarget","fromElement","srcElement","toElement","pageX","currentScrollLeft","pageY","currentScrollTop","transactionWrappers","wrapperInitData","_isInTransaction","isInTransaction","errorThrown","initializeAll","closeAll","err","startIndex","OBSERVED_ERROR","initData","canDefineProperty","escaper","ESCAPE_LOOKUP","escapeTextContentForBrowser","text","ESCAPE_REGEX","&",">","<","\"","'","WHITESPACE_TEST","NONVISIBLE_TEST","html","innerHTML","MSApp","execUnsafeLocalFunction","replaceChild","fromCharCode","textNode","data","deleteData","_composeP2","cc","ccp","clamp","composeP2","concatMany","evolveAll","fail","flipAllAndPrependY","getPath","isNotNil","isThenable","mapIndexed","maxIn","mergeMany","mergeOrEvolve","minIn","pickOr","ramdaFlipped","reduceObj","toStr","o","pathToUse","lists","keysAndDefaults","picked","valueOrDefault","objects","original","callF","cloneShallow","data2","forcedMerges","merged","missingKeys","sharedKeys","spec2","toMerge","functions","_fail","fs","_callbacks","_contexts","contexts","isAttributeNameSafe","validatedAttributeNameCache","illegalAttributeNameCache","VALID_ATTRIBUTE_NAME_REGEX","shouldIgnoreValue","quoteAttributeValueForBrowser","DOMPropertyOperations","createMarkupForID","setAttributeForID","createMarkupForProperty","createMarkupForCustomAttribute","setValueForProperty","deleteValueForProperty","namespace","setAttributeNS","setValueForAttribute","defaultValue","_assertSingleLink","inputProps","checkedLink","valueLink","_assertValueLink","onChange","_assertCheckedLink","checked","getDeclarationErrorAddendum","getName","ReactPropTypes","hasReadOnlyValue","checkbox","image","hidden","radio","submit","propTypes","componentName","readOnly","disabled","loggedTypeFailures","LinkedValueUtils","checkPropTypes","tagName","getValue","getChecked","executeOnChange","requestChange","ReactDOMIDOperations","ReactComponentBrowserEnvironment","processChildrenUpdates","dangerouslyProcessChildrenUpdates","replaceNodeWithMarkupByID","dangerouslyReplaceNodeWithMarkupByID","unmountIDFromEnvironment","rootNodeID","injected","ReactComponentEnvironment","injectEnvironment","environment","DOMChildrenOperations","INVALID_PROPERTY_ERRORS","dangerouslySetInnerHTML","style","updatePropertyByID","dangerouslyReplaceNodeWithMarkup","updates","parentID","processUpdates","getInternalInstanceReadyForUpdate","publicInstance","callerName","isMounted","enqueueCallback","enqueueForceUpdate","_pendingForceUpdate","enqueueReplaceState","completeState","_pendingStateQueue","_pendingReplaceState","enqueueSetState","partialState","enqueueSetProps","partialProps","enqueueSetPropsInternal","topLevelWrapper","wrapElement","_pendingElement","enqueueReplaceProps","enqueueReplacePropsInternal","findDOMNode","componentOrElement","getEventCharCode","charCode","keyCode","modifierStateGetter","keyArg","syntheticEvent","keyProp","modifierKeyToProp","Alt","Control","Meta","Shift","getIteratorFn","maybeIterable","iteratorFn","ITERATOR_SYMBOL","FAUX_ITERATOR_SYMBOL","isInternalComponentType","ReactEmptyComponent","ReactNativeComponent","createInternalComponent","ReactCompositeComponentWrapper","createInstanceForText","_mountIndex","_mountImage","ReactCompositeComponent","_instantiateReactComponent","eventNameSuffix","capture","eventName","isSupported","useHasFeature","implementation","hasFeature","setTextContent","textContent","prevEmpty","nextEmpty","prevType","nextType","userProvidedKeyEscaper","userProvidedKeyEscaperLookup","getComponentKey","wrapUserProvidedKey","escapeUserProvidedKey","userProvidedKeyEscapeRegex","traverseAllChildrenImpl","nameSoFar","traverseContext","nextName","subtreeCount","nextNamePrefix","SUBSEPARATOR","ii","entry","traverseAllChildren","=",".",":","validateDOMNesting","React","adjustState","applyTheme","build","evolveState","lo","mergeState","ref1","yforEach","state","setState","stateCopy","cloneDeep","comp","componentStyle","baseStyle","extraStyle","theme","_isLeftClickEvent","_isModifiedEvent","_kvToQuery","createUrl","createUrlHelper","getQuery","isEmptyObj","nav","nav2","navigate","toQueryString","urlWithoutQuery","queryString","re","location","search","exec","decodeURIComponent","protocol","host","pathname","newQuery","url","urlToUse","urlOrFnOrObj","history","pushState","dispatchEvent","Event","Link","Radium","oneOfType","ref2","string","PropTypes","DOM","createClass","displayName","href","linkProps","omitSpecialProps","otherProps","ref3","onClick","prefixKey","toUpperCase","isUnitlessNumber","animationIterationCount","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","stopOpacity","strokeDashoffset","strokeOpacity","strokeWidth","prefixes","shorthandPropertyExpansions","background","backgroundAttachment","backgroundColor","backgroundImage","backgroundPositionX","backgroundPositionY","backgroundRepeat","backgroundPosition","border","borderWidth","borderStyle","borderColor","borderBottom","borderBottomWidth","borderBottomStyle","borderBottomColor","borderLeft","borderLeftWidth","borderLeftStyle","borderLeftColor","borderRight","borderRightWidth","borderRightStyle","borderRightColor","borderTop","borderTopWidth","borderTopStyle","borderTopColor","font","fontStyle","fontVariant","fontSize","fontFamily","outline","outlineWidth","outlineStyle","outlineColor","CSSProperty","insertChildAt","childNode","beforeChild","childNodes","insertBefore","Danger","ReactMultiChildUpdateTypes","updateTextContent","markupList","initialChildren","updatedChildren","MOVE_EXISTING","REMOVE_NODE","updatedIndex","updatedChild","renderedMarkup","dangerouslyRenderMarkup","INSERT_MARKUP","markupIndex","SET_MARKUP","content","TEXT_CONTENT","recomputePluginOrdering","EventPluginOrder","pluginName","namesToPlugins","pluginIndex","publishedEvents","eventTypes","publishEventForPlugin","phaseName","phasedRegistrationName","publishRegistrationName","InjectedEventPluginOrder","injectedNamesToPlugins","isOrderingDirty","getPluginModuleForEvent","_resetEventPlugins","ForEachBookKeeping","forEachFunction","forEachContext","forEachSingleChild","bookKeeping","forEachChildren","forEachFunc","MapBookKeeping","mapResult","keyPrefix","mapFunction","mapContext","mapSingleChildIntoContext","childKey","mappedChild","mapIntoWithKeyPrefixInternal","escapedPrefix","mapChildren","forEachSingleChildDummy","countChildren","toArray","ReactChildren","validateMethodOverride","proto","specPolicy","ReactClassInterface","ReactClassMixin","SpecPolicy","OVERRIDE_BASE","DEFINE_MANY","DEFINE_MANY_MERGED","mixSpecIntoComponent","Constructor","MIXINS_KEY","RESERVED_SPEC_KEYS","mixins","property","isReactClassMethod","isAlreadyDefined","isFunction","shouldAutoBind","autobind","__reactAutoBindMap","createMergedResultFunction","createChainedFunction","mixStaticSpecIntoComponent","statics","isReserved","isInherited","mergeIntoWithNoDuplicateKeys","one","two","bindAutoBindMethod","boundMethod","bindAutoBindMethods","autoBindKey","ReactComponent","ReactNoopUpdateQueue","DEFINE_ONCE","injectedMixins","contextTypes","childContextTypes","getDefaultProps","getInitialState","getChildContext","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","componentWillUnmount","updateComponent","replaceState","newState","updater","setProps","replaceProps","ReactClassComponent","ReactClass","refs","initialState","methodName","injectMixin","mixin","forceUpdate","ReactDOMTextComponent","ReactDefaultInjection","ReactVersion","inject","version","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","__REACT_DEVTOOLS_GLOBAL_HOOK__","CurrentOwner","InstanceHandles","Mount","Reconciler","TextComponent","updateOptionsIfPendingUpdateAndMounted","_wrapperState","pendingUpdate","updateOptions","Boolean","multiple","inst","propValue","selectedValue","options","selected","_handleChange","valueContextKey","ReactDOMSelect","getNativeProps","mountWrapper","initialValue","wasMultiple","processChildContext","postUpdateWrapper","_stringText","escapedText","renderToStaticMarkup","nextText","nextStringText","ReactDefaultBatchingStrategyTransaction","RESET_BATCHED_UPDATES","ReactDefaultBatchingStrategy","FLUSH_BATCHED_UPDATES","alreadyBatchingUpdates","alreadyInjected","ReactInjection","EventEmitter","DefaultEventPluginOrder","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","NativeComponent","injectGenericComponentClass","ReactDOMComponent","injectTextComponentClass","ReactBrowserComponentMixin","HTMLDOMPropertyConfig","SVGDOMPropertyConfig","EmptyComponent","injectEmptyComponent","Updates","RootIndex","injectCreateReactRootIndex","ClientReactRootIndex","ServerReactRootIndex","Component","validateExplicitKey","parentType","_store","validated","getAddendaForKeyUse","messageType","addendum","parentName","memoizer","ownerHasKeyUseWarning","addenda","parentOrOwner","childOwner","validateChildKeys","ex","validatePropTypes","componentClass","ReactElementValidator","validType","validatedFactory","registerNullComponentID","placeholderElement","ReactEmptyComponentInjection","instantiate","deregisterNullComponentID","nullComponentIDsRegistry","invokeGuardedCallback","caughtError","invokeGuardedCallbackWithCatch","isInDocument","ReactDOMSelection","focusNode","getActiveElement","ReactInputSelection","hasSelectionCapabilities","contentEditable","getSelectionInformation","focusedElem","selectionRange","getSelection","restoreSelection","priorSelectionInformation","curFocusedElem","priorFocusedElem","priorSelectionRange","setSelection","selection","selectionStart","end","selectionEnd","createRange","parentElement","moveStart","moveEnd","getOffsets","offsets","createTextRange","collapse","select","setOffsets","adler32","TAG_END","addChecksumToMarkup","existingChecksum","parseInt","markupChecksum","getComponentClassForElement","tag","tagToComponentClass","autoGenerateWrapperClass","genericComponentClass","textComponentClass","isTextComponent","ReactNativeComponentInjection","injectComponentClasses","componentClasses","warnTDZ","createChainableTypeChecker","validate","checkType","isRequired","propFullName","ANONYMOUS","locationName","chainedCheckType","createPrimitiveTypeChecker","expectedType","propType","getPropType","preciseType","getPreciseType","createAnyTypeChecker","createArrayOfTypeChecker","typeChecker","createElementTypeChecker","createInstanceTypeChecker","expectedClass","expectedClassName","actualClassName","getClassName","createEnumTypeChecker","expectedValues","valuesString","JSON","stringify","createObjectOfTypeChecker","createUnionTypeChecker","arrayOfTypeCheckers","checker","createNodeChecker","isNode","createShapeTypeChecker","shapeTypes","every","bool","number","arrayOf","instanceOf","objectOf","oneOf","shape","ReactRootIndexInjection","_createReactRootIndex","scrollPosition","currentIsArray","nextIsArray","arr","getTextContentAccessor","contentKey","isTextInputElement","supportedInputTypes","color","date","datetime","datetime-local","email","month","password","tel","time","week","EventListener","listen","eventType","removeEventListener","detachEvent","registerDefault","_x","_x2","_again","_function","outerNode","innerNode","isTextNode","compareDocumentPosition","focus","activeElement","body","getMarkupWrap","dummyNode","markupWrap","shouldWrap","selectWrap","tableWrap","trWrap","svgWrap","*","area","col","legend","param","tr","optgroup","option","caption","colgroup","tbody","tfoot","thead","td","th","svgElements","shallowEqual","objA","objB","keysB","bHasOwnProperty","Dialog","GlobalRules","LinkStyle","Link_","modernElement","display","position","flexDirection","userSelect","margin","padding","alignItems","boxSizing","header","section","li","div","h1","marginTop","h3",".no-scroll","overflow","Portal","top","justifyContent","height","isOpen","renderLayer","renderFn","ReactDOM","unrenderLayer","layerElement","layer","getLayer","ThemeDefault","ThemeMaterialDesign","react","console","log","__WEBPACK_AMD_DEFINE_RESULT__","addMapEntry","addSetEntry","thisArg","arrayAggregator","iteratee","accumulator","arrayConcat","other","othIndex","othLength","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","arrayIncludes","baseIndexOf","arrayIncludesWith","arrayMap","arrayPush","arrayReduce","initAccum","arrayReduceRight","arraySome","baseExtremum","computed","baseFind","collection","eachFunc","retKey","baseFindIndex","fromRight","indexOfNaN","baseReduce","baseSortBy","comparer","baseSum","baseTimes","baseToPairs","baseUnary","baseValues","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","checkGlobal","compareAscending","valIsNull","valIsUndef","valIsReflexive","othIsNull","othIsUndef","othIsReflexive","compareMultiple","orders","objCriteria","criteria","othCriteria","ordersLength","deburrLetter","letter","deburredLetters","escapeHtmlChar","chr","htmlEscapes","escapeStringChar","stringEscapes","isHostObject","isIndex","reIsUint","MAX_SAFE_INTEGER","iteratorToArray","mapToArray","replaceHolders","placeholder","PLACEHOLDER","setToArray","stringSize","reHasComplexSymbol","reComplexSymbol","lastIndex","stringToArray","unescapeHtmlChar","htmlUnescapes","runInContext","lodash","isObjectLike","LazyWrapper","LodashWrapper","wrapperClone","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","MAX_ARRAY_LENGTH","__views__","lazyClone","copyArray","lazyReverse","lazyValue","dir","isArr","isRight","arrLength","getView","iteratees","iterLength","takeCount","nativeMin","LARGE_ARRAY_SIZE","baseWrapperValue","outer","iterIndex","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","Hash","hashDelete","hash","hashHas","hashGet","nativeCreate","HASH_UNDEFINED","hashSet","MapCache","clear","mapClear","__data__","Map","mapDelete","isKeyable","assocDelete","mapGet","assocGet","mapHas","assocHas","mapSet","assocSet","SetCache","cacheHas","cachePush","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","assocIndexOf","eq","assignInDefaults","objValue","srcValue","objectProto","assignMergeValue","assignValue","baseAggregator","baseEach","baseAssign","copyObject","baseAt","baseClamp","lower","upper","baseClone","isDeep","customizer","stack","isObject","initCloneArray","getTag","isFunc","funcTag","genTag","isBuffer","cloneBuffer","objectTag","argsTag","cloneableTags","initCloneByTag","initCloneObject","copySymbols","stacked","baseForOwn","subValue","baseConforms","baseDelay","wait","FUNC_ERROR_TEXT","setTimeout","baseDifference","includes","isCommon","valuesLength","valuesIndex","baseEvery","baseFill","toInteger","toLength","baseFilter","baseFlatten","isStrict","isArrayLikeObject","isArguments","baseForIn","baseFor","baseForOwnRight","baseForRight","baseFunctions","baseGet","isKey","baseToPath","baseHas","getPrototypeOf","baseHasIn","baseInRange","nativeMax","baseIntersection","arrays","caches","baseInverter","baseInvoke","parent","baseIsEqual","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","isTypedArray","objIsObj","othIsObj","isSameTag","equalByTag","isPartial","PARTIAL_COMPARE_FLAG","objIsWrapped","othIsWrapped","equalArrays","equalObjects","baseIsMatch","matchData","noCustomizer","UNORDERED_COMPARE_FLAG","baseIteratee","baseMatchesProperty","baseMatches","baseKeys","nativeKeys","baseKeysIn","baseMap","getMatchData","baseMerge","srcIndex","baseMergeDeep","newValue","mergeFunc","isPlainObject","toPlainObject","baseOrderBy","toIteratee","getIteratee","basePick","basePickBy","baseProperty","basePropertyDeep","basePullAll","basePullAllBy","basePullAt","indexes","previous","baseRandom","nativeFloor","nativeRandom","baseRange","nativeCeil","baseSet","nested","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","HALF_MAX_ARRAY_LENGTH","mid","baseSortedIndexBy","valIsNaN","isDef","isReflexive","setLow","MAX_ARRAY_INDEX","baseSortedUniq","baseSortedUniqBy","stringToPath","baseUniq","createSet","seenIndex","baseUnset","baseWhile","isDrop","actions","action","baseXor","baseZipObject","assignFunc","valsLength","buffer","cloneArrayBuffer","arrayBuffer","byteLength","Uint8Array","cloneMap","cloneRegExp","regexp","reFlags","cloneSet","cloneSymbol","symbol","symbolValueOf","cloneTypedArray","typedArray","byteOffset","composeArgs","partials","holders","holdersLength","argsIndex","argsLength","leftIndex","leftLength","composeArgsRight","holdersIndex","rightIndex","rightLength","copyObjectWith","getSymbols","createAggregator","initializer","createAssigner","assigner","rest","guard","isIterateeCall","createBaseEach","iterable","createBaseFor","keysFunc","createBaseWrapper","isBind","BIND_FLAG","createCtorWrapper","createCaseFirst","trailing","createCompounder","words","deburr","thisBinding","baseCreate","createCurryWrapper","createRecurryWrapper","createHybridWrapper","createFlow","funcs","prereq","thru","getFuncName","funcName","getData","isLaziable","ARY_FLAG","CURRY_FLAG","PARTIAL_FLAG","REARG_FLAG","plant","partialsRight","holdersRight","argPos","ary","isCurry","isCurryRight","argsHolders","isBindKey","reorder","isFlip","isAry","BIND_KEY_FLAG","CURRY_RIGHT_FLAG","FLIP_FLAG","createInverter","createOver","arrayFunc","createPadding","chars","strLength","padLength","createPartialWrapper","toNumber","wrapFunc","newArgPos","newsHolders","newHoldersRight","newPartials","newPartialsRight","PARTIAL_RIGHT_FLAG","CURRY_BOUND_FLAG","newData","setData","createRound","precision","createWrapper","mergeData","baseSetData","isUnordered","arrValue","othValue","compared","arrayBufferTag","boolTag","dateTag","errorTag","numberTag","regexpTag","stringTag","mapTag","convert","setTag","symbolTag","objProps","objLength","othProps","skipCtor","objCtor","othCtor","realNames","otherFunc","isStrictComparable","getNative","isNative","objectToString","transforms","hasPath","hasFunc","isLength","isString","isPrototype","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","indexKeys","reIsPlainProp","reIsDeepProp","srcBitmask","newBitmask","isCombo","mergeDefaults","oldArray","rePropName","quote","reEscapeChar","toArrayLikeObject","toFunction","chunk","compact","dropRight","dropRightWhile","fill","flattenDeep","initial","nativeJoin","pullAll","pullAllBy","nativeReverse","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","takeRight","takeRightWhile","unzip","group","unzipWith","zipObject","zipObjectDeep","interceptor","wrapperChain","wrapperCommit","wrapperFlatMap","wrapperNext","wrapperToIterator","wrapperPlant","wrapperReverse","wrapped","wrapperValue","baseEachRight","flatMap","forEachRight","orderBy","sample","sampleSize","rand","shuffle","some","before","curryRight","debounce","cancel","timeoutId","clearTimeout","maxTimeoutId","lastCalled","trailingCall","complete","isCalled","delayed","remaining","stamp","maxDelayed","debounced","leading","maxWait","leadingCall","resolver","memoized","Cache","otherArgs","spread","throttle","cloneWith","cloneDeepWith","isArrayBuffer","getLength","isBoolean","isDate","isElement","isEqual","isEqualWith","isError","isFinite","nativeIsFinite","isMap","isMatch","isMatchWith","isNumber","reIsNative","funcToString","reIsHostCtor","isNull","objectCtorString","isRegExp","isSafeInteger","isSet","isSymbol","typedArrayTags","isUndefined","isWeakMap","weakMapTag","isWeakSet","weakSetTag","iteratorSymbol","INFINITY","sign","MAX_INTEGER","remainder","reTrim","isBinary","reIsBinary","reIsOctal","freeParseInt","reIsBadHex","NAN","toSafeInteger","symbolToString","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functionsIn","isProto","skipIndexes","propsLength","mapKeys","mapValues","omitBy","setWith","transform","unset","inRange","floating","temp","freeParseFloat","capitalize","upperFirst","reLatin1","reComboMark","endsWith","escape","reHasUnescapedHtml","reUnescapedHtml","escapeRegExp","reHasRegExpChar","reRegExpChar","padEnd","padStart","radix","nativeParseInt","reHasHexPrefix","startsWith","template","settings","templateSettings","assignInWith","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reNoMatch","reDelimiters","reInterpolate","reEsTemplate","evaluate","sourceURL","templateCounter","escapeValue","interpolateValue","esTemplateValue","evaluateValue","reUnescapedString","variable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","attempt","trimEnd","reTrimEnd","trimStart","reTrimStart","truncate","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","newEnd","unescape","reHasEscapedHtml","reEscapedHtml","reHasComplexWord","reComplexWord","reBasicWord","conforms","constant","matches","matchesProperty","noConflict","oldDash","noop","propertyOf","toPath","uniqueId","idCounter","augend","addend","minuend","subtrahend","sumBy","defaults","contextProps","arrayProto","Buffer","moduleExports","Reflect","enumerate","getOwnPropertySymbols","ceil","floor","WeakMap","metaMap","mapCtorString","setCtorString","weakMapCtorString","symbolProto","reEscape","reEvaluate","ctorString","HOT_SPAN","HOT_COUNT","differenceBy","mapped","intersectionBy","pull","pullAt","unionBy","xor","xorBy","xorWith","wrapperAt","invokeMap","isProp","keyBy","bindKey","defer","delay","overArgs","funcsLength","rearg","assignIn","assignWith","at","defaultsDeep","invertBy","invoke","camelCase","word","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","bindAll","flow","flowRight","methodOf","overEvery","overSome","rangeRight","round","extend","extendWith","each","eachRight","VERSION","filtered","isFilter","LAZY_WHILE_FLAG","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","commit","toJSON","rsAstralRange","rsComboMarksRange","rsComboSymbolsRange","rsDingbatRange","rsLowerRange","rsMathOpRange","rsNonCharRange","rsQuoteRange","rsSpaceRange","rsUpperRange","rsVarRange","rsBreakRange","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsZWJ","rsLowerMisc","rsUpperMisc","reOptMod","rsOptVar","rsOptJoin","rsSeq","rsEmoji","rsSymbol","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","`","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","objectTypes","function","\\","\n","\r"," "," ","parseFloat","freeExports","freeModule","freeGlobal","freeSelf","freeWindow","thisGlobal","autoFocus","AutoFocusUtils","focusDOMComponent","isPresto","opera","isKeypressCommand","getCompositionEventType","compositionStart","compositionEnd","compositionUpdate","isFallbackCompositionStart","START_KEYCODE","isFallbackCompositionEnd","END_KEYCODES","getDataFromCustomEvent","extractCompositionEvent","fallbackData","canUseCompositionEvent","currentComposition","useFallbackCompositionData","FallbackCompositionState","SyntheticCompositionEvent","customData","getNativeBeforeInputChars","which","SPACEBAR_CODE","hasSpaceKeypress","SPACEBAR_CHAR","getFallbackBeforeInputChars","extractBeforeInputEvent","canUseTextInputEvent","SyntheticInputEvent","beforeInput","documentMode","onBeforeInput","onBeforeInputCapture","onCompositionEnd","onCompositionEndCapture","onCompositionStart","onCompositionStartCapture","onCompositionUpdate","onCompositionUpdateCapture","dangerousStyleValue","hyphenateStyleName","memoizeStringOnly","processStyleName","styleName","hasShorthandPropertyBug","styleFloatAccessor","tempStyle","cssFloat","CSSPropertyOperations","createMarkupForStyles","styles","serialized","styleValue","setValueForStyles","expansion","individualStyleName","shouldUseChangeEvent","manualDispatchChangeEvent","change","activeElementID","runEventInBatch","startWatchingForChangeEventIE8","stopWatchingForChangeEventIE8","getTargetIDForChangeEvent","handleEventsForChangeEventIE8","startWatchingForValueChange","activeElementValue","activeElementValueProp","getOwnPropertyDescriptor","defineProperty","newValueProp","handlePropertyChange","stopWatchingForValueChange","getTargetIDForInputEvent","handleEventsForInputEventIE","getTargetIDForInputEventIE","shouldUseClickEvent","getTargetIDForClickEvent","onChangeCapture","doesChangeEventBubble","isInputEventSupported","getTargetIDFunc","handleEventFunc","nextReactRootIndex","getNodeName","createNodesFromMarkup","OPEN_TAG_NAME_EXP","RESULT_INDEX_ATTR","markupByNodeName","resultList","resultListAssignmentCount","resultIndex","markupListByNodeName","renderNodes","renderNode","hasAttribute","oldChild","newChild","ResponderEventPlugin","TapEventPlugin","mouseEnter","onMouseEnter","mouseLeave","onMouseLeave","win","isEndish","isMoveish","isStartish","executeDispatch","dispatchListeners","dispatchIDs","executeDispatchesInOrderStopAtTrueImpl","executeDispatchesInOrderStopAtTrue","executeDirectDispatch","dispatchListener","dispatchID","res","hasDispatches","InjectedMount","_root","_startText","getText","_fallbackText","startValue","startLength","endValue","endLength","minEnd","sliceTail","hasSVG","accept","acceptCharset","accessKey","allowFullScreen","allowTransparency","alt","async","autoComplete","autoPlay","cellPadding","cellSpacing","charSet","challenge","classID","className","cols","colSpan","contextMenu","controls","coords","crossOrigin","dateTime","default","download","draggable","encType","form","formAction","formEncType","formMethod","formNoValidate","formTarget","frameBorder","headers","hrefLang","htmlFor","httpEquiv","icon","inputMode","integrity","keyParams","keyType","kind","label","lang","loop","manifest","marginHeight","marginWidth","maxLength","media","mediaGroup","muted","nonce","noValidate","open","optimum","poster","preload","radioGroup","rel","required","reversed","role","rows","rowSpan","sandbox","scoped","scrolling","seamless","sizes","span","spellCheck","src","srcDoc","srcLang","srcSet","summary","tabIndex","title","useMap","wmode","about","datatype","inlist","resource","typeof","vocab","autoCapitalize","autoCorrect","autoSave","itemProp","itemScope","itemType","itemID","itemRef","security","unselectable","ReactDOMServer","ReactIsomorphic","deprecated","renderToString","__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","__SECRET_DOM_SERVER_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","didWarnKey","getDOMNode","instantiateChild","childInstances","keyUnique","ReactChildReconciler","instantiateChildren","nestedChildNodes","updateChildren","prevChildren","nextChildren","prevChild","nextChildInstance","unmountChildren","renderedChildren","renderedChild","StatelessComponent","nextMountID","ReactCompositeComponentMixin","_instance","renderedElement","publicProps","_processProps","publicContext","_processContext","canInstantiate","_processPendingState","_renderValidatedComponent","_maskContext","maskedContext","contextName","currentContext","_checkPropTypes","nextContext","prevContext","prevParentElement","nextParentElement","prevUnmaskedContext","nextUnmaskedContext","nextProps","nextState","shouldUpdate","_performComponentUpdate","unmaskedContext","prevProps","prevState","hasComponentDidUpdate","_updateRenderedComponent","prevComponentInstance","prevRenderedElement","nextRenderedElement","thisID","prevComponentID","nextMarkup","_replaceNodeWithMarkupByID","_renderValidatedComponentWithoutOwnerOrContext","renderedComponent","attachRef","publicComponentInstance","detachRef","mouseListenerNames","onDoubleClick","onMouseDown","onMouseMove","onMouseUp","onClickCapture","onDoubleClickCapture","onMouseDownCapture","onMouseMoveCapture","onMouseUpCapture","ReactDOMButton","nativeProps","legacyGetDOMNode","legacyIsMounted","_reactInternalComponent","legacySetStateEtc","legacySetProps","legacyReplaceProps","assertValidProps","HTML","enqueuePutListener","listenerToPut","trapBubbledEventsLocal","_tag","listeners","mediaEvents","mountReadyInputWrapper","ReactDOMInput","mountReadyWrapper","postUpdateSelectWrapper","validateDangerousTag","validatedTagCache","VALID_TAG_REGEX","isCustomComponent","_renderedChildren","_previousStyle","_previousStyleCopy","_nodeWithLegacyProperties","ReactDOMOption","ReactDOMTextarea","ReactMultiChild","CONTENT_TYPES","CHILDREN","STYLE","__html","omittedCloseTags","base","br","embed","hr","img","keygen","link","meta","track","wbr","newlineEatingTags","listing","pre","textarea","menuitem","mountImage","_updateDOMProperties","_createInitialChildren","tagOpen","_createOpenTagMarkupAndPutListeners","tagContent","_createContentMarkup","propKey","markupForID","contentToUse","childrenToUse","mountImages","mountChildren","lastProps","updateWrapper","_updateDOMChildren","styleUpdates","lastStyle","nextProp","lastProp","lastContent","nextContent","lastHtml","nextHtml","lastChildren","lastHasContentOrHtml","nextHasContentOrHtml","updateMarkup","unmountWrapper","createDOMFactory","mapObject","ReactDOMFactories","abbr","address","article","aside","audio","bdi","bdo","big","blockquote","canvas","cite","code","datalist","dd","del","details","dfn","dialog","dl","dt","em","fieldset","figcaption","figure","footer","h2","h4","h5","h6","hgroup","iframe","ins","kbd","main","mark","menu","meter","noscript","ol","output","picture","progress","q","rp","rt","ruby","samp","script","small","strong","sub","sup","table","u","ul","var","video","circle","clipPath","defs","ellipse","line","linearGradient","mask","polygon","polyline","radialGradient","rect","svg","tspan","forceUpdateIfMounted","rootNode","queryRoot","querySelectorAll","otherNode","otherID","otherInstance","instancesByReactID","defaultChecked","initialChecked","selectValue","isCollapsed","anchorNode","anchorOffset","focusOffset","getIEOffsets","selectedRange","selectedLength","fromStart","duplicate","moveToElementText","setEndPoint","startOffset","endOffset","getModernOffsets","rangeCount","currentRange","getRangeAt","startContainer","endContainer","isSelectionCollapsed","rangeLength","tempRange","cloneRange","selectNodeContents","setEnd","isTempRangeCollapsed","detectionRange","setStart","isBackward","collapsed","setIEOffsets","setModernOffsets","startMarker","getNodeForCharacterOffset","endMarker","removeAllRanges","addRange","useIEOffsets","ReactServerRendering","runEventQueueInBatch","findParent","TopLevelCallbackBookKeeping","ancestors","handleTopLevelImpl","handleTopLevelWithoutPath","_handleTopLevel","scrollValueMonitor","getUnboundedScrollPosition","_enabled","Perf","onlyChild","Children","only","createMixin","__spread","enqueueInsertMarkup","updateQueue","markupQueue","enqueueMove","enqueueRemove","enqueueSetMarkup","enqueueTextContent","processQueue","clearQueue","flattenChildren","updateDepth","_reconcilerInstantiateChildren","nestedChildren","_reconcilerUpdateChildren","nextNestedChildrenElements","_unmountChild","_unmountChildByName","setMarkup","_updateChildren","nextChild","moveChild","_mountChildByNameAtIndex","createChild","ReactOwner","isValidOwner","addComponentAsRefTo","removeComponentAsRefFrom","forceHTML","reactMountReady","SELECTION_RESTORATION","EVENT_SUPPRESSION","currentlyEnabled","previouslyEnabled","ON_DOM_READY_QUEUEING","ReactServerBatchingStrategy","ReactServerRenderingTransaction","NS","xlink","xml","cx","cy","dx","dy","fx","fy","gradientTransform","gradientUnits","markerEnd","markerMid","markerStart","patternContentUnits","patternUnits","points","preserveAspectRatio","ry","spreadMethod","stopColor","stroke","strokeDasharray","strokeLinecap","textAnchor","viewBox","x1","x2","xlinkActuate","xlinkArcrole","xlinkHref","xlinkRole","xlinkShow","xlinkTitle","xlinkType","xmlBase","xmlLang","xmlSpace","y1","y2","boundingTop","boundingLeft","constructSelectEvent","mouseDown","currentSelection","lastSelection","skipSelectionChangeEvent","onSelect","onSelectCapture","hasListener","ON_SELECT_KEY","GLOBAL_MOUNT_POINT_MAX","pow","SyntheticClipboardEvent","SyntheticFocusEvent","SyntheticKeyboardEvent","SyntheticDragEvent","SyntheticTouchEvent","SyntheticWheelEvent","abort","onAbort","onAbortCapture","blur","onBlur","onBlurCapture","canPlay","onCanPlay","onCanPlayCapture","canPlayThrough","onCanPlayThrough","onCanPlayThroughCapture","click","onContextMenu","onContextMenuCapture","onCopy","onCopyCapture","cut","onCut","onCutCapture","doubleClick","drag","onDrag","onDragCapture","dragEnd","onDragEnd","onDragEndCapture","dragEnter","onDragEnter","onDragEnterCapture","dragExit","onDragExit","onDragExitCapture","dragLeave","onDragLeave","onDragLeaveCapture","dragOver","onDragOver","onDragOverCapture","dragStart","onDragStart","onDragStartCapture","onDrop","onDropCapture","durationChange","onDurationChange","onDurationChangeCapture","emptied","onEmptied","onEmptiedCapture","encrypted","onEncrypted","onEncryptedCapture","ended","onEnded","onEndedCapture","onError","onErrorCapture","onFocus","onFocusCapture","onInput","onInputCapture","keyDown","onKeyDown","onKeyDownCapture","keyPress","onKeyPress","onKeyPressCapture","keyUp","onKeyUp","onKeyUpCapture","load","onLoad","onLoadCapture","loadedData","onLoadedData","onLoadedDataCapture","loadedMetadata","onLoadedMetadata","onLoadedMetadataCapture","loadStart","onLoadStart","onLoadStartCapture","mouseMove","mouseOut","onMouseOut","onMouseOutCapture","mouseOver","onMouseOver","onMouseOverCapture","mouseUp","paste","onPaste","onPasteCapture","pause","onPause","onPauseCapture","play","onPlay","onPlayCapture","playing","onPlaying","onPlayingCapture","onProgress","onProgressCapture","rateChange","onRateChange","onRateChangeCapture","onReset","onResetCapture","scroll","onScroll","onScrollCapture","seeked","onSeeked","onSeekedCapture","seeking","onSeeking","onSeekingCapture","stalled","onStalled","onStalledCapture","onSubmit","onSubmitCapture","suspend","onSuspend","onSuspendCapture","timeUpdate","onTimeUpdate","onTimeUpdateCapture","touchCancel","onTouchCancel","onTouchCancelCapture","touchEnd","onTouchEnd","onTouchEndCapture","touchMove","onTouchMove","onTouchMoveCapture","touchStart","onTouchStart","onTouchStartCapture","volumeChange","onVolumeChange","onVolumeChangeCapture","waiting","onWaiting","onWaitingCapture","wheel","onWheel","onWheelCapture","topLevelEventsToDispatchConfig","ON_CLICK_KEY","onClickListeners","EventConstructor","ClipboardEventInterface","clipboardData","CompositionEventInterface","DragEventInterface","dataTransfer","FocusEventInterface","InputEventInterface","getEventKey","KeyboardEventInterface","locale","TouchEventInterface","touches","targetTouches","changedTouches","WheelEventInterface","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","charCodeAt","MOD","isNonNumeric","newModule","newPackage","flattenSingleChildIntoContext","normalizeKey","translateToKey","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey",8,9,12,13,16,17,18,19,20,27,32,33,34,35,36,37,38,39,40,45,46,112,113,114,115,116,117,118,119,120,121,122,123,144,145,224,"getLeafNode","getSiblingNode","nodeStart","nodeEnd","camelize","_hyphenPattern","character","camelizeStyleName","msPattern","hasArrayNature","createArrayFromMixed","nodeNameMatch","nodeNamePattern","handleScript","wrapDepth","scripts","getElementsByTagName","nodes","scrollable","pageXOffset","scrollLeft","pageYOffset","scrollTop","hyphenate","_uppercasePattern","Node","webpackPolyfill","deprecate"],"mappings":"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xL,UACAuN,UACApN,QACAC,aACAC,YACAC,iBACAmN,WACAC,QACAnN,WACAC,aACAmN,WACAlN,MACAC,OACAC,OACAC,SACAnB,QACAoB,aACAC,YACAC,UACAG,OACA0M,WACAwC,WACAhX,QACA+H,UACAE,aACA2U,gBACAlI,oBACAvM,eACAmT,QACAxG,UACAC,aACAsH,WACAhU,MACAE,eACAyM,WACAvM,SACAwE,QACA+L,QACAtQ,QACAU,UACAxF,QACAqR,eACA/xB,UACAooB,QACA6N,aACAC,YACAC,YACAkC,QACAjC,SACAhQ,MACAC,OACA8B,OACA7B,YACAE,iBACAwL,iBACAvL,SACAG,WACA5K,OACA6K,SACA0P,QACAC,UACA6C,WACA3C,SACAC,YACA1E,aACAnL,gBACAtlB,OACA0lB,SACAC,UACAC,YACAC,QACAC,UACAC,QACAC,OACAC,OACAE,UACAC,SACAC,MACAyQ,QACAxQ,QACAE,MACAC,QACAK,QACA+J,WACAC,gBACAC,aACAvQ,QACAwQ,UACA9J,UACAC,iBACAE,QACAE,WACAC,UACA4N,QACA2B,SACA1B,SACAnE,SACAxJ,WACA4N,WACAnE,WACAxY,QACAyY,UACAC,UACA1J,UACAC,iBACAxhB,SACA0hB,SACAwG,UACAvG,eACAC,WACAsJ,UACArJ,UACAsJ,UACA5zB,WACA0qB,WACAG,QACA+M,YACA9M,OACA3iB,SACA8H,QACAgb,UACAN,SACAS,WACAG,cACAC,aACAE,YACAmI,OACA2G,uBACAC,2BACAxW,QACA2H,QACAkI,YACAhI,iBACAC,aACAC,OACAlC,QACAmC,SACAmO,WACAhO,WACAC,aACAnkB,YACAmyB,WACAtG,aACAzH,aACAwL,YACArL,QACA5f,QACAkgB,WACAC,SACAC,YACAI,UACAqN,SACA1G,aACAsG,QACAjB,UACA9L,YACAC,UACAuK,UACArK,UACAC,WACAG,UACAE,YACAE,QACAE,QACAE,SACA2F,WACA6F,WACArL,QACAE,SACAG,OACAE,UACAC,WAOA9wB,GAAAD,QAAAy8B,KAOC57B,KAAAR,OfqgEK,S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","file":"yun-ui-kit.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"radium\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"yun-ui-kit\", [\"radium\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"yun-ui-kit\"] = factory(require(\"radium\"));\n\telse\n\t\troot[\"yun-ui-kit\"] = factory(root[\"radium\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_91__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"radium\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"yun-ui-kit\", [\"radium\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"yun-ui-kit\"] = factory(require(\"radium\"));\n\telse\n\t\troot[\"yun-ui-kit\"] = factory(root[\"radium\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_91__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(96);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule invariant\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Use invariant() to assert state which your program assumes to be true.\n\t *\n\t * Provide sprintf-style format (only %s is supported) and arguments\n\t * to provide information about what broke and what you were\n\t * expecting.\n\t *\n\t * The invariant message will be stripped in production, but the invariant\n\t * will remain to ensure logic does not differ in production.\n\t */\n\t\n\tfunction invariant(condition, format, a, b, c, d, e, f) {\n\t  if (false) {\n\t    if (format === undefined) {\n\t      throw new Error('invariant requires an error message argument');\n\t    }\n\t  }\n\t\n\t  if (!condition) {\n\t    var error;\n\t    if (format === undefined) {\n\t      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n\t    } else {\n\t      var args = [a, b, c, d, e, f];\n\t      var argIndex = 0;\n\t      error = new Error(format.replace(/%s/g, function () {\n\t        return args[argIndex++];\n\t      }));\n\t      error.name = 'Invariant Violation';\n\t    }\n\t\n\t    error.framesToPop = 1; // we don't care about invariant's own frame\n\t    throw error;\n\t  }\n\t}\n\t\n\tmodule.exports = invariant;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2014-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule Object.assign\n\t */\n\t\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign\n\t\n\t'use strict';\n\t\n\tfunction assign(target, sources) {\n\t  if (target == null) {\n\t    throw new TypeError('Object.assign target cannot be null or undefined');\n\t  }\n\t\n\t  var to = Object(target);\n\t  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\t  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {\n\t    var nextSource = arguments[nextIndex];\n\t    if (nextSource == null) {\n\t      continue;\n\t    }\n\t\n\t    var from = Object(nextSource);\n\t\n\t    // We don't currently support accessors nor proxies. Therefore this\n\t    // copy cannot throw. If we ever supported this then we must handle\n\t    // exceptions and side-effects. We don't support symbols so they won't\n\t    // be transferred.\n\t\n\t    for (var key in from) {\n\t      if (hasOwnProperty.call(from, key)) {\n\t        to[key] = from[key];\n\t      }\n\t    }\n\t  }\n\t\n\t  return to;\n\t}\n\t\n\tmodule.exports = assign;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule warning\n\t */\n\t\n\t'use strict';\n\t\n\tvar emptyFunction = __webpack_require__(9);\n\t\n\t/**\n\t * Similar to invariant but only logs a warning if the condition is not met.\n\t * This can be used to log issues in development environments in critical\n\t * paths. Removing the logging code for production environments will keep the\n\t * same logic and follow the same code paths.\n\t */\n\t\n\tvar warning = emptyFunction;\n\t\n\tif (false) {\n\t  warning = function (condition, format) {\n\t    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n\t      args[_key - 2] = arguments[_key];\n\t    }\n\t\n\t    if (format === undefined) {\n\t      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n\t    }\n\t\n\t    if (format.indexOf('Failed Composite propType: ') === 0) {\n\t      return; // Ignore CompositeComponent proptype check.\n\t    }\n\t\n\t    if (!condition) {\n\t      var argIndex = 0;\n\t      var message = 'Warning: ' + format.replace(/%s/g, function () {\n\t        return args[argIndex++];\n\t      });\n\t      if (typeof console !== 'undefined') {\n\t        console.error(message);\n\t      }\n\t      try {\n\t        // --- Welcome to debugging React ---\n\t        // This error was thrown as a convenience so that you can use this stack\n\t        // to find the callsite that caused this warning to fire.\n\t        throw new Error(message);\n\t      } catch (x) {}\n\t    }\n\t  };\n\t}\n\t\n\tmodule.exports = warning;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ExecutionEnvironment\n\t */\n\t\n\t'use strict';\n\t\n\tvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\t\n\t/**\n\t * Simple, lightweight module assisting with the detection and context of\n\t * Worker. Helps avoid circular dependencies and allows code to reason about\n\t * whether or not they are in a Worker, even if they never include the main\n\t * `ReactWorker` dependency.\n\t */\n\tvar ExecutionEnvironment = {\n\t\n\t  canUseDOM: canUseDOM,\n\t\n\t  canUseWorkers: typeof Worker !== 'undefined',\n\t\n\t  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\t\n\t  canUseViewport: canUseDOM && !!window.screen,\n\t\n\t  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\t\n\t};\n\t\n\tmodule.exports = ExecutionEnvironment;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactMount\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMProperty = __webpack_require__(17);\n\tvar ReactBrowserEventEmitter = __webpack_require__(25);\n\tvar ReactCurrentOwner = __webpack_require__(11);\n\tvar ReactDOMFeatureFlags = __webpack_require__(64);\n\tvar ReactElement = __webpack_require__(6);\n\tvar ReactEmptyComponentRegistry = __webpack_require__(71);\n\tvar ReactInstanceHandles = __webpack_require__(18);\n\tvar ReactInstanceMap = __webpack_require__(21);\n\tvar ReactMarkupChecksum = __webpack_require__(74);\n\tvar ReactPerf = __webpack_require__(7);\n\tvar ReactReconciler = __webpack_require__(15);\n\tvar ReactUpdateQueue = __webpack_require__(41);\n\tvar ReactUpdates = __webpack_require__(8);\n\t\n\tvar assign = __webpack_require__(2);\n\tvar emptyObject = __webpack_require__(23);\n\tvar containsNode = __webpack_require__(86);\n\tvar instantiateReactComponent = __webpack_require__(48);\n\tvar invariant = __webpack_require__(1);\n\tvar setInnerHTML = __webpack_require__(32);\n\tvar shouldUpdateReactComponent = __webpack_require__(51);\n\tvar validateDOMNesting = __webpack_require__(53);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;\n\tvar nodeCache = {};\n\t\n\tvar ELEMENT_NODE_TYPE = 1;\n\tvar DOC_NODE_TYPE = 9;\n\tvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\t\n\tvar ownerDocumentContextKey = '__ReactMount_ownerDocument$' + Math.random().toString(36).slice(2);\n\t\n\t/** Mapping from reactRootID to React component instance. */\n\tvar instancesByReactRootID = {};\n\t\n\t/** Mapping from reactRootID to `container` nodes. */\n\tvar containersByReactRootID = {};\n\t\n\tif (false) {\n\t  /** __DEV__-only mapping from reactRootID to root elements. */\n\t  var rootElementsByReactRootID = {};\n\t}\n\t\n\t// Used to store breadth-first search state in findComponentRoot.\n\tvar findComponentRootReusableArray = [];\n\t\n\t/**\n\t * Finds the index of the first character\n\t * that's not common between the two given strings.\n\t *\n\t * @return {number} the index of the character where the strings diverge\n\t */\n\tfunction firstDifferenceIndex(string1, string2) {\n\t  var minLen = Math.min(string1.length, string2.length);\n\t  for (var i = 0; i < minLen; i++) {\n\t    if (string1.charAt(i) !== string2.charAt(i)) {\n\t      return i;\n\t    }\n\t  }\n\t  return string1.length === string2.length ? -1 : minLen;\n\t}\n\t\n\t/**\n\t * @param {DOMElement|DOMDocument} container DOM element that may contain\n\t * a React component\n\t * @return {?*} DOM element that may have the reactRoot ID, or null.\n\t */\n\tfunction getReactRootElementInContainer(container) {\n\t  if (!container) {\n\t    return null;\n\t  }\n\t\n\t  if (container.nodeType === DOC_NODE_TYPE) {\n\t    return container.documentElement;\n\t  } else {\n\t    return container.firstChild;\n\t  }\n\t}\n\t\n\t/**\n\t * @param {DOMElement} container DOM element that may contain a React component.\n\t * @return {?string} A \"reactRoot\" ID, if a React component is rendered.\n\t */\n\tfunction getReactRootID(container) {\n\t  var rootElement = getReactRootElementInContainer(container);\n\t  return rootElement && ReactMount.getID(rootElement);\n\t}\n\t\n\t/**\n\t * Accessing node[ATTR_NAME] or calling getAttribute(ATTR_NAME) on a form\n\t * element can return its control whose name or ID equals ATTR_NAME. All\n\t * DOM nodes support `getAttributeNode` but this can also get called on\n\t * other objects so just return '' if we're given something other than a\n\t * DOM node (such as window).\n\t *\n\t * @param {?DOMElement|DOMWindow|DOMDocument|DOMTextNode} node DOM node.\n\t * @return {string} ID of the supplied `domNode`.\n\t */\n\tfunction getID(node) {\n\t  var id = internalGetID(node);\n\t  if (id) {\n\t    if (nodeCache.hasOwnProperty(id)) {\n\t      var cached = nodeCache[id];\n\t      if (cached !== node) {\n\t        !!isValid(cached, id) ?  false ? invariant(false, 'ReactMount: Two valid but unequal nodes with the same `%s`: %s', ATTR_NAME, id) : invariant(false) : undefined;\n\t\n\t        nodeCache[id] = node;\n\t      }\n\t    } else {\n\t      nodeCache[id] = node;\n\t    }\n\t  }\n\t\n\t  return id;\n\t}\n\t\n\tfunction internalGetID(node) {\n\t  // If node is something like a window, document, or text node, none of\n\t  // which support attributes or a .getAttribute method, gracefully return\n\t  // the empty string, as if the attribute were missing.\n\t  return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';\n\t}\n\t\n\t/**\n\t * Sets the React-specific ID of the given node.\n\t *\n\t * @param {DOMElement} node The DOM node whose ID will be set.\n\t * @param {string} id The value of the ID attribute.\n\t */\n\tfunction setID(node, id) {\n\t  var oldID = internalGetID(node);\n\t  if (oldID !== id) {\n\t    delete nodeCache[oldID];\n\t  }\n\t  node.setAttribute(ATTR_NAME, id);\n\t  nodeCache[id] = node;\n\t}\n\t\n\t/**\n\t * Finds the node with the supplied React-generated DOM ID.\n\t *\n\t * @param {string} id A React-generated DOM ID.\n\t * @return {DOMElement} DOM node with the suppled `id`.\n\t * @internal\n\t */\n\tfunction getNode(id) {\n\t  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {\n\t    nodeCache[id] = ReactMount.findReactNodeByID(id);\n\t  }\n\t  return nodeCache[id];\n\t}\n\t\n\t/**\n\t * Finds the node with the supplied public React instance.\n\t *\n\t * @param {*} instance A public React instance.\n\t * @return {?DOMElement} DOM node with the suppled `id`.\n\t * @internal\n\t */\n\tfunction getNodeFromInstance(instance) {\n\t  var id = ReactInstanceMap.get(instance)._rootNodeID;\n\t  if (ReactEmptyComponentRegistry.isNullComponentID(id)) {\n\t    return null;\n\t  }\n\t  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {\n\t    nodeCache[id] = ReactMount.findReactNodeByID(id);\n\t  }\n\t  return nodeCache[id];\n\t}\n\t\n\t/**\n\t * A node is \"valid\" if it is contained by a currently mounted container.\n\t *\n\t * This means that the node does not have to be contained by a document in\n\t * order to be considered valid.\n\t *\n\t * @param {?DOMElement} node The candidate DOM node.\n\t * @param {string} id The expected ID of the node.\n\t * @return {boolean} Whether the node is contained by a mounted container.\n\t */\n\tfunction isValid(node, id) {\n\t  if (node) {\n\t    !(internalGetID(node) === id) ?  false ? invariant(false, 'ReactMount: Unexpected modification of `%s`', ATTR_NAME) : invariant(false) : undefined;\n\t\n\t    var container = ReactMount.findReactContainerForID(id);\n\t    if (container && containsNode(container, node)) {\n\t      return true;\n\t    }\n\t  }\n\t\n\t  return false;\n\t}\n\t\n\t/**\n\t * Causes the cache to forget about one React-specific ID.\n\t *\n\t * @param {string} id The ID to forget.\n\t */\n\tfunction purgeID(id) {\n\t  delete nodeCache[id];\n\t}\n\t\n\tvar deepestNodeSoFar = null;\n\tfunction findDeepestCachedAncestorImpl(ancestorID) {\n\t  var ancestor = nodeCache[ancestorID];\n\t  if (ancestor && isValid(ancestor, ancestorID)) {\n\t    deepestNodeSoFar = ancestor;\n\t  } else {\n\t    // This node isn't populated in the cache, so presumably none of its\n\t    // descendants are. Break out of the loop.\n\t    return false;\n\t  }\n\t}\n\t\n\t/**\n\t * Return the deepest cached node whose ID is a prefix of `targetID`.\n\t */\n\tfunction findDeepestCachedAncestor(targetID) {\n\t  deepestNodeSoFar = null;\n\t  ReactInstanceHandles.traverseAncestors(targetID, findDeepestCachedAncestorImpl);\n\t\n\t  var foundNode = deepestNodeSoFar;\n\t  deepestNodeSoFar = null;\n\t  return foundNode;\n\t}\n\t\n\t/**\n\t * Mounts this component and inserts it into the DOM.\n\t *\n\t * @param {ReactComponent} componentInstance The instance to mount.\n\t * @param {string} rootID DOM ID of the root node.\n\t * @param {DOMElement} container DOM element to mount into.\n\t * @param {ReactReconcileTransaction} transaction\n\t * @param {boolean} shouldReuseMarkup If true, do not insert markup\n\t */\n\tfunction mountComponentIntoNode(componentInstance, rootID, container, transaction, shouldReuseMarkup, context) {\n\t  if (ReactDOMFeatureFlags.useCreateElement) {\n\t    context = assign({}, context);\n\t    if (container.nodeType === DOC_NODE_TYPE) {\n\t      context[ownerDocumentContextKey] = container;\n\t    } else {\n\t      context[ownerDocumentContextKey] = container.ownerDocument;\n\t    }\n\t  }\n\t  if (false) {\n\t    if (context === emptyObject) {\n\t      context = {};\n\t    }\n\t    var tag = container.nodeName.toLowerCase();\n\t    context[validateDOMNesting.ancestorInfoContextKey] = validateDOMNesting.updatedAncestorInfo(null, tag, null);\n\t  }\n\t  var markup = ReactReconciler.mountComponent(componentInstance, rootID, transaction, context);\n\t  componentInstance._renderedComponent._topLevelWrapper = componentInstance;\n\t  ReactMount._mountImageIntoNode(markup, container, shouldReuseMarkup, transaction);\n\t}\n\t\n\t/**\n\t * Batched mount.\n\t *\n\t * @param {ReactComponent} componentInstance The instance to mount.\n\t * @param {string} rootID DOM ID of the root node.\n\t * @param {DOMElement} container DOM element to mount into.\n\t * @param {boolean} shouldReuseMarkup If true, do not insert markup\n\t */\n\tfunction batchedMountComponentIntoNode(componentInstance, rootID, container, shouldReuseMarkup, context) {\n\t  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(\n\t  /* forceHTML */shouldReuseMarkup);\n\t  transaction.perform(mountComponentIntoNode, null, componentInstance, rootID, container, transaction, shouldReuseMarkup, context);\n\t  ReactUpdates.ReactReconcileTransaction.release(transaction);\n\t}\n\t\n\t/**\n\t * Unmounts a component and removes it from the DOM.\n\t *\n\t * @param {ReactComponent} instance React component instance.\n\t * @param {DOMElement} container DOM element to unmount from.\n\t * @final\n\t * @internal\n\t * @see {ReactMount.unmountComponentAtNode}\n\t */\n\tfunction unmountComponentFromNode(instance, container) {\n\t  ReactReconciler.unmountComponent(instance);\n\t\n\t  if (container.nodeType === DOC_NODE_TYPE) {\n\t    container = container.documentElement;\n\t  }\n\t\n\t  // http://jsperf.com/emptying-a-node\n\t  while (container.lastChild) {\n\t    container.removeChild(container.lastChild);\n\t  }\n\t}\n\t\n\t/**\n\t * True if the supplied DOM node has a direct React-rendered child that is\n\t * not a React root element. Useful for warning in `render`,\n\t * `unmountComponentAtNode`, etc.\n\t *\n\t * @param {?DOMElement} node The candidate DOM node.\n\t * @return {boolean} True if the DOM element contains a direct child that was\n\t * rendered by React but is not a root element.\n\t * @internal\n\t */\n\tfunction hasNonRootReactChild(node) {\n\t  var reactRootID = getReactRootID(node);\n\t  return reactRootID ? reactRootID !== ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID) : false;\n\t}\n\t\n\t/**\n\t * Returns the first (deepest) ancestor of a node which is rendered by this copy\n\t * of React.\n\t */\n\tfunction findFirstReactDOMImpl(node) {\n\t  // This node might be from another React instance, so we make sure not to\n\t  // examine the node cache here\n\t  for (; node && node.parentNode !== node; node = node.parentNode) {\n\t    if (node.nodeType !== 1) {\n\t      // Not a DOMElement, therefore not a React component\n\t      continue;\n\t    }\n\t    var nodeID = internalGetID(node);\n\t    if (!nodeID) {\n\t      continue;\n\t    }\n\t    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);\n\t\n\t    // If containersByReactRootID contains the container we find by crawling up\n\t    // the tree, we know that this instance of React rendered the node.\n\t    // nb. isValid's strategy (with containsNode) does not work because render\n\t    // trees may be nested and we don't want a false positive in that case.\n\t    var current = node;\n\t    var lastID;\n\t    do {\n\t      lastID = internalGetID(current);\n\t      current = current.parentNode;\n\t      if (current == null) {\n\t        // The passed-in node has been detached from the container it was\n\t        // originally rendered into.\n\t        return null;\n\t      }\n\t    } while (lastID !== reactRootID);\n\t\n\t    if (current === containersByReactRootID[reactRootID]) {\n\t      return node;\n\t    }\n\t  }\n\t  return null;\n\t}\n\t\n\t/**\n\t * Temporary (?) hack so that we can store all top-level pending updates on\n\t * composites instead of having to worry about different types of components\n\t * here.\n\t */\n\tvar TopLevelWrapper = function () {};\n\tTopLevelWrapper.prototype.isReactComponent = {};\n\tif (false) {\n\t  TopLevelWrapper.displayName = 'TopLevelWrapper';\n\t}\n\tTopLevelWrapper.prototype.render = function () {\n\t  // this.props is actually a ReactElement\n\t  return this.props;\n\t};\n\t\n\t/**\n\t * Mounting is the process of initializing a React component by creating its\n\t * representative DOM elements and inserting them into a supplied `container`.\n\t * Any prior content inside `container` is destroyed in the process.\n\t *\n\t *   ReactMount.render(\n\t *     component,\n\t *     document.getElementById('container')\n\t *   );\n\t *\n\t *   <div id=\"container\">                   <-- Supplied `container`.\n\t *     <div data-reactid=\".3\">              <-- Rendered reactRoot of React\n\t *       // ...                                 component.\n\t *     </div>\n\t *   </div>\n\t *\n\t * Inside of `container`, the first element rendered is the \"reactRoot\".\n\t */\n\tvar ReactMount = {\n\t\n\t  TopLevelWrapper: TopLevelWrapper,\n\t\n\t  /** Exposed for debugging purposes **/\n\t  _instancesByReactRootID: instancesByReactRootID,\n\t\n\t  /**\n\t   * This is a hook provided to support rendering React components while\n\t   * ensuring that the apparent scroll position of its `container` does not\n\t   * change.\n\t   *\n\t   * @param {DOMElement} container The `container` being rendered into.\n\t   * @param {function} renderCallback This must be called once to do the render.\n\t   */\n\t  scrollMonitor: function (container, renderCallback) {\n\t    renderCallback();\n\t  },\n\t\n\t  /**\n\t   * Take a component that's already mounted into the DOM and replace its props\n\t   * @param {ReactComponent} prevComponent component instance already in the DOM\n\t   * @param {ReactElement} nextElement component instance to render\n\t   * @param {DOMElement} container container to render into\n\t   * @param {?function} callback function triggered on completion\n\t   */\n\t  _updateRootComponent: function (prevComponent, nextElement, container, callback) {\n\t    ReactMount.scrollMonitor(container, function () {\n\t      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement);\n\t      if (callback) {\n\t        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);\n\t      }\n\t    });\n\t\n\t    if (false) {\n\t      // Record the root element in case it later gets transplanted.\n\t      rootElementsByReactRootID[getReactRootID(container)] = getReactRootElementInContainer(container);\n\t    }\n\t\n\t    return prevComponent;\n\t  },\n\t\n\t  /**\n\t   * Register a component into the instance map and starts scroll value\n\t   * monitoring\n\t   * @param {ReactComponent} nextComponent component instance to render\n\t   * @param {DOMElement} container container to render into\n\t   * @return {string} reactRoot ID prefix\n\t   */\n\t  _registerComponent: function (nextComponent, container) {\n\t    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ?  false ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : invariant(false) : undefined;\n\t\n\t    ReactBrowserEventEmitter.ensureScrollValueMonitoring();\n\t\n\t    var reactRootID = ReactMount.registerContainer(container);\n\t    instancesByReactRootID[reactRootID] = nextComponent;\n\t    return reactRootID;\n\t  },\n\t\n\t  /**\n\t   * Render a new component into the DOM.\n\t   * @param {ReactElement} nextElement element to render\n\t   * @param {DOMElement} container container to render into\n\t   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion\n\t   * @return {ReactComponent} nextComponent\n\t   */\n\t  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {\n\t    // Various parts of our code (such as ReactCompositeComponent's\n\t    // _renderValidatedComponent) assume that calls to render aren't nested;\n\t    // verify that that's the case.\n\t     false ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : undefined;\n\t\n\t    var componentInstance = instantiateReactComponent(nextElement, null);\n\t    var reactRootID = ReactMount._registerComponent(componentInstance, container);\n\t\n\t    // The initial render is synchronous but any updates that happen during\n\t    // rendering, in componentWillMount or componentDidMount, will be batched\n\t    // according to the current batching strategy.\n\t\n\t    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, reactRootID, container, shouldReuseMarkup, context);\n\t\n\t    if (false) {\n\t      // Record the root element in case it later gets transplanted.\n\t      rootElementsByReactRootID[reactRootID] = getReactRootElementInContainer(container);\n\t    }\n\t\n\t    return componentInstance;\n\t  },\n\t\n\t  /**\n\t   * Renders a React component into the DOM in the supplied `container`.\n\t   *\n\t   * If the React component was previously rendered into `container`, this will\n\t   * perform an update on it and only mutate the DOM as necessary to reflect the\n\t   * latest React component.\n\t   *\n\t   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.\n\t   * @param {ReactElement} nextElement Component element to render.\n\t   * @param {DOMElement} container DOM element to render into.\n\t   * @param {?function} callback function triggered on completion\n\t   * @return {ReactComponent} Component instance rendered in `container`.\n\t   */\n\t  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\n\t    !(parentComponent != null && parentComponent._reactInternalInstance != null) ?  false ? invariant(false, 'parentComponent must be a valid React Component') : invariant(false) : undefined;\n\t    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);\n\t  },\n\t\n\t  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\n\t    !ReactElement.isValidElement(nextElement) ?  false ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing an element string, make sure to instantiate ' + 'it by passing it to React.createElement.' : typeof nextElement === 'function' ? ' Instead of passing a component class, make sure to instantiate ' + 'it by passing it to React.createElement.' :\n\t    // Check if it quacks like an element\n\t    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : invariant(false) : undefined;\n\t\n\t     false ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : undefined;\n\t\n\t    var nextWrappedElement = new ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);\n\t\n\t    var prevComponent = instancesByReactRootID[getReactRootID(container)];\n\t\n\t    if (prevComponent) {\n\t      var prevWrappedElement = prevComponent._currentElement;\n\t      var prevElement = prevWrappedElement.props;\n\t      if (shouldUpdateReactComponent(prevElement, nextElement)) {\n\t        var publicInst = prevComponent._renderedComponent.getPublicInstance();\n\t        var updatedCallback = callback && function () {\n\t          callback.call(publicInst);\n\t        };\n\t        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, container, updatedCallback);\n\t        return publicInst;\n\t      } else {\n\t        ReactMount.unmountComponentAtNode(container);\n\t      }\n\t    }\n\t\n\t    var reactRootElement = getReactRootElementInContainer(container);\n\t    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);\n\t    var containerHasNonRootReactChild = hasNonRootReactChild(container);\n\t\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : undefined;\n\t\n\t      if (!containerHasReactMarkup || reactRootElement.nextSibling) {\n\t        var rootElementSibling = reactRootElement;\n\t        while (rootElementSibling) {\n\t          if (internalGetID(rootElementSibling)) {\n\t            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : undefined;\n\t            break;\n\t          }\n\t          rootElementSibling = rootElementSibling.nextSibling;\n\t        }\n\t      }\n\t    }\n\t\n\t    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;\n\t    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, parentComponent != null ? parentComponent._reactInternalInstance._processChildContext(parentComponent._reactInternalInstance._context) : emptyObject)._renderedComponent.getPublicInstance();\n\t    if (callback) {\n\t      callback.call(component);\n\t    }\n\t    return component;\n\t  },\n\t\n\t  /**\n\t   * Renders a React component into the DOM in the supplied `container`.\n\t   *\n\t   * If the React component was previously rendered into `container`, this will\n\t   * perform an update on it and only mutate the DOM as necessary to reflect the\n\t   * latest React component.\n\t   *\n\t   * @param {ReactElement} nextElement Component element to render.\n\t   * @param {DOMElement} container DOM element to render into.\n\t   * @param {?function} callback function triggered on completion\n\t   * @return {ReactComponent} Component instance rendered in `container`.\n\t   */\n\t  render: function (nextElement, container, callback) {\n\t    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);\n\t  },\n\t\n\t  /**\n\t   * Registers a container node into which React components will be rendered.\n\t   * This also creates the \"reactRoot\" ID that will be assigned to the element\n\t   * rendered within.\n\t   *\n\t   * @param {DOMElement} container DOM element to register as a container.\n\t   * @return {string} The \"reactRoot\" ID of elements rendered within.\n\t   */\n\t  registerContainer: function (container) {\n\t    var reactRootID = getReactRootID(container);\n\t    if (reactRootID) {\n\t      // If one exists, make sure it is a valid \"reactRoot\" ID.\n\t      reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);\n\t    }\n\t    if (!reactRootID) {\n\t      // No valid \"reactRoot\" ID found, create one.\n\t      reactRootID = ReactInstanceHandles.createReactRootID();\n\t    }\n\t    containersByReactRootID[reactRootID] = container;\n\t    return reactRootID;\n\t  },\n\t\n\t  /**\n\t   * Unmounts and destroys the React component rendered in the `container`.\n\t   *\n\t   * @param {DOMElement} container DOM element containing a React component.\n\t   * @return {boolean} True if a component was found in and unmounted from\n\t   *                   `container`\n\t   */\n\t  unmountComponentAtNode: function (container) {\n\t    // Various parts of our code (such as ReactCompositeComponent's\n\t    // _renderValidatedComponent) assume that calls to render aren't nested;\n\t    // verify that that's the case. (Strictly speaking, unmounting won't cause a\n\t    // render but we still don't expect to be in a render call here.)\n\t     false ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : undefined;\n\t\n\t    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ?  false ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : invariant(false) : undefined;\n\t\n\t    var reactRootID = getReactRootID(container);\n\t    var component = instancesByReactRootID[reactRootID];\n\t    if (!component) {\n\t      // Check if the node being unmounted was rendered by React, but isn't a\n\t      // root node.\n\t      var containerHasNonRootReactChild = hasNonRootReactChild(container);\n\t\n\t      // Check if the container itself is a React root node.\n\t      var containerID = internalGetID(container);\n\t      var isContainerReactRoot = containerID && containerID === ReactInstanceHandles.getReactRootIDFromNodeID(containerID);\n\t\n\t      if (false) {\n\t        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : undefined;\n\t      }\n\t\n\t      return false;\n\t    }\n\t    ReactUpdates.batchedUpdates(unmountComponentFromNode, component, container);\n\t    delete instancesByReactRootID[reactRootID];\n\t    delete containersByReactRootID[reactRootID];\n\t    if (false) {\n\t      delete rootElementsByReactRootID[reactRootID];\n\t    }\n\t    return true;\n\t  },\n\t\n\t  /**\n\t   * Finds the container DOM element that contains React component to which the\n\t   * supplied DOM `id` belongs.\n\t   *\n\t   * @param {string} id The ID of an element rendered by a React component.\n\t   * @return {?DOMElement} DOM element that contains the `id`.\n\t   */\n\t  findReactContainerForID: function (id) {\n\t    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(id);\n\t    var container = containersByReactRootID[reactRootID];\n\t\n\t    if (false) {\n\t      var rootElement = rootElementsByReactRootID[reactRootID];\n\t      if (rootElement && rootElement.parentNode !== container) {\n\t        process.env.NODE_ENV !== 'production' ? warning(\n\t        // Call internalGetID here because getID calls isValid which calls\n\t        // findReactContainerForID (this function).\n\t        internalGetID(rootElement) === reactRootID, 'ReactMount: Root element ID differed from reactRootID.') : undefined;\n\t        var containerChild = container.firstChild;\n\t        if (containerChild && reactRootID === internalGetID(containerChild)) {\n\t          // If the container has a new child with the same ID as the old\n\t          // root element, then rootElementsByReactRootID[reactRootID] is\n\t          // just stale and needs to be updated. The case that deserves a\n\t          // warning is when the container is empty.\n\t          rootElementsByReactRootID[reactRootID] = containerChild;\n\t        } else {\n\t          process.env.NODE_ENV !== 'production' ? warning(false, 'ReactMount: Root element has been removed from its original ' + 'container. New container: %s', rootElement.parentNode) : undefined;\n\t        }\n\t      }\n\t    }\n\t\n\t    return container;\n\t  },\n\t\n\t  /**\n\t   * Finds an element rendered by React with the supplied ID.\n\t   *\n\t   * @param {string} id ID of a DOM node in the React component.\n\t   * @return {DOMElement} Root DOM node of the React component.\n\t   */\n\t  findReactNodeByID: function (id) {\n\t    var reactRoot = ReactMount.findReactContainerForID(id);\n\t    return ReactMount.findComponentRoot(reactRoot, id);\n\t  },\n\t\n\t  /**\n\t   * Traverses up the ancestors of the supplied node to find a node that is a\n\t   * DOM representation of a React component rendered by this copy of React.\n\t   *\n\t   * @param {*} node\n\t   * @return {?DOMEventTarget}\n\t   * @internal\n\t   */\n\t  getFirstReactDOM: function (node) {\n\t    return findFirstReactDOMImpl(node);\n\t  },\n\t\n\t  /**\n\t   * Finds a node with the supplied `targetID` inside of the supplied\n\t   * `ancestorNode`.  Exploits the ID naming scheme to perform the search\n\t   * quickly.\n\t   *\n\t   * @param {DOMEventTarget} ancestorNode Search from this root.\n\t   * @pararm {string} targetID ID of the DOM representation of the component.\n\t   * @return {DOMEventTarget} DOM node with the supplied `targetID`.\n\t   * @internal\n\t   */\n\t  findComponentRoot: function (ancestorNode, targetID) {\n\t    var firstChildren = findComponentRootReusableArray;\n\t    var childIndex = 0;\n\t\n\t    var deepestAncestor = findDeepestCachedAncestor(targetID) || ancestorNode;\n\t\n\t    if (false) {\n\t      // This will throw on the next line; give an early warning\n\t      process.env.NODE_ENV !== 'production' ? warning(deepestAncestor != null, 'React can\\'t find the root component node for data-reactid value ' + '`%s`. If you\\'re seeing this message, it probably means that ' + 'you\\'ve loaded two copies of React on the page. At this time, only ' + 'a single copy of React can be loaded at a time.', targetID) : undefined;\n\t    }\n\t\n\t    firstChildren[0] = deepestAncestor.firstChild;\n\t    firstChildren.length = 1;\n\t\n\t    while (childIndex < firstChildren.length) {\n\t      var child = firstChildren[childIndex++];\n\t      var targetChild;\n\t\n\t      while (child) {\n\t        var childID = ReactMount.getID(child);\n\t        if (childID) {\n\t          // Even if we find the node we're looking for, we finish looping\n\t          // through its siblings to ensure they're cached so that we don't have\n\t          // to revisit this node again. Otherwise, we make n^2 calls to getID\n\t          // when visiting the many children of a single node in order.\n\t\n\t          if (targetID === childID) {\n\t            targetChild = child;\n\t          } else if (ReactInstanceHandles.isAncestorIDOf(childID, targetID)) {\n\t            // If we find a child whose ID is an ancestor of the given ID,\n\t            // then we can be sure that we only want to search the subtree\n\t            // rooted at this child, so we can throw out the rest of the\n\t            // search state.\n\t            firstChildren.length = childIndex = 0;\n\t            firstChildren.push(child.firstChild);\n\t          }\n\t        } else {\n\t          // If this child had no ID, then there's a chance that it was\n\t          // injected automatically by the browser, as when a `<table>`\n\t          // element sprouts an extra `<tbody>` child as a side effect of\n\t          // `.innerHTML` parsing. Optimistically continue down this\n\t          // branch, but not before examining the other siblings.\n\t          firstChildren.push(child.firstChild);\n\t        }\n\t\n\t        child = child.nextSibling;\n\t      }\n\t\n\t      if (targetChild) {\n\t        // Emptying firstChildren/findComponentRootReusableArray is\n\t        // not necessary for correctness, but it helps the GC reclaim\n\t        // any nodes that were left at the end of the search.\n\t        firstChildren.length = 0;\n\t\n\t        return targetChild;\n\t      }\n\t    }\n\t\n\t    firstChildren.length = 0;\n\t\n\t     true ?  false ? invariant(false, 'findComponentRoot(..., %s): Unable to find element. This probably ' + 'means the DOM was unexpectedly mutated (e.g., by the browser), ' + 'usually due to forgetting a <tbody> when using tables, nesting tags ' + 'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' + 'parent. ' + 'Try inspecting the child nodes of the element with React ID `%s`.', targetID, ReactMount.getID(ancestorNode)) : invariant(false) : undefined;\n\t  },\n\t\n\t  _mountImageIntoNode: function (markup, container, shouldReuseMarkup, transaction) {\n\t    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ?  false ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : invariant(false) : undefined;\n\t\n\t    if (shouldReuseMarkup) {\n\t      var rootElement = getReactRootElementInContainer(container);\n\t      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {\n\t        return;\n\t      } else {\n\t        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n\t        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n\t\n\t        var rootMarkup = rootElement.outerHTML;\n\t        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);\n\t\n\t        var normalizedMarkup = markup;\n\t        if (false) {\n\t          // because rootMarkup is retrieved from the DOM, various normalizations\n\t          // will have occurred which will not be present in `markup`. Here,\n\t          // insert markup into a <div> or <iframe> depending on the container\n\t          // type to perform the same normalizations before comparing.\n\t          var normalizer;\n\t          if (container.nodeType === ELEMENT_NODE_TYPE) {\n\t            normalizer = document.createElement('div');\n\t            normalizer.innerHTML = markup;\n\t            normalizedMarkup = normalizer.innerHTML;\n\t          } else {\n\t            normalizer = document.createElement('iframe');\n\t            document.body.appendChild(normalizer);\n\t            normalizer.contentDocument.write(markup);\n\t            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;\n\t            document.body.removeChild(normalizer);\n\t          }\n\t        }\n\t\n\t        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);\n\t        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);\n\t\n\t        !(container.nodeType !== DOC_NODE_TYPE) ?  false ? invariant(false, 'You\\'re trying to render a component to the document using ' + 'server rendering but the checksum was invalid. This usually ' + 'means you rendered a different component type or props on ' + 'the client from the one on the server, or your render() ' + 'methods are impure. React cannot handle this case due to ' + 'cross-browser quirks by rendering at the document root. You ' + 'should look for environment dependent code in your components ' + 'and ensure the props are the same client and server side:\\n%s', difference) : invariant(false) : undefined;\n\t\n\t        if (false) {\n\t          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\\n%s', difference) : undefined;\n\t        }\n\t      }\n\t    }\n\t\n\t    !(container.nodeType !== DOC_NODE_TYPE) ?  false ? invariant(false, 'You\\'re trying to render a component to the document but ' + 'you didn\\'t use server rendering. We can\\'t do this ' + 'without using server rendering due to cross-browser quirks. ' + 'See ReactDOMServer.renderToString() for server rendering.') : invariant(false) : undefined;\n\t\n\t    if (transaction.useCreateElement) {\n\t      while (container.lastChild) {\n\t        container.removeChild(container.lastChild);\n\t      }\n\t      container.appendChild(markup);\n\t    } else {\n\t      setInnerHTML(container, markup);\n\t    }\n\t  },\n\t\n\t  ownerDocumentContextKey: ownerDocumentContextKey,\n\t\n\t  /**\n\t   * React ID utilities.\n\t   */\n\t\n\t  getReactRootID: getReactRootID,\n\t\n\t  getID: getID,\n\t\n\t  setID: setID,\n\t\n\t  getNode: getNode,\n\t\n\t  getNodeFromInstance: getNodeFromInstance,\n\t\n\t  isValid: isValid,\n\t\n\t  purgeID: purgeID\n\t};\n\t\n\tReactPerf.measureMethods(ReactMount, 'ReactMount', {\n\t  _renderNewRootComponent: '_renderNewRootComponent',\n\t  _mountImageIntoNode: '_mountImageIntoNode'\n\t});\n\t\n\tmodule.exports = ReactMount;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactElement\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactCurrentOwner = __webpack_require__(11);\n\t\n\tvar assign = __webpack_require__(2);\n\tvar canDefineProperty = __webpack_require__(30);\n\t\n\t// The Symbol used to tag the ReactElement type. If there is no native Symbol\n\t// nor polyfill, then a plain number is used for performance.\n\tvar REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;\n\t\n\tvar RESERVED_PROPS = {\n\t  key: true,\n\t  ref: true,\n\t  __self: true,\n\t  __source: true\n\t};\n\t\n\t/**\n\t * Base constructor for all React elements. This is only used to make this\n\t * work with a dynamic instanceof check. Nothing should live on this prototype.\n\t *\n\t * @param {*} type\n\t * @param {*} key\n\t * @param {string|object} ref\n\t * @param {*} self A *temporary* helper to detect places where `this` is\n\t * different from the `owner` when React.createElement is called, so that we\n\t * can warn. We want to get rid of owner and replace string `ref`s with arrow\n\t * functions, and as long as `this` and owner are the same, there will be no\n\t * change in behavior.\n\t * @param {*} source An annotation object (added by a transpiler or otherwise)\n\t * indicating filename, line number, and/or other information.\n\t * @param {*} owner\n\t * @param {*} props\n\t * @internal\n\t */\n\tvar ReactElement = function (type, key, ref, self, source, owner, props) {\n\t  var element = {\n\t    // This tag allow us to uniquely identify this as a React Element\n\t    $$typeof: REACT_ELEMENT_TYPE,\n\t\n\t    // Built-in properties that belong on the element\n\t    type: type,\n\t    key: key,\n\t    ref: ref,\n\t    props: props,\n\t\n\t    // Record the component responsible for creating this element.\n\t    _owner: owner\n\t  };\n\t\n\t  if (false) {\n\t    // The validation flag is currently mutative. We put it on\n\t    // an external backing store so that we can freeze the whole object.\n\t    // This can be replaced with a WeakMap once they are implemented in\n\t    // commonly used development environments.\n\t    element._store = {};\n\t\n\t    // To make comparing ReactElements easier for testing purposes, we make\n\t    // the validation flag non-enumerable (where possible, which should\n\t    // include every environment we run tests in), so the test framework\n\t    // ignores it.\n\t    if (canDefineProperty) {\n\t      Object.defineProperty(element._store, 'validated', {\n\t        configurable: false,\n\t        enumerable: false,\n\t        writable: true,\n\t        value: false\n\t      });\n\t      // self and source are DEV only properties.\n\t      Object.defineProperty(element, '_self', {\n\t        configurable: false,\n\t        enumerable: false,\n\t        writable: false,\n\t        value: self\n\t      });\n\t      // Two elements created in two different places should be considered\n\t      // equal for testing purposes and therefore we hide it from enumeration.\n\t      Object.defineProperty(element, '_source', {\n\t        configurable: false,\n\t        enumerable: false,\n\t        writable: false,\n\t        value: source\n\t      });\n\t    } else {\n\t      element._store.validated = false;\n\t      element._self = self;\n\t      element._source = source;\n\t    }\n\t    Object.freeze(element.props);\n\t    Object.freeze(element);\n\t  }\n\t\n\t  return element;\n\t};\n\t\n\tReactElement.createElement = function (type, config, children) {\n\t  var propName;\n\t\n\t  // Reserved names are extracted\n\t  var props = {};\n\t\n\t  var key = null;\n\t  var ref = null;\n\t  var self = null;\n\t  var source = null;\n\t\n\t  if (config != null) {\n\t    ref = config.ref === undefined ? null : config.ref;\n\t    key = config.key === undefined ? null : '' + config.key;\n\t    self = config.__self === undefined ? null : config.__self;\n\t    source = config.__source === undefined ? null : config.__source;\n\t    // Remaining properties are added to a new props object\n\t    for (propName in config) {\n\t      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n\t        props[propName] = config[propName];\n\t      }\n\t    }\n\t  }\n\t\n\t  // Children can be more than one argument, and those are transferred onto\n\t  // the newly allocated props object.\n\t  var childrenLength = arguments.length - 2;\n\t  if (childrenLength === 1) {\n\t    props.children = children;\n\t  } else if (childrenLength > 1) {\n\t    var childArray = Array(childrenLength);\n\t    for (var i = 0; i < childrenLength; i++) {\n\t      childArray[i] = arguments[i + 2];\n\t    }\n\t    props.children = childArray;\n\t  }\n\t\n\t  // Resolve default props\n\t  if (type && type.defaultProps) {\n\t    var defaultProps = type.defaultProps;\n\t    for (propName in defaultProps) {\n\t      if (typeof props[propName] === 'undefined') {\n\t        props[propName] = defaultProps[propName];\n\t      }\n\t    }\n\t  }\n\t\n\t  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n\t};\n\t\n\tReactElement.createFactory = function (type) {\n\t  var factory = ReactElement.createElement.bind(null, type);\n\t  // Expose the type on the factory and the prototype so that it can be\n\t  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\n\t  // This should not be named `constructor` since this may not be the function\n\t  // that created the element, and it may not even be a constructor.\n\t  // Legacy hook TODO: Warn if this is accessed\n\t  factory.type = type;\n\t  return factory;\n\t};\n\t\n\tReactElement.cloneAndReplaceKey = function (oldElement, newKey) {\n\t  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n\t\n\t  return newElement;\n\t};\n\t\n\tReactElement.cloneAndReplaceProps = function (oldElement, newProps) {\n\t  var newElement = ReactElement(oldElement.type, oldElement.key, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, newProps);\n\t\n\t  if (false) {\n\t    // If the key on the original is valid, then the clone is valid\n\t    newElement._store.validated = oldElement._store.validated;\n\t  }\n\t\n\t  return newElement;\n\t};\n\t\n\tReactElement.cloneElement = function (element, config, children) {\n\t  var propName;\n\t\n\t  // Original props are copied\n\t  var props = assign({}, element.props);\n\t\n\t  // Reserved names are extracted\n\t  var key = element.key;\n\t  var ref = element.ref;\n\t  // Self is preserved since the owner is preserved.\n\t  var self = element._self;\n\t  // Source is preserved since cloneElement is unlikely to be targeted by a\n\t  // transpiler, and the original source is probably a better indicator of the\n\t  // true owner.\n\t  var source = element._source;\n\t\n\t  // Owner will be preserved, unless ref is overridden\n\t  var owner = element._owner;\n\t\n\t  if (config != null) {\n\t    if (config.ref !== undefined) {\n\t      // Silently steal the ref from the parent.\n\t      ref = config.ref;\n\t      owner = ReactCurrentOwner.current;\n\t    }\n\t    if (config.key !== undefined) {\n\t      key = '' + config.key;\n\t    }\n\t    // Remaining properties override existing props\n\t    for (propName in config) {\n\t      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n\t        props[propName] = config[propName];\n\t      }\n\t    }\n\t  }\n\t\n\t  // Children can be more than one argument, and those are transferred onto\n\t  // the newly allocated props object.\n\t  var childrenLength = arguments.length - 2;\n\t  if (childrenLength === 1) {\n\t    props.children = children;\n\t  } else if (childrenLength > 1) {\n\t    var childArray = Array(childrenLength);\n\t    for (var i = 0; i < childrenLength; i++) {\n\t      childArray[i] = arguments[i + 2];\n\t    }\n\t    props.children = childArray;\n\t  }\n\t\n\t  return ReactElement(element.type, key, ref, self, source, owner, props);\n\t};\n\t\n\t/**\n\t * @param {?object} object\n\t * @return {boolean} True if `object` is a valid component.\n\t * @final\n\t */\n\tReactElement.isValidElement = function (object) {\n\t  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n\t};\n\t\n\tmodule.exports = ReactElement;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactPerf\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * ReactPerf is a general AOP system designed to measure performance. This\n\t * module only has the hooks: see ReactDefaultPerf for the analysis tool.\n\t */\n\tvar ReactPerf = {\n\t  /**\n\t   * Boolean to enable/disable measurement. Set to false by default to prevent\n\t   * accidental logging and perf loss.\n\t   */\n\t  enableMeasure: false,\n\t\n\t  /**\n\t   * Holds onto the measure function in use. By default, don't measure\n\t   * anything, but we'll override this if we inject a measure function.\n\t   */\n\t  storedMeasure: _noMeasure,\n\t\n\t  /**\n\t   * @param {object} object\n\t   * @param {string} objectName\n\t   * @param {object<string>} methodNames\n\t   */\n\t  measureMethods: function (object, objectName, methodNames) {\n\t    if (false) {\n\t      for (var key in methodNames) {\n\t        if (!methodNames.hasOwnProperty(key)) {\n\t          continue;\n\t        }\n\t        object[key] = ReactPerf.measure(objectName, methodNames[key], object[key]);\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Use this to wrap methods you want to measure. Zero overhead in production.\n\t   *\n\t   * @param {string} objName\n\t   * @param {string} fnName\n\t   * @param {function} func\n\t   * @return {function}\n\t   */\n\t  measure: function (objName, fnName, func) {\n\t    if (false) {\n\t      var measuredFunc = null;\n\t      var wrapper = function () {\n\t        if (ReactPerf.enableMeasure) {\n\t          if (!measuredFunc) {\n\t            measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);\n\t          }\n\t          return measuredFunc.apply(this, arguments);\n\t        }\n\t        return func.apply(this, arguments);\n\t      };\n\t      wrapper.displayName = objName + '_' + fnName;\n\t      return wrapper;\n\t    }\n\t    return func;\n\t  },\n\t\n\t  injection: {\n\t    /**\n\t     * @param {function} measure\n\t     */\n\t    injectMeasure: function (measure) {\n\t      ReactPerf.storedMeasure = measure;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Simply passes through the measured function, without measuring it.\n\t *\n\t * @param {string} objName\n\t * @param {string} fnName\n\t * @param {function} func\n\t * @return {function}\n\t */\n\tfunction _noMeasure(objName, fnName, func) {\n\t  return func;\n\t}\n\t\n\tmodule.exports = ReactPerf;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactUpdates\n\t */\n\t\n\t'use strict';\n\t\n\tvar CallbackQueue = __webpack_require__(35);\n\tvar PooledClass = __webpack_require__(12);\n\tvar ReactPerf = __webpack_require__(7);\n\tvar ReactReconciler = __webpack_require__(15);\n\tvar Transaction = __webpack_require__(29);\n\t\n\tvar assign = __webpack_require__(2);\n\tvar invariant = __webpack_require__(1);\n\t\n\tvar dirtyComponents = [];\n\tvar asapCallbackQueue = CallbackQueue.getPooled();\n\tvar asapEnqueued = false;\n\t\n\tvar batchingStrategy = null;\n\t\n\tfunction ensureInjected() {\n\t  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ?  false ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching ' + 'strategy') : invariant(false) : undefined;\n\t}\n\t\n\tvar NESTED_UPDATES = {\n\t  initialize: function () {\n\t    this.dirtyComponentsLength = dirtyComponents.length;\n\t  },\n\t  close: function () {\n\t    if (this.dirtyComponentsLength !== dirtyComponents.length) {\n\t      // Additional updates were enqueued by componentDidUpdate handlers or\n\t      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run\n\t      // these new updates so that if A's componentDidUpdate calls setState on\n\t      // B, B will update before the callback A's updater provided when calling\n\t      // setState.\n\t      dirtyComponents.splice(0, this.dirtyComponentsLength);\n\t      flushBatchedUpdates();\n\t    } else {\n\t      dirtyComponents.length = 0;\n\t    }\n\t  }\n\t};\n\t\n\tvar UPDATE_QUEUEING = {\n\t  initialize: function () {\n\t    this.callbackQueue.reset();\n\t  },\n\t  close: function () {\n\t    this.callbackQueue.notifyAll();\n\t  }\n\t};\n\t\n\tvar TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];\n\t\n\tfunction ReactUpdatesFlushTransaction() {\n\t  this.reinitializeTransaction();\n\t  this.dirtyComponentsLength = null;\n\t  this.callbackQueue = CallbackQueue.getPooled();\n\t  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled( /* forceHTML */false);\n\t}\n\t\n\tassign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {\n\t  getTransactionWrappers: function () {\n\t    return TRANSACTION_WRAPPERS;\n\t  },\n\t\n\t  destructor: function () {\n\t    this.dirtyComponentsLength = null;\n\t    CallbackQueue.release(this.callbackQueue);\n\t    this.callbackQueue = null;\n\t    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);\n\t    this.reconcileTransaction = null;\n\t  },\n\t\n\t  perform: function (method, scope, a) {\n\t    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`\n\t    // with this transaction's wrappers around it.\n\t    return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);\n\t  }\n\t});\n\t\n\tPooledClass.addPoolingTo(ReactUpdatesFlushTransaction);\n\t\n\tfunction batchedUpdates(callback, a, b, c, d, e) {\n\t  ensureInjected();\n\t  batchingStrategy.batchedUpdates(callback, a, b, c, d, e);\n\t}\n\t\n\t/**\n\t * Array comparator for ReactComponents by mount ordering.\n\t *\n\t * @param {ReactComponent} c1 first component you're comparing\n\t * @param {ReactComponent} c2 second component you're comparing\n\t * @return {number} Return value usable by Array.prototype.sort().\n\t */\n\tfunction mountOrderComparator(c1, c2) {\n\t  return c1._mountOrder - c2._mountOrder;\n\t}\n\t\n\tfunction runBatchedUpdates(transaction) {\n\t  var len = transaction.dirtyComponentsLength;\n\t  !(len === dirtyComponents.length) ?  false ? invariant(false, 'Expected flush transaction\\'s stored dirty-components length (%s) to ' + 'match dirty-components array length (%s).', len, dirtyComponents.length) : invariant(false) : undefined;\n\t\n\t  // Since reconciling a component higher in the owner hierarchy usually (not\n\t  // always -- see shouldComponentUpdate()) will reconcile children, reconcile\n\t  // them before their children by sorting the array.\n\t  dirtyComponents.sort(mountOrderComparator);\n\t\n\t  for (var i = 0; i < len; i++) {\n\t    // If a component is unmounted before pending changes apply, it will still\n\t    // be here, but we assume that it has cleared its _pendingCallbacks and\n\t    // that performUpdateIfNecessary is a noop.\n\t    var component = dirtyComponents[i];\n\t\n\t    // If performUpdateIfNecessary happens to enqueue any new updates, we\n\t    // shouldn't execute the callbacks until the next render happens, so\n\t    // stash the callbacks first\n\t    var callbacks = component._pendingCallbacks;\n\t    component._pendingCallbacks = null;\n\t\n\t    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction);\n\t\n\t    if (callbacks) {\n\t      for (var j = 0; j < callbacks.length; j++) {\n\t        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar flushBatchedUpdates = function () {\n\t  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents\n\t  // array and perform any updates enqueued by mount-ready handlers (i.e.,\n\t  // componentDidUpdate) but we need to check here too in order to catch\n\t  // updates enqueued by setState callbacks and asap calls.\n\t  while (dirtyComponents.length || asapEnqueued) {\n\t    if (dirtyComponents.length) {\n\t      var transaction = ReactUpdatesFlushTransaction.getPooled();\n\t      transaction.perform(runBatchedUpdates, null, transaction);\n\t      ReactUpdatesFlushTransaction.release(transaction);\n\t    }\n\t\n\t    if (asapEnqueued) {\n\t      asapEnqueued = false;\n\t      var queue = asapCallbackQueue;\n\t      asapCallbackQueue = CallbackQueue.getPooled();\n\t      queue.notifyAll();\n\t      CallbackQueue.release(queue);\n\t    }\n\t  }\n\t};\n\tflushBatchedUpdates = ReactPerf.measure('ReactUpdates', 'flushBatchedUpdates', flushBatchedUpdates);\n\t\n\t/**\n\t * Mark a component as needing a rerender, adding an optional callback to a\n\t * list of functions which will be executed once the rerender occurs.\n\t */\n\tfunction enqueueUpdate(component) {\n\t  ensureInjected();\n\t\n\t  // Various parts of our code (such as ReactCompositeComponent's\n\t  // _renderValidatedComponent) assume that calls to render aren't nested;\n\t  // verify that that's the case. (This is called by each top-level update\n\t  // function, like setProps, setState, forceUpdate, etc.; creation and\n\t  // destruction of top-level components is guarded in ReactMount.)\n\t\n\t  if (!batchingStrategy.isBatchingUpdates) {\n\t    batchingStrategy.batchedUpdates(enqueueUpdate, component);\n\t    return;\n\t  }\n\t\n\t  dirtyComponents.push(component);\n\t}\n\t\n\t/**\n\t * Enqueue a callback to be run at the end of the current batching cycle. Throws\n\t * if no updates are currently being performed.\n\t */\n\tfunction asap(callback, context) {\n\t  !batchingStrategy.isBatchingUpdates ?  false ? invariant(false, 'ReactUpdates.asap: Can\\'t enqueue an asap callback in a context where' + 'updates are not being batched.') : invariant(false) : undefined;\n\t  asapCallbackQueue.enqueue(callback, context);\n\t  asapEnqueued = true;\n\t}\n\t\n\tvar ReactUpdatesInjection = {\n\t  injectReconcileTransaction: function (ReconcileTransaction) {\n\t    !ReconcileTransaction ?  false ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : invariant(false) : undefined;\n\t    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;\n\t  },\n\t\n\t  injectBatchingStrategy: function (_batchingStrategy) {\n\t    !_batchingStrategy ?  false ? invariant(false, 'ReactUpdates: must provide a batching strategy') : invariant(false) : undefined;\n\t    !(typeof _batchingStrategy.batchedUpdates === 'function') ?  false ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : invariant(false) : undefined;\n\t    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ?  false ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : invariant(false) : undefined;\n\t    batchingStrategy = _batchingStrategy;\n\t  }\n\t};\n\t\n\tvar ReactUpdates = {\n\t  /**\n\t   * React references `ReactReconcileTransaction` using this property in order\n\t   * to allow dependency injection.\n\t   *\n\t   * @internal\n\t   */\n\t  ReactReconcileTransaction: null,\n\t\n\t  batchedUpdates: batchedUpdates,\n\t  enqueueUpdate: enqueueUpdate,\n\t  flushBatchedUpdates: flushBatchedUpdates,\n\t  injection: ReactUpdatesInjection,\n\t  asap: asap\n\t};\n\t\n\tmodule.exports = ReactUpdates;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule emptyFunction\n\t */\n\t\n\t\"use strict\";\n\t\n\tfunction makeEmptyFunction(arg) {\n\t  return function () {\n\t    return arg;\n\t  };\n\t}\n\t\n\t/**\n\t * This function accepts and discards inputs; it has no side effects. This is\n\t * primarily useful idiomatically for overridable function endpoints which\n\t * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n\t */\n\tfunction emptyFunction() {}\n\t\n\temptyFunction.thatReturns = makeEmptyFunction;\n\temptyFunction.thatReturnsFalse = makeEmptyFunction(false);\n\temptyFunction.thatReturnsTrue = makeEmptyFunction(true);\n\temptyFunction.thatReturnsNull = makeEmptyFunction(null);\n\temptyFunction.thatReturnsThis = function () {\n\t  return this;\n\t};\n\temptyFunction.thatReturnsArgument = function (arg) {\n\t  return arg;\n\t};\n\t\n\tmodule.exports = emptyFunction;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule EventConstants\n\t */\n\t\n\t'use strict';\n\t\n\tvar keyMirror = __webpack_require__(33);\n\t\n\tvar PropagationPhases = keyMirror({ bubbled: null, captured: null });\n\t\n\t/**\n\t * Types of raw signals from the browser caught at the top level.\n\t */\n\tvar topLevelTypes = keyMirror({\n\t  topAbort: null,\n\t  topBlur: null,\n\t  topCanPlay: null,\n\t  topCanPlayThrough: null,\n\t  topChange: null,\n\t  topClick: null,\n\t  topCompositionEnd: null,\n\t  topCompositionStart: null,\n\t  topCompositionUpdate: null,\n\t  topContextMenu: null,\n\t  topCopy: null,\n\t  topCut: null,\n\t  topDoubleClick: null,\n\t  topDrag: null,\n\t  topDragEnd: null,\n\t  topDragEnter: null,\n\t  topDragExit: null,\n\t  topDragLeave: null,\n\t  topDragOver: null,\n\t  topDragStart: null,\n\t  topDrop: null,\n\t  topDurationChange: null,\n\t  topEmptied: null,\n\t  topEncrypted: null,\n\t  topEnded: null,\n\t  topError: null,\n\t  topFocus: null,\n\t  topInput: null,\n\t  topKeyDown: null,\n\t  topKeyPress: null,\n\t  topKeyUp: null,\n\t  topLoad: null,\n\t  topLoadedData: null,\n\t  topLoadedMetadata: null,\n\t  topLoadStart: null,\n\t  topMouseDown: null,\n\t  topMouseMove: null,\n\t  topMouseOut: null,\n\t  topMouseOver: null,\n\t  topMouseUp: null,\n\t  topPaste: null,\n\t  topPause: null,\n\t  topPlay: null,\n\t  topPlaying: null,\n\t  topProgress: null,\n\t  topRateChange: null,\n\t  topReset: null,\n\t  topScroll: null,\n\t  topSeeked: null,\n\t  topSeeking: null,\n\t  topSelectionChange: null,\n\t  topStalled: null,\n\t  topSubmit: null,\n\t  topSuspend: null,\n\t  topTextInput: null,\n\t  topTimeUpdate: null,\n\t  topTouchCancel: null,\n\t  topTouchEnd: null,\n\t  topTouchMove: null,\n\t  topTouchStart: null,\n\t  topVolumeChange: null,\n\t  topWaiting: null,\n\t  topWheel: null\n\t});\n\t\n\tvar EventConstants = {\n\t  topLevelTypes: topLevelTypes,\n\t  PropagationPhases: PropagationPhases\n\t};\n\t\n\tmodule.exports = EventConstants;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactCurrentOwner\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Keeps track of the current owner.\n\t *\n\t * The current owner is the component who should own any components that are\n\t * currently being constructed.\n\t */\n\tvar ReactCurrentOwner = {\n\t\n\t  /**\n\t   * @internal\n\t   * @type {ReactComponent}\n\t   */\n\t  current: null\n\t\n\t};\n\t\n\tmodule.exports = ReactCurrentOwner;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule PooledClass\n\t */\n\t\n\t'use strict';\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Static poolers. Several custom versions for each potential number of\n\t * arguments. A completely generic pooler is easy to implement, but would\n\t * require accessing the `arguments` object. In each of these, `this` refers to\n\t * the Class itself, not an instance. If any others are needed, simply add them\n\t * here, or in their own files.\n\t */\n\tvar oneArgumentPooler = function (copyFieldsFrom) {\n\t  var Klass = this;\n\t  if (Klass.instancePool.length) {\n\t    var instance = Klass.instancePool.pop();\n\t    Klass.call(instance, copyFieldsFrom);\n\t    return instance;\n\t  } else {\n\t    return new Klass(copyFieldsFrom);\n\t  }\n\t};\n\t\n\tvar twoArgumentPooler = function (a1, a2) {\n\t  var Klass = this;\n\t  if (Klass.instancePool.length) {\n\t    var instance = Klass.instancePool.pop();\n\t    Klass.call(instance, a1, a2);\n\t    return instance;\n\t  } else {\n\t    return new Klass(a1, a2);\n\t  }\n\t};\n\t\n\tvar threeArgumentPooler = function (a1, a2, a3) {\n\t  var Klass = this;\n\t  if (Klass.instancePool.length) {\n\t    var instance = Klass.instancePool.pop();\n\t    Klass.call(instance, a1, a2, a3);\n\t    return instance;\n\t  } else {\n\t    return new Klass(a1, a2, a3);\n\t  }\n\t};\n\t\n\tvar fourArgumentPooler = function (a1, a2, a3, a4) {\n\t  var Klass = this;\n\t  if (Klass.instancePool.length) {\n\t    var instance = Klass.instancePool.pop();\n\t    Klass.call(instance, a1, a2, a3, a4);\n\t    return instance;\n\t  } else {\n\t    return new Klass(a1, a2, a3, a4);\n\t  }\n\t};\n\t\n\tvar fiveArgumentPooler = function (a1, a2, a3, a4, a5) {\n\t  var Klass = this;\n\t  if (Klass.instancePool.length) {\n\t    var instance = Klass.instancePool.pop();\n\t    Klass.call(instance, a1, a2, a3, a4, a5);\n\t    return instance;\n\t  } else {\n\t    return new Klass(a1, a2, a3, a4, a5);\n\t  }\n\t};\n\t\n\tvar standardReleaser = function (instance) {\n\t  var Klass = this;\n\t  !(instance instanceof Klass) ?  false ? invariant(false, 'Trying to release an instance into a pool of a different type.') : invariant(false) : undefined;\n\t  instance.destructor();\n\t  if (Klass.instancePool.length < Klass.poolSize) {\n\t    Klass.instancePool.push(instance);\n\t  }\n\t};\n\t\n\tvar DEFAULT_POOL_SIZE = 10;\n\tvar DEFAULT_POOLER = oneArgumentPooler;\n\t\n\t/**\n\t * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n\t * itself (statically) not adding any prototypical fields. Any CopyConstructor\n\t * you give this may have a `poolSize` property, and will look for a\n\t * prototypical `destructor` on instances (optional).\n\t *\n\t * @param {Function} CopyConstructor Constructor that can be used to reset.\n\t * @param {Function} pooler Customizable pooler.\n\t */\n\tvar addPoolingTo = function (CopyConstructor, pooler) {\n\t  var NewKlass = CopyConstructor;\n\t  NewKlass.instancePool = [];\n\t  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n\t  if (!NewKlass.poolSize) {\n\t    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n\t  }\n\t  NewKlass.release = standardReleaser;\n\t  return NewKlass;\n\t};\n\t\n\tvar PooledClass = {\n\t  addPoolingTo: addPoolingTo,\n\t  oneArgumentPooler: oneArgumentPooler,\n\t  twoArgumentPooler: twoArgumentPooler,\n\t  threeArgumentPooler: threeArgumentPooler,\n\t  fourArgumentPooler: fourArgumentPooler,\n\t  fiveArgumentPooler: fiveArgumentPooler\n\t};\n\t\n\tmodule.exports = PooledClass;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule keyOf\n\t */\n\t\n\t/**\n\t * Allows extraction of a minified key. Let's the build system minify keys\n\t * without losing the ability to dynamically use key strings as values\n\t * themselves. Pass in an object with a single key/val pair and it will return\n\t * you the string key of that single record. Suppose you want to grab the\n\t * value for a key 'className' inside of an object. Key/val minification may\n\t * have aliased that key to be 'xa12'. keyOf({className: null}) will return\n\t * 'xa12' in that case. Resolve keys you want to use once at startup time, then\n\t * reuse those resolutions.\n\t */\n\t\"use strict\";\n\t\n\tvar keyOf = function (oneKeyObj) {\n\t  var key;\n\t  for (key in oneKeyObj) {\n\t    if (!oneKeyObj.hasOwnProperty(key)) {\n\t      continue;\n\t    }\n\t    return key;\n\t  }\n\t  return null;\n\t};\n\t\n\tmodule.exports = keyOf;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t//  Ramda v0.19.1\n\t//  https://github.com/ramda/ramda\n\t//  (c) 2013-2016 Scott Sauyet, Michael Hurley, and David Chambers\n\t//  Ramda may be freely distributed under the MIT license.\n\t\n\t;(function() {\n\t\n\t  'use strict';\n\t\n\t  /**\n\t     * A special placeholder value used to specify \"gaps\" within curried functions,\n\t     * allowing partial application of any combination of arguments, regardless of\n\t     * their positions.\n\t     *\n\t     * If `g` is a curried ternary function and `_` is `R.__`, the following are\n\t     * equivalent:\n\t     *\n\t     *   - `g(1, 2, 3)`\n\t     *   - `g(_, 2, 3)(1)`\n\t     *   - `g(_, _, 3)(1)(2)`\n\t     *   - `g(_, _, 3)(1, 2)`\n\t     *   - `g(_, 2, _)(1, 3)`\n\t     *   - `g(_, 2)(1)(3)`\n\t     *   - `g(_, 2)(1, 3)`\n\t     *   - `g(_, 2)(_, 3)(1)`\n\t     *\n\t     * @constant\n\t     * @memberOf R\n\t     * @since v0.6.0\n\t     * @category Function\n\t     * @example\n\t     *\n\t     *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\n\t     *      greet('Alice'); //=> 'Hello, Alice!'\n\t     */\n\t    var __ = { '@@functional/placeholder': true };\n\t\n\t    /* eslint-disable no-unused-vars */\n\t    var _arity = function _arity(n, fn) {\n\t        /* eslint-disable no-unused-vars */\n\t        switch (n) {\n\t        case 0:\n\t            return function () {\n\t                return fn.apply(this, arguments);\n\t            };\n\t        case 1:\n\t            return function (a0) {\n\t                return fn.apply(this, arguments);\n\t            };\n\t        case 2:\n\t            return function (a0, a1) {\n\t                return fn.apply(this, arguments);\n\t            };\n\t        case 3:\n\t            return function (a0, a1, a2) {\n\t                return fn.apply(this, arguments);\n\t            };\n\t        case 4:\n\t            return function (a0, a1, a2, a3) {\n\t                return fn.apply(this, arguments);\n\t            };\n\t        case 5:\n\t            return function (a0, a1, a2, a3, a4) {\n\t                return fn.apply(this, arguments);\n\t            };\n\t        case 6:\n\t            return function (a0, a1, a2, a3, a4, a5) {\n\t                return fn.apply(this, arguments);\n\t            };\n\t        case 7:\n\t            return function (a0, a1, a2, a3, a4, a5, a6) {\n\t                return fn.apply(this, arguments);\n\t            };\n\t        case 8:\n\t            return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n\t                return fn.apply(this, arguments);\n\t            };\n\t        case 9:\n\t            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n\t                return fn.apply(this, arguments);\n\t            };\n\t        case 10:\n\t            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n\t                return fn.apply(this, arguments);\n\t            };\n\t        default:\n\t            throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n\t        }\n\t    };\n\t\n\t    var _arrayFromIterator = function _arrayFromIterator(iter) {\n\t        var list = [];\n\t        var next;\n\t        while (!(next = iter.next()).done) {\n\t            list.push(next.value);\n\t        }\n\t        return list;\n\t    };\n\t\n\t    var _cloneRegExp = function _cloneRegExp(pattern) {\n\t        return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n\t    };\n\t\n\t    var _complement = function _complement(f) {\n\t        return function () {\n\t            return !f.apply(this, arguments);\n\t        };\n\t    };\n\t\n\t    /**\n\t     * Private `concat` function to merge two array-like objects.\n\t     *\n\t     * @private\n\t     * @param {Array|Arguments} [set1=[]] An array-like object.\n\t     * @param {Array|Arguments} [set2=[]] An array-like object.\n\t     * @return {Array} A new, merged array.\n\t     * @example\n\t     *\n\t     *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n\t     */\n\t    var _concat = function _concat(set1, set2) {\n\t        set1 = set1 || [];\n\t        set2 = set2 || [];\n\t        var idx;\n\t        var len1 = set1.length;\n\t        var len2 = set2.length;\n\t        var result = [];\n\t        idx = 0;\n\t        while (idx < len1) {\n\t            result[result.length] = set1[idx];\n\t            idx += 1;\n\t        }\n\t        idx = 0;\n\t        while (idx < len2) {\n\t            result[result.length] = set2[idx];\n\t            idx += 1;\n\t        }\n\t        return result;\n\t    };\n\t\n\t    var _containsWith = function _containsWith(pred, x, list) {\n\t        var idx = 0;\n\t        var len = list.length;\n\t        while (idx < len) {\n\t            if (pred(x, list[idx])) {\n\t                return true;\n\t            }\n\t            idx += 1;\n\t        }\n\t        return false;\n\t    };\n\t\n\t    var _filter = function _filter(fn, list) {\n\t        var idx = 0;\n\t        var len = list.length;\n\t        var result = [];\n\t        while (idx < len) {\n\t            if (fn(list[idx])) {\n\t                result[result.length] = list[idx];\n\t            }\n\t            idx += 1;\n\t        }\n\t        return result;\n\t    };\n\t\n\t    var _forceReduced = function _forceReduced(x) {\n\t        return {\n\t            '@@transducer/value': x,\n\t            '@@transducer/reduced': true\n\t        };\n\t    };\n\t\n\t    var _has = function _has(prop, obj) {\n\t        return Object.prototype.hasOwnProperty.call(obj, prop);\n\t    };\n\t\n\t    var _identity = function _identity(x) {\n\t        return x;\n\t    };\n\t\n\t    var _isArguments = function () {\n\t        var toString = Object.prototype.toString;\n\t        return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n\t            return toString.call(x) === '[object Arguments]';\n\t        } : function _isArguments(x) {\n\t            return _has('callee', x);\n\t        };\n\t    }();\n\t\n\t    /**\n\t     * Tests whether or not an object is an array.\n\t     *\n\t     * @private\n\t     * @param {*} val The object to test.\n\t     * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n\t     * @example\n\t     *\n\t     *      _isArray([]); //=> true\n\t     *      _isArray(null); //=> false\n\t     *      _isArray({}); //=> false\n\t     */\n\t    var _isArray = Array.isArray || function _isArray(val) {\n\t        return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n\t    };\n\t\n\t    /**\n\t     * Determine if the passed argument is an integer.\n\t     *\n\t     * @private\n\t     * @param {*} n\n\t     * @category Type\n\t     * @return {Boolean}\n\t     */\n\t    var _isInteger = Number.isInteger || function _isInteger(n) {\n\t        return n << 0 === n;\n\t    };\n\t\n\t    var _isNumber = function _isNumber(x) {\n\t        return Object.prototype.toString.call(x) === '[object Number]';\n\t    };\n\t\n\t    var _isObject = function _isObject(x) {\n\t        return Object.prototype.toString.call(x) === '[object Object]';\n\t    };\n\t\n\t    var _isPlaceholder = function _isPlaceholder(a) {\n\t        return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n\t    };\n\t\n\t    var _isRegExp = function _isRegExp(x) {\n\t        return Object.prototype.toString.call(x) === '[object RegExp]';\n\t    };\n\t\n\t    var _isString = function _isString(x) {\n\t        return Object.prototype.toString.call(x) === '[object String]';\n\t    };\n\t\n\t    var _isTransformer = function _isTransformer(obj) {\n\t        return typeof obj['@@transducer/step'] === 'function';\n\t    };\n\t\n\t    var _map = function _map(fn, functor) {\n\t        var idx = 0;\n\t        var len = functor.length;\n\t        var result = Array(len);\n\t        while (idx < len) {\n\t            result[idx] = fn(functor[idx]);\n\t            idx += 1;\n\t        }\n\t        return result;\n\t    };\n\t\n\t    var _of = function _of(x) {\n\t        return [x];\n\t    };\n\t\n\t    var _pipe = function _pipe(f, g) {\n\t        return function () {\n\t            return g.call(this, f.apply(this, arguments));\n\t        };\n\t    };\n\t\n\t    var _pipeP = function _pipeP(f, g) {\n\t        return function () {\n\t            var ctx = this;\n\t            return f.apply(ctx, arguments).then(function (x) {\n\t                return g.call(ctx, x);\n\t            });\n\t        };\n\t    };\n\t\n\t    // \\b matches word boundary; [\\b] matches backspace\n\t    var _quote = function _quote(s) {\n\t        var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b')    // \\b matches word boundary; [\\b] matches backspace\n\t    .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n\t        return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n\t    };\n\t\n\t    var _reduced = function _reduced(x) {\n\t        return x && x['@@transducer/reduced'] ? x : {\n\t            '@@transducer/value': x,\n\t            '@@transducer/reduced': true\n\t        };\n\t    };\n\t\n\t    /**\n\t     * An optimized, private array `slice` implementation.\n\t     *\n\t     * @private\n\t     * @param {Arguments|Array} args The array or arguments object to consider.\n\t     * @param {Number} [from=0] The array index to slice from, inclusive.\n\t     * @param {Number} [to=args.length] The array index to slice to, exclusive.\n\t     * @return {Array} A new, sliced array.\n\t     * @example\n\t     *\n\t     *      _slice([1, 2, 3, 4, 5], 1, 3); //=> [2, 3]\n\t     *\n\t     *      var firstThreeArgs = function(a, b, c, d) {\n\t     *        return _slice(arguments, 0, 3);\n\t     *      };\n\t     *      firstThreeArgs(1, 2, 3, 4); //=> [1, 2, 3]\n\t     */\n\t    var _slice = function _slice(args, from, to) {\n\t        switch (arguments.length) {\n\t        case 1:\n\t            return _slice(args, 0, args.length);\n\t        case 2:\n\t            return _slice(args, from, args.length);\n\t        default:\n\t            var list = [];\n\t            var idx = 0;\n\t            var len = Math.max(0, Math.min(args.length, to) - from);\n\t            while (idx < len) {\n\t                list[idx] = args[from + idx];\n\t                idx += 1;\n\t            }\n\t            return list;\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n\t     */\n\t    var _toISOString = function () {\n\t        var pad = function pad(n) {\n\t            return (n < 10 ? '0' : '') + n;\n\t        };\n\t        return typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n\t            return d.toISOString();\n\t        } : function _toISOString(d) {\n\t            return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n\t        };\n\t    }();\n\t\n\t    var _xfBase = {\n\t        init: function () {\n\t            return this.xf['@@transducer/init']();\n\t        },\n\t        result: function (result) {\n\t            return this.xf['@@transducer/result'](result);\n\t        }\n\t    };\n\t\n\t    var _xwrap = function () {\n\t        function XWrap(fn) {\n\t            this.f = fn;\n\t        }\n\t        XWrap.prototype['@@transducer/init'] = function () {\n\t            throw new Error('init not implemented on XWrap');\n\t        };\n\t        XWrap.prototype['@@transducer/result'] = function (acc) {\n\t            return acc;\n\t        };\n\t        XWrap.prototype['@@transducer/step'] = function (acc, x) {\n\t            return this.f(acc, x);\n\t        };\n\t        return function _xwrap(fn) {\n\t            return new XWrap(fn);\n\t        };\n\t    }();\n\t\n\t    var _aperture = function _aperture(n, list) {\n\t        var idx = 0;\n\t        var limit = list.length - (n - 1);\n\t        var acc = new Array(limit >= 0 ? limit : 0);\n\t        while (idx < limit) {\n\t            acc[idx] = _slice(list, idx, idx + n);\n\t            idx += 1;\n\t        }\n\t        return acc;\n\t    };\n\t\n\t    /**\n\t     * Similar to hasMethod, this checks whether a function has a [methodname]\n\t     * function. If it isn't an array it will execute that function otherwise it\n\t     * will default to the ramda implementation.\n\t     *\n\t     * @private\n\t     * @param {Function} fn ramda implemtation\n\t     * @param {String} methodname property to check for a custom implementation\n\t     * @return {Object} Whatever the return value of the method is.\n\t     */\n\t    var _checkForMethod = function _checkForMethod(methodname, fn) {\n\t        return function () {\n\t            var length = arguments.length;\n\t            if (length === 0) {\n\t                return fn();\n\t            }\n\t            var obj = arguments[length - 1];\n\t            return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, _slice(arguments, 0, length - 1));\n\t        };\n\t    };\n\t\n\t    /**\n\t     * Optimized internal one-arity curry function.\n\t     *\n\t     * @private\n\t     * @category Function\n\t     * @param {Function} fn The function to curry.\n\t     * @return {Function} The curried function.\n\t     */\n\t    var _curry1 = function _curry1(fn) {\n\t        return function f1(a) {\n\t            if (arguments.length === 0 || _isPlaceholder(a)) {\n\t                return f1;\n\t            } else {\n\t                return fn.apply(this, arguments);\n\t            }\n\t        };\n\t    };\n\t\n\t    /**\n\t     * Optimized internal two-arity curry function.\n\t     *\n\t     * @private\n\t     * @category Function\n\t     * @param {Function} fn The function to curry.\n\t     * @return {Function} The curried function.\n\t     */\n\t    var _curry2 = function _curry2(fn) {\n\t        return function f2(a, b) {\n\t            switch (arguments.length) {\n\t            case 0:\n\t                return f2;\n\t            case 1:\n\t                return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n\t                    return fn(a, _b);\n\t                });\n\t            default:\n\t                return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n\t                    return fn(_a, b);\n\t                }) : _isPlaceholder(b) ? _curry1(function (_b) {\n\t                    return fn(a, _b);\n\t                }) : fn(a, b);\n\t            }\n\t        };\n\t    };\n\t\n\t    /**\n\t     * Optimized internal three-arity curry function.\n\t     *\n\t     * @private\n\t     * @category Function\n\t     * @param {Function} fn The function to curry.\n\t     * @return {Function} The curried function.\n\t     */\n\t    var _curry3 = function _curry3(fn) {\n\t        return function f3(a, b, c) {\n\t            switch (arguments.length) {\n\t            case 0:\n\t                return f3;\n\t            case 1:\n\t                return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n\t                    return fn(a, _b, _c);\n\t                });\n\t            case 2:\n\t                return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n\t                    return fn(_a, b, _c);\n\t                }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n\t                    return fn(a, _b, _c);\n\t                }) : _curry1(function (_c) {\n\t                    return fn(a, b, _c);\n\t                });\n\t            default:\n\t                return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n\t                    return fn(_a, _b, c);\n\t                }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n\t                    return fn(_a, b, _c);\n\t                }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n\t                    return fn(a, _b, _c);\n\t                }) : _isPlaceholder(a) ? _curry1(function (_a) {\n\t                    return fn(_a, b, c);\n\t                }) : _isPlaceholder(b) ? _curry1(function (_b) {\n\t                    return fn(a, _b, c);\n\t                }) : _isPlaceholder(c) ? _curry1(function (_c) {\n\t                    return fn(a, b, _c);\n\t                }) : fn(a, b, c);\n\t            }\n\t        };\n\t    };\n\t\n\t    /**\n\t     * Internal curryN function.\n\t     *\n\t     * @private\n\t     * @category Function\n\t     * @param {Number} length The arity of the curried function.\n\t     * @param {Array} received An array of arguments received thus far.\n\t     * @param {Function} fn The function to curry.\n\t     * @return {Function} The curried function.\n\t     */\n\t    var _curryN = function _curryN(length, received, fn) {\n\t        return function () {\n\t            var combined = [];\n\t            var argsIdx = 0;\n\t            var left = length;\n\t            var combinedIdx = 0;\n\t            while (combinedIdx < received.length || argsIdx < arguments.length) {\n\t                var result;\n\t                if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n\t                    result = received[combinedIdx];\n\t                } else {\n\t                    result = arguments[argsIdx];\n\t                    argsIdx += 1;\n\t                }\n\t                combined[combinedIdx] = result;\n\t                if (!_isPlaceholder(result)) {\n\t                    left -= 1;\n\t                }\n\t                combinedIdx += 1;\n\t            }\n\t            return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n\t        };\n\t    };\n\t\n\t    /**\n\t     * Returns a function that dispatches with different strategies based on the\n\t     * object in list position (last argument). If it is an array, executes [fn].\n\t     * Otherwise, if it has a function with [methodname], it will execute that\n\t     * function (functor case). Otherwise, if it is a transformer, uses transducer\n\t     * [xf] to return a new transformer (transducer case). Otherwise, it will\n\t     * default to executing [fn].\n\t     *\n\t     * @private\n\t     * @param {String} methodname property to check for a custom implementation\n\t     * @param {Function} xf transducer to initialize if object is transformer\n\t     * @param {Function} fn default ramda implementation\n\t     * @return {Function} A function that dispatches on object in list position\n\t     */\n\t    var _dispatchable = function _dispatchable(methodname, xf, fn) {\n\t        return function () {\n\t            var length = arguments.length;\n\t            if (length === 0) {\n\t                return fn();\n\t            }\n\t            var obj = arguments[length - 1];\n\t            if (!_isArray(obj)) {\n\t                var args = _slice(arguments, 0, length - 1);\n\t                if (typeof obj[methodname] === 'function') {\n\t                    return obj[methodname].apply(obj, args);\n\t                }\n\t                if (_isTransformer(obj)) {\n\t                    var transducer = xf.apply(null, args);\n\t                    return transducer(obj);\n\t                }\n\t            }\n\t            return fn.apply(this, arguments);\n\t        };\n\t    };\n\t\n\t    var _dropLastWhile = function dropLastWhile(pred, list) {\n\t        var idx = list.length - 1;\n\t        while (idx >= 0 && pred(list[idx])) {\n\t            idx -= 1;\n\t        }\n\t        return _slice(list, 0, idx + 1);\n\t    };\n\t\n\t    var _xall = function () {\n\t        function XAll(f, xf) {\n\t            this.xf = xf;\n\t            this.f = f;\n\t            this.all = true;\n\t        }\n\t        XAll.prototype['@@transducer/init'] = _xfBase.init;\n\t        XAll.prototype['@@transducer/result'] = function (result) {\n\t            if (this.all) {\n\t                result = this.xf['@@transducer/step'](result, true);\n\t            }\n\t            return this.xf['@@transducer/result'](result);\n\t        };\n\t        XAll.prototype['@@transducer/step'] = function (result, input) {\n\t            if (!this.f(input)) {\n\t                this.all = false;\n\t                result = _reduced(this.xf['@@transducer/step'](result, false));\n\t            }\n\t            return result;\n\t        };\n\t        return _curry2(function _xall(f, xf) {\n\t            return new XAll(f, xf);\n\t        });\n\t    }();\n\t\n\t    var _xany = function () {\n\t        function XAny(f, xf) {\n\t            this.xf = xf;\n\t            this.f = f;\n\t            this.any = false;\n\t        }\n\t        XAny.prototype['@@transducer/init'] = _xfBase.init;\n\t        XAny.prototype['@@transducer/result'] = function (result) {\n\t            if (!this.any) {\n\t                result = this.xf['@@transducer/step'](result, false);\n\t            }\n\t            return this.xf['@@transducer/result'](result);\n\t        };\n\t        XAny.prototype['@@transducer/step'] = function (result, input) {\n\t            if (this.f(input)) {\n\t                this.any = true;\n\t                result = _reduced(this.xf['@@transducer/step'](result, true));\n\t            }\n\t            return result;\n\t        };\n\t        return _curry2(function _xany(f, xf) {\n\t            return new XAny(f, xf);\n\t        });\n\t    }();\n\t\n\t    var _xaperture = function () {\n\t        function XAperture(n, xf) {\n\t            this.xf = xf;\n\t            this.pos = 0;\n\t            this.full = false;\n\t            this.acc = new Array(n);\n\t        }\n\t        XAperture.prototype['@@transducer/init'] = _xfBase.init;\n\t        XAperture.prototype['@@transducer/result'] = function (result) {\n\t            this.acc = null;\n\t            return this.xf['@@transducer/result'](result);\n\t        };\n\t        XAperture.prototype['@@transducer/step'] = function (result, input) {\n\t            this.store(input);\n\t            return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n\t        };\n\t        XAperture.prototype.store = function (input) {\n\t            this.acc[this.pos] = input;\n\t            this.pos += 1;\n\t            if (this.pos === this.acc.length) {\n\t                this.pos = 0;\n\t                this.full = true;\n\t            }\n\t        };\n\t        XAperture.prototype.getCopy = function () {\n\t            return _concat(_slice(this.acc, this.pos), _slice(this.acc, 0, this.pos));\n\t        };\n\t        return _curry2(function _xaperture(n, xf) {\n\t            return new XAperture(n, xf);\n\t        });\n\t    }();\n\t\n\t    var _xdrop = function () {\n\t        function XDrop(n, xf) {\n\t            this.xf = xf;\n\t            this.n = n;\n\t        }\n\t        XDrop.prototype['@@transducer/init'] = _xfBase.init;\n\t        XDrop.prototype['@@transducer/result'] = _xfBase.result;\n\t        XDrop.prototype['@@transducer/step'] = function (result, input) {\n\t            if (this.n > 0) {\n\t                this.n -= 1;\n\t                return result;\n\t            }\n\t            return this.xf['@@transducer/step'](result, input);\n\t        };\n\t        return _curry2(function _xdrop(n, xf) {\n\t            return new XDrop(n, xf);\n\t        });\n\t    }();\n\t\n\t    var _xdropLast = function () {\n\t        function XDropLast(n, xf) {\n\t            this.xf = xf;\n\t            this.pos = 0;\n\t            this.full = false;\n\t            this.acc = new Array(n);\n\t        }\n\t        XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n\t        XDropLast.prototype['@@transducer/result'] = function (result) {\n\t            this.acc = null;\n\t            return this.xf['@@transducer/result'](result);\n\t        };\n\t        XDropLast.prototype['@@transducer/step'] = function (result, input) {\n\t            if (this.full) {\n\t                result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n\t            }\n\t            this.store(input);\n\t            return result;\n\t        };\n\t        XDropLast.prototype.store = function (input) {\n\t            this.acc[this.pos] = input;\n\t            this.pos += 1;\n\t            if (this.pos === this.acc.length) {\n\t                this.pos = 0;\n\t                this.full = true;\n\t            }\n\t        };\n\t        return _curry2(function _xdropLast(n, xf) {\n\t            return new XDropLast(n, xf);\n\t        });\n\t    }();\n\t\n\t    var _xdropRepeatsWith = function () {\n\t        function XDropRepeatsWith(pred, xf) {\n\t            this.xf = xf;\n\t            this.pred = pred;\n\t            this.lastValue = undefined;\n\t            this.seenFirstValue = false;\n\t        }\n\t        XDropRepeatsWith.prototype['@@transducer/init'] = function () {\n\t            return this.xf['@@transducer/init']();\n\t        };\n\t        XDropRepeatsWith.prototype['@@transducer/result'] = function (result) {\n\t            return this.xf['@@transducer/result'](result);\n\t        };\n\t        XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n\t            var sameAsLast = false;\n\t            if (!this.seenFirstValue) {\n\t                this.seenFirstValue = true;\n\t            } else if (this.pred(this.lastValue, input)) {\n\t                sameAsLast = true;\n\t            }\n\t            this.lastValue = input;\n\t            return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n\t        };\n\t        return _curry2(function _xdropRepeatsWith(pred, xf) {\n\t            return new XDropRepeatsWith(pred, xf);\n\t        });\n\t    }();\n\t\n\t    var _xdropWhile = function () {\n\t        function XDropWhile(f, xf) {\n\t            this.xf = xf;\n\t            this.f = f;\n\t        }\n\t        XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n\t        XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n\t        XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n\t            if (this.f) {\n\t                if (this.f(input)) {\n\t                    return result;\n\t                }\n\t                this.f = null;\n\t            }\n\t            return this.xf['@@transducer/step'](result, input);\n\t        };\n\t        return _curry2(function _xdropWhile(f, xf) {\n\t            return new XDropWhile(f, xf);\n\t        });\n\t    }();\n\t\n\t    var _xfilter = function () {\n\t        function XFilter(f, xf) {\n\t            this.xf = xf;\n\t            this.f = f;\n\t        }\n\t        XFilter.prototype['@@transducer/init'] = _xfBase.init;\n\t        XFilter.prototype['@@transducer/result'] = _xfBase.result;\n\t        XFilter.prototype['@@transducer/step'] = function (result, input) {\n\t            return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n\t        };\n\t        return _curry2(function _xfilter(f, xf) {\n\t            return new XFilter(f, xf);\n\t        });\n\t    }();\n\t\n\t    var _xfind = function () {\n\t        function XFind(f, xf) {\n\t            this.xf = xf;\n\t            this.f = f;\n\t            this.found = false;\n\t        }\n\t        XFind.prototype['@@transducer/init'] = _xfBase.init;\n\t        XFind.prototype['@@transducer/result'] = function (result) {\n\t            if (!this.found) {\n\t                result = this.xf['@@transducer/step'](result, void 0);\n\t            }\n\t            return this.xf['@@transducer/result'](result);\n\t        };\n\t        XFind.prototype['@@transducer/step'] = function (result, input) {\n\t            if (this.f(input)) {\n\t                this.found = true;\n\t                result = _reduced(this.xf['@@transducer/step'](result, input));\n\t            }\n\t            return result;\n\t        };\n\t        return _curry2(function _xfind(f, xf) {\n\t            return new XFind(f, xf);\n\t        });\n\t    }();\n\t\n\t    var _xfindIndex = function () {\n\t        function XFindIndex(f, xf) {\n\t            this.xf = xf;\n\t            this.f = f;\n\t            this.idx = -1;\n\t            this.found = false;\n\t        }\n\t        XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n\t        XFindIndex.prototype['@@transducer/result'] = function (result) {\n\t            if (!this.found) {\n\t                result = this.xf['@@transducer/step'](result, -1);\n\t            }\n\t            return this.xf['@@transducer/result'](result);\n\t        };\n\t        XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n\t            this.idx += 1;\n\t            if (this.f(input)) {\n\t                this.found = true;\n\t                result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n\t            }\n\t            return result;\n\t        };\n\t        return _curry2(function _xfindIndex(f, xf) {\n\t            return new XFindIndex(f, xf);\n\t        });\n\t    }();\n\t\n\t    var _xfindLast = function () {\n\t        function XFindLast(f, xf) {\n\t            this.xf = xf;\n\t            this.f = f;\n\t        }\n\t        XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n\t        XFindLast.prototype['@@transducer/result'] = function (result) {\n\t            return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n\t        };\n\t        XFindLast.prototype['@@transducer/step'] = function (result, input) {\n\t            if (this.f(input)) {\n\t                this.last = input;\n\t            }\n\t            return result;\n\t        };\n\t        return _curry2(function _xfindLast(f, xf) {\n\t            return new XFindLast(f, xf);\n\t        });\n\t    }();\n\t\n\t    var _xfindLastIndex = function () {\n\t        function XFindLastIndex(f, xf) {\n\t            this.xf = xf;\n\t            this.f = f;\n\t            this.idx = -1;\n\t            this.lastIdx = -1;\n\t        }\n\t        XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n\t        XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n\t            return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n\t        };\n\t        XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n\t            this.idx += 1;\n\t            if (this.f(input)) {\n\t                this.lastIdx = this.idx;\n\t            }\n\t            return result;\n\t        };\n\t        return _curry2(function _xfindLastIndex(f, xf) {\n\t            return new XFindLastIndex(f, xf);\n\t        });\n\t    }();\n\t\n\t    var _xmap = function () {\n\t        function XMap(f, xf) {\n\t            this.xf = xf;\n\t            this.f = f;\n\t        }\n\t        XMap.prototype['@@transducer/init'] = _xfBase.init;\n\t        XMap.prototype['@@transducer/result'] = _xfBase.result;\n\t        XMap.prototype['@@transducer/step'] = function (result, input) {\n\t            return this.xf['@@transducer/step'](result, this.f(input));\n\t        };\n\t        return _curry2(function _xmap(f, xf) {\n\t            return new XMap(f, xf);\n\t        });\n\t    }();\n\t\n\t    var _xtake = function () {\n\t        function XTake(n, xf) {\n\t            this.xf = xf;\n\t            this.n = n;\n\t        }\n\t        XTake.prototype['@@transducer/init'] = _xfBase.init;\n\t        XTake.prototype['@@transducer/result'] = _xfBase.result;\n\t        XTake.prototype['@@transducer/step'] = function (result, input) {\n\t            if (this.n === 0) {\n\t                return _reduced(result);\n\t            } else {\n\t                this.n -= 1;\n\t                return this.xf['@@transducer/step'](result, input);\n\t            }\n\t        };\n\t        return _curry2(function _xtake(n, xf) {\n\t            return new XTake(n, xf);\n\t        });\n\t    }();\n\t\n\t    var _xtakeWhile = function () {\n\t        function XTakeWhile(f, xf) {\n\t            this.xf = xf;\n\t            this.f = f;\n\t        }\n\t        XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n\t        XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n\t        XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n\t            return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n\t        };\n\t        return _curry2(function _xtakeWhile(f, xf) {\n\t            return new XTakeWhile(f, xf);\n\t        });\n\t    }();\n\t\n\t    /**\n\t     * Adds two numbers. Equivalent to `a + b` but curried.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Math\n\t     * @sig Number -> Number -> Number\n\t     * @param {Number} a\n\t     * @param {Number} b\n\t     * @return {Number}\n\t     * @see R.subtract\n\t     * @example\n\t     *\n\t     *      R.add(2, 3);       //=>  5\n\t     *      R.add(7)(10);      //=> 17\n\t     */\n\t    var add = _curry2(function add(a, b) {\n\t        return a + b;\n\t    });\n\t\n\t    /**\n\t     * Applies a function to the value at the given index of an array, returning a\n\t     * new copy of the array with the element at the given index replaced with the\n\t     * result of the function application.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.14.0\n\t     * @category List\n\t     * @sig (a -> a) -> Number -> [a] -> [a]\n\t     * @param {Function} fn The function to apply.\n\t     * @param {Number} idx The index.\n\t     * @param {Array|Arguments} list An array-like object whose value\n\t     *        at the supplied index will be replaced.\n\t     * @return {Array} A copy of the supplied array-like object with\n\t     *         the element at index `idx` replaced with the value\n\t     *         returned by applying `fn` to the existing element.\n\t     * @see R.update\n\t     * @example\n\t     *\n\t     *      R.adjust(R.add(10), 1, [0, 1, 2]);     //=> [0, 11, 2]\n\t     *      R.adjust(R.add(10))(1)([0, 1, 2]);     //=> [0, 11, 2]\n\t     */\n\t    var adjust = _curry3(function adjust(fn, idx, list) {\n\t        if (idx >= list.length || idx < -list.length) {\n\t            return list;\n\t        }\n\t        var start = idx < 0 ? list.length : 0;\n\t        var _idx = start + idx;\n\t        var _list = _concat(list);\n\t        _list[_idx] = fn(list[_idx]);\n\t        return _list;\n\t    });\n\t\n\t    /**\n\t     * Returns `true` if all elements of the list match the predicate, `false` if\n\t     * there are any that don't.\n\t     *\n\t     * Dispatches to the `all` method of the second argument, if present.\n\t     *\n\t     * Acts as a transducer if a transformer is given in list position.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig (a -> Boolean) -> [a] -> Boolean\n\t     * @param {Function} fn The predicate function.\n\t     * @param {Array} list The array to consider.\n\t     * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n\t     *         otherwise.\n\t     * @see R.any, R.none, R.transduce\n\t     * @example\n\t     *\n\t     *      var lessThan2 = R.flip(R.lt)(2);\n\t     *      var lessThan3 = R.flip(R.lt)(3);\n\t     *      R.all(lessThan2)([1, 2]); //=> false\n\t     *      R.all(lessThan3)([1, 2]); //=> true\n\t     */\n\t    var all = _curry2(_dispatchable('all', _xall, function all(fn, list) {\n\t        var idx = 0;\n\t        while (idx < list.length) {\n\t            if (!fn(list[idx])) {\n\t                return false;\n\t            }\n\t            idx += 1;\n\t        }\n\t        return true;\n\t    }));\n\t\n\t    /**\n\t     * Returns a function that always returns the given value. Note that for\n\t     * non-primitives the value returned is a reference to the original value.\n\t     *\n\t     * This function is known as `const`, `constant`, or `K` (for K combinator) in\n\t     * other languages and libraries.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Function\n\t     * @sig a -> (* -> a)\n\t     * @param {*} val The value to wrap in a function\n\t     * @return {Function} A Function :: * -> val.\n\t     * @example\n\t     *\n\t     *      var t = R.always('Tee');\n\t     *      t(); //=> 'Tee'\n\t     */\n\t    var always = _curry1(function always(val) {\n\t        return function () {\n\t            return val;\n\t        };\n\t    });\n\t\n\t    /**\n\t     * Returns `true` if both arguments are `true`; `false` otherwise.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Logic\n\t     * @sig * -> * -> *\n\t     * @param {Boolean} a A boolean value\n\t     * @param {Boolean} b A boolean value\n\t     * @return {Boolean} `true` if both arguments are `true`, `false` otherwise\n\t     * @see R.both\n\t     * @example\n\t     *\n\t     *      R.and(true, true); //=> true\n\t     *      R.and(true, false); //=> false\n\t     *      R.and(false, true); //=> false\n\t     *      R.and(false, false); //=> false\n\t     */\n\t    var and = _curry2(function and(a, b) {\n\t        return a && b;\n\t    });\n\t\n\t    /**\n\t     * Returns `true` if at least one of elements of the list match the predicate,\n\t     * `false` otherwise.\n\t     *\n\t     * Dispatches to the `any` method of the second argument, if present.\n\t     *\n\t     * Acts as a transducer if a transformer is given in list position.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig (a -> Boolean) -> [a] -> Boolean\n\t     * @param {Function} fn The predicate function.\n\t     * @param {Array} list The array to consider.\n\t     * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n\t     *         otherwise.\n\t     * @see R.all, R.none, R.transduce\n\t     * @example\n\t     *\n\t     *      var lessThan0 = R.flip(R.lt)(0);\n\t     *      var lessThan2 = R.flip(R.lt)(2);\n\t     *      R.any(lessThan0)([1, 2]); //=> false\n\t     *      R.any(lessThan2)([1, 2]); //=> true\n\t     */\n\t    var any = _curry2(_dispatchable('any', _xany, function any(fn, list) {\n\t        var idx = 0;\n\t        while (idx < list.length) {\n\t            if (fn(list[idx])) {\n\t                return true;\n\t            }\n\t            idx += 1;\n\t        }\n\t        return false;\n\t    }));\n\t\n\t    /**\n\t     * Returns a new list, composed of n-tuples of consecutive elements If `n` is\n\t     * greater than the length of the list, an empty list is returned.\n\t     *\n\t     * Dispatches to the `aperture` method of the second argument, if present.\n\t     *\n\t     * Acts as a transducer if a transformer is given in list position.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.12.0\n\t     * @category List\n\t     * @sig Number -> [a] -> [[a]]\n\t     * @param {Number} n The size of the tuples to create\n\t     * @param {Array} list The list to split into `n`-tuples\n\t     * @return {Array} The new list.\n\t     * @see R.transduce\n\t     * @example\n\t     *\n\t     *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n\t     *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n\t     *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n\t     */\n\t    var aperture = _curry2(_dispatchable('aperture', _xaperture, _aperture));\n\t\n\t    /**\n\t     * Returns a new list containing the contents of the given list, followed by\n\t     * the given element.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig a -> [a] -> [a]\n\t     * @param {*} el The element to add to the end of the new list.\n\t     * @param {Array} list The list whose contents will be added to the beginning of the output\n\t     *        list.\n\t     * @return {Array} A new list containing the contents of the old list followed by `el`.\n\t     * @see R.prepend\n\t     * @example\n\t     *\n\t     *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n\t     *      R.append('tests', []); //=> ['tests']\n\t     *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n\t     */\n\t    var append = _curry2(function append(el, list) {\n\t        return _concat(list, [el]);\n\t    });\n\t\n\t    /**\n\t     * Applies function `fn` to the argument list `args`. This is useful for\n\t     * creating a fixed-arity function from a variadic function. `fn` should be a\n\t     * bound function if context is significant.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.7.0\n\t     * @category Function\n\t     * @sig (*... -> a) -> [*] -> a\n\t     * @param {Function} fn\n\t     * @param {Array} args\n\t     * @return {*}\n\t     * @see R.call, R.unapply\n\t     * @example\n\t     *\n\t     *      var nums = [1, 2, 3, -99, 42, 6, 7];\n\t     *      R.apply(Math.max, nums); //=> 42\n\t     */\n\t    var apply = _curry2(function apply(fn, args) {\n\t        return fn.apply(this, args);\n\t    });\n\t\n\t    /**\n\t     * Makes a shallow clone of an object, setting or overriding the specified\n\t     * property with the given value. Note that this copies and flattens prototype\n\t     * properties onto the new object as well. All non-primitive properties are\n\t     * copied by reference.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.8.0\n\t     * @category Object\n\t     * @sig String -> a -> {k: v} -> {k: v}\n\t     * @param {String} prop the property name to set\n\t     * @param {*} val the new value\n\t     * @param {Object} obj the object to clone\n\t     * @return {Object} a new object similar to the original except for the specified property.\n\t     * @see R.dissoc\n\t     * @example\n\t     *\n\t     *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n\t     */\n\t    var assoc = _curry3(function assoc(prop, val, obj) {\n\t        var result = {};\n\t        for (var p in obj) {\n\t            result[p] = obj[p];\n\t        }\n\t        result[prop] = val;\n\t        return result;\n\t    });\n\t\n\t    /**\n\t     * Makes a shallow clone of an object, setting or overriding the nodes required\n\t     * to create the given path, and placing the specific value at the tail end of\n\t     * that path. Note that this copies and flattens prototype properties onto the\n\t     * new object as well. All non-primitive properties are copied by reference.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.8.0\n\t     * @category Object\n\t     * @sig [String] -> a -> {k: v} -> {k: v}\n\t     * @param {Array} path the path to set\n\t     * @param {*} val the new value\n\t     * @param {Object} obj the object to clone\n\t     * @return {Object} a new object similar to the original except along the specified path.\n\t     * @see R.dissocPath\n\t     * @example\n\t     *\n\t     *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n\t     */\n\t    var assocPath = _curry3(function assocPath(path, val, obj) {\n\t        switch (path.length) {\n\t        case 0:\n\t            return val;\n\t        case 1:\n\t            return assoc(path[0], val, obj);\n\t        default:\n\t            return assoc(path[0], assocPath(_slice(path, 1), val, Object(obj[path[0]])), obj);\n\t        }\n\t    });\n\t\n\t    /**\n\t     * Creates a function that is bound to a context.\n\t     * Note: `R.bind` does not provide the additional argument-binding capabilities of\n\t     * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.6.0\n\t     * @category Function\n\t     * @category Object\n\t     * @sig (* -> *) -> {*} -> (* -> *)\n\t     * @param {Function} fn The function to bind to context\n\t     * @param {Object} thisObj The context to bind `fn` to\n\t     * @return {Function} A function that will execute in the context of `thisObj`.\n\t     * @see R.partial\n\t     */\n\t    var bind = _curry2(function bind(fn, thisObj) {\n\t        return _arity(fn.length, function () {\n\t            return fn.apply(thisObj, arguments);\n\t        });\n\t    });\n\t\n\t    /**\n\t     * A function wrapping calls to the two functions in an `&&` operation,\n\t     * returning the result of the first function if it is false-y and the result\n\t     * of the second function otherwise. Note that this is short-circuited,\n\t     * meaning that the second function will not be invoked if the first returns a\n\t     * false-y value.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.12.0\n\t     * @category Logic\n\t     * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n\t     * @param {Function} f a predicate\n\t     * @param {Function} g another predicate\n\t     * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n\t     * @see R.and\n\t     * @example\n\t     *\n\t     *      var gt10 = x => x > 10;\n\t     *      var even = x => x % 2 === 0;\n\t     *      var f = R.both(gt10, even);\n\t     *      f(100); //=> true\n\t     *      f(101); //=> false\n\t     */\n\t    var both = _curry2(function both(f, g) {\n\t        return function _both() {\n\t            return f.apply(this, arguments) && g.apply(this, arguments);\n\t        };\n\t    });\n\t\n\t    /**\n\t     * Makes a comparator function out of a function that reports whether the first\n\t     * element is less than the second.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Function\n\t     * @sig (a, b -> Boolean) -> (a, b -> Number)\n\t     * @param {Function} pred A predicate function of arity two.\n\t     * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`.\n\t     * @example\n\t     *\n\t     *      var cmp = R.comparator((a, b) => a.age < b.age);\n\t     *      var people = [\n\t     *        // ...\n\t     *      ];\n\t     *      R.sort(cmp, people);\n\t     */\n\t    var comparator = _curry1(function comparator(pred) {\n\t        return function (a, b) {\n\t            return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n\t        };\n\t    });\n\t\n\t    /**\n\t     * Returns a function, `fn`, which encapsulates if/else-if/else logic.\n\t     * `R.cond` takes a list of [predicate, transform] pairs. All of the arguments\n\t     * to `fn` are applied to each of the predicates in turn until one returns a\n\t     * \"truthy\" value, at which point `fn` returns the result of applying its\n\t     * arguments to the corresponding transformer. If none of the predicates\n\t     * matches, `fn` returns undefined.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.6.0\n\t     * @category Logic\n\t     * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n\t     * @param {Array} pairs\n\t     * @return {Function}\n\t     * @example\n\t     *\n\t     *      var fn = R.cond([\n\t     *        [R.equals(0),   R.always('water freezes at 0°C')],\n\t     *        [R.equals(100), R.always('water boils at 100°C')],\n\t     *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n\t     *      ]);\n\t     *      fn(0); //=> 'water freezes at 0°C'\n\t     *      fn(50); //=> 'nothing special happens at 50°C'\n\t     *      fn(100); //=> 'water boils at 100°C'\n\t     */\n\t    var cond = _curry1(function cond(pairs) {\n\t        return function () {\n\t            var idx = 0;\n\t            while (idx < pairs.length) {\n\t                if (pairs[idx][0].apply(this, arguments)) {\n\t                    return pairs[idx][1].apply(this, arguments);\n\t                }\n\t                idx += 1;\n\t            }\n\t        };\n\t    });\n\t\n\t    /**\n\t     * Counts the elements of a list according to how many match each value of a\n\t     * key generated by the supplied function. Returns an object mapping the keys\n\t     * produced by `fn` to the number of occurrences in the list. Note that all\n\t     * keys are coerced to strings because of how JavaScript objects work.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Relation\n\t     * @sig (a -> String) -> [a] -> {*}\n\t     * @param {Function} fn The function used to map values to keys.\n\t     * @param {Array} list The list to count elements from.\n\t     * @return {Object} An object mapping keys to number of occurrences in the list.\n\t     * @example\n\t     *\n\t     *      var numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n\t     *      var letters = R.split('', 'abcABCaaaBBc');\n\t     *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n\t     *      R.countBy(R.toLower)(letters);   //=> {'a': 5, 'b': 4, 'c': 3}\n\t     */\n\t    var countBy = _curry2(function countBy(fn, list) {\n\t        var counts = {};\n\t        var len = list.length;\n\t        var idx = 0;\n\t        while (idx < len) {\n\t            var key = fn(list[idx]);\n\t            counts[key] = (_has(key, counts) ? counts[key] : 0) + 1;\n\t            idx += 1;\n\t        }\n\t        return counts;\n\t    });\n\t\n\t    /**\n\t     * Returns a curried equivalent of the provided function, with the specified\n\t     * arity. The curried function has two unusual capabilities. First, its\n\t     * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n\t     * following are equivalent:\n\t     *\n\t     *   - `g(1)(2)(3)`\n\t     *   - `g(1)(2, 3)`\n\t     *   - `g(1, 2)(3)`\n\t     *   - `g(1, 2, 3)`\n\t     *\n\t     * Secondly, the special placeholder value `R.__` may be used to specify\n\t     * \"gaps\", allowing partial application of any combination of arguments,\n\t     * regardless of their positions. If `g` is as above and `_` is `R.__`, the\n\t     * following are equivalent:\n\t     *\n\t     *   - `g(1, 2, 3)`\n\t     *   - `g(_, 2, 3)(1)`\n\t     *   - `g(_, _, 3)(1)(2)`\n\t     *   - `g(_, _, 3)(1, 2)`\n\t     *   - `g(_, 2)(1)(3)`\n\t     *   - `g(_, 2)(1, 3)`\n\t     *   - `g(_, 2)(_, 3)(1)`\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.5.0\n\t     * @category Function\n\t     * @sig Number -> (* -> a) -> (* -> a)\n\t     * @param {Number} length The arity for the returned function.\n\t     * @param {Function} fn The function to curry.\n\t     * @return {Function} A new, curried function.\n\t     * @see R.curry\n\t     * @example\n\t     *\n\t     *      var sumArgs = (...args) => R.sum(args);\n\t     *\n\t     *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n\t     *      var f = curriedAddFourNumbers(1, 2);\n\t     *      var g = f(3);\n\t     *      g(4); //=> 10\n\t     */\n\t    var curryN = _curry2(function curryN(length, fn) {\n\t        if (length === 1) {\n\t            return _curry1(fn);\n\t        }\n\t        return _arity(length, _curryN(length, [], fn));\n\t    });\n\t\n\t    /**\n\t     * Decrements its argument.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category Math\n\t     * @sig Number -> Number\n\t     * @param {Number} n\n\t     * @return {Number}\n\t     * @see R.inc\n\t     * @example\n\t     *\n\t     *      R.dec(42); //=> 41\n\t     */\n\t    var dec = add(-1);\n\t\n\t    /**\n\t     * Returns the second argument if it is not `null`, `undefined` or `NaN`\n\t     * otherwise the first argument is returned.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.10.0\n\t     * @category Logic\n\t     * @sig a -> b -> a | b\n\t     * @param {a} val The default value.\n\t     * @param {b} val The value to return if it is not null or undefined\n\t     * @return {*} The the second value or the default value\n\t     * @example\n\t     *\n\t     *      var defaultTo42 = R.defaultTo(42);\n\t     *\n\t     *      defaultTo42(null);  //=> 42\n\t     *      defaultTo42(undefined);  //=> 42\n\t     *      defaultTo42('Ramda');  //=> 'Ramda'\n\t     *      defaultTo42(parseInt('string')); //=> 42\n\t     */\n\t    var defaultTo = _curry2(function defaultTo(d, v) {\n\t        return v == null || v !== v ? d : v;\n\t    });\n\t\n\t    /**\n\t     * Finds the set (i.e. no duplicates) of all elements in the first list not\n\t     * contained in the second list. Duplication is determined according to the\n\t     * value returned by applying the supplied predicate to two list elements.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Relation\n\t     * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\n\t     * @param {Function} pred A predicate used to test whether two items are equal.\n\t     * @param {Array} list1 The first list.\n\t     * @param {Array} list2 The second list.\n\t     * @return {Array} The elements in `list1` that are not in `list2`.\n\t     * @see R.difference\n\t     * @example\n\t     *\n\t     *      function cmp(x, y) => x.a === y.a;\n\t     *      var l1 = [{a: 1}, {a: 2}, {a: 3}];\n\t     *      var l2 = [{a: 3}, {a: 4}];\n\t     *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n\t     */\n\t    var differenceWith = _curry3(function differenceWith(pred, first, second) {\n\t        var out = [];\n\t        var idx = 0;\n\t        var firstLen = first.length;\n\t        while (idx < firstLen) {\n\t            if (!_containsWith(pred, first[idx], second) && !_containsWith(pred, first[idx], out)) {\n\t                out.push(first[idx]);\n\t            }\n\t            idx += 1;\n\t        }\n\t        return out;\n\t    });\n\t\n\t    /**\n\t     * Returns a new object that does not contain a `prop` property.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.10.0\n\t     * @category Object\n\t     * @sig String -> {k: v} -> {k: v}\n\t     * @param {String} prop the name of the property to dissociate\n\t     * @param {Object} obj the object to clone\n\t     * @return {Object} a new object similar to the original but without the specified property\n\t     * @see R.assoc\n\t     * @example\n\t     *\n\t     *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n\t     */\n\t    var dissoc = _curry2(function dissoc(prop, obj) {\n\t        var result = {};\n\t        for (var p in obj) {\n\t            if (p !== prop) {\n\t                result[p] = obj[p];\n\t            }\n\t        }\n\t        return result;\n\t    });\n\t\n\t    /**\n\t     * Makes a shallow clone of an object, omitting the property at the given path.\n\t     * Note that this copies and flattens prototype properties onto the new object\n\t     * as well. All non-primitive properties are copied by reference.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.11.0\n\t     * @category Object\n\t     * @sig [String] -> {k: v} -> {k: v}\n\t     * @param {Array} path the path to set\n\t     * @param {Object} obj the object to clone\n\t     * @return {Object} a new object without the property at path\n\t     * @see R.assocPath\n\t     * @example\n\t     *\n\t     *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n\t     */\n\t    var dissocPath = _curry2(function dissocPath(path, obj) {\n\t        switch (path.length) {\n\t        case 0:\n\t            return obj;\n\t        case 1:\n\t            return dissoc(path[0], obj);\n\t        default:\n\t            var head = path[0];\n\t            var tail = _slice(path, 1);\n\t            return obj[head] == null ? obj : assoc(head, dissocPath(tail, obj[head]), obj);\n\t        }\n\t    });\n\t\n\t    /**\n\t     * Divides two numbers. Equivalent to `a / b`.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Math\n\t     * @sig Number -> Number -> Number\n\t     * @param {Number} a The first value.\n\t     * @param {Number} b The second value.\n\t     * @return {Number} The result of `a / b`.\n\t     * @see R.multiply\n\t     * @example\n\t     *\n\t     *      R.divide(71, 100); //=> 0.71\n\t     *\n\t     *      var half = R.divide(R.__, 2);\n\t     *      half(42); //=> 21\n\t     *\n\t     *      var reciprocal = R.divide(1);\n\t     *      reciprocal(4);   //=> 0.25\n\t     */\n\t    var divide = _curry2(function divide(a, b) {\n\t        return a / b;\n\t    });\n\t\n\t    /**\n\t     * Returns a new list containing the last `n` elements of a given list, passing\n\t     * each value to the supplied predicate function, skipping elements while the\n\t     * predicate function returns `true`. The predicate function is passed one\n\t     * argument: *(value)*.\n\t     *\n\t     * Dispatches to the `dropWhile` method of the second argument, if present.\n\t     *\n\t     * Acts as a transducer if a transformer is given in list position.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category List\n\t     * @sig (a -> Boolean) -> [a] -> [a]\n\t     * @param {Function} fn The function called per iteration.\n\t     * @param {Array} list The collection to iterate over.\n\t     * @return {Array} A new array.\n\t     * @see R.takeWhile, R.transduce, R.addIndex\n\t     * @example\n\t     *\n\t     *      var lteTwo = x => x <= 2;\n\t     *\n\t     *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n\t     */\n\t    var dropWhile = _curry2(_dispatchable('dropWhile', _xdropWhile, function dropWhile(pred, list) {\n\t        var idx = 0;\n\t        var len = list.length;\n\t        while (idx < len && pred(list[idx])) {\n\t            idx += 1;\n\t        }\n\t        return _slice(list, idx);\n\t    }));\n\t\n\t    /**\n\t     * A function wrapping calls to the two functions in an `||` operation,\n\t     * returning the result of the first function if it is truth-y and the result\n\t     * of the second function otherwise. Note that this is short-circuited,\n\t     * meaning that the second function will not be invoked if the first returns a\n\t     * truth-y value.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.12.0\n\t     * @category Logic\n\t     * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n\t     * @param {Function} f a predicate\n\t     * @param {Function} g another predicate\n\t     * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n\t     * @see R.or\n\t     * @example\n\t     *\n\t     *      var gt10 = x => x > 10;\n\t     *      var even = x => x % 2 === 0;\n\t     *      var f = R.either(gt10, even);\n\t     *      f(101); //=> true\n\t     *      f(8); //=> true\n\t     */\n\t    var either = _curry2(function either(f, g) {\n\t        return function _either() {\n\t            return f.apply(this, arguments) || g.apply(this, arguments);\n\t        };\n\t    });\n\t\n\t    /**\n\t     * Returns the empty value of its argument's type. Ramda defines the empty\n\t     * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n\t     * types are supported if they define `<Type>.empty` and/or\n\t     * `<Type>.prototype.empty`.\n\t     *\n\t     * Dispatches to the `empty` method of the first argument, if present.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.3.0\n\t     * @category Function\n\t     * @sig a -> a\n\t     * @param {*} x\n\t     * @return {*}\n\t     * @example\n\t     *\n\t     *      R.empty(Just(42));      //=> Nothing()\n\t     *      R.empty([1, 2, 3]);     //=> []\n\t     *      R.empty('unicorns');    //=> ''\n\t     *      R.empty({x: 1, y: 2});  //=> {}\n\t     */\n\t    // else\n\t    var empty = _curry1(function empty(x) {\n\t        return x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n\t            return arguments;\n\t        }() : // else\n\t        void 0;\n\t    });\n\t\n\t    /**\n\t     * Creates a new object by recursively evolving a shallow copy of `object`,\n\t     * according to the `transformation` functions. All non-primitive properties\n\t     * are copied by reference.\n\t     *\n\t     * A `transformation` function will not be invoked if its corresponding key\n\t     * does not exist in the evolved object.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category Object\n\t     * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n\t     * @param {Object} transformations The object specifying transformation functions to apply\n\t     *        to the object.\n\t     * @param {Object} object The object to be transformed.\n\t     * @return {Object} The transformed object.\n\t     * @example\n\t     *\n\t     *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n\t     *      var transformations = {\n\t     *        firstName: R.trim,\n\t     *        lastName: R.trim, // Will not get invoked.\n\t     *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n\t     *      };\n\t     *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n\t     */\n\t    var evolve = _curry2(function evolve(transformations, object) {\n\t        var result = {};\n\t        var transformation, key, type;\n\t        for (key in object) {\n\t            transformation = transformations[key];\n\t            type = typeof transformation;\n\t            result[key] = type === 'function' ? transformation(object[key]) : type === 'object' ? evolve(transformations[key], object[key]) : object[key];\n\t        }\n\t        return result;\n\t    });\n\t\n\t    /**\n\t     * Returns the first element of the list which matches the predicate, or\n\t     * `undefined` if no element matches.\n\t     *\n\t     * Dispatches to the `find` method of the second argument, if present.\n\t     *\n\t     * Acts as a transducer if a transformer is given in list position.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig (a -> Boolean) -> [a] -> a | undefined\n\t     * @param {Function} fn The predicate function used to determine if the element is the\n\t     *        desired one.\n\t     * @param {Array} list The array to consider.\n\t     * @return {Object} The element found, or `undefined`.\n\t     * @see R.transduce\n\t     * @example\n\t     *\n\t     *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n\t     *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n\t     *      R.find(R.propEq('a', 4))(xs); //=> undefined\n\t     */\n\t    var find = _curry2(_dispatchable('find', _xfind, function find(fn, list) {\n\t        var idx = 0;\n\t        var len = list.length;\n\t        while (idx < len) {\n\t            if (fn(list[idx])) {\n\t                return list[idx];\n\t            }\n\t            idx += 1;\n\t        }\n\t    }));\n\t\n\t    /**\n\t     * Returns the index of the first element of the list which matches the\n\t     * predicate, or `-1` if no element matches.\n\t     *\n\t     * Dispatches to the `findIndex` method of the second argument, if present.\n\t     *\n\t     * Acts as a transducer if a transformer is given in list position.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.1\n\t     * @category List\n\t     * @sig (a -> Boolean) -> [a] -> Number\n\t     * @param {Function} fn The predicate function used to determine if the element is the\n\t     * desired one.\n\t     * @param {Array} list The array to consider.\n\t     * @return {Number} The index of the element found, or `-1`.\n\t     * @see R.transduce\n\t     * @example\n\t     *\n\t     *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n\t     *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n\t     *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n\t     */\n\t    var findIndex = _curry2(_dispatchable('findIndex', _xfindIndex, function findIndex(fn, list) {\n\t        var idx = 0;\n\t        var len = list.length;\n\t        while (idx < len) {\n\t            if (fn(list[idx])) {\n\t                return idx;\n\t            }\n\t            idx += 1;\n\t        }\n\t        return -1;\n\t    }));\n\t\n\t    /**\n\t     * Returns the last element of the list which matches the predicate, or\n\t     * `undefined` if no element matches.\n\t     *\n\t     * Dispatches to the `findLast` method of the second argument, if present.\n\t     *\n\t     * Acts as a transducer if a transformer is given in list position.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.1\n\t     * @category List\n\t     * @sig (a -> Boolean) -> [a] -> a | undefined\n\t     * @param {Function} fn The predicate function used to determine if the element is the\n\t     * desired one.\n\t     * @param {Array} list The array to consider.\n\t     * @return {Object} The element found, or `undefined`.\n\t     * @see R.transduce\n\t     * @example\n\t     *\n\t     *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n\t     *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n\t     *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n\t     */\n\t    var findLast = _curry2(_dispatchable('findLast', _xfindLast, function findLast(fn, list) {\n\t        var idx = list.length - 1;\n\t        while (idx >= 0) {\n\t            if (fn(list[idx])) {\n\t                return list[idx];\n\t            }\n\t            idx -= 1;\n\t        }\n\t    }));\n\t\n\t    /**\n\t     * Returns the index of the last element of the list which matches the\n\t     * predicate, or `-1` if no element matches.\n\t     *\n\t     * Dispatches to the `findLastIndex` method of the second argument, if present.\n\t     *\n\t     * Acts as a transducer if a transformer is given in list position.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.1\n\t     * @category List\n\t     * @sig (a -> Boolean) -> [a] -> Number\n\t     * @param {Function} fn The predicate function used to determine if the element is the\n\t     * desired one.\n\t     * @param {Array} list The array to consider.\n\t     * @return {Number} The index of the element found, or `-1`.\n\t     * @see R.transduce\n\t     * @example\n\t     *\n\t     *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n\t     *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n\t     *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n\t     */\n\t    var findLastIndex = _curry2(_dispatchable('findLastIndex', _xfindLastIndex, function findLastIndex(fn, list) {\n\t        var idx = list.length - 1;\n\t        while (idx >= 0) {\n\t            if (fn(list[idx])) {\n\t                return idx;\n\t            }\n\t            idx -= 1;\n\t        }\n\t        return -1;\n\t    }));\n\t\n\t    /**\n\t     * Iterate over an input `list`, calling a provided function `fn` for each\n\t     * element in the list.\n\t     *\n\t     * `fn` receives one argument: *(value)*.\n\t     *\n\t     * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n\t     * arrays), unlike the native `Array.prototype.forEach` method. For more\n\t     * details on this behavior, see:\n\t     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n\t     *\n\t     * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n\t     * the original array. In some libraries this function is named `each`.\n\t     *\n\t     * Dispatches to the `forEach` method of the second argument, if present.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.1\n\t     * @category List\n\t     * @sig (a -> *) -> [a] -> [a]\n\t     * @param {Function} fn The function to invoke. Receives one argument, `value`.\n\t     * @param {Array} list The list to iterate over.\n\t     * @return {Array} The original list.\n\t     * @see R.addIndex\n\t     * @example\n\t     *\n\t     *      var printXPlusFive = x => console.log(x + 5);\n\t     *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n\t     *      //-> 6\n\t     *      //-> 7\n\t     *      //-> 8\n\t     */\n\t    var forEach = _curry2(_checkForMethod('forEach', function forEach(fn, list) {\n\t        var len = list.length;\n\t        var idx = 0;\n\t        while (idx < len) {\n\t            fn(list[idx]);\n\t            idx += 1;\n\t        }\n\t        return list;\n\t    }));\n\t\n\t    /**\n\t     * Creates a new object out of a list key-value pairs.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.3.0\n\t     * @category List\n\t     * @sig [[k,v]] -> {k: v}\n\t     * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n\t     * @return {Object} The object made by pairing up `keys` and `values`.\n\t     * @see R.toPairs, R.pair\n\t     * @example\n\t     *\n\t     *      R.fromPairs([['a', 1], ['b', 2],  ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n\t     */\n\t    var fromPairs = _curry1(function fromPairs(pairs) {\n\t        var idx = 0;\n\t        var len = pairs.length;\n\t        var out = {};\n\t        while (idx < len) {\n\t            if (_isArray(pairs[idx]) && pairs[idx].length) {\n\t                out[pairs[idx][0]] = pairs[idx][1];\n\t            }\n\t            idx += 1;\n\t        }\n\t        return out;\n\t    });\n\t\n\t    /**\n\t     * Returns `true` if the first argument is greater than the second; `false`\n\t     * otherwise.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Relation\n\t     * @sig Ord a => a -> a -> Boolean\n\t     * @param {*} a\n\t     * @param {*} b\n\t     * @return {Boolean}\n\t     * @see R.lt\n\t     * @example\n\t     *\n\t     *      R.gt(2, 1); //=> true\n\t     *      R.gt(2, 2); //=> false\n\t     *      R.gt(2, 3); //=> false\n\t     *      R.gt('a', 'z'); //=> false\n\t     *      R.gt('z', 'a'); //=> true\n\t     */\n\t    var gt = _curry2(function gt(a, b) {\n\t        return a > b;\n\t    });\n\t\n\t    /**\n\t     * Returns `true` if the first argument is greater than or equal to the second;\n\t     * `false` otherwise.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Relation\n\t     * @sig Ord a => a -> a -> Boolean\n\t     * @param {Number} a\n\t     * @param {Number} b\n\t     * @return {Boolean}\n\t     * @see R.lte\n\t     * @example\n\t     *\n\t     *      R.gte(2, 1); //=> true\n\t     *      R.gte(2, 2); //=> true\n\t     *      R.gte(2, 3); //=> false\n\t     *      R.gte('a', 'z'); //=> false\n\t     *      R.gte('z', 'a'); //=> true\n\t     */\n\t    var gte = _curry2(function gte(a, b) {\n\t        return a >= b;\n\t    });\n\t\n\t    /**\n\t     * Returns whether or not an object has an own property with the specified name\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.7.0\n\t     * @category Object\n\t     * @sig s -> {s: x} -> Boolean\n\t     * @param {String} prop The name of the property to check for.\n\t     * @param {Object} obj The object to query.\n\t     * @return {Boolean} Whether the property exists.\n\t     * @example\n\t     *\n\t     *      var hasName = R.has('name');\n\t     *      hasName({name: 'alice'});   //=> true\n\t     *      hasName({name: 'bob'});     //=> true\n\t     *      hasName({});                //=> false\n\t     *\n\t     *      var point = {x: 0, y: 0};\n\t     *      var pointHas = R.has(R.__, point);\n\t     *      pointHas('x');  //=> true\n\t     *      pointHas('y');  //=> true\n\t     *      pointHas('z');  //=> false\n\t     */\n\t    var has = _curry2(_has);\n\t\n\t    /**\n\t     * Returns whether or not an object or its prototype chain has a property with\n\t     * the specified name\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.7.0\n\t     * @category Object\n\t     * @sig s -> {s: x} -> Boolean\n\t     * @param {String} prop The name of the property to check for.\n\t     * @param {Object} obj The object to query.\n\t     * @return {Boolean} Whether the property exists.\n\t     * @example\n\t     *\n\t     *      function Rectangle(width, height) {\n\t     *        this.width = width;\n\t     *        this.height = height;\n\t     *      }\n\t     *      Rectangle.prototype.area = function() {\n\t     *        return this.width * this.height;\n\t     *      };\n\t     *\n\t     *      var square = new Rectangle(2, 2);\n\t     *      R.hasIn('width', square);  //=> true\n\t     *      R.hasIn('area', square);  //=> true\n\t     */\n\t    var hasIn = _curry2(function hasIn(prop, obj) {\n\t        return prop in obj;\n\t    });\n\t\n\t    /**\n\t     * Returns true if its arguments are identical, false otherwise. Values are\n\t     * identical if they reference the same memory. `NaN` is identical to `NaN`;\n\t     * `0` and `-0` are not identical.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.15.0\n\t     * @category Relation\n\t     * @sig a -> a -> Boolean\n\t     * @param {*} a\n\t     * @param {*} b\n\t     * @return {Boolean}\n\t     * @example\n\t     *\n\t     *      var o = {};\n\t     *      R.identical(o, o); //=> true\n\t     *      R.identical(1, 1); //=> true\n\t     *      R.identical(1, '1'); //=> false\n\t     *      R.identical([], []); //=> false\n\t     *      R.identical(0, -0); //=> false\n\t     *      R.identical(NaN, NaN); //=> true\n\t     */\n\t    // SameValue algorithm\n\t    // Steps 1-5, 7-10\n\t    // Steps 6.b-6.e: +0 != -0\n\t    // Step 6.a: NaN == NaN\n\t    var identical = _curry2(function identical(a, b) {\n\t        // SameValue algorithm\n\t        if (a === b) {\n\t            // Steps 1-5, 7-10\n\t            // Steps 6.b-6.e: +0 != -0\n\t            return a !== 0 || 1 / a === 1 / b;\n\t        } else {\n\t            // Step 6.a: NaN == NaN\n\t            return a !== a && b !== b;\n\t        }\n\t    });\n\t\n\t    /**\n\t     * A function that does nothing but return the parameter supplied to it. Good\n\t     * as a default or placeholder function.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Function\n\t     * @sig a -> a\n\t     * @param {*} x The value to return.\n\t     * @return {*} The input value, `x`.\n\t     * @example\n\t     *\n\t     *      R.identity(1); //=> 1\n\t     *\n\t     *      var obj = {};\n\t     *      R.identity(obj) === obj; //=> true\n\t     */\n\t    var identity = _curry1(_identity);\n\t\n\t    /**\n\t     * Creates a function that will process either the `onTrue` or the `onFalse`\n\t     * function depending upon the result of the `condition` predicate.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.8.0\n\t     * @category Logic\n\t     * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n\t     * @param {Function} condition A predicate function\n\t     * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n\t     * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n\t     * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\n\t     *                    function depending upon the result of the `condition` predicate.\n\t     * @see R.unless, R.when\n\t     * @example\n\t     *\n\t     *      var incCount = R.ifElse(\n\t     *        R.has('count'),\n\t     *        R.over(R.lensProp('count'), R.inc),\n\t     *        R.assoc('count', 1)\n\t     *      );\n\t     *      incCount({});           //=> { count: 1 }\n\t     *      incCount({ count: 1 }); //=> { count: 2 }\n\t     */\n\t    var ifElse = _curry3(function ifElse(condition, onTrue, onFalse) {\n\t        return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n\t            return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n\t        });\n\t    });\n\t\n\t    /**\n\t     * Increments its argument.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category Math\n\t     * @sig Number -> Number\n\t     * @param {Number} n\n\t     * @return {Number}\n\t     * @see R.dec\n\t     * @example\n\t     *\n\t     *      R.inc(42); //=> 43\n\t     */\n\t    var inc = add(1);\n\t\n\t    /**\n\t     * Inserts the supplied element into the list, at index `index`. _Note that\n\t     * this is not destructive_: it returns a copy of the list with the changes.\n\t     * <small>No lists have been harmed in the application of this function.</small>\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.2.2\n\t     * @category List\n\t     * @sig Number -> a -> [a] -> [a]\n\t     * @param {Number} index The position to insert the element\n\t     * @param {*} elt The element to insert into the Array\n\t     * @param {Array} list The list to insert into\n\t     * @return {Array} A new Array with `elt` inserted at `index`.\n\t     * @example\n\t     *\n\t     *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n\t     */\n\t    var insert = _curry3(function insert(idx, elt, list) {\n\t        idx = idx < list.length && idx >= 0 ? idx : list.length;\n\t        var result = _slice(list);\n\t        result.splice(idx, 0, elt);\n\t        return result;\n\t    });\n\t\n\t    /**\n\t     * Inserts the sub-list into the list, at index `index`. _Note that this is not\n\t     * destructive_: it returns a copy of the list with the changes.\n\t     * <small>No lists have been harmed in the application of this function.</small>\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category List\n\t     * @sig Number -> [a] -> [a] -> [a]\n\t     * @param {Number} index The position to insert the sub-list\n\t     * @param {Array} elts The sub-list to insert into the Array\n\t     * @param {Array} list The list to insert the sub-list into\n\t     * @return {Array} A new Array with `elts` inserted starting at `index`.\n\t     * @example\n\t     *\n\t     *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n\t     */\n\t    var insertAll = _curry3(function insertAll(idx, elts, list) {\n\t        idx = idx < list.length && idx >= 0 ? idx : list.length;\n\t        return _concat(_concat(_slice(list, 0, idx), elts), _slice(list, idx));\n\t    });\n\t\n\t    /**\n\t     * Creates a new list with the separator interposed between elements.\n\t     *\n\t     * Dispatches to the `intersperse` method of the second argument, if present.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.14.0\n\t     * @category List\n\t     * @sig a -> [a] -> [a]\n\t     * @param {*} separator The element to add to the list.\n\t     * @param {Array} list The list to be interposed.\n\t     * @return {Array} The new list.\n\t     * @example\n\t     *\n\t     *      R.intersperse('n', ['ba', 'a', 'a']); //=> ['ba', 'n', 'a', 'n', 'a']\n\t     */\n\t    var intersperse = _curry2(_checkForMethod('intersperse', function intersperse(separator, list) {\n\t        var out = [];\n\t        var idx = 0;\n\t        var length = list.length;\n\t        while (idx < length) {\n\t            if (idx === length - 1) {\n\t                out.push(list[idx]);\n\t            } else {\n\t                out.push(list[idx], separator);\n\t            }\n\t            idx += 1;\n\t        }\n\t        return out;\n\t    }));\n\t\n\t    /**\n\t     * See if an object (`val`) is an instance of the supplied constructor. This\n\t     * function will check up the inheritance chain, if any.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.3.0\n\t     * @category Type\n\t     * @sig (* -> {*}) -> a -> Boolean\n\t     * @param {Object} ctor A constructor\n\t     * @param {*} val The value to test\n\t     * @return {Boolean}\n\t     * @example\n\t     *\n\t     *      R.is(Object, {}); //=> true\n\t     *      R.is(Number, 1); //=> true\n\t     *      R.is(Object, 1); //=> false\n\t     *      R.is(String, 's'); //=> true\n\t     *      R.is(String, new String('')); //=> true\n\t     *      R.is(Object, new String('')); //=> true\n\t     *      R.is(Object, 's'); //=> false\n\t     *      R.is(Number, {}); //=> false\n\t     */\n\t    var is = _curry2(function is(Ctor, val) {\n\t        return val != null && val.constructor === Ctor || val instanceof Ctor;\n\t    });\n\t\n\t    /**\n\t     * Tests whether or not an object is similar to an array.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.5.0\n\t     * @category Type\n\t     * @category List\n\t     * @sig * -> Boolean\n\t     * @param {*} x The object to test.\n\t     * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n\t     * @example\n\t     *\n\t     *      R.isArrayLike([]); //=> true\n\t     *      R.isArrayLike(true); //=> false\n\t     *      R.isArrayLike({}); //=> false\n\t     *      R.isArrayLike({length: 10}); //=> false\n\t     *      R.isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n\t     */\n\t    var isArrayLike = _curry1(function isArrayLike(x) {\n\t        if (_isArray(x)) {\n\t            return true;\n\t        }\n\t        if (!x) {\n\t            return false;\n\t        }\n\t        if (typeof x !== 'object') {\n\t            return false;\n\t        }\n\t        if (x instanceof String) {\n\t            return false;\n\t        }\n\t        if (x.nodeType === 1) {\n\t            return !!x.length;\n\t        }\n\t        if (x.length === 0) {\n\t            return true;\n\t        }\n\t        if (x.length > 0) {\n\t            return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n\t        }\n\t        return false;\n\t    });\n\t\n\t    /**\n\t     * Checks if the input value is `null` or `undefined`.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category Type\n\t     * @sig * -> Boolean\n\t     * @param {*} x The value to test.\n\t     * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n\t     * @example\n\t     *\n\t     *      R.isNil(null); //=> true\n\t     *      R.isNil(undefined); //=> true\n\t     *      R.isNil(0); //=> false\n\t     *      R.isNil([]); //=> false\n\t     */\n\t    var isNil = _curry1(function isNil(x) {\n\t        return x == null;\n\t    });\n\t\n\t    /**\n\t     * Returns a list containing the names of all the enumerable own properties of\n\t     * the supplied object.\n\t     * Note that the order of the output array is not guaranteed to be consistent\n\t     * across different JS platforms.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Object\n\t     * @sig {k: v} -> [k]\n\t     * @param {Object} obj The object to extract properties from\n\t     * @return {Array} An array of the object's own properties.\n\t     * @example\n\t     *\n\t     *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n\t     */\n\t    // cover IE < 9 keys issues\n\t    // Safari bug\n\t    var keys = function () {\n\t        // cover IE < 9 keys issues\n\t        var hasEnumBug = !{ toString: null }.propertyIsEnumerable('toString');\n\t        var nonEnumerableProps = [\n\t            'constructor',\n\t            'valueOf',\n\t            'isPrototypeOf',\n\t            'toString',\n\t            'propertyIsEnumerable',\n\t            'hasOwnProperty',\n\t            'toLocaleString'\n\t        ];\n\t        // Safari bug\n\t        var hasArgsEnumBug = function () {\n\t            'use strict';\n\t            return arguments.propertyIsEnumerable('length');\n\t        }();\n\t        var contains = function contains(list, item) {\n\t            var idx = 0;\n\t            while (idx < list.length) {\n\t                if (list[idx] === item) {\n\t                    return true;\n\t                }\n\t                idx += 1;\n\t            }\n\t            return false;\n\t        };\n\t        return typeof Object.keys === 'function' && !hasArgsEnumBug ? _curry1(function keys(obj) {\n\t            return Object(obj) !== obj ? [] : Object.keys(obj);\n\t        }) : _curry1(function keys(obj) {\n\t            if (Object(obj) !== obj) {\n\t                return [];\n\t            }\n\t            var prop, nIdx;\n\t            var ks = [];\n\t            var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n\t            for (prop in obj) {\n\t                if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n\t                    ks[ks.length] = prop;\n\t                }\n\t            }\n\t            if (hasEnumBug) {\n\t                nIdx = nonEnumerableProps.length - 1;\n\t                while (nIdx >= 0) {\n\t                    prop = nonEnumerableProps[nIdx];\n\t                    if (_has(prop, obj) && !contains(ks, prop)) {\n\t                        ks[ks.length] = prop;\n\t                    }\n\t                    nIdx -= 1;\n\t                }\n\t            }\n\t            return ks;\n\t        });\n\t    }();\n\t\n\t    /**\n\t     * Returns a list containing the names of all the properties of the supplied\n\t     * object, including prototype properties.\n\t     * Note that the order of the output array is not guaranteed to be consistent\n\t     * across different JS platforms.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.2.0\n\t     * @category Object\n\t     * @sig {k: v} -> [k]\n\t     * @param {Object} obj The object to extract properties from\n\t     * @return {Array} An array of the object's own and prototype properties.\n\t     * @example\n\t     *\n\t     *      var F = function() { this.x = 'X'; };\n\t     *      F.prototype.y = 'Y';\n\t     *      var f = new F();\n\t     *      R.keysIn(f); //=> ['x', 'y']\n\t     */\n\t    var keysIn = _curry1(function keysIn(obj) {\n\t        var prop;\n\t        var ks = [];\n\t        for (prop in obj) {\n\t            ks[ks.length] = prop;\n\t        }\n\t        return ks;\n\t    });\n\t\n\t    /**\n\t     * Returns the number of elements in the array by returning `list.length`.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.3.0\n\t     * @category List\n\t     * @sig [a] -> Number\n\t     * @param {Array} list The array to inspect.\n\t     * @return {Number} The length of the array.\n\t     * @example\n\t     *\n\t     *      R.length([]); //=> 0\n\t     *      R.length([1, 2, 3]); //=> 3\n\t     */\n\t    var length = _curry1(function length(list) {\n\t        return list != null && is(Number, list.length) ? list.length : NaN;\n\t    });\n\t\n\t    /**\n\t     * Returns `true` if the first argument is less than the second; `false`\n\t     * otherwise.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Relation\n\t     * @sig Ord a => a -> a -> Boolean\n\t     * @param {*} a\n\t     * @param {*} b\n\t     * @return {Boolean}\n\t     * @see R.gt\n\t     * @example\n\t     *\n\t     *      R.lt(2, 1); //=> false\n\t     *      R.lt(2, 2); //=> false\n\t     *      R.lt(2, 3); //=> true\n\t     *      R.lt('a', 'z'); //=> true\n\t     *      R.lt('z', 'a'); //=> false\n\t     */\n\t    var lt = _curry2(function lt(a, b) {\n\t        return a < b;\n\t    });\n\t\n\t    /**\n\t     * Returns `true` if the first argument is less than or equal to the second;\n\t     * `false` otherwise.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Relation\n\t     * @sig Ord a => a -> a -> Boolean\n\t     * @param {Number} a\n\t     * @param {Number} b\n\t     * @return {Boolean}\n\t     * @see R.gte\n\t     * @example\n\t     *\n\t     *      R.lte(2, 1); //=> false\n\t     *      R.lte(2, 2); //=> true\n\t     *      R.lte(2, 3); //=> true\n\t     *      R.lte('a', 'z'); //=> true\n\t     *      R.lte('z', 'a'); //=> false\n\t     */\n\t    var lte = _curry2(function lte(a, b) {\n\t        return a <= b;\n\t    });\n\t\n\t    /**\n\t     * The mapAccum function behaves like a combination of map and reduce; it\n\t     * applies a function to each element of a list, passing an accumulating\n\t     * parameter from left to right, and returning a final value of this\n\t     * accumulator together with the new list.\n\t     *\n\t     * The iterator function receives two arguments, *acc* and *value*, and should\n\t     * return a tuple *[acc, value]*.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.10.0\n\t     * @category List\n\t     * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n\t     * @param {Function} fn The function to be called on every element of the input `list`.\n\t     * @param {*} acc The accumulator value.\n\t     * @param {Array} list The list to iterate over.\n\t     * @return {*} The final, accumulated value.\n\t     * @see R.addIndex\n\t     * @example\n\t     *\n\t     *      var digits = ['1', '2', '3', '4'];\n\t     *      var append = (a, b) => [a + b, a + b];\n\t     *\n\t     *      R.mapAccum(append, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n\t     */\n\t    var mapAccum = _curry3(function mapAccum(fn, acc, list) {\n\t        var idx = 0;\n\t        var len = list.length;\n\t        var result = [];\n\t        var tuple = [acc];\n\t        while (idx < len) {\n\t            tuple = fn(tuple[0], list[idx]);\n\t            result[idx] = tuple[1];\n\t            idx += 1;\n\t        }\n\t        return [\n\t            tuple[0],\n\t            result\n\t        ];\n\t    });\n\t\n\t    /**\n\t     * The mapAccumRight function behaves like a combination of map and reduce; it\n\t     * applies a function to each element of a list, passing an accumulating\n\t     * parameter from right to left, and returning a final value of this\n\t     * accumulator together with the new list.\n\t     *\n\t     * Similar to `mapAccum`, except moves through the input list from the right to\n\t     * the left.\n\t     *\n\t     * The iterator function receives two arguments, *acc* and *value*, and should\n\t     * return a tuple *[acc, value]*.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.10.0\n\t     * @category List\n\t     * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n\t     * @param {Function} fn The function to be called on every element of the input `list`.\n\t     * @param {*} acc The accumulator value.\n\t     * @param {Array} list The list to iterate over.\n\t     * @return {*} The final, accumulated value.\n\t     * @see R.addIndex\n\t     * @example\n\t     *\n\t     *      var digits = ['1', '2', '3', '4'];\n\t     *      var append = (a, b) => [a + b, a + b];\n\t     *\n\t     *      R.mapAccumRight(append, 0, digits); //=> ['04321', ['04321', '0432', '043', '04']]\n\t     */\n\t    var mapAccumRight = _curry3(function mapAccumRight(fn, acc, list) {\n\t        var idx = list.length - 1;\n\t        var result = [];\n\t        var tuple = [acc];\n\t        while (idx >= 0) {\n\t            tuple = fn(tuple[0], list[idx]);\n\t            result[idx] = tuple[1];\n\t            idx -= 1;\n\t        }\n\t        return [\n\t            tuple[0],\n\t            result\n\t        ];\n\t    });\n\t\n\t    /**\n\t     * Tests a regular expression against a String. Note that this function will\n\t     * return an empty array when there are no matches. This differs from\n\t     * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n\t     * which returns `null` when there are no matches.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category String\n\t     * @sig RegExp -> String -> [String | Undefined]\n\t     * @param {RegExp} rx A regular expression.\n\t     * @param {String} str The string to match against\n\t     * @return {Array} The list of matches or empty array.\n\t     * @see R.test\n\t     * @example\n\t     *\n\t     *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n\t     *      R.match(/a/, 'b'); //=> []\n\t     *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n\t     */\n\t    var match = _curry2(function match(rx, str) {\n\t        return str.match(rx) || [];\n\t    });\n\t\n\t    /**\n\t     * mathMod behaves like the modulo operator should mathematically, unlike the\n\t     * `%` operator (and by extension, R.modulo). So while \"-17 % 5\" is -2,\n\t     * mathMod(-17, 5) is 3. mathMod requires Integer arguments, and returns NaN\n\t     * when the modulus is zero or negative.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.3.0\n\t     * @category Math\n\t     * @sig Number -> Number -> Number\n\t     * @param {Number} m The dividend.\n\t     * @param {Number} p the modulus.\n\t     * @return {Number} The result of `b mod a`.\n\t     * @example\n\t     *\n\t     *      R.mathMod(-17, 5);  //=> 3\n\t     *      R.mathMod(17, 5);   //=> 2\n\t     *      R.mathMod(17, -5);  //=> NaN\n\t     *      R.mathMod(17, 0);   //=> NaN\n\t     *      R.mathMod(17.2, 5); //=> NaN\n\t     *      R.mathMod(17, 5.3); //=> NaN\n\t     *\n\t     *      var clock = R.mathMod(R.__, 12);\n\t     *      clock(15); //=> 3\n\t     *      clock(24); //=> 0\n\t     *\n\t     *      var seventeenMod = R.mathMod(17);\n\t     *      seventeenMod(3);  //=> 2\n\t     *      seventeenMod(4);  //=> 1\n\t     *      seventeenMod(10); //=> 7\n\t     */\n\t    var mathMod = _curry2(function mathMod(m, p) {\n\t        if (!_isInteger(m)) {\n\t            return NaN;\n\t        }\n\t        if (!_isInteger(p) || p < 1) {\n\t            return NaN;\n\t        }\n\t        return (m % p + p) % p;\n\t    });\n\t\n\t    /**\n\t     * Returns the larger of its two arguments.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Relation\n\t     * @sig Ord a => a -> a -> a\n\t     * @param {*} a\n\t     * @param {*} b\n\t     * @return {*}\n\t     * @see R.maxBy, R.min\n\t     * @example\n\t     *\n\t     *      R.max(789, 123); //=> 789\n\t     *      R.max('a', 'b'); //=> 'b'\n\t     */\n\t    var max = _curry2(function max(a, b) {\n\t        return b > a ? b : a;\n\t    });\n\t\n\t    /**\n\t     * Takes a function and two values, and returns whichever value produces the\n\t     * larger result when passed to the provided function.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.8.0\n\t     * @category Relation\n\t     * @sig Ord b => (a -> b) -> a -> a -> a\n\t     * @param {Function} f\n\t     * @param {*} a\n\t     * @param {*} b\n\t     * @return {*}\n\t     * @see R.max, R.minBy\n\t     * @example\n\t     *\n\t     *      //  square :: Number -> Number\n\t     *      var square = n => n * n;\n\t     *\n\t     *      R.maxBy(square, -3, 2); //=> -3\n\t     *\n\t     *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5\n\t     *      R.reduce(R.maxBy(square), 0, []); //=> 0\n\t     */\n\t    var maxBy = _curry3(function maxBy(f, a, b) {\n\t        return f(b) > f(a) ? b : a;\n\t    });\n\t\n\t    /**\n\t     * Creates a new object with the own properties of the two provided objects. If\n\t     * a key exists in both objects, the provided function is applied to the key\n\t     * and the values associated with the key in each object, with the result being\n\t     * used as the value associated with the key in the returned object. The key\n\t     * will be excluded from the returned object if the resulting value is\n\t     * `undefined`.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since 0.19.1\n\t     * @since 0.19.0\n\t     * @category Object\n\t     * @sig (String -> a -> a -> a) -> {a} -> {a} -> {a}\n\t     * @param {Function} fn\n\t     * @param {Object} l\n\t     * @param {Object} r\n\t     * @return {Object}\n\t     * @see R.merge, R.mergeWith\n\t     * @example\n\t     *\n\t     *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n\t     *      R.mergeWithKey(concatValues,\n\t     *                     { a: true, thing: 'foo', values: [10, 20] },\n\t     *                     { b: true, thing: 'bar', values: [15, 35] });\n\t     *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n\t     */\n\t    var mergeWithKey = _curry3(function mergeWithKey(fn, l, r) {\n\t        var result = {};\n\t        var k;\n\t        for (k in l) {\n\t            if (_has(k, l)) {\n\t                result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n\t            }\n\t        }\n\t        for (k in r) {\n\t            if (_has(k, r) && !_has(k, result)) {\n\t                result[k] = r[k];\n\t            }\n\t        }\n\t        return result;\n\t    });\n\t\n\t    /**\n\t     * Returns the smaller of its two arguments.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Relation\n\t     * @sig Ord a => a -> a -> a\n\t     * @param {*} a\n\t     * @param {*} b\n\t     * @return {*}\n\t     * @see R.minBy, R.max\n\t     * @example\n\t     *\n\t     *      R.min(789, 123); //=> 123\n\t     *      R.min('a', 'b'); //=> 'a'\n\t     */\n\t    var min = _curry2(function min(a, b) {\n\t        return b < a ? b : a;\n\t    });\n\t\n\t    /**\n\t     * Takes a function and two values, and returns whichever value produces the\n\t     * smaller result when passed to the provided function.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.8.0\n\t     * @category Relation\n\t     * @sig Ord b => (a -> b) -> a -> a -> a\n\t     * @param {Function} f\n\t     * @param {*} a\n\t     * @param {*} b\n\t     * @return {*}\n\t     * @see R.min, R.maxBy\n\t     * @example\n\t     *\n\t     *      //  square :: Number -> Number\n\t     *      var square = n => n * n;\n\t     *\n\t     *      R.minBy(square, -3, 2); //=> 2\n\t     *\n\t     *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1\n\t     *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity\n\t     */\n\t    var minBy = _curry3(function minBy(f, a, b) {\n\t        return f(b) < f(a) ? b : a;\n\t    });\n\t\n\t    /**\n\t     * Divides the second parameter by the first and returns the remainder. Note\n\t     * that this function preserves the JavaScript-style behavior for modulo. For\n\t     * mathematical modulo see `mathMod`.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.1\n\t     * @category Math\n\t     * @sig Number -> Number -> Number\n\t     * @param {Number} a The value to the divide.\n\t     * @param {Number} b The pseudo-modulus\n\t     * @return {Number} The result of `b % a`.\n\t     * @see R.mathMod\n\t     * @example\n\t     *\n\t     *      R.modulo(17, 3); //=> 2\n\t     *      // JS behavior:\n\t     *      R.modulo(-17, 3); //=> -2\n\t     *      R.modulo(17, -3); //=> 2\n\t     *\n\t     *      var isOdd = R.modulo(R.__, 2);\n\t     *      isOdd(42); //=> 0\n\t     *      isOdd(21); //=> 1\n\t     */\n\t    var modulo = _curry2(function modulo(a, b) {\n\t        return a % b;\n\t    });\n\t\n\t    /**\n\t     * Multiplies two numbers. Equivalent to `a * b` but curried.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Math\n\t     * @sig Number -> Number -> Number\n\t     * @param {Number} a The first value.\n\t     * @param {Number} b The second value.\n\t     * @return {Number} The result of `a * b`.\n\t     * @see R.divide\n\t     * @example\n\t     *\n\t     *      var double = R.multiply(2);\n\t     *      var triple = R.multiply(3);\n\t     *      double(3);       //=>  6\n\t     *      triple(4);       //=> 12\n\t     *      R.multiply(2, 5);  //=> 10\n\t     */\n\t    var multiply = _curry2(function multiply(a, b) {\n\t        return a * b;\n\t    });\n\t\n\t    /**\n\t     * Wraps a function of any arity (including nullary) in a function that accepts\n\t     * exactly `n` parameters. Any extraneous parameters will not be passed to the\n\t     * supplied function.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Function\n\t     * @sig Number -> (* -> a) -> (* -> a)\n\t     * @param {Number} n The desired arity of the new function.\n\t     * @param {Function} fn The function to wrap.\n\t     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n\t     *         arity `n`.\n\t     * @example\n\t     *\n\t     *      var takesTwoArgs = (a, b) => [a, b];\n\t     *\n\t     *      takesTwoArgs.length; //=> 2\n\t     *      takesTwoArgs(1, 2); //=> [1, 2]\n\t     *\n\t     *      var takesOneArg = R.nAry(1, takesTwoArgs);\n\t     *      takesOneArg.length; //=> 1\n\t     *      // Only `n` arguments are passed to the wrapped function\n\t     *      takesOneArg(1, 2); //=> [1, undefined]\n\t     */\n\t    var nAry = _curry2(function nAry(n, fn) {\n\t        switch (n) {\n\t        case 0:\n\t            return function () {\n\t                return fn.call(this);\n\t            };\n\t        case 1:\n\t            return function (a0) {\n\t                return fn.call(this, a0);\n\t            };\n\t        case 2:\n\t            return function (a0, a1) {\n\t                return fn.call(this, a0, a1);\n\t            };\n\t        case 3:\n\t            return function (a0, a1, a2) {\n\t                return fn.call(this, a0, a1, a2);\n\t            };\n\t        case 4:\n\t            return function (a0, a1, a2, a3) {\n\t                return fn.call(this, a0, a1, a2, a3);\n\t            };\n\t        case 5:\n\t            return function (a0, a1, a2, a3, a4) {\n\t                return fn.call(this, a0, a1, a2, a3, a4);\n\t            };\n\t        case 6:\n\t            return function (a0, a1, a2, a3, a4, a5) {\n\t                return fn.call(this, a0, a1, a2, a3, a4, a5);\n\t            };\n\t        case 7:\n\t            return function (a0, a1, a2, a3, a4, a5, a6) {\n\t                return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n\t            };\n\t        case 8:\n\t            return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n\t                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n\t            };\n\t        case 9:\n\t            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n\t                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n\t            };\n\t        case 10:\n\t            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n\t                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n\t            };\n\t        default:\n\t            throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n\t        }\n\t    });\n\t\n\t    /**\n\t     * Negates its argument.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category Math\n\t     * @sig Number -> Number\n\t     * @param {Number} n\n\t     * @return {Number}\n\t     * @example\n\t     *\n\t     *      R.negate(42); //=> -42\n\t     */\n\t    var negate = _curry1(function negate(n) {\n\t        return -n;\n\t    });\n\t\n\t    /**\n\t     * Returns `true` if no elements of the list match the predicate, `false`\n\t     * otherwise.\n\t     *\n\t     * Dispatches to the `any` method of the second argument, if present.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.12.0\n\t     * @category List\n\t     * @sig (a -> Boolean) -> [a] -> Boolean\n\t     * @param {Function} fn The predicate function.\n\t     * @param {Array} list The array to consider.\n\t     * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n\t     * @see R.all, R.any\n\t     * @example\n\t     *\n\t     *      var isEven = n => n % 2 === 0;\n\t     *\n\t     *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n\t     *      R.none(isEven, [1, 3, 5, 7, 8, 11]); //=> false\n\t     */\n\t    var none = _curry2(_complement(_dispatchable('any', _xany, any)));\n\t\n\t    /**\n\t     * A function that returns the `!` of its argument. It will return `true` when\n\t     * passed false-y value, and `false` when passed a truth-y one.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Logic\n\t     * @sig * -> Boolean\n\t     * @param {*} a any value\n\t     * @return {Boolean} the logical inverse of passed argument.\n\t     * @see R.complement\n\t     * @example\n\t     *\n\t     *      R.not(true); //=> false\n\t     *      R.not(false); //=> true\n\t     *      R.not(0); => true\n\t     *      R.not(1); => false\n\t     */\n\t    var not = _curry1(function not(a) {\n\t        return !a;\n\t    });\n\t\n\t    /**\n\t     * Returns the nth element of the given list or string. If n is negative the\n\t     * element at index length + n is returned.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig Number -> [a] -> a | Undefined\n\t     * @sig Number -> String -> String\n\t     * @param {Number} offset\n\t     * @param {*} list\n\t     * @return {*}\n\t     * @example\n\t     *\n\t     *      var list = ['foo', 'bar', 'baz', 'quux'];\n\t     *      R.nth(1, list); //=> 'bar'\n\t     *      R.nth(-1, list); //=> 'quux'\n\t     *      R.nth(-99, list); //=> undefined\n\t     *\n\t     *      R.nth('abc', 2); //=> 'c'\n\t     *      R.nth('abc', 3); //=> ''\n\t     */\n\t    var nth = _curry2(function nth(offset, list) {\n\t        var idx = offset < 0 ? list.length + offset : offset;\n\t        return _isString(list) ? list.charAt(idx) : list[idx];\n\t    });\n\t\n\t    /**\n\t     * Returns a function which returns its nth argument.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category Function\n\t     * @sig Number -> *... -> *\n\t     * @param {Number} n\n\t     * @return {Function}\n\t     * @example\n\t     *\n\t     *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n\t     *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n\t     */\n\t    var nthArg = _curry1(function nthArg(n) {\n\t        return function () {\n\t            return nth(n, arguments);\n\t        };\n\t    });\n\t\n\t    /**\n\t     * Creates an object containing a single key:value pair.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.18.0\n\t     * @category Object\n\t     * @sig String -> a -> {String:a}\n\t     * @param {String} key\n\t     * @param {*} val\n\t     * @return {Object}\n\t     * @see R.pair\n\t     * @example\n\t     *\n\t     *      var matchPhrases = R.compose(\n\t     *        R.objOf('must'),\n\t     *        R.map(R.objOf('match_phrase'))\n\t     *      );\n\t     *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n\t     */\n\t    var objOf = _curry2(function objOf(key, val) {\n\t        var obj = {};\n\t        obj[key] = val;\n\t        return obj;\n\t    });\n\t\n\t    /**\n\t     * Returns a singleton array containing the value provided.\n\t     *\n\t     * Note this `of` is different from the ES6 `of`; See\n\t     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.3.0\n\t     * @category Function\n\t     * @sig a -> [a]\n\t     * @param {*} x any value\n\t     * @return {Array} An array wrapping `x`.\n\t     * @example\n\t     *\n\t     *      R.of(null); //=> [null]\n\t     *      R.of([42]); //=> [[42]]\n\t     */\n\t    var of = _curry1(_of);\n\t\n\t    /**\n\t     * Accepts a function `fn` and returns a function that guards invocation of\n\t     * `fn` such that `fn` can only ever be called once, no matter how many times\n\t     * the returned function is invoked. The first value calculated is returned in\n\t     * subsequent invocations.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Function\n\t     * @sig (a... -> b) -> (a... -> b)\n\t     * @param {Function} fn The function to wrap in a call-only-once wrapper.\n\t     * @return {Function} The wrapped function.\n\t     * @example\n\t     *\n\t     *      var addOneOnce = R.once(x => x + 1);\n\t     *      addOneOnce(10); //=> 11\n\t     *      addOneOnce(addOneOnce(50)); //=> 11\n\t     */\n\t    var once = _curry1(function once(fn) {\n\t        var called = false;\n\t        var result;\n\t        return _arity(fn.length, function () {\n\t            if (called) {\n\t                return result;\n\t            }\n\t            called = true;\n\t            result = fn.apply(this, arguments);\n\t            return result;\n\t        });\n\t    });\n\t\n\t    /**\n\t     * Returns `true` if one or both of its arguments are `true`. Returns `false`\n\t     * if both arguments are `false`.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Logic\n\t     * @sig * -> * -> *\n\t     * @param {Boolean} a A boolean value\n\t     * @param {Boolean} b A boolean value\n\t     * @return {Boolean} `true` if one or both arguments are `true`, `false` otherwise\n\t     * @see R.either\n\t     * @example\n\t     *\n\t     *      R.or(true, true); //=> true\n\t     *      R.or(true, false); //=> true\n\t     *      R.or(false, true); //=> true\n\t     *      R.or(false, false); //=> false\n\t     */\n\t    var or = _curry2(function or(a, b) {\n\t        return a || b;\n\t    });\n\t\n\t    /**\n\t     * Returns the result of \"setting\" the portion of the given data structure\n\t     * focused by the given lens to the result of applying the given function to\n\t     * the focused value.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.16.0\n\t     * @category Object\n\t     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n\t     * @sig Lens s a -> (a -> a) -> s -> s\n\t     * @param {Lens} lens\n\t     * @param {*} v\n\t     * @param {*} x\n\t     * @return {*}\n\t     * @see R.prop, R.lensIndex, R.lensProp\n\t     * @example\n\t     *\n\t     *      var headLens = R.lensIndex(0);\n\t     *\n\t     *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n\t     */\n\t    var over = function () {\n\t        var Identity = function (x) {\n\t            return {\n\t                value: x,\n\t                map: function (f) {\n\t                    return Identity(f(x));\n\t                }\n\t            };\n\t        };\n\t        return _curry3(function over(lens, f, x) {\n\t            return lens(function (y) {\n\t                return Identity(f(y));\n\t            })(x).value;\n\t        });\n\t    }();\n\t\n\t    /**\n\t     * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.18.0\n\t     * @category List\n\t     * @sig a -> b -> (a,b)\n\t     * @param {*} fst\n\t     * @param {*} snd\n\t     * @return {Array}\n\t     * @see R.createMapEntry, R.of\n\t     * @example\n\t     *\n\t     *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n\t     */\n\t    var pair = _curry2(function pair(fst, snd) {\n\t        return [\n\t            fst,\n\t            snd\n\t        ];\n\t    });\n\t\n\t    /**\n\t     * Retrieve the value at a given path.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.2.0\n\t     * @category Object\n\t     * @sig [String] -> {k: v} -> v | Undefined\n\t     * @param {Array} path The path to use.\n\t     * @param {Object} obj The object to retrieve the nested property from.\n\t     * @return {*} The data at `path`.\n\t     * @example\n\t     *\n\t     *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n\t     *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n\t     */\n\t    var path = _curry2(function path(paths, obj) {\n\t        var val = obj;\n\t        var idx = 0;\n\t        while (idx < paths.length) {\n\t            if (val == null) {\n\t                return;\n\t            }\n\t            val = val[paths[idx]];\n\t            idx += 1;\n\t        }\n\t        return val;\n\t    });\n\t\n\t    /**\n\t     * If the given, non-null object has a value at the given path, returns the\n\t     * value at that path. Otherwise returns the provided default value.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.18.0\n\t     * @category Object\n\t     * @sig a -> [String] -> Object -> a\n\t     * @param {*} d The default value.\n\t     * @param {Array} p The path to use.\n\t     * @param {Object} obj The object to retrieve the nested property from.\n\t     * @return {*} The data at `path` of the supplied object or the default value.\n\t     * @example\n\t     *\n\t     *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n\t     *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n\t     */\n\t    var pathOr = _curry3(function pathOr(d, p, obj) {\n\t        return defaultTo(d, path(p, obj));\n\t    });\n\t\n\t    /**\n\t     * Returns `true` if the specified object property at given path satisfies the\n\t     * given predicate; `false` otherwise.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since 0.19.1\n\t     * @since 0.19.0\n\t     * @category Logic\n\t     * @sig (a -> Boolean) -> [String] -> Object -> Boolean\n\t     * @param {Function} pred\n\t     * @param {Array} propPath\n\t     * @param {*} obj\n\t     * @return {Boolean}\n\t     * @see R.propSatisfies, R.path\n\t     * @example\n\t     *\n\t     *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\n\t     */\n\t    var pathSatisfies = _curry3(function pathSatisfies(pred, propPath, obj) {\n\t        return propPath.length > 0 && pred(path(propPath, obj));\n\t    });\n\t\n\t    /**\n\t     * Returns a partial copy of an object containing only the keys specified. If\n\t     * the key does not exist, the property is ignored.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Object\n\t     * @sig [k] -> {k: v} -> {k: v}\n\t     * @param {Array} names an array of String property names to copy onto a new object\n\t     * @param {Object} obj The object to copy from\n\t     * @return {Object} A new object with only properties from `names` on it.\n\t     * @see R.omit, R.props\n\t     * @example\n\t     *\n\t     *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n\t     *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n\t     */\n\t    var pick = _curry2(function pick(names, obj) {\n\t        var result = {};\n\t        var idx = 0;\n\t        while (idx < names.length) {\n\t            if (names[idx] in obj) {\n\t                result[names[idx]] = obj[names[idx]];\n\t            }\n\t            idx += 1;\n\t        }\n\t        return result;\n\t    });\n\t\n\t    /**\n\t     * Similar to `pick` except that this one includes a `key: undefined` pair for\n\t     * properties that don't exist.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Object\n\t     * @sig [k] -> {k: v} -> {k: v}\n\t     * @param {Array} names an array of String property names to copy onto a new object\n\t     * @param {Object} obj The object to copy from\n\t     * @return {Object} A new object with only properties from `names` on it.\n\t     * @see R.pick\n\t     * @example\n\t     *\n\t     *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n\t     *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n\t     */\n\t    var pickAll = _curry2(function pickAll(names, obj) {\n\t        var result = {};\n\t        var idx = 0;\n\t        var len = names.length;\n\t        while (idx < len) {\n\t            var name = names[idx];\n\t            result[name] = obj[name];\n\t            idx += 1;\n\t        }\n\t        return result;\n\t    });\n\t\n\t    /**\n\t     * Returns a partial copy of an object containing only the keys that satisfy\n\t     * the supplied predicate.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.8.0\n\t     * @category Object\n\t     * @sig (v, k -> Boolean) -> {k: v} -> {k: v}\n\t     * @param {Function} pred A predicate to determine whether or not a key\n\t     *        should be included on the output object.\n\t     * @param {Object} obj The object to copy from\n\t     * @return {Object} A new object with only properties that satisfy `pred`\n\t     *         on it.\n\t     * @see R.pick, R.filter\n\t     * @example\n\t     *\n\t     *      var isUpperCase = (val, key) => key.toUpperCase() === key;\n\t     *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n\t     */\n\t    var pickBy = _curry2(function pickBy(test, obj) {\n\t        var result = {};\n\t        for (var prop in obj) {\n\t            if (test(obj[prop], prop, obj)) {\n\t                result[prop] = obj[prop];\n\t            }\n\t        }\n\t        return result;\n\t    });\n\t\n\t    /**\n\t     * Returns a new list with the given element at the front, followed by the\n\t     * contents of the list.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig a -> [a] -> [a]\n\t     * @param {*} el The item to add to the head of the output list.\n\t     * @param {Array} list The array to add to the tail of the output list.\n\t     * @return {Array} A new array.\n\t     * @see R.append\n\t     * @example\n\t     *\n\t     *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n\t     */\n\t    var prepend = _curry2(function prepend(el, list) {\n\t        return _concat([el], list);\n\t    });\n\t\n\t    /**\n\t     * Returns a function that when supplied an object returns the indicated\n\t     * property of that object, if it exists.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Object\n\t     * @sig s -> {s: a} -> a | Undefined\n\t     * @param {String} p The property name\n\t     * @param {Object} obj The object to query\n\t     * @return {*} The value at `obj.p`.\n\t     * @example\n\t     *\n\t     *      R.prop('x', {x: 100}); //=> 100\n\t     *      R.prop('x', {}); //=> undefined\n\t     */\n\t    var prop = _curry2(function prop(p, obj) {\n\t        return obj[p];\n\t    });\n\t\n\t    /**\n\t     * If the given, non-null object has an own property with the specified name,\n\t     * returns the value of that property. Otherwise returns the provided default\n\t     * value.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.6.0\n\t     * @category Object\n\t     * @sig a -> String -> Object -> a\n\t     * @param {*} val The default value.\n\t     * @param {String} p The name of the property to return.\n\t     * @param {Object} obj The object to query.\n\t     * @return {*} The value of given property of the supplied object or the default value.\n\t     * @example\n\t     *\n\t     *      var alice = {\n\t     *        name: 'ALICE',\n\t     *        age: 101\n\t     *      };\n\t     *      var favorite = R.prop('favoriteLibrary');\n\t     *      var favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n\t     *\n\t     *      favorite(alice);  //=> undefined\n\t     *      favoriteWithDefault(alice);  //=> 'Ramda'\n\t     */\n\t    var propOr = _curry3(function propOr(val, p, obj) {\n\t        return obj != null && _has(p, obj) ? obj[p] : val;\n\t    });\n\t\n\t    /**\n\t     * Returns `true` if the specified object property satisfies the given\n\t     * predicate; `false` otherwise.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.16.0\n\t     * @category Logic\n\t     * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n\t     * @param {Function} pred\n\t     * @param {String} name\n\t     * @param {*} obj\n\t     * @return {Boolean}\n\t     * @see R.propEq, R.propIs\n\t     * @example\n\t     *\n\t     *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n\t     */\n\t    var propSatisfies = _curry3(function propSatisfies(pred, name, obj) {\n\t        return pred(obj[name]);\n\t    });\n\t\n\t    /**\n\t     * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n\t     * order.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Object\n\t     * @sig [k] -> {k: v} -> [v]\n\t     * @param {Array} ps The property names to fetch\n\t     * @param {Object} obj The object to query\n\t     * @return {Array} The corresponding values or partially applied function.\n\t     * @example\n\t     *\n\t     *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n\t     *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n\t     *\n\t     *      var fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n\t     *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n\t     */\n\t    var props = _curry2(function props(ps, obj) {\n\t        var len = ps.length;\n\t        var out = [];\n\t        var idx = 0;\n\t        while (idx < len) {\n\t            out[idx] = obj[ps[idx]];\n\t            idx += 1;\n\t        }\n\t        return out;\n\t    });\n\t\n\t    /**\n\t     * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig Number -> Number -> [Number]\n\t     * @param {Number} from The first number in the list.\n\t     * @param {Number} to One more than the last number in the list.\n\t     * @return {Array} The list of numbers in tthe set `[a, b)`.\n\t     * @example\n\t     *\n\t     *      R.range(1, 5);    //=> [1, 2, 3, 4]\n\t     *      R.range(50, 53);  //=> [50, 51, 52]\n\t     */\n\t    var range = _curry2(function range(from, to) {\n\t        if (!(_isNumber(from) && _isNumber(to))) {\n\t            throw new TypeError('Both arguments to range must be numbers');\n\t        }\n\t        var result = [];\n\t        var n = from;\n\t        while (n < to) {\n\t            result.push(n);\n\t            n += 1;\n\t        }\n\t        return result;\n\t    });\n\t\n\t    /**\n\t     * Returns a single item by iterating through the list, successively calling\n\t     * the iterator function and passing it an accumulator value and the current\n\t     * value from the array, and then passing the result to the next call.\n\t     *\n\t     * Similar to `reduce`, except moves through the input list from the right to\n\t     * the left.\n\t     *\n\t     * The iterator function receives two values: *(acc, value)*\n\t     *\n\t     * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\n\t     * arrays), unlike the native `Array.prototype.reduce` method. For more details\n\t     * on this behavior, see:\n\t     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig (a,b -> a) -> a -> [b] -> a\n\t     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n\t     *        current element from the array.\n\t     * @param {*} acc The accumulator value.\n\t     * @param {Array} list The list to iterate over.\n\t     * @return {*} The final, accumulated value.\n\t     * @see R.addIndex\n\t     * @example\n\t     *\n\t     *      var pairs = [ ['a', 1], ['b', 2], ['c', 3] ];\n\t     *      var flattenPairs = (acc, pair) => acc.concat(pair);\n\t     *\n\t     *      R.reduceRight(flattenPairs, [], pairs); //=> [ 'c', 3, 'b', 2, 'a', 1 ]\n\t     */\n\t    var reduceRight = _curry3(function reduceRight(fn, acc, list) {\n\t        var idx = list.length - 1;\n\t        while (idx >= 0) {\n\t            acc = fn(acc, list[idx]);\n\t            idx -= 1;\n\t        }\n\t        return acc;\n\t    });\n\t\n\t    /**\n\t     * Returns a value wrapped to indicate that it is the final value of the reduce\n\t     * and transduce functions. The returned value should be considered a black\n\t     * box: the internal structure is not guaranteed to be stable.\n\t     *\n\t     * Note: this optimization is unavailable to functions not explicitly listed\n\t     * above. For instance, it is not currently supported by reduceRight.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.15.0\n\t     * @category List\n\t     * @sig a -> *\n\t     * @param {*} x The final value of the reduce.\n\t     * @return {*} The wrapped value.\n\t     * @see R.reduce, R.transduce\n\t     * @example\n\t     *\n\t     *      R.reduce(\n\t     *        R.pipe(R.add, R.when(R.gte(R.__, 10), R.reduced)),\n\t     *        0,\n\t     *        [1, 2, 3, 4, 5]) // 10\n\t     */\n\t    var reduced = _curry1(_reduced);\n\t\n\t    /**\n\t     * Removes the sub-list of `list` starting at index `start` and containing\n\t     * `count` elements. _Note that this is not destructive_: it returns a copy of\n\t     * the list with the changes.\n\t     * <small>No lists have been harmed in the application of this function.</small>\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.2.2\n\t     * @category List\n\t     * @sig Number -> Number -> [a] -> [a]\n\t     * @param {Number} start The position to start removing elements\n\t     * @param {Number} count The number of elements to remove\n\t     * @param {Array} list The list to remove from\n\t     * @return {Array} A new Array with `count` elements from `start` removed.\n\t     * @example\n\t     *\n\t     *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n\t     */\n\t    var remove = _curry3(function remove(start, count, list) {\n\t        return _concat(_slice(list, 0, Math.min(start, list.length)), _slice(list, Math.min(list.length, start + count)));\n\t    });\n\t\n\t    /**\n\t     * Replace a substring or regex match in a string with a replacement.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.7.0\n\t     * @category String\n\t     * @sig RegExp|String -> String -> String -> String\n\t     * @param {RegExp|String} pattern A regular expression or a substring to match.\n\t     * @param {String} replacement The string to replace the matches with.\n\t     * @param {String} str The String to do the search and replacement in.\n\t     * @return {String} The result.\n\t     * @example\n\t     *\n\t     *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n\t     *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n\t     *\n\t     *      // Use the \"g\" (global) flag to replace all occurrences:\n\t     *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n\t     */\n\t    var replace = _curry3(function replace(regex, replacement, str) {\n\t        return str.replace(regex, replacement);\n\t    });\n\t\n\t    /**\n\t     * Returns a new list or string with the elements or characters in reverse\n\t     * order.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig [a] -> [a]\n\t     * @sig String -> String\n\t     * @param {Array|String} list\n\t     * @return {Array|String}\n\t     * @example\n\t     *\n\t     *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n\t     *      R.reverse([1, 2]);     //=> [2, 1]\n\t     *      R.reverse([1]);        //=> [1]\n\t     *      R.reverse([]);         //=> []\n\t     *\n\t     *      R.reverse('abc');      //=> 'cba'\n\t     *      R.reverse('ab');       //=> 'ba'\n\t     *      R.reverse('a');        //=> 'a'\n\t     *      R.reverse('');         //=> ''\n\t     */\n\t    var reverse = _curry1(function reverse(list) {\n\t        return _isString(list) ? list.split('').reverse().join('') : _slice(list).reverse();\n\t    });\n\t\n\t    /**\n\t     * Scan is similar to reduce, but returns a list of successively reduced values\n\t     * from the left\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.10.0\n\t     * @category List\n\t     * @sig (a,b -> a) -> a -> [b] -> [a]\n\t     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n\t     *        current element from the array\n\t     * @param {*} acc The accumulator value.\n\t     * @param {Array} list The list to iterate over.\n\t     * @return {Array} A list of all intermediately reduced values.\n\t     * @example\n\t     *\n\t     *      var numbers = [1, 2, 3, 4];\n\t     *      var factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n\t     */\n\t    var scan = _curry3(function scan(fn, acc, list) {\n\t        var idx = 0;\n\t        var len = list.length;\n\t        var result = [acc];\n\t        while (idx < len) {\n\t            acc = fn(acc, list[idx]);\n\t            result[idx + 1] = acc;\n\t            idx += 1;\n\t        }\n\t        return result;\n\t    });\n\t\n\t    /**\n\t     * Returns the result of \"setting\" the portion of the given data structure\n\t     * focused by the given lens to the given value.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.16.0\n\t     * @category Object\n\t     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n\t     * @sig Lens s a -> a -> s -> s\n\t     * @param {Lens} lens\n\t     * @param {*} v\n\t     * @param {*} x\n\t     * @return {*}\n\t     * @see R.prop, R.lensIndex, R.lensProp\n\t     * @example\n\t     *\n\t     *      var xLens = R.lensProp('x');\n\t     *\n\t     *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n\t     *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n\t     */\n\t    var set = _curry3(function set(lens, v, x) {\n\t        return over(lens, always(v), x);\n\t    });\n\t\n\t    /**\n\t     * Returns the elements of the given list or string (or object with a `slice`\n\t     * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n\t     *\n\t     * Dispatches to the `slice` method of the third argument, if present.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.4\n\t     * @category List\n\t     * @sig Number -> Number -> [a] -> [a]\n\t     * @sig Number -> Number -> String -> String\n\t     * @param {Number} fromIndex The start index (inclusive).\n\t     * @param {Number} toIndex The end index (exclusive).\n\t     * @param {*} list\n\t     * @return {*}\n\t     * @example\n\t     *\n\t     *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n\t     *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n\t     *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n\t     *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n\t     *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n\t     */\n\t    var slice = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n\t        return Array.prototype.slice.call(list, fromIndex, toIndex);\n\t    }));\n\t\n\t    /**\n\t     * Returns a copy of the list, sorted according to the comparator function,\n\t     * which should accept two values at a time and return a negative number if the\n\t     * first value is smaller, a positive number if it's larger, and zero if they\n\t     * are equal. Please note that this is a **copy** of the list. It does not\n\t     * modify the original.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig (a,a -> Number) -> [a] -> [a]\n\t     * @param {Function} comparator A sorting function :: a -> b -> Int\n\t     * @param {Array} list The list to sort\n\t     * @return {Array} a new array with its elements sorted by the comparator function.\n\t     * @example\n\t     *\n\t     *      var diff = function(a, b) { return a - b; };\n\t     *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n\t     */\n\t    var sort = _curry2(function sort(comparator, list) {\n\t        return _slice(list).sort(comparator);\n\t    });\n\t\n\t    /**\n\t     * Sorts the list according to the supplied function.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Relation\n\t     * @sig Ord b => (a -> b) -> [a] -> [a]\n\t     * @param {Function} fn\n\t     * @param {Array} list The list to sort.\n\t     * @return {Array} A new list sorted by the keys generated by `fn`.\n\t     * @example\n\t     *\n\t     *      var sortByFirstItem = R.sortBy(R.prop(0));\n\t     *      var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n\t     *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];\n\t     *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n\t     *      var alice = {\n\t     *        name: 'ALICE',\n\t     *        age: 101\n\t     *      };\n\t     *      var bob = {\n\t     *        name: 'Bob',\n\t     *        age: -10\n\t     *      };\n\t     *      var clara = {\n\t     *        name: 'clara',\n\t     *        age: 314.159\n\t     *      };\n\t     *      var people = [clara, bob, alice];\n\t     *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n\t     */\n\t    var sortBy = _curry2(function sortBy(fn, list) {\n\t        return _slice(list).sort(function (a, b) {\n\t            var aa = fn(a);\n\t            var bb = fn(b);\n\t            return aa < bb ? -1 : aa > bb ? 1 : 0;\n\t        });\n\t    });\n\t\n\t    /**\n\t     * Splits a given list or string at a given index.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since 0.19.1\n\t     * @since 0.19.0\n\t     * @category List\n\t     * @sig Number -> [a] -> [[a], [a]]\n\t     * @sig Number -> String -> [String, String]\n\t     * @param {Number} index The index where the array/string is split.\n\t     * @param {Array|String} array The array/string to be split.\n\t     * @return {Array}\n\t     * @example\n\t     *\n\t     *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n\t     *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n\t     *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n\t     */\n\t    var splitAt = _curry2(function splitAt(index, array) {\n\t        return [\n\t            slice(0, index, array),\n\t            slice(index, length(array), array)\n\t        ];\n\t    });\n\t\n\t    /**\n\t     * Splits a collection into slices of the specified length.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.16.0\n\t     * @category List\n\t     * @sig Number -> [a] -> [[a]]\n\t     * @sig Number -> String -> [String]\n\t     * @param {Number} n\n\t     * @param {Array} list\n\t     * @return {Array}\n\t     * @example\n\t     *\n\t     *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n\t     *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n\t     */\n\t    var splitEvery = _curry2(function splitEvery(n, list) {\n\t        if (n <= 0) {\n\t            throw new Error('First argument to splitEvery must be a positive integer');\n\t        }\n\t        var result = [];\n\t        var idx = 0;\n\t        while (idx < list.length) {\n\t            result.push(slice(idx, idx += n, list));\n\t        }\n\t        return result;\n\t    });\n\t\n\t    /**\n\t     * Takes a list and a predicate and returns a pair of lists with the following properties:\n\t     *\n\t     *  - the result of concatenating the two output lists is equivalent to the input list;\n\t     *  - none of the elements of the first output list satisfies the predicate; and\n\t     *  - if the second output list is non-empty, its first element satisfies the predicate.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since 0.19.1\n\t     * @since 0.19.0\n\t     * @category List\n\t     * @sig (a -> Boolean) -> [a] -> [[a], [a]]\n\t     * @param {Function} pred The predicate that determines where the array is split.\n\t     * @param {Array} list The array to be split.\n\t     * @return {Array}\n\t     * @example\n\t     *\n\t     *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]\n\t     */\n\t    var splitWhen = _curry2(function splitWhen(pred, list) {\n\t        var idx = 0;\n\t        var len = list.length;\n\t        var prefix = [];\n\t        while (idx < len && !pred(list[idx])) {\n\t            prefix.push(list[idx]);\n\t            idx += 1;\n\t        }\n\t        return [\n\t            prefix,\n\t            _slice(list, idx)\n\t        ];\n\t    });\n\t\n\t    /**\n\t     * Subtracts two numbers. Equivalent to `a - b` but curried.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Math\n\t     * @sig Number -> Number -> Number\n\t     * @param {Number} a The first value.\n\t     * @param {Number} b The second value.\n\t     * @return {Number} The result of `a - b`.\n\t     * @see R.add\n\t     * @example\n\t     *\n\t     *      R.subtract(10, 8); //=> 2\n\t     *\n\t     *      var minus5 = R.subtract(R.__, 5);\n\t     *      minus5(17); //=> 12\n\t     *\n\t     *      var complementaryAngle = R.subtract(90);\n\t     *      complementaryAngle(30); //=> 60\n\t     *      complementaryAngle(72); //=> 18\n\t     */\n\t    var subtract = _curry2(function subtract(a, b) {\n\t        return a - b;\n\t    });\n\t\n\t    /**\n\t     * Returns all but the first element of the given list or string (or object\n\t     * with a `tail` method).\n\t     *\n\t     * Dispatches to the `slice` method of the first argument, if present.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig [a] -> [a]\n\t     * @sig String -> String\n\t     * @param {*} list\n\t     * @return {*}\n\t     * @see R.head, R.init, R.last\n\t     * @example\n\t     *\n\t     *      R.tail([1, 2, 3]);  //=> [2, 3]\n\t     *      R.tail([1, 2]);     //=> [2]\n\t     *      R.tail([1]);        //=> []\n\t     *      R.tail([]);         //=> []\n\t     *\n\t     *      R.tail('abc');  //=> 'bc'\n\t     *      R.tail('ab');   //=> 'b'\n\t     *      R.tail('a');    //=> ''\n\t     *      R.tail('');     //=> ''\n\t     */\n\t    var tail = _checkForMethod('tail', slice(1, Infinity));\n\t\n\t    /**\n\t     * Returns the first `n` elements of the given list, string, or\n\t     * transducer/transformer (or object with a `take` method).\n\t     *\n\t     * Dispatches to the `take` method of the second argument, if present.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig Number -> [a] -> [a]\n\t     * @sig Number -> String -> String\n\t     * @param {Number} n\n\t     * @param {*} list\n\t     * @return {*}\n\t     * @see R.drop\n\t     * @example\n\t     *\n\t     *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n\t     *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n\t     *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n\t     *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n\t     *      R.take(3, 'ramda');               //=> 'ram'\n\t     *\n\t     *      var personnel = [\n\t     *        'Dave Brubeck',\n\t     *        'Paul Desmond',\n\t     *        'Eugene Wright',\n\t     *        'Joe Morello',\n\t     *        'Gerry Mulligan',\n\t     *        'Bob Bates',\n\t     *        'Joe Dodge',\n\t     *        'Ron Crotty'\n\t     *      ];\n\t     *\n\t     *      var takeFive = R.take(5);\n\t     *      takeFive(personnel);\n\t     *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n\t     */\n\t    var take = _curry2(_dispatchable('take', _xtake, function take(n, xs) {\n\t        return slice(0, n < 0 ? Infinity : n, xs);\n\t    }));\n\t\n\t    /**\n\t     * Returns a new list containing the last `n` elements of a given list, passing\n\t     * each value to the supplied predicate function, and terminating when the\n\t     * predicate function returns `false`. Excludes the element that caused the\n\t     * predicate function to fail. The predicate function is passed one argument:\n\t     * *(value)*.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.16.0\n\t     * @category List\n\t     * @sig (a -> Boolean) -> [a] -> [a]\n\t     * @param {Function} fn The function called per iteration.\n\t     * @param {Array} list The collection to iterate over.\n\t     * @return {Array} A new array.\n\t     * @see R.dropLastWhile, R.addIndex\n\t     * @example\n\t     *\n\t     *      var isNotOne = x => x !== 1;\n\t     *\n\t     *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n\t     */\n\t    var takeLastWhile = _curry2(function takeLastWhile(fn, list) {\n\t        var idx = list.length - 1;\n\t        while (idx >= 0 && fn(list[idx])) {\n\t            idx -= 1;\n\t        }\n\t        return _slice(list, idx + 1, Infinity);\n\t    });\n\t\n\t    /**\n\t     * Returns a new list containing the first `n` elements of a given list,\n\t     * passing each value to the supplied predicate function, and terminating when\n\t     * the predicate function returns `false`. Excludes the element that caused the\n\t     * predicate function to fail. The predicate function is passed one argument:\n\t     * *(value)*.\n\t     *\n\t     * Dispatches to the `takeWhile` method of the second argument, if present.\n\t     *\n\t     * Acts as a transducer if a transformer is given in list position.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig (a -> Boolean) -> [a] -> [a]\n\t     * @param {Function} fn The function called per iteration.\n\t     * @param {Array} list The collection to iterate over.\n\t     * @return {Array} A new array.\n\t     * @see R.dropWhile, R.transduce, R.addIndex\n\t     * @example\n\t     *\n\t     *      var isNotFour = x => x !== 4;\n\t     *\n\t     *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n\t     */\n\t    var takeWhile = _curry2(_dispatchable('takeWhile', _xtakeWhile, function takeWhile(fn, list) {\n\t        var idx = 0;\n\t        var len = list.length;\n\t        while (idx < len && fn(list[idx])) {\n\t            idx += 1;\n\t        }\n\t        return _slice(list, 0, idx);\n\t    }));\n\t\n\t    /**\n\t     * Runs the given function with the supplied object, then returns the object.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Function\n\t     * @sig (a -> *) -> a -> a\n\t     * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n\t     * @param {*} x\n\t     * @return {*} `x`.\n\t     * @example\n\t     *\n\t     *      var sayX = x => console.log('x is ' + x);\n\t     *      R.tap(sayX, 100); //=> 100\n\t     *      //-> 'x is 100'\n\t     */\n\t    var tap = _curry2(function tap(fn, x) {\n\t        fn(x);\n\t        return x;\n\t    });\n\t\n\t    /**\n\t     * Calls an input function `n` times, returning an array containing the results\n\t     * of those function calls.\n\t     *\n\t     * `fn` is passed one argument: The current value of `n`, which begins at `0`\n\t     * and is gradually incremented to `n - 1`.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.2.3\n\t     * @category List\n\t     * @sig (Number -> a) -> Number -> [a]\n\t     * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n\t     * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n\t     * @return {Array} An array containing the return values of all calls to `fn`.\n\t     * @example\n\t     *\n\t     *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n\t     */\n\t    var times = _curry2(function times(fn, n) {\n\t        var len = Number(n);\n\t        var idx = 0;\n\t        var list;\n\t        if (len < 0 || isNaN(len)) {\n\t            throw new RangeError('n must be a non-negative number');\n\t        }\n\t        list = new Array(len);\n\t        while (idx < len) {\n\t            list[idx] = fn(idx);\n\t            idx += 1;\n\t        }\n\t        return list;\n\t    });\n\t\n\t    /**\n\t     * Converts an object into an array of key, value arrays. Only the object's\n\t     * own properties are used.\n\t     * Note that the order of the output array is not guaranteed to be consistent\n\t     * across different JS platforms.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.4.0\n\t     * @category Object\n\t     * @sig {String: *} -> [[String,*]]\n\t     * @param {Object} obj The object to extract from\n\t     * @return {Array} An array of key, value arrays from the object's own properties.\n\t     * @see R.fromPairs\n\t     * @example\n\t     *\n\t     *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n\t     */\n\t    var toPairs = _curry1(function toPairs(obj) {\n\t        var pairs = [];\n\t        for (var prop in obj) {\n\t            if (_has(prop, obj)) {\n\t                pairs[pairs.length] = [\n\t                    prop,\n\t                    obj[prop]\n\t                ];\n\t            }\n\t        }\n\t        return pairs;\n\t    });\n\t\n\t    /**\n\t     * Converts an object into an array of key, value arrays. The object's own\n\t     * properties and prototype properties are used. Note that the order of the\n\t     * output array is not guaranteed to be consistent across different JS\n\t     * platforms.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.4.0\n\t     * @category Object\n\t     * @sig {String: *} -> [[String,*]]\n\t     * @param {Object} obj The object to extract from\n\t     * @return {Array} An array of key, value arrays from the object's own\n\t     *         and prototype properties.\n\t     * @example\n\t     *\n\t     *      var F = function() { this.x = 'X'; };\n\t     *      F.prototype.y = 'Y';\n\t     *      var f = new F();\n\t     *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n\t     */\n\t    var toPairsIn = _curry1(function toPairsIn(obj) {\n\t        var pairs = [];\n\t        for (var prop in obj) {\n\t            pairs[pairs.length] = [\n\t                prop,\n\t                obj[prop]\n\t            ];\n\t        }\n\t        return pairs;\n\t    });\n\t\n\t    /**\n\t     * Transposes the rows and columns of a 2D list.\n\t     * When passed a list of `n` lists of length `x`,\n\t     * returns a list of `x` lists of length `n`.\n\t     *\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since 0.19.1\n\t     * @since 0.19.0\n\t     * @category List\n\t     * @sig [[a]] -> [[a]]\n\t     * @param {Array} list A 2D list\n\t     * @return {Array} A 2D list\n\t     * @example\n\t     *\n\t     *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\n\t     *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n\t     *\n\t     * If some of the rows are shorter than the following rows, their elements are skipped:\n\t     *\n\t     *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\n\t     */\n\t    var transpose = _curry1(function transpose(outerlist) {\n\t        var i = 0;\n\t        var result = [];\n\t        while (i < outerlist.length) {\n\t            var innerlist = outerlist[i];\n\t            var j = 0;\n\t            while (j < innerlist.length) {\n\t                if (typeof result[j] === 'undefined') {\n\t                    result[j] = [];\n\t                }\n\t                result[j].push(innerlist[j]);\n\t                j += 1;\n\t            }\n\t            i += 1;\n\t        }\n\t        return result;\n\t    });\n\t\n\t    /**\n\t     * Removes (strips) whitespace from both ends of the string.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.6.0\n\t     * @category String\n\t     * @sig String -> String\n\t     * @param {String} str The string to trim.\n\t     * @return {String} Trimmed version of `str`.\n\t     * @example\n\t     *\n\t     *      R.trim('   xyz  '); //=> 'xyz'\n\t     *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n\t     */\n\t    var trim = function () {\n\t        var ws = '\\t\\n\\x0B\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\n\t        var zeroWidth = '\\u200B';\n\t        var hasProtoTrim = typeof String.prototype.trim === 'function';\n\t        if (!hasProtoTrim || (ws.trim() || !zeroWidth.trim())) {\n\t            return _curry1(function trim(str) {\n\t                var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n\t                var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n\t                return str.replace(beginRx, '').replace(endRx, '');\n\t            });\n\t        } else {\n\t            return _curry1(function trim(str) {\n\t                return str.trim();\n\t            });\n\t        }\n\t    }();\n\t\n\t    /**\n\t     * Gives a single-word string description of the (native) type of a value,\n\t     * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n\t     * attempt to distinguish user Object types any further, reporting them all as\n\t     * 'Object'.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.8.0\n\t     * @category Type\n\t     * @sig (* -> {*}) -> String\n\t     * @param {*} val The value to test\n\t     * @return {String}\n\t     * @example\n\t     *\n\t     *      R.type({}); //=> \"Object\"\n\t     *      R.type(1); //=> \"Number\"\n\t     *      R.type(false); //=> \"Boolean\"\n\t     *      R.type('s'); //=> \"String\"\n\t     *      R.type(null); //=> \"Null\"\n\t     *      R.type([]); //=> \"Array\"\n\t     *      R.type(/[A-z]/); //=> \"RegExp\"\n\t     */\n\t    var type = _curry1(function type(val) {\n\t        return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n\t    });\n\t\n\t    /**\n\t     * Takes a function `fn`, which takes a single array argument, and returns a\n\t     * function which:\n\t     *\n\t     *   - takes any number of positional arguments;\n\t     *   - passes these arguments to `fn` as an array; and\n\t     *   - returns the result.\n\t     *\n\t     * In other words, R.unapply derives a variadic function from a function which\n\t     * takes an array. R.unapply is the inverse of R.apply.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.8.0\n\t     * @category Function\n\t     * @sig ([*...] -> a) -> (*... -> a)\n\t     * @param {Function} fn\n\t     * @return {Function}\n\t     * @see R.apply\n\t     * @example\n\t     *\n\t     *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n\t     */\n\t    var unapply = _curry1(function unapply(fn) {\n\t        return function () {\n\t            return fn(_slice(arguments));\n\t        };\n\t    });\n\t\n\t    /**\n\t     * Wraps a function of any arity (including nullary) in a function that accepts\n\t     * exactly 1 parameter. Any extraneous parameters will not be passed to the\n\t     * supplied function.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.2.0\n\t     * @category Function\n\t     * @sig (* -> b) -> (a -> b)\n\t     * @param {Function} fn The function to wrap.\n\t     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n\t     *         arity 1.\n\t     * @example\n\t     *\n\t     *      var takesTwoArgs = function(a, b) {\n\t     *        return [a, b];\n\t     *      };\n\t     *      takesTwoArgs.length; //=> 2\n\t     *      takesTwoArgs(1, 2); //=> [1, 2]\n\t     *\n\t     *      var takesOneArg = R.unary(takesTwoArgs);\n\t     *      takesOneArg.length; //=> 1\n\t     *      // Only 1 argument is passed to the wrapped function\n\t     *      takesOneArg(1, 2); //=> [1, undefined]\n\t     */\n\t    var unary = _curry1(function unary(fn) {\n\t        return nAry(1, fn);\n\t    });\n\t\n\t    /**\n\t     * Returns a function of arity `n` from a (manually) curried function.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.14.0\n\t     * @category Function\n\t     * @sig Number -> (a -> b) -> (a -> c)\n\t     * @param {Number} length The arity for the returned function.\n\t     * @param {Function} fn The function to uncurry.\n\t     * @return {Function} A new function.\n\t     * @see R.curry\n\t     * @example\n\t     *\n\t     *      var addFour = a => b => c => d => a + b + c + d;\n\t     *\n\t     *      var uncurriedAddFour = R.uncurryN(4, addFour);\n\t     *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n\t     */\n\t    var uncurryN = _curry2(function uncurryN(depth, fn) {\n\t        return curryN(depth, function () {\n\t            var currentDepth = 1;\n\t            var value = fn;\n\t            var idx = 0;\n\t            var endIdx;\n\t            while (currentDepth <= depth && typeof value === 'function') {\n\t                endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n\t                value = value.apply(this, _slice(arguments, idx, endIdx));\n\t                currentDepth += 1;\n\t                idx = endIdx;\n\t            }\n\t            return value;\n\t        });\n\t    });\n\t\n\t    /**\n\t     * Builds a list from a seed value. Accepts an iterator function, which returns\n\t     * either false to stop iteration or an array of length 2 containing the value\n\t     * to add to the resulting list and the seed to be used in the next call to the\n\t     * iterator function.\n\t     *\n\t     * The iterator function receives one argument: *(seed)*.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.10.0\n\t     * @category List\n\t     * @sig (a -> [b]) -> * -> [b]\n\t     * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n\t     *        either false to quit iteration or an array of length two to proceed. The element\n\t     *        at index 0 of this array will be added to the resulting array, and the element\n\t     *        at index 1 will be passed to the next call to `fn`.\n\t     * @param {*} seed The seed value.\n\t     * @return {Array} The final list.\n\t     * @example\n\t     *\n\t     *      var f = n => n > 50 ? false : [-n, n + 10];\n\t     *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n\t     */\n\t    var unfold = _curry2(function unfold(fn, seed) {\n\t        var pair = fn(seed);\n\t        var result = [];\n\t        while (pair && pair.length) {\n\t            result[result.length] = pair[0];\n\t            pair = fn(pair[1]);\n\t        }\n\t        return result;\n\t    });\n\t\n\t    /**\n\t     * Returns a new list containing only one copy of each element in the original\n\t     * list, based upon the value returned by applying the supplied predicate to\n\t     * two list elements. Prefers the first item if two items compare equal based\n\t     * on the predicate.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.2.0\n\t     * @category List\n\t     * @sig (a, a -> Boolean) -> [a] -> [a]\n\t     * @param {Function} pred A predicate used to test whether two items are equal.\n\t     * @param {Array} list The array to consider.\n\t     * @return {Array} The list of unique items.\n\t     * @example\n\t     *\n\t     *      var strEq = R.eqBy(String);\n\t     *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n\t     *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n\t     *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n\t     *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n\t     */\n\t    var uniqWith = _curry2(function uniqWith(pred, list) {\n\t        var idx = 0;\n\t        var len = list.length;\n\t        var result = [];\n\t        var item;\n\t        while (idx < len) {\n\t            item = list[idx];\n\t            if (!_containsWith(pred, item, result)) {\n\t                result[result.length] = item;\n\t            }\n\t            idx += 1;\n\t        }\n\t        return result;\n\t    });\n\t\n\t    /**\n\t     * Tests the final argument by passing it to the given predicate function. If\n\t     * the predicate is not satisfied, the function will return the result of\n\t     * calling the `whenFalseFn` function with the same argument. If the predicate\n\t     * is satisfied, the argument is returned as is.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.18.0\n\t     * @category Logic\n\t     * @sig (a -> Boolean) -> (a -> a) -> a -> a\n\t     * @param {Function} pred        A predicate function\n\t     * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n\t     *                               to a falsy value.\n\t     * @param {*}        x           An object to test with the `pred` function and\n\t     *                               pass to `whenFalseFn` if necessary.\n\t     * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n\t     * @see R.ifElse, R.when\n\t     * @example\n\t     *\n\t     *      // coerceArray :: (a|[a]) -> [a]\n\t     *      var coerceArray = R.unless(R.isArrayLike, R.of);\n\t     *      coerceArray([1, 2, 3]); //=> [1, 2, 3]\n\t     *      coerceArray(1);         //=> [1]\n\t     */\n\t    var unless = _curry3(function unless(pred, whenFalseFn, x) {\n\t        return pred(x) ? x : whenFalseFn(x);\n\t    });\n\t\n\t    /**\n\t     * Returns a new copy of the array with the element at the provided index\n\t     * replaced with the given value.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.14.0\n\t     * @category List\n\t     * @sig Number -> a -> [a] -> [a]\n\t     * @param {Number} idx The index to update.\n\t     * @param {*} x The value to exist at the given index of the returned array.\n\t     * @param {Array|Arguments} list The source array-like object to be updated.\n\t     * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n\t     * @see R.adjust\n\t     * @example\n\t     *\n\t     *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\n\t     *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\n\t     */\n\t    var update = _curry3(function update(idx, x, list) {\n\t        return adjust(always(x), idx, list);\n\t    });\n\t\n\t    /**\n\t     * Accepts a function `fn` and a list of transformer functions and returns a\n\t     * new curried function. When the new function is invoked, it calls the\n\t     * function `fn` with parameters consisting of the result of calling each\n\t     * supplied handler on successive arguments to the new function.\n\t     *\n\t     * If more arguments are passed to the returned function than transformer\n\t     * functions, those arguments are passed directly to `fn` as additional\n\t     * parameters. If you expect additional arguments that don't need to be\n\t     * transformed, although you can ignore them, it's best to pass an identity\n\t     * function so that the new function reports the correct arity.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Function\n\t     * @sig (x1 -> x2 -> ... -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n\t     * @param {Function} fn The function to wrap.\n\t     * @param {Array} transformers A list of transformer functions\n\t     * @return {Function} The wrapped function.\n\t     * @example\n\t     *\n\t     *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n\t     *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n\t     *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n\t     *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n\t     */\n\t    var useWith = _curry2(function useWith(fn, transformers) {\n\t        return curryN(transformers.length, function () {\n\t            var args = [];\n\t            var idx = 0;\n\t            while (idx < transformers.length) {\n\t                args.push(transformers[idx].call(this, arguments[idx]));\n\t                idx += 1;\n\t            }\n\t            return fn.apply(this, args.concat(_slice(arguments, transformers.length)));\n\t        });\n\t    });\n\t\n\t    /**\n\t     * Returns a list of all the enumerable own properties of the supplied object.\n\t     * Note that the order of the output array is not guaranteed across different\n\t     * JS platforms.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Object\n\t     * @sig {k: v} -> [v]\n\t     * @param {Object} obj The object to extract values from\n\t     * @return {Array} An array of the values of the object's own properties.\n\t     * @example\n\t     *\n\t     *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n\t     */\n\t    var values = _curry1(function values(obj) {\n\t        var props = keys(obj);\n\t        var len = props.length;\n\t        var vals = [];\n\t        var idx = 0;\n\t        while (idx < len) {\n\t            vals[idx] = obj[props[idx]];\n\t            idx += 1;\n\t        }\n\t        return vals;\n\t    });\n\t\n\t    /**\n\t     * Returns a list of all the properties, including prototype properties, of the\n\t     * supplied object.\n\t     * Note that the order of the output array is not guaranteed to be consistent\n\t     * across different JS platforms.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.2.0\n\t     * @category Object\n\t     * @sig {k: v} -> [v]\n\t     * @param {Object} obj The object to extract values from\n\t     * @return {Array} An array of the values of the object's own and prototype properties.\n\t     * @example\n\t     *\n\t     *      var F = function() { this.x = 'X'; };\n\t     *      F.prototype.y = 'Y';\n\t     *      var f = new F();\n\t     *      R.valuesIn(f); //=> ['X', 'Y']\n\t     */\n\t    var valuesIn = _curry1(function valuesIn(obj) {\n\t        var prop;\n\t        var vs = [];\n\t        for (prop in obj) {\n\t            vs[vs.length] = obj[prop];\n\t        }\n\t        return vs;\n\t    });\n\t\n\t    /**\n\t     * Returns a \"view\" of the given data structure, determined by the given lens.\n\t     * The lens's focus determines which portion of the data structure is visible.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.16.0\n\t     * @category Object\n\t     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n\t     * @sig Lens s a -> s -> a\n\t     * @param {Lens} lens\n\t     * @param {*} x\n\t     * @return {*}\n\t     * @see R.prop, R.lensIndex, R.lensProp\n\t     * @example\n\t     *\n\t     *      var xLens = R.lensProp('x');\n\t     *\n\t     *      R.view(xLens, {x: 1, y: 2});  //=> 1\n\t     *      R.view(xLens, {x: 4, y: 2});  //=> 4\n\t     */\n\t    var view = function () {\n\t        var Const = function (x) {\n\t            return {\n\t                value: x,\n\t                map: function () {\n\t                    return this;\n\t                }\n\t            };\n\t        };\n\t        return _curry2(function view(lens, x) {\n\t            return lens(Const)(x).value;\n\t        });\n\t    }();\n\t\n\t    /**\n\t     * Tests the final argument by passing it to the given predicate function. If\n\t     * the predicate is satisfied, the function will return the result of calling\n\t     * the `whenTrueFn` function with the same argument. If the predicate is not\n\t     * satisfied, the argument is returned as is.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.18.0\n\t     * @category Logic\n\t     * @sig (a -> Boolean) -> (a -> a) -> a -> a\n\t     * @param {Function} pred       A predicate function\n\t     * @param {Function} whenTrueFn A function to invoke when the `condition`\n\t     *                              evaluates to a truthy value.\n\t     * @param {*}        x          An object to test with the `pred` function and\n\t     *                              pass to `whenTrueFn` if necessary.\n\t     * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n\t     * @see R.ifElse, R.unless\n\t     * @example\n\t     *\n\t     *      // truncate :: String -> String\n\t     *      var truncate = R.when(\n\t     *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n\t     *        R.pipe(R.take(10), R.append('…'), R.join(''))\n\t     *      );\n\t     *      truncate('12345');         //=> '12345'\n\t     *      truncate('0123456789ABC'); //=> '0123456789…'\n\t     */\n\t    var when = _curry3(function when(pred, whenTrueFn, x) {\n\t        return pred(x) ? whenTrueFn(x) : x;\n\t    });\n\t\n\t    /**\n\t     * Takes a spec object and a test object; returns true if the test satisfies\n\t     * the spec. Each of the spec's own properties must be a predicate function.\n\t     * Each predicate is applied to the value of the corresponding property of the\n\t     * test object. `where` returns true if all the predicates return true, false\n\t     * otherwise.\n\t     *\n\t     * `where` is well suited to declaratively expressing constraints for other\n\t     * functions such as `filter` and `find`.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.1\n\t     * @category Object\n\t     * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n\t     * @param {Object} spec\n\t     * @param {Object} testObj\n\t     * @return {Boolean}\n\t     * @example\n\t     *\n\t     *      // pred :: Object -> Boolean\n\t     *      var pred = R.where({\n\t     *        a: R.equals('foo'),\n\t     *        b: R.complement(R.equals('bar')),\n\t     *        x: R.gt(_, 10),\n\t     *        y: R.lt(_, 20)\n\t     *      });\n\t     *\n\t     *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n\t     *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n\t     *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n\t     *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n\t     *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n\t     */\n\t    var where = _curry2(function where(spec, testObj) {\n\t        for (var prop in spec) {\n\t            if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n\t                return false;\n\t            }\n\t        }\n\t        return true;\n\t    });\n\t\n\t    /**\n\t     * Wrap a function inside another to allow you to make adjustments to the\n\t     * parameters, or do other processing either before the internal function is\n\t     * called or with its results.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Function\n\t     * @sig (a... -> b) -> ((a... -> b) -> a... -> c) -> (a... -> c)\n\t     * @param {Function} fn The function to wrap.\n\t     * @param {Function} wrapper The wrapper function.\n\t     * @return {Function} The wrapped function.\n\t     * @example\n\t     *\n\t     *      var greet = name => 'Hello ' + name;\n\t     *\n\t     *      var shoutedGreet = R.wrap(greet, (gr, name) => gr(name).toUpperCase());\n\t     *\n\t     *      shoutedGreet(\"Kathy\"); //=> \"HELLO KATHY\"\n\t     *\n\t     *      var shortenedGreet = R.wrap(greet, function(gr, name) {\n\t     *        return gr(name.substring(0, 3));\n\t     *      });\n\t     *      shortenedGreet(\"Robert\"); //=> \"Hello Rob\"\n\t     */\n\t    var wrap = _curry2(function wrap(fn, wrapper) {\n\t        return curryN(fn.length, function () {\n\t            return wrapper.apply(this, _concat([fn], arguments));\n\t        });\n\t    });\n\t\n\t    /**\n\t     * Creates a new list out of the two supplied by creating each possible pair\n\t     * from the lists.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig [a] -> [b] -> [[a,b]]\n\t     * @param {Array} as The first list.\n\t     * @param {Array} bs The second list.\n\t     * @return {Array} The list made by combining each possible pair from\n\t     *         `as` and `bs` into pairs (`[a, b]`).\n\t     * @example\n\t     *\n\t     *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n\t     */\n\t    // = xprodWith(prepend); (takes about 3 times as long...)\n\t    var xprod = _curry2(function xprod(a, b) {\n\t        // = xprodWith(prepend); (takes about 3 times as long...)\n\t        var idx = 0;\n\t        var ilen = a.length;\n\t        var j;\n\t        var jlen = b.length;\n\t        var result = [];\n\t        while (idx < ilen) {\n\t            j = 0;\n\t            while (j < jlen) {\n\t                result[result.length] = [\n\t                    a[idx],\n\t                    b[j]\n\t                ];\n\t                j += 1;\n\t            }\n\t            idx += 1;\n\t        }\n\t        return result;\n\t    });\n\t\n\t    /**\n\t     * Creates a new list out of the two supplied by pairing up equally-positioned\n\t     * items from both lists. The returned list is truncated to the length of the\n\t     * shorter of the two input lists.\n\t     * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig [a] -> [b] -> [[a,b]]\n\t     * @param {Array} list1 The first array to consider.\n\t     * @param {Array} list2 The second array to consider.\n\t     * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n\t     * @example\n\t     *\n\t     *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n\t     */\n\t    var zip = _curry2(function zip(a, b) {\n\t        var rv = [];\n\t        var idx = 0;\n\t        var len = Math.min(a.length, b.length);\n\t        while (idx < len) {\n\t            rv[idx] = [\n\t                a[idx],\n\t                b[idx]\n\t            ];\n\t            idx += 1;\n\t        }\n\t        return rv;\n\t    });\n\t\n\t    /**\n\t     * Creates a new object out of a list of keys and a list of values.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.3.0\n\t     * @category List\n\t     * @sig [String] -> [*] -> {String: *}\n\t     * @param {Array} keys The array that will be properties on the output object.\n\t     * @param {Array} values The list of values on the output object.\n\t     * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n\t     * @example\n\t     *\n\t     *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n\t     */\n\t    var zipObj = _curry2(function zipObj(keys, values) {\n\t        var idx = 0;\n\t        var len = keys.length;\n\t        var out = {};\n\t        while (idx < len) {\n\t            out[keys[idx]] = values[idx];\n\t            idx += 1;\n\t        }\n\t        return out;\n\t    });\n\t\n\t    /**\n\t     * Creates a new list out of the two supplied by applying the function to each\n\t     * equally-positioned pair in the lists. The returned list is truncated to the\n\t     * length of the shorter of the two input lists.\n\t     *\n\t     * @function\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig (a,b -> c) -> [a] -> [b] -> [c]\n\t     * @param {Function} fn The function used to combine the two elements into one value.\n\t     * @param {Array} list1 The first array to consider.\n\t     * @param {Array} list2 The second array to consider.\n\t     * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n\t     *         using `fn`.\n\t     * @example\n\t     *\n\t     *      var f = (x, y) => {\n\t     *        // ...\n\t     *      };\n\t     *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n\t     *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n\t     */\n\t    var zipWith = _curry3(function zipWith(fn, a, b) {\n\t        var rv = [];\n\t        var idx = 0;\n\t        var len = Math.min(a.length, b.length);\n\t        while (idx < len) {\n\t            rv[idx] = fn(a[idx], b[idx]);\n\t            idx += 1;\n\t        }\n\t        return rv;\n\t    });\n\t\n\t    /**\n\t     * A function that always returns `false`. Any passed in parameters are ignored.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category Function\n\t     * @sig * -> Boolean\n\t     * @param {*}\n\t     * @return {Boolean}\n\t     * @see R.always, R.T\n\t     * @example\n\t     *\n\t     *      R.F(); //=> false\n\t     */\n\t    var F = always(false);\n\t\n\t    /**\n\t     * A function that always returns `true`. Any passed in parameters are ignored.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category Function\n\t     * @sig * -> Boolean\n\t     * @param {*}\n\t     * @return {Boolean}\n\t     * @see R.always, R.F\n\t     * @example\n\t     *\n\t     *      R.T(); //=> true\n\t     */\n\t    var T = always(true);\n\t\n\t    /**\n\t     * Copies an object.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to be copied\n\t     * @param {Array} refFrom Array containing the source references\n\t     * @param {Array} refTo Array containing the copied source references\n\t     * @return {*} The copied value.\n\t     */\n\t    var _clone = function _clone(value, refFrom, refTo) {\n\t        var copy = function copy(copiedValue) {\n\t            var len = refFrom.length;\n\t            var idx = 0;\n\t            while (idx < len) {\n\t                if (value === refFrom[idx]) {\n\t                    return refTo[idx];\n\t                }\n\t                idx += 1;\n\t            }\n\t            refFrom[idx + 1] = value;\n\t            refTo[idx + 1] = copiedValue;\n\t            for (var key in value) {\n\t                copiedValue[key] = _clone(value[key], refFrom, refTo);\n\t            }\n\t            return copiedValue;\n\t        };\n\t        switch (type(value)) {\n\t        case 'Object':\n\t            return copy({});\n\t        case 'Array':\n\t            return copy([]);\n\t        case 'Date':\n\t            return new Date(value.valueOf());\n\t        case 'RegExp':\n\t            return _cloneRegExp(value);\n\t        default:\n\t            return value;\n\t        }\n\t    };\n\t\n\t    var _createPartialApplicator = function _createPartialApplicator(concat) {\n\t        return _curry2(function (fn, args) {\n\t            return _arity(Math.max(0, fn.length - args.length), function () {\n\t                return fn.apply(this, concat(args, arguments));\n\t            });\n\t        });\n\t    };\n\t\n\t    var _dropLast = function dropLast(n, xs) {\n\t        return take(n < xs.length ? xs.length - n : 0, xs);\n\t    };\n\t\n\t    // Values of other types are only equal if identical.\n\t    var _equals = function _equals(a, b, stackA, stackB) {\n\t        if (identical(a, b)) {\n\t            return true;\n\t        }\n\t        if (type(a) !== type(b)) {\n\t            return false;\n\t        }\n\t        if (a == null || b == null) {\n\t            return false;\n\t        }\n\t        if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n\t            return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n\t        }\n\t        switch (type(a)) {\n\t        case 'Arguments':\n\t        case 'Array':\n\t        case 'Object':\n\t            break;\n\t        case 'Boolean':\n\t        case 'Number':\n\t        case 'String':\n\t            if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {\n\t                return false;\n\t            }\n\t            break;\n\t        case 'Date':\n\t            if (!identical(a.valueOf(), b.valueOf())) {\n\t                return false;\n\t            }\n\t            break;\n\t        case 'Error':\n\t            return a.name === b.name && a.message === b.message;\n\t        case 'RegExp':\n\t            if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n\t                return false;\n\t            }\n\t            break;\n\t        case 'Map':\n\t        case 'Set':\n\t            if (!_equals(_arrayFromIterator(a.entries()), _arrayFromIterator(b.entries()), stackA, stackB)) {\n\t                return false;\n\t            }\n\t            break;\n\t        case 'Int8Array':\n\t        case 'Uint8Array':\n\t        case 'Uint8ClampedArray':\n\t        case 'Int16Array':\n\t        case 'Uint16Array':\n\t        case 'Int32Array':\n\t        case 'Uint32Array':\n\t        case 'Float32Array':\n\t        case 'Float64Array':\n\t            break;\n\t        case 'ArrayBuffer':\n\t            break;\n\t        default:\n\t            // Values of other types are only equal if identical.\n\t            return false;\n\t        }\n\t        var keysA = keys(a);\n\t        if (keysA.length !== keys(b).length) {\n\t            return false;\n\t        }\n\t        var idx = stackA.length - 1;\n\t        while (idx >= 0) {\n\t            if (stackA[idx] === a) {\n\t                return stackB[idx] === b;\n\t            }\n\t            idx -= 1;\n\t        }\n\t        stackA.push(a);\n\t        stackB.push(b);\n\t        idx = keysA.length - 1;\n\t        while (idx >= 0) {\n\t            var key = keysA[idx];\n\t            if (!(_has(key, b) && _equals(b[key], a[key], stackA, stackB))) {\n\t                return false;\n\t            }\n\t            idx -= 1;\n\t        }\n\t        stackA.pop();\n\t        stackB.pop();\n\t        return true;\n\t    };\n\t\n\t    /**\n\t     * `_makeFlat` is a helper function that returns a one-level or fully recursive\n\t     * function based on the flag passed in.\n\t     *\n\t     * @private\n\t     */\n\t    var _makeFlat = function _makeFlat(recursive) {\n\t        return function flatt(list) {\n\t            var value, jlen, j;\n\t            var result = [];\n\t            var idx = 0;\n\t            var ilen = list.length;\n\t            while (idx < ilen) {\n\t                if (isArrayLike(list[idx])) {\n\t                    value = recursive ? flatt(list[idx]) : list[idx];\n\t                    j = 0;\n\t                    jlen = value.length;\n\t                    while (j < jlen) {\n\t                        result[result.length] = value[j];\n\t                        j += 1;\n\t                    }\n\t                } else {\n\t                    result[result.length] = list[idx];\n\t                }\n\t                idx += 1;\n\t            }\n\t            return result;\n\t        };\n\t    };\n\t\n\t    var _reduce = function () {\n\t        function _arrayReduce(xf, acc, list) {\n\t            var idx = 0;\n\t            var len = list.length;\n\t            while (idx < len) {\n\t                acc = xf['@@transducer/step'](acc, list[idx]);\n\t                if (acc && acc['@@transducer/reduced']) {\n\t                    acc = acc['@@transducer/value'];\n\t                    break;\n\t                }\n\t                idx += 1;\n\t            }\n\t            return xf['@@transducer/result'](acc);\n\t        }\n\t        function _iterableReduce(xf, acc, iter) {\n\t            var step = iter.next();\n\t            while (!step.done) {\n\t                acc = xf['@@transducer/step'](acc, step.value);\n\t                if (acc && acc['@@transducer/reduced']) {\n\t                    acc = acc['@@transducer/value'];\n\t                    break;\n\t                }\n\t                step = iter.next();\n\t            }\n\t            return xf['@@transducer/result'](acc);\n\t        }\n\t        function _methodReduce(xf, acc, obj) {\n\t            return xf['@@transducer/result'](obj.reduce(bind(xf['@@transducer/step'], xf), acc));\n\t        }\n\t        var symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n\t        return function _reduce(fn, acc, list) {\n\t            if (typeof fn === 'function') {\n\t                fn = _xwrap(fn);\n\t            }\n\t            if (isArrayLike(list)) {\n\t                return _arrayReduce(fn, acc, list);\n\t            }\n\t            if (typeof list.reduce === 'function') {\n\t                return _methodReduce(fn, acc, list);\n\t            }\n\t            if (list[symIterator] != null) {\n\t                return _iterableReduce(fn, acc, list[symIterator]());\n\t            }\n\t            if (typeof list.next === 'function') {\n\t                return _iterableReduce(fn, acc, list);\n\t            }\n\t            throw new TypeError('reduce: list must be array or iterable');\n\t        };\n\t    }();\n\t\n\t    var _xdropLastWhile = function () {\n\t        function XDropLastWhile(fn, xf) {\n\t            this.f = fn;\n\t            this.retained = [];\n\t            this.xf = xf;\n\t        }\n\t        XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n\t        XDropLastWhile.prototype['@@transducer/result'] = function (result) {\n\t            this.retained = null;\n\t            return this.xf['@@transducer/result'](result);\n\t        };\n\t        XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\n\t            return this.f(input) ? this.retain(result, input) : this.flush(result, input);\n\t        };\n\t        XDropLastWhile.prototype.flush = function (result, input) {\n\t            result = _reduce(this.xf['@@transducer/step'], result, this.retained);\n\t            this.retained = [];\n\t            return this.xf['@@transducer/step'](result, input);\n\t        };\n\t        XDropLastWhile.prototype.retain = function (result, input) {\n\t            this.retained.push(input);\n\t            return result;\n\t        };\n\t        return _curry2(function _xdropLastWhile(fn, xf) {\n\t            return new XDropLastWhile(fn, xf);\n\t        });\n\t    }();\n\t\n\t    var _xgroupBy = function () {\n\t        function XGroupBy(f, xf) {\n\t            this.xf = xf;\n\t            this.f = f;\n\t            this.inputs = {};\n\t        }\n\t        XGroupBy.prototype['@@transducer/init'] = _xfBase.init;\n\t        XGroupBy.prototype['@@transducer/result'] = function (result) {\n\t            var key;\n\t            for (key in this.inputs) {\n\t                if (_has(key, this.inputs)) {\n\t                    result = this.xf['@@transducer/step'](result, this.inputs[key]);\n\t                    if (result['@@transducer/reduced']) {\n\t                        result = result['@@transducer/value'];\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t            this.inputs = null;\n\t            return this.xf['@@transducer/result'](result);\n\t        };\n\t        XGroupBy.prototype['@@transducer/step'] = function (result, input) {\n\t            var key = this.f(input);\n\t            this.inputs[key] = this.inputs[key] || [\n\t                key,\n\t                []\n\t            ];\n\t            this.inputs[key][1] = append(input, this.inputs[key][1]);\n\t            return result;\n\t        };\n\t        return _curry2(function _xgroupBy(f, xf) {\n\t            return new XGroupBy(f, xf);\n\t        });\n\t    }();\n\t\n\t    /**\n\t     * Creates a new list iteration function from an existing one by adding two new\n\t     * parameters to its callback function: the current index, and the entire list.\n\t     *\n\t     * This would turn, for instance, Ramda's simple `map` function into one that\n\t     * more closely resembles `Array.prototype.map`. Note that this will only work\n\t     * for functions in which the iteration callback function is the first\n\t     * parameter, and where the list is the last parameter. (This latter might be\n\t     * unimportant if the list parameter is not used.)\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.15.0\n\t     * @category Function\n\t     * @category List\n\t     * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\n\t     * @param {Function} fn A list iteration function that does not pass index or list to its callback\n\t     * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n\t     * @example\n\t     *\n\t     *      var mapIndexed = R.addIndex(R.map);\n\t     *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n\t     *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n\t     */\n\t    var addIndex = _curry1(function addIndex(fn) {\n\t        return curryN(fn.length, function () {\n\t            var idx = 0;\n\t            var origFn = arguments[0];\n\t            var list = arguments[arguments.length - 1];\n\t            var args = _slice(arguments);\n\t            args[0] = function () {\n\t                var result = origFn.apply(this, _concat(arguments, [\n\t                    idx,\n\t                    list\n\t                ]));\n\t                idx += 1;\n\t                return result;\n\t            };\n\t            return fn.apply(this, args);\n\t        });\n\t    });\n\t\n\t    /**\n\t     * Wraps a function of any arity (including nullary) in a function that accepts\n\t     * exactly 2 parameters. Any extraneous parameters will not be passed to the\n\t     * supplied function.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.2.0\n\t     * @category Function\n\t     * @sig (* -> c) -> (a, b -> c)\n\t     * @param {Function} fn The function to wrap.\n\t     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n\t     *         arity 2.\n\t     * @example\n\t     *\n\t     *      var takesThreeArgs = function(a, b, c) {\n\t     *        return [a, b, c];\n\t     *      };\n\t     *      takesThreeArgs.length; //=> 3\n\t     *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n\t     *\n\t     *      var takesTwoArgs = R.binary(takesThreeArgs);\n\t     *      takesTwoArgs.length; //=> 2\n\t     *      // Only 2 arguments are passed to the wrapped function\n\t     *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n\t     */\n\t    var binary = _curry1(function binary(fn) {\n\t        return nAry(2, fn);\n\t    });\n\t\n\t    /**\n\t     * Creates a deep copy of the value which may contain (nested) `Array`s and\n\t     * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are not\n\t     * copied, but assigned by their reference.\n\t     *\n\t     * Dispatches to a `clone` method if present.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Object\n\t     * @sig {*} -> {*}\n\t     * @param {*} value The object or array to clone\n\t     * @return {*} A new object or array.\n\t     * @example\n\t     *\n\t     *      var objects = [{}, {}, {}];\n\t     *      var objectsClone = R.clone(objects);\n\t     *      objects[0] === objectsClone[0]; //=> false\n\t     */\n\t    var clone = _curry1(function clone(value) {\n\t        return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], []);\n\t    });\n\t\n\t    /**\n\t     * Returns a curried equivalent of the provided function. The curried function\n\t     * has two unusual capabilities. First, its arguments needn't be provided one\n\t     * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n\t     * following are equivalent:\n\t     *\n\t     *   - `g(1)(2)(3)`\n\t     *   - `g(1)(2, 3)`\n\t     *   - `g(1, 2)(3)`\n\t     *   - `g(1, 2, 3)`\n\t     *\n\t     * Secondly, the special placeholder value `R.__` may be used to specify\n\t     * \"gaps\", allowing partial application of any combination of arguments,\n\t     * regardless of their positions. If `g` is as above and `_` is `R.__`, the\n\t     * following are equivalent:\n\t     *\n\t     *   - `g(1, 2, 3)`\n\t     *   - `g(_, 2, 3)(1)`\n\t     *   - `g(_, _, 3)(1)(2)`\n\t     *   - `g(_, _, 3)(1, 2)`\n\t     *   - `g(_, 2)(1)(3)`\n\t     *   - `g(_, 2)(1, 3)`\n\t     *   - `g(_, 2)(_, 3)(1)`\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Function\n\t     * @sig (* -> a) -> (* -> a)\n\t     * @param {Function} fn The function to curry.\n\t     * @return {Function} A new, curried function.\n\t     * @see R.curryN\n\t     * @example\n\t     *\n\t     *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\n\t     *\n\t     *      var curriedAddFourNumbers = R.curry(addFourNumbers);\n\t     *      var f = curriedAddFourNumbers(1, 2);\n\t     *      var g = f(3);\n\t     *      g(4); //=> 10\n\t     */\n\t    var curry = _curry1(function curry(fn) {\n\t        return curryN(fn.length, fn);\n\t    });\n\t\n\t    /**\n\t     * Returns all but the first `n` elements of the given list, string, or\n\t     * transducer/transformer (or object with a `drop` method).\n\t     *\n\t     * Dispatches to the `drop` method of the second argument, if present.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig Number -> [a] -> [a]\n\t     * @sig Number -> String -> String\n\t     * @param {Number} n\n\t     * @param {*} list\n\t     * @return {*}\n\t     * @see R.take, R.transduce\n\t     * @example\n\t     *\n\t     *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n\t     *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n\t     *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n\t     *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n\t     *      R.drop(3, 'ramda');               //=> 'da'\n\t     */\n\t    var drop = _curry2(_dispatchable('drop', _xdrop, function drop(n, xs) {\n\t        return slice(Math.max(0, n), Infinity, xs);\n\t    }));\n\t\n\t    /**\n\t     * Returns a list containing all but the last `n` elements of the given `list`.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.16.0\n\t     * @category List\n\t     * @sig Number -> [a] -> [a]\n\t     * @sig Number -> String -> String\n\t     * @param {Number} n The number of elements of `xs` to skip.\n\t     * @param {Array} xs The collection to consider.\n\t     * @return {Array}\n\t     * @see R.takeLast\n\t     * @example\n\t     *\n\t     *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n\t     *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n\t     *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n\t     *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n\t     *      R.dropLast(3, 'ramda');               //=> 'ra'\n\t     */\n\t    var dropLast = _curry2(_dispatchable('dropLast', _xdropLast, _dropLast));\n\t\n\t    /**\n\t     * Returns a new list containing all but last the`n` elements of a given list,\n\t     * passing each value from the right to the supplied predicate function,\n\t     * skipping elements while the predicate function returns `true`. The predicate\n\t     * function is passed one argument: (value)*.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.16.0\n\t     * @category List\n\t     * @sig (a -> Boolean) -> [a] -> [a]\n\t     * @param {Function} fn The function called per iteration.\n\t     * @param {Array} list The collection to iterate over.\n\t     * @return {Array} A new array.\n\t     * @see R.takeLastWhile, R.addIndex\n\t     * @example\n\t     *\n\t     *      var lteThree = x => x <= 3;\n\t     *\n\t     *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n\t     */\n\t    var dropLastWhile = _curry2(_dispatchable('dropLastWhile', _xdropLastWhile, _dropLastWhile));\n\t\n\t    /**\n\t     * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n\t     * cyclical data structures.\n\t     *\n\t     * Dispatches symmetrically to the `equals` methods of both arguments, if\n\t     * present.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.15.0\n\t     * @category Relation\n\t     * @sig a -> b -> Boolean\n\t     * @param {*} a\n\t     * @param {*} b\n\t     * @return {Boolean}\n\t     * @example\n\t     *\n\t     *      R.equals(1, 1); //=> true\n\t     *      R.equals(1, '1'); //=> false\n\t     *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n\t     *\n\t     *      var a = {}; a.v = a;\n\t     *      var b = {}; b.v = b;\n\t     *      R.equals(a, b); //=> true\n\t     */\n\t    var equals = _curry2(function equals(a, b) {\n\t        return _equals(a, b, [], []);\n\t    });\n\t\n\t    /**\n\t     * Takes a predicate and a \"filterable\", and returns a new filterable of the\n\t     * same type containing the members of the given filterable which satisfy the\n\t     * given predicate.\n\t     *\n\t     * Dispatches to the `filter` method of the second argument, if present.\n\t     *\n\t     * Acts as a transducer if a transformer is given in list position.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig Filterable f => (a -> Boolean) -> f a -> f a\n\t     * @param {Function} pred\n\t     * @param {Array} filterable\n\t     * @return {Array}\n\t     * @see R.reject, R.transduce, R.addIndex\n\t     * @example\n\t     *\n\t     *      var isEven = n => n % 2 === 0;\n\t     *\n\t     *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n\t     *\n\t     *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n\t     */\n\t    // else\n\t    var filter = _curry2(_dispatchable('filter', _xfilter, function (pred, filterable) {\n\t        return _isObject(filterable) ? _reduce(function (acc, key) {\n\t            if (pred(filterable[key])) {\n\t                acc[key] = filterable[key];\n\t            }\n\t            return acc;\n\t        }, {}, keys(filterable)) : // else\n\t        _filter(pred, filterable);\n\t    }));\n\t\n\t    /**\n\t     * Returns a new list by pulling every item out of it (and all its sub-arrays)\n\t     * and putting them in a new array, depth-first.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig [a] -> [b]\n\t     * @param {Array} list The array to consider.\n\t     * @return {Array} The flattened list.\n\t     * @see R.unnest\n\t     * @example\n\t     *\n\t     *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n\t     *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n\t     */\n\t    var flatten = _curry1(_makeFlat(true));\n\t\n\t    /**\n\t     * Returns a new function much like the supplied one, except that the first two\n\t     * arguments' order is reversed.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Function\n\t     * @sig (a -> b -> c -> ... -> z) -> (b -> a -> c -> ... -> z)\n\t     * @param {Function} fn The function to invoke with its first two parameters reversed.\n\t     * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n\t     * @example\n\t     *\n\t     *      var mergeThree = (a, b, c) => [].concat(a, b, c);\n\t     *\n\t     *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n\t     *\n\t     *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n\t     */\n\t    var flip = _curry1(function flip(fn) {\n\t        return curry(function (a, b) {\n\t            var args = _slice(arguments);\n\t            args[0] = b;\n\t            args[1] = a;\n\t            return fn.apply(this, args);\n\t        });\n\t    });\n\t\n\t    /**\n\t     * Splits a list into sub-lists stored in an object, based on the result of\n\t     * calling a String-returning function on each element, and grouping the\n\t     * results according to values returned.\n\t     *\n\t     * Dispatches to the `groupBy` method of the second argument, if present.\n\t     *\n\t     * Acts as a transducer if a transformer is given in list position.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig (a -> String) -> [a] -> {String: [a]}\n\t     * @param {Function} fn Function :: a -> String\n\t     * @param {Array} list The array to group\n\t     * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n\t     *         that produced that key when passed to `fn`.\n\t     * @see R.transduce\n\t     * @example\n\t     *\n\t     *      var byGrade = R.groupBy(function(student) {\n\t     *        var score = student.score;\n\t     *        return score < 65 ? 'F' :\n\t     *               score < 70 ? 'D' :\n\t     *               score < 80 ? 'C' :\n\t     *               score < 90 ? 'B' : 'A';\n\t     *      });\n\t     *      var students = [{name: 'Abby', score: 84},\n\t     *                      {name: 'Eddy', score: 58},\n\t     *                      // ...\n\t     *                      {name: 'Jack', score: 69}];\n\t     *      byGrade(students);\n\t     *      // {\n\t     *      //   'A': [{name: 'Dianne', score: 99}],\n\t     *      //   'B': [{name: 'Abby', score: 84}]\n\t     *      //   // ...,\n\t     *      //   'F': [{name: 'Eddy', score: 58}]\n\t     *      // }\n\t     */\n\t    var groupBy = _curry2(_dispatchable('groupBy', _xgroupBy, function groupBy(fn, list) {\n\t        return _reduce(function (acc, elt) {\n\t            var key = fn(elt);\n\t            acc[key] = append(elt, acc[key] || (acc[key] = []));\n\t            return acc;\n\t        }, {}, list);\n\t    }));\n\t\n\t    /**\n\t     * Returns the first element of the given list or string. In some libraries\n\t     * this function is named `first`.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig [a] -> a | Undefined\n\t     * @sig String -> String\n\t     * @param {Array|String} list\n\t     * @return {*}\n\t     * @see R.tail, R.init, R.last\n\t     * @example\n\t     *\n\t     *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n\t     *      R.head([]); //=> undefined\n\t     *\n\t     *      R.head('abc'); //=> 'a'\n\t     *      R.head(''); //=> ''\n\t     */\n\t    var head = nth(0);\n\t\n\t    /**\n\t     * Given a function that generates a key, turns a list of objects into an\n\t     * object indexing the objects by the given key. Note that if multiple\n\t     * objects generate the same value for the indexing key only the last value\n\t     * will be included in the generated object.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since 0.19.1\n\t     * @since 0.19.0\n\t     * @category List\n\t     * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n\t     * @param {Function} fn Function :: a -> String\n\t     * @param {Array} array The array of objects to index\n\t     * @return {Object} An object indexing each array element by the given property.\n\t     * @example\n\t     *\n\t     *      var list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n\t     *      R.indexBy(R.prop('id'), list);\n\t     *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n\t     */\n\t    var indexBy = _curry2(function indexBy(fn, list) {\n\t        return _reduce(function (acc, elem) {\n\t            var key = fn(elem);\n\t            acc[key] = elem;\n\t            return acc;\n\t        }, {}, list);\n\t    });\n\t\n\t    /**\n\t     * Returns all but the last element of the given list or string.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category List\n\t     * @sig [a] -> [a]\n\t     * @sig String -> String\n\t     * @param {*} list\n\t     * @return {*}\n\t     * @see R.last, R.head, R.tail\n\t     * @example\n\t     *\n\t     *      R.init([1, 2, 3]);  //=> [1, 2]\n\t     *      R.init([1, 2]);     //=> [1]\n\t     *      R.init([1]);        //=> []\n\t     *      R.init([]);         //=> []\n\t     *\n\t     *      R.init('abc');  //=> 'ab'\n\t     *      R.init('ab');   //=> 'a'\n\t     *      R.init('a');    //=> ''\n\t     *      R.init('');     //=> ''\n\t     */\n\t    var init = slice(0, -1);\n\t\n\t    /**\n\t     * Combines two lists into a set (i.e. no duplicates) composed of those\n\t     * elements common to both lists. Duplication is determined according to the\n\t     * value returned by applying the supplied predicate to two list elements.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Relation\n\t     * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\n\t     * @param {Function} pred A predicate function that determines whether\n\t     *        the two supplied elements are equal.\n\t     * @param {Array} list1 One list of items to compare\n\t     * @param {Array} list2 A second list of items to compare\n\t     * @return {Array} A new list containing those elements common to both lists.\n\t     * @see R.intersection\n\t     * @example\n\t     *\n\t     *      var buffaloSpringfield = [\n\t     *        {id: 824, name: 'Richie Furay'},\n\t     *        {id: 956, name: 'Dewey Martin'},\n\t     *        {id: 313, name: 'Bruce Palmer'},\n\t     *        {id: 456, name: 'Stephen Stills'},\n\t     *        {id: 177, name: 'Neil Young'}\n\t     *      ];\n\t     *      var csny = [\n\t     *        {id: 204, name: 'David Crosby'},\n\t     *        {id: 456, name: 'Stephen Stills'},\n\t     *        {id: 539, name: 'Graham Nash'},\n\t     *        {id: 177, name: 'Neil Young'}\n\t     *      ];\n\t     *\n\t     *      R.intersectionWith(R.eqBy(R.prop('id')), buffaloSpringfield, csny);\n\t     *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n\t     */\n\t    var intersectionWith = _curry3(function intersectionWith(pred, list1, list2) {\n\t        var results = [];\n\t        var idx = 0;\n\t        while (idx < list1.length) {\n\t            if (_containsWith(pred, list1[idx], list2)) {\n\t                results[results.length] = list1[idx];\n\t            }\n\t            idx += 1;\n\t        }\n\t        return uniqWith(pred, results);\n\t    });\n\t\n\t    /**\n\t     * Same as R.invertObj, however this accounts for objects with duplicate values\n\t     * by putting the values into an array.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category Object\n\t     * @sig {s: x} -> {x: [ s, ... ]}\n\t     * @param {Object} obj The object or array to invert\n\t     * @return {Object} out A new object with keys\n\t     * in an array.\n\t     * @example\n\t     *\n\t     *      var raceResultsByFirstName = {\n\t     *        first: 'alice',\n\t     *        second: 'jake',\n\t     *        third: 'alice',\n\t     *      };\n\t     *      R.invert(raceResultsByFirstName);\n\t     *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n\t     */\n\t    var invert = _curry1(function invert(obj) {\n\t        var props = keys(obj);\n\t        var len = props.length;\n\t        var idx = 0;\n\t        var out = {};\n\t        while (idx < len) {\n\t            var key = props[idx];\n\t            var val = obj[key];\n\t            var list = _has(val, out) ? out[val] : out[val] = [];\n\t            list[list.length] = key;\n\t            idx += 1;\n\t        }\n\t        return out;\n\t    });\n\t\n\t    /**\n\t     * Returns a new object with the keys of the given object as values, and the\n\t     * values of the given object, which are coerced to strings, as keys. Note\n\t     * that the last key found is preferred when handling the same value.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category Object\n\t     * @sig {s: x} -> {x: s}\n\t     * @param {Object} obj The object or array to invert\n\t     * @return {Object} out A new object\n\t     * @example\n\t     *\n\t     *      var raceResults = {\n\t     *        first: 'alice',\n\t     *        second: 'jake'\n\t     *      };\n\t     *      R.invertObj(raceResults);\n\t     *      //=> { 'alice': 'first', 'jake':'second' }\n\t     *\n\t     *      // Alternatively:\n\t     *      var raceResults = ['alice', 'jake'];\n\t     *      R.invertObj(raceResults);\n\t     *      //=> { 'alice': '0', 'jake':'1' }\n\t     */\n\t    var invertObj = _curry1(function invertObj(obj) {\n\t        var props = keys(obj);\n\t        var len = props.length;\n\t        var idx = 0;\n\t        var out = {};\n\t        while (idx < len) {\n\t            var key = props[idx];\n\t            out[obj[key]] = key;\n\t            idx += 1;\n\t        }\n\t        return out;\n\t    });\n\t\n\t    /**\n\t     * Returns `true` if the given value is its type's empty value; `false`\n\t     * otherwise.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Logic\n\t     * @sig a -> Boolean\n\t     * @param {*} x\n\t     * @return {Boolean}\n\t     * @see R.empty\n\t     * @example\n\t     *\n\t     *      R.isEmpty([1, 2, 3]);   //=> false\n\t     *      R.isEmpty([]);          //=> true\n\t     *      R.isEmpty('');          //=> true\n\t     *      R.isEmpty(null);        //=> false\n\t     *      R.isEmpty({});          //=> true\n\t     *      R.isEmpty({length: 0}); //=> false\n\t     */\n\t    var isEmpty = _curry1(function isEmpty(x) {\n\t        return x != null && equals(x, empty(x));\n\t    });\n\t\n\t    /**\n\t     * Returns the last element of the given list or string.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.4\n\t     * @category List\n\t     * @sig [a] -> a | Undefined\n\t     * @sig String -> String\n\t     * @param {*} list\n\t     * @return {*}\n\t     * @see R.init, R.head, R.tail\n\t     * @example\n\t     *\n\t     *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n\t     *      R.last([]); //=> undefined\n\t     *\n\t     *      R.last('abc'); //=> 'c'\n\t     *      R.last(''); //=> ''\n\t     */\n\t    var last = nth(-1);\n\t\n\t    /**\n\t     * Returns the position of the last occurrence of an item in an array, or -1 if\n\t     * the item is not included in the array. `R.equals` is used to determine\n\t     * equality.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig a -> [a] -> Number\n\t     * @param {*} target The item to find.\n\t     * @param {Array} xs The array to search in.\n\t     * @return {Number} the index of the target, or -1 if the target is not found.\n\t     * @see R.indexOf\n\t     * @example\n\t     *\n\t     *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n\t     *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n\t     */\n\t    var lastIndexOf = _curry2(function lastIndexOf(target, xs) {\n\t        if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n\t            return xs.lastIndexOf(target);\n\t        } else {\n\t            var idx = xs.length - 1;\n\t            while (idx >= 0) {\n\t                if (equals(xs[idx], target)) {\n\t                    return idx;\n\t                }\n\t                idx -= 1;\n\t            }\n\t            return -1;\n\t        }\n\t    });\n\t\n\t    /**\n\t     * Takes a function and\n\t     * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n\t     * applies the function to each of the functor's values, and returns\n\t     * a functor of the same shape.\n\t     *\n\t     * Ramda provides suitable `map` implementations for `Array` and `Object`,\n\t     * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n\t     *\n\t     * Dispatches to the `map` method of the second argument, if present.\n\t     *\n\t     * Acts as a transducer if a transformer is given in list position.\n\t     *\n\t     * Also treats functions as functors and will compose them together.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig Functor f => (a -> b) -> f a -> f b\n\t     * @param {Function} fn The function to be called on every element of the input `list`.\n\t     * @param {Array} list The list to be iterated over.\n\t     * @return {Array} The new list.\n\t     * @see R.transduce, R.addIndex\n\t     * @example\n\t     *\n\t     *      var double = x => x * 2;\n\t     *\n\t     *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n\t     *\n\t     *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n\t     */\n\t    var map = _curry2(_dispatchable('map', _xmap, function map(fn, functor) {\n\t        switch (Object.prototype.toString.call(functor)) {\n\t        case '[object Function]':\n\t            return curryN(functor.length, function () {\n\t                return fn.call(this, functor.apply(this, arguments));\n\t            });\n\t        case '[object Object]':\n\t            return _reduce(function (acc, key) {\n\t                acc[key] = fn(functor[key]);\n\t                return acc;\n\t            }, {}, keys(functor));\n\t        default:\n\t            return _map(fn, functor);\n\t        }\n\t    }));\n\t\n\t    /**\n\t     * An Object-specific version of `map`. The function is applied to three\n\t     * arguments: *(value, key, obj)*. If only the value is significant, use\n\t     * `map` instead.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category Object\n\t     * @sig ((*, String, Object) -> *) -> Object -> Object\n\t     * @param {Function} fn\n\t     * @param {Object} obj\n\t     * @return {Object}\n\t     * @see R.map\n\t     * @example\n\t     *\n\t     *      var values = { x: 1, y: 2, z: 3 };\n\t     *      var prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n\t     *\n\t     *      R.mapObjIndexed(prependKeyAndDouble, values); //=> { x: 'x2', y: 'y4', z: 'z6' }\n\t     */\n\t    var mapObjIndexed = _curry2(function mapObjIndexed(fn, obj) {\n\t        return _reduce(function (acc, key) {\n\t            acc[key] = fn(obj[key], key, obj);\n\t            return acc;\n\t        }, {}, keys(obj));\n\t    });\n\t\n\t    /**\n\t     * Creates a new object with the own properties of the two provided objects. If\n\t     * a key exists in both objects, the provided function is applied to the values\n\t     * associated with the key in each object, with the result being used as the\n\t     * value associated with the key in the returned object. The key will be\n\t     * excluded from the returned object if the resulting value is `undefined`.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since 0.19.1\n\t     * @since 0.19.0\n\t     * @category Object\n\t     * @sig (a -> a -> a) -> {a} -> {a} -> {a}\n\t     * @param {Function} fn\n\t     * @param {Object} l\n\t     * @param {Object} r\n\t     * @return {Object}\n\t     * @see R.merge, R.mergeWithKey\n\t     * @example\n\t     *\n\t     *      R.mergeWith(R.concat,\n\t     *                  { a: true, values: [10, 20] },\n\t     *                  { b: true, values: [15, 35] });\n\t     *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n\t     */\n\t    var mergeWith = _curry3(function mergeWith(fn, l, r) {\n\t        return mergeWithKey(function (_, _l, _r) {\n\t            return fn(_l, _r);\n\t        }, l, r);\n\t    });\n\t\n\t    /**\n\t     * Takes a function `f` and a list of arguments, and returns a function `g`.\n\t     * When applied, `g` returns the result of applying `f` to the arguments\n\t     * provided initially followed by the arguments provided to `g`.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.10.0\n\t     * @category Function\n\t     * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\n\t     * @param {Function} f\n\t     * @param {Array} args\n\t     * @return {Function}\n\t     * @see R.partialRight\n\t     * @example\n\t     *\n\t     *      var multiply = (a, b) => a * b;\n\t     *      var double = R.partial(multiply, [2]);\n\t     *      double(2); //=> 4\n\t     *\n\t     *      var greet = (salutation, title, firstName, lastName) =>\n\t     *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n\t     *\n\t     *      var sayHello = R.partial(greet, ['Hello']);\n\t     *      var sayHelloToMs = R.partial(sayHello, ['Ms.']);\n\t     *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n\t     */\n\t    var partial = _createPartialApplicator(_concat);\n\t\n\t    /**\n\t     * Takes a function `f` and a list of arguments, and returns a function `g`.\n\t     * When applied, `g` returns the result of applying `f` to the arguments\n\t     * provided to `g` followed by the arguments provided initially.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.10.0\n\t     * @category Function\n\t     * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n\t     * @param {Function} f\n\t     * @param {Array} args\n\t     * @return {Function}\n\t     * @see R.partial\n\t     * @example\n\t     *\n\t     *      var greet = (salutation, title, firstName, lastName) =>\n\t     *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n\t     *\n\t     *      var greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n\t     *\n\t     *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n\t     */\n\t    var partialRight = _createPartialApplicator(flip(_concat));\n\t\n\t    /**\n\t     * Takes a predicate and a list and returns the pair of lists of elements which\n\t     * do and do not satisfy the predicate, respectively.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.4\n\t     * @category List\n\t     * @sig (a -> Boolean) -> [a] -> [[a],[a]]\n\t     * @param {Function} pred A predicate to determine which array the element belongs to.\n\t     * @param {Array} list The array to partition.\n\t     * @return {Array} A nested array, containing first an array of elements that satisfied the predicate,\n\t     *         and second an array of elements that did not satisfy.\n\t     * @see R.filter, R.reject\n\t     * @example\n\t     *\n\t     *      R.partition(R.contains('s'), ['sss', 'ttt', 'foo', 'bars']);\n\t     *      //=> [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n\t     */\n\t    var partition = _curry2(function partition(pred, list) {\n\t        return _reduce(function (acc, elt) {\n\t            var xs = acc[pred(elt) ? 0 : 1];\n\t            xs[xs.length] = elt;\n\t            return acc;\n\t        }, [\n\t            [],\n\t            []\n\t        ], list);\n\t    });\n\t\n\t    /**\n\t     * Determines whether a nested path on an object has a specific value, in\n\t     * `R.equals` terms. Most likely used to filter a list.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.7.0\n\t     * @category Relation\n\t     * @sig [String] -> * -> {String: *} -> Boolean\n\t     * @param {Array} path The path of the nested property to use\n\t     * @param {*} val The value to compare the nested property with\n\t     * @param {Object} obj The object to check the nested property in\n\t     * @return {Boolean} `true` if the value equals the nested object property,\n\t     *         `false` otherwise.\n\t     * @example\n\t     *\n\t     *      var user1 = { address: { zipCode: 90210 } };\n\t     *      var user2 = { address: { zipCode: 55555 } };\n\t     *      var user3 = { name: 'Bob' };\n\t     *      var users = [ user1, user2, user3 ];\n\t     *      var isFamous = R.pathEq(['address', 'zipCode'], 90210);\n\t     *      R.filter(isFamous, users); //=> [ user1 ]\n\t     */\n\t    var pathEq = _curry3(function pathEq(_path, val, obj) {\n\t        return equals(path(_path, obj), val);\n\t    });\n\t\n\t    /**\n\t     * Returns a new list by plucking the same named property off all objects in\n\t     * the list supplied.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig k -> [{k: v}] -> [v]\n\t     * @param {Number|String} key The key name to pluck off of each object.\n\t     * @param {Array} list The array to consider.\n\t     * @return {Array} The list of values for the given key.\n\t     * @see R.props\n\t     * @example\n\t     *\n\t     *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n\t     *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n\t     */\n\t    var pluck = _curry2(function pluck(p, list) {\n\t        return map(prop(p), list);\n\t    });\n\t\n\t    /**\n\t     * Reasonable analog to SQL `select` statement.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Object\n\t     * @category Relation\n\t     * @sig [k] -> [{k: v}] -> [{k: v}]\n\t     * @param {Array} props The property names to project\n\t     * @param {Array} objs The objects to query\n\t     * @return {Array} An array of objects with just the `props` properties.\n\t     * @example\n\t     *\n\t     *      var abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n\t     *      var fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n\t     *      var kids = [abby, fred];\n\t     *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n\t     */\n\t    // passing `identity` gives correct arity\n\t    var project = useWith(_map, [\n\t        pickAll,\n\t        identity\n\t    ]);\n\t\n\t    /**\n\t     * Returns `true` if the specified object property is equal, in `R.equals`\n\t     * terms, to the given value; `false` otherwise.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Relation\n\t     * @sig String -> a -> Object -> Boolean\n\t     * @param {String} name\n\t     * @param {*} val\n\t     * @param {*} obj\n\t     * @return {Boolean}\n\t     * @see R.equals, R.propSatisfies\n\t     * @example\n\t     *\n\t     *      var abby = {name: 'Abby', age: 7, hair: 'blond'};\n\t     *      var fred = {name: 'Fred', age: 12, hair: 'brown'};\n\t     *      var rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n\t     *      var alois = {name: 'Alois', age: 15, disposition: 'surly'};\n\t     *      var kids = [abby, fred, rusty, alois];\n\t     *      var hasBrownHair = R.propEq('hair', 'brown');\n\t     *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n\t     */\n\t    var propEq = _curry3(function propEq(name, val, obj) {\n\t        return propSatisfies(equals(val), name, obj);\n\t    });\n\t\n\t    /**\n\t     * Returns `true` if the specified object property is of the given type;\n\t     * `false` otherwise.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.16.0\n\t     * @category Type\n\t     * @sig Type -> String -> Object -> Boolean\n\t     * @param {Function} type\n\t     * @param {String} name\n\t     * @param {*} obj\n\t     * @return {Boolean}\n\t     * @see R.is, R.propSatisfies\n\t     * @example\n\t     *\n\t     *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n\t     *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n\t     *      R.propIs(Number, 'x', {});            //=> false\n\t     */\n\t    var propIs = _curry3(function propIs(type, name, obj) {\n\t        return propSatisfies(is(type), name, obj);\n\t    });\n\t\n\t    /**\n\t     * Returns a single item by iterating through the list, successively calling\n\t     * the iterator function and passing it an accumulator value and the current\n\t     * value from the array, and then passing the result to the next call.\n\t     *\n\t     * The iterator function receives two values: *(acc, value)*. It may use\n\t     * `R.reduced` to shortcut the iteration.\n\t     *\n\t     * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n\t     * arrays), unlike the native `Array.prototype.reduce` method. For more details\n\t     * on this behavior, see:\n\t     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n\t     *\n\t     * Dispatches to the `reduce` method of the third argument, if present.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig ((a, b) -> a) -> a -> [b] -> a\n\t     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n\t     *        current element from the array.\n\t     * @param {*} acc The accumulator value.\n\t     * @param {Array} list The list to iterate over.\n\t     * @return {*} The final, accumulated value.\n\t     * @see R.reduced, R.addIndex\n\t     * @example\n\t     *\n\t     *      var numbers = [1, 2, 3];\n\t     *      var add = (a, b) => a + b;\n\t     *\n\t     *      R.reduce(add, 10, numbers); //=> 16\n\t     */\n\t    var reduce = _curry3(_reduce);\n\t\n\t    /**\n\t     * The complement of `filter`.\n\t     *\n\t     * Acts as a transducer if a transformer is given in list position.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig Filterable f => (a -> Boolean) -> f a -> f a\n\t     * @param {Function} pred\n\t     * @param {Array} filterable\n\t     * @return {Array}\n\t     * @see R.filter, R.transduce, R.addIndex\n\t     * @example\n\t     *\n\t     *      var isOdd = (n) => n % 2 === 1;\n\t     *\n\t     *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n\t     *\n\t     *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n\t     */\n\t    var reject = _curry2(function reject(pred, filterable) {\n\t        return filter(_complement(pred), filterable);\n\t    });\n\t\n\t    /**\n\t     * Returns a fixed list of size `n` containing a specified identical value.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.1\n\t     * @category List\n\t     * @sig a -> n -> [a]\n\t     * @param {*} value The value to repeat.\n\t     * @param {Number} n The desired size of the output list.\n\t     * @return {Array} A new array containing `n` `value`s.\n\t     * @example\n\t     *\n\t     *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n\t     *\n\t     *      var obj = {};\n\t     *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n\t     *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n\t     */\n\t    var repeat = _curry2(function repeat(value, n) {\n\t        return times(always(value), n);\n\t    });\n\t\n\t    /**\n\t     * Adds together all the elements of a list.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Math\n\t     * @sig [Number] -> Number\n\t     * @param {Array} list An array of numbers\n\t     * @return {Number} The sum of all the numbers in the list.\n\t     * @see R.reduce\n\t     * @example\n\t     *\n\t     *      R.sum([2,4,6,8,100,1]); //=> 121\n\t     */\n\t    var sum = reduce(add, 0);\n\t\n\t    /**\n\t     * Returns a new list containing the last `n` elements of the given list.\n\t     * If `n > list.length`, returns a list of `list.length` elements.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.16.0\n\t     * @category List\n\t     * @sig Number -> [a] -> [a]\n\t     * @sig Number -> String -> String\n\t     * @param {Number} n The number of elements to return.\n\t     * @param {Array} xs The collection to consider.\n\t     * @return {Array}\n\t     * @see R.dropLast\n\t     * @example\n\t     *\n\t     *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n\t     *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n\t     *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n\t     *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n\t     *      R.takeLast(3, 'ramda');               //=> 'mda'\n\t     */\n\t    var takeLast = _curry2(function takeLast(n, xs) {\n\t        return drop(n >= 0 ? xs.length - n : 0, xs);\n\t    });\n\t\n\t    /**\n\t     * Initializes a transducer using supplied iterator function. Returns a single\n\t     * item by iterating through the list, successively calling the transformed\n\t     * iterator function and passing it an accumulator value and the current value\n\t     * from the array, and then passing the result to the next call.\n\t     *\n\t     * The iterator function receives two values: *(acc, value)*. It will be\n\t     * wrapped as a transformer to initialize the transducer. A transformer can be\n\t     * passed directly in place of an iterator function. In both cases, iteration\n\t     * may be stopped early with the `R.reduced` function.\n\t     *\n\t     * A transducer is a function that accepts a transformer and returns a\n\t     * transformer and can be composed directly.\n\t     *\n\t     * A transformer is an an object that provides a 2-arity reducing iterator\n\t     * function, step, 0-arity initial value function, init, and 1-arity result\n\t     * extraction function, result. The step function is used as the iterator\n\t     * function in reduce. The result function is used to convert the final\n\t     * accumulator into the return type and in most cases is R.identity. The init\n\t     * function can be used to provide an initial accumulator, but is ignored by\n\t     * transduce.\n\t     *\n\t     * The iteration is performed with R.reduce after initializing the transducer.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.12.0\n\t     * @category List\n\t     * @sig (c -> c) -> (a,b -> a) -> a -> [b] -> a\n\t     * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n\t     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n\t     *        current element from the array. Wrapped as transformer, if necessary, and used to\n\t     *        initialize the transducer\n\t     * @param {*} acc The initial accumulator value.\n\t     * @param {Array} list The list to iterate over.\n\t     * @return {*} The final, accumulated value.\n\t     * @see R.reduce, R.reduced, R.into\n\t     * @example\n\t     *\n\t     *      var numbers = [1, 2, 3, 4];\n\t     *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n\t     *\n\t     *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n\t     */\n\t    var transduce = curryN(4, function transduce(xf, fn, acc, list) {\n\t        return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n\t    });\n\t\n\t    /**\n\t     * Combines two lists into a set (i.e. no duplicates) composed of the elements\n\t     * of each list. Duplication is determined according to the value returned by\n\t     * applying the supplied predicate to two list elements.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Relation\n\t     * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\n\t     * @param {Function} pred A predicate used to test whether two items are equal.\n\t     * @param {Array} list1 The first list.\n\t     * @param {Array} list2 The second list.\n\t     * @return {Array} The first and second lists concatenated, with\n\t     *         duplicates removed.\n\t     * @see R.union\n\t     * @example\n\t     *\n\t     *      var l1 = [{a: 1}, {a: 2}];\n\t     *      var l2 = [{a: 1}, {a: 4}];\n\t     *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n\t     */\n\t    var unionWith = _curry3(function unionWith(pred, list1, list2) {\n\t        return uniqWith(pred, _concat(list1, list2));\n\t    });\n\t\n\t    /**\n\t     * Takes a spec object and a test object; returns true if the test satisfies\n\t     * the spec, false otherwise. An object satisfies the spec if, for each of the\n\t     * spec's own properties, accessing that property of the object gives the same\n\t     * value (in `R.equals` terms) as accessing that property of the spec.\n\t     *\n\t     * `whereEq` is a specialization of [`where`](#where).\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.14.0\n\t     * @category Object\n\t     * @sig {String: *} -> {String: *} -> Boolean\n\t     * @param {Object} spec\n\t     * @param {Object} testObj\n\t     * @return {Boolean}\n\t     * @see R.where\n\t     * @example\n\t     *\n\t     *      // pred :: Object -> Boolean\n\t     *      var pred = R.whereEq({a: 1, b: 2});\n\t     *\n\t     *      pred({a: 1});              //=> false\n\t     *      pred({a: 1, b: 2});        //=> true\n\t     *      pred({a: 1, b: 2, c: 3});  //=> true\n\t     *      pred({a: 1, b: 1});        //=> false\n\t     */\n\t    var whereEq = _curry2(function whereEq(spec, testObj) {\n\t        return where(map(equals, spec), testObj);\n\t    });\n\t\n\t    var _flatCat = function () {\n\t        var preservingReduced = function (xf) {\n\t            return {\n\t                '@@transducer/init': _xfBase.init,\n\t                '@@transducer/result': function (result) {\n\t                    return xf['@@transducer/result'](result);\n\t                },\n\t                '@@transducer/step': function (result, input) {\n\t                    var ret = xf['@@transducer/step'](result, input);\n\t                    return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n\t                }\n\t            };\n\t        };\n\t        return function _xcat(xf) {\n\t            var rxf = preservingReduced(xf);\n\t            return {\n\t                '@@transducer/init': _xfBase.init,\n\t                '@@transducer/result': function (result) {\n\t                    return rxf['@@transducer/result'](result);\n\t                },\n\t                '@@transducer/step': function (result, input) {\n\t                    return !isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n\t                }\n\t            };\n\t        };\n\t    }();\n\t\n\t    // Array.prototype.indexOf doesn't exist below IE9\n\t    // manually crawl the list to distinguish between +0 and -0\n\t    // NaN\n\t    // non-zero numbers can utilise Set\n\t    // all these types can utilise Set\n\t    // null can utilise Set\n\t    // anything else not covered above, defer to R.equals\n\t    var _indexOf = function _indexOf(list, a, idx) {\n\t        var inf, item;\n\t        // Array.prototype.indexOf doesn't exist below IE9\n\t        if (typeof list.indexOf === 'function') {\n\t            switch (typeof a) {\n\t            case 'number':\n\t                if (a === 0) {\n\t                    // manually crawl the list to distinguish between +0 and -0\n\t                    inf = 1 / a;\n\t                    while (idx < list.length) {\n\t                        item = list[idx];\n\t                        if (item === 0 && 1 / item === inf) {\n\t                            return idx;\n\t                        }\n\t                        idx += 1;\n\t                    }\n\t                    return -1;\n\t                } else if (a !== a) {\n\t                    // NaN\n\t                    while (idx < list.length) {\n\t                        item = list[idx];\n\t                        if (typeof item === 'number' && item !== item) {\n\t                            return idx;\n\t                        }\n\t                        idx += 1;\n\t                    }\n\t                    return -1;\n\t                }\n\t                // non-zero numbers can utilise Set\n\t                return list.indexOf(a, idx);\n\t            // all these types can utilise Set\n\t            case 'string':\n\t            case 'boolean':\n\t            case 'function':\n\t            case 'undefined':\n\t                return list.indexOf(a, idx);\n\t            case 'object':\n\t                if (a === null) {\n\t                    // null can utilise Set\n\t                    return list.indexOf(a, idx);\n\t                }\n\t            }\n\t        }\n\t        // anything else not covered above, defer to R.equals\n\t        while (idx < list.length) {\n\t            if (equals(list[idx], a)) {\n\t                return idx;\n\t            }\n\t            idx += 1;\n\t        }\n\t        return -1;\n\t    };\n\t\n\t    var _xchain = _curry2(function _xchain(f, xf) {\n\t        return map(f, _flatCat(xf));\n\t    });\n\t\n\t    /**\n\t     * Takes a list of predicates and returns a predicate that returns true for a\n\t     * given list of arguments if every one of the provided predicates is satisfied\n\t     * by those arguments.\n\t     *\n\t     * The function returned is a curried function whose arity matches that of the\n\t     * highest-arity predicate.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category Logic\n\t     * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n\t     * @param {Array} preds\n\t     * @return {Function}\n\t     * @see R.anyPass\n\t     * @example\n\t     *\n\t     *      var isQueen = R.propEq('rank', 'Q');\n\t     *      var isSpade = R.propEq('suit', '♠︎');\n\t     *      var isQueenOfSpades = R.allPass([isQueen, isSpade]);\n\t     *\n\t     *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false\n\t     *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true\n\t     */\n\t    var allPass = _curry1(function allPass(preds) {\n\t        return curryN(reduce(max, 0, pluck('length', preds)), function () {\n\t            var idx = 0;\n\t            var len = preds.length;\n\t            while (idx < len) {\n\t                if (!preds[idx].apply(this, arguments)) {\n\t                    return false;\n\t                }\n\t                idx += 1;\n\t            }\n\t            return true;\n\t        });\n\t    });\n\t\n\t    /**\n\t     * Returns `true` if all elements are unique, in `R.equals` terms, otherwise\n\t     * `false`.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.18.0\n\t     * @category List\n\t     * @sig [a] -> Boolean\n\t     * @param {Array} list The array to consider.\n\t     * @return {Boolean} `true` if all elements are unique, else `false`.\n\t     * @example\n\t     *\n\t     *      R.allUniq(['1', 1]); //=> true\n\t     *      R.allUniq([1, 1]);   //=> false\n\t     *      R.allUniq([[42], [42]]); //=> false\n\t     */\n\t    var allUniq = _curry1(function allUniq(list) {\n\t        var len = list.length;\n\t        var idx = 0;\n\t        while (idx < len) {\n\t            if (_indexOf(list, list[idx], idx + 1) >= 0) {\n\t                return false;\n\t            }\n\t            idx += 1;\n\t        }\n\t        return true;\n\t    });\n\t\n\t    /**\n\t     * Takes a list of predicates and returns a predicate that returns true for a\n\t     * given list of arguments if at least one of the provided predicates is\n\t     * satisfied by those arguments.\n\t     *\n\t     * The function returned is a curried function whose arity matches that of the\n\t     * highest-arity predicate.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category Logic\n\t     * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n\t     * @param {Array} preds\n\t     * @return {Function}\n\t     * @see R.allPass\n\t     * @example\n\t     *\n\t     *      var gte = R.anyPass([R.gt, R.equals]);\n\t     *\n\t     *      gte(3, 2); //=> true\n\t     *      gte(2, 2); //=> true\n\t     *      gte(2, 3); //=> false\n\t     */\n\t    var anyPass = _curry1(function anyPass(preds) {\n\t        return curryN(reduce(max, 0, pluck('length', preds)), function () {\n\t            var idx = 0;\n\t            var len = preds.length;\n\t            while (idx < len) {\n\t                if (preds[idx].apply(this, arguments)) {\n\t                    return true;\n\t                }\n\t                idx += 1;\n\t            }\n\t            return false;\n\t        });\n\t    });\n\t\n\t    /**\n\t     * ap applies a list of functions to a list of values.\n\t     *\n\t     * Dispatches to the `ap` method of the second argument, if present. Also\n\t     * treats functions as applicatives.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.3.0\n\t     * @category Function\n\t     * @sig [f] -> [a] -> [f a]\n\t     * @param {Array} fns An array of functions\n\t     * @param {Array} vs An array of values\n\t     * @return {Array} An array of results of applying each of `fns` to all of `vs` in turn.\n\t     * @example\n\t     *\n\t     *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n\t     */\n\t    // else\n\t    var ap = _curry2(function ap(applicative, fn) {\n\t        return typeof applicative.ap === 'function' ? applicative.ap(fn) : typeof applicative === 'function' ? curryN(Math.max(applicative.length, fn.length), function () {\n\t            return applicative.apply(this, arguments)(fn.apply(this, arguments));\n\t        }) : // else\n\t        _reduce(function (acc, f) {\n\t            return _concat(acc, map(f, fn));\n\t        }, [], applicative);\n\t    });\n\t\n\t    /**\n\t     * Returns the result of calling its first argument with the remaining\n\t     * arguments. This is occasionally useful as a converging function for\n\t     * `R.converge`: the left branch can produce a function while the right branch\n\t     * produces a value to be passed to that function as an argument.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category Function\n\t     * @sig (*... -> a),*... -> a\n\t     * @param {Function} fn The function to apply to the remaining arguments.\n\t     * @param {...*} args Any number of positional arguments.\n\t     * @return {*}\n\t     * @see R.apply\n\t     * @example\n\t     *\n\t     *      var indentN = R.pipe(R.times(R.always(' ')),\n\t     *                           R.join(''),\n\t     *                           R.replace(/^(?!$)/gm));\n\t     *\n\t     *      var format = R.converge(R.call, [\n\t     *                                  R.pipe(R.prop('indent'), indentN),\n\t     *                                  R.prop('value')\n\t     *                              ]);\n\t     *\n\t     *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n\t     */\n\t    var call = curry(function call(fn) {\n\t        return fn.apply(this, _slice(arguments, 1));\n\t    });\n\t\n\t    /**\n\t     * `chain` maps a function over a list and concatenates the results. `chain`\n\t     * is also known as `flatMap` in some libraries\n\t     *\n\t     * Dispatches to the `chain` method of the second argument, if present.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.3.0\n\t     * @category List\n\t     * @sig (a -> [b]) -> [a] -> [b]\n\t     * @param {Function} fn\n\t     * @param {Array} list\n\t     * @return {Array}\n\t     * @example\n\t     *\n\t     *      var duplicate = n => [n, n];\n\t     *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n\t     */\n\t    var chain = _curry2(_dispatchable('chain', _xchain, function chain(fn, monad) {\n\t        if (typeof monad === 'function') {\n\t            return function () {\n\t                return monad.call(this, fn.apply(this, arguments)).apply(this, arguments);\n\t            };\n\t        }\n\t        return _makeFlat(false)(map(fn, monad));\n\t    }));\n\t\n\t    /**\n\t     * Turns a list of Functors into a Functor of a list, applying a mapping\n\t     * function to the elements of the list along the way.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.8.0\n\t     * @category List\n\t     * @sig Functor f => (a -> f b) -> (x -> f x) -> [a] -> f [b]\n\t     * @param {Function} fn The transformation function\n\t     * @param {Function} of A function that returns the data type to return\n\t     * @param {Array} list An array of functors of the same type\n\t     * @return {*}\n\t     * @see R.traverse\n\t     * @deprecated since v0.19.0\n\t     * @example\n\t     *\n\t     *      var add10 = R.map(R.add(10));\n\t     *      R.commuteMap(add10, R.of, [[1], [2, 3]]);   //=> [[11, 12], [11, 13]]\n\t     *      R.commuteMap(add10, R.of, [[1, 2], [3]]);   //=> [[11, 13], [12, 13]]\n\t     *      R.commuteMap(add10, R.of, [[1], [2], [3]]); //=> [[11, 12, 13]]\n\t     *      R.commuteMap(add10, Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([11, 12, 13])\n\t     *      R.commuteMap(add10, Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n\t     *\n\t     *      var fetch = url => Future((rej, res) => http.get(url, res).on('error', rej));\n\t     *      R.commuteMap(fetch, Future.of, [\n\t     *        'http://ramdajs.com',\n\t     *        'http://github.com/ramda'\n\t     *      ]); //=> Future([IncomingMessage, IncomingMessage])\n\t     */\n\t    var commuteMap = _curry3(function commuteMap(fn, of, list) {\n\t        function consF(acc, x) {\n\t            return ap(map(prepend, fn(x)), acc);\n\t        }\n\t        return reduceRight(consF, of([]), list);\n\t    });\n\t\n\t    /**\n\t     * Wraps a constructor function inside a curried function that can be called\n\t     * with the same arguments and returns the same type. The arity of the function\n\t     * returned is specified to allow using variadic constructor functions.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.4.0\n\t     * @category Function\n\t     * @sig Number -> (* -> {*}) -> (* -> {*})\n\t     * @param {Number} n The arity of the constructor function.\n\t     * @param {Function} Fn The constructor function to wrap.\n\t     * @return {Function} A wrapped, curried constructor function.\n\t     * @example\n\t     *\n\t     *      // Variadic constructor function\n\t     *      var Widget = () => {\n\t     *        this.children = Array.prototype.slice.call(arguments);\n\t     *        // ...\n\t     *      };\n\t     *      Widget.prototype = {\n\t     *        // ...\n\t     *      };\n\t     *      var allConfigs = [\n\t     *        // ...\n\t     *      ];\n\t     *      R.map(R.constructN(1, Widget), allConfigs); // a list of Widgets\n\t     */\n\t    var constructN = _curry2(function constructN(n, Fn) {\n\t        if (n > 10) {\n\t            throw new Error('Constructor with greater than ten arguments');\n\t        }\n\t        if (n === 0) {\n\t            return function () {\n\t                return new Fn();\n\t            };\n\t        }\n\t        return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n\t            switch (arguments.length) {\n\t            case 1:\n\t                return new Fn($0);\n\t            case 2:\n\t                return new Fn($0, $1);\n\t            case 3:\n\t                return new Fn($0, $1, $2);\n\t            case 4:\n\t                return new Fn($0, $1, $2, $3);\n\t            case 5:\n\t                return new Fn($0, $1, $2, $3, $4);\n\t            case 6:\n\t                return new Fn($0, $1, $2, $3, $4, $5);\n\t            case 7:\n\t                return new Fn($0, $1, $2, $3, $4, $5, $6);\n\t            case 8:\n\t                return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n\t            case 9:\n\t                return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n\t            case 10:\n\t                return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n\t            }\n\t        }));\n\t    });\n\t\n\t    /**\n\t     * Accepts a converging function and a list of branching functions and returns\n\t     * a new function. When invoked, this new function is applied to some\n\t     * arguments, each branching function is applied to those same arguments. The\n\t     * results of each branching function are passed as arguments to the converging\n\t     * function to produce the return value.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.4.2\n\t     * @category Function\n\t     * @sig (x1 -> x2 -> ... -> z) -> [(a -> b -> ... -> x1), (a -> b -> ... -> x2), ...] -> (a -> b -> ... -> z)\n\t     * @param {Function} after A function. `after` will be invoked with the return values of\n\t     *        `fn1` and `fn2` as its arguments.\n\t     * @param {Array} functions A list of functions.\n\t     * @return {Function} A new function.\n\t     * @example\n\t     *\n\t     *      var add = (a, b) => a + b;\n\t     *      var multiply = (a, b) => a * b;\n\t     *      var subtract = (a, b) => a - b;\n\t     *\n\t     *      //≅ multiply( add(1, 2), subtract(1, 2) );\n\t     *      R.converge(multiply, [add, subtract])(1, 2); //=> -3\n\t     *\n\t     *      var add3 = (a, b, c) => a + b + c;\n\t     *      R.converge(add3, [multiply, add, subtract])(1, 2); //=> 4\n\t     */\n\t    var converge = _curry2(function converge(after, fns) {\n\t        return curryN(Math.max.apply(Math, pluck('length', fns)), function () {\n\t            var args = arguments;\n\t            var context = this;\n\t            return after.apply(context, _map(function (fn) {\n\t                return fn.apply(context, args);\n\t            }, fns));\n\t        });\n\t    });\n\t\n\t    /**\n\t     * Returns a new list without any consecutively repeating elements. Equality is\n\t     * determined by applying the supplied predicate two consecutive elements. The\n\t     * first element in a series of equal element is the one being preserved.\n\t     *\n\t     * Dispatches to the `dropRepeatsWith` method of the second argument, if present.\n\t     *\n\t     * Acts as a transducer if a transformer is given in list position.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.14.0\n\t     * @category List\n\t     * @sig (a, a -> Boolean) -> [a] -> [a]\n\t     * @param {Function} pred A predicate used to test whether two items are equal.\n\t     * @param {Array} list The array to consider.\n\t     * @return {Array} `list` without repeating elements.\n\t     * @see R.transduce\n\t     * @example\n\t     *\n\t     *      var lengthEq = (x, y) => Math.abs(x) === Math.abs(y);\n\t     *      var l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n\t     *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n\t     */\n\t    var dropRepeatsWith = _curry2(_dispatchable('dropRepeatsWith', _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n\t        var result = [];\n\t        var idx = 1;\n\t        var len = list.length;\n\t        if (len !== 0) {\n\t            result[0] = list[0];\n\t            while (idx < len) {\n\t                if (!pred(last(result), list[idx])) {\n\t                    result[result.length] = list[idx];\n\t                }\n\t                idx += 1;\n\t            }\n\t        }\n\t        return result;\n\t    }));\n\t\n\t    /**\n\t     * Takes a function and two values in its domain and returns `true` if the\n\t     * values map to the same value in the codomain; `false` otherwise.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.18.0\n\t     * @category Relation\n\t     * @sig (a -> b) -> a -> a -> Boolean\n\t     * @param {Function} f\n\t     * @param {*} x\n\t     * @param {*} y\n\t     * @return {Boolean}\n\t     * @example\n\t     *\n\t     *      R.eqBy(Math.abs, 5, -5); //=> true\n\t     */\n\t    var eqBy = _curry3(function eqBy(f, x, y) {\n\t        return equals(f(x), f(y));\n\t    });\n\t\n\t    /**\n\t     * Reports whether two objects have the same value, in `R.equals` terms, for\n\t     * the specified property. Useful as a curried predicate.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Object\n\t     * @sig k -> {k: v} -> {k: v} -> Boolean\n\t     * @param {String} prop The name of the property to compare\n\t     * @param {Object} obj1\n\t     * @param {Object} obj2\n\t     * @return {Boolean}\n\t     *\n\t     * @example\n\t     *\n\t     *      var o1 = { a: 1, b: 2, c: 3, d: 4 };\n\t     *      var o2 = { a: 10, b: 20, c: 3, d: 40 };\n\t     *      R.eqProps('a', o1, o2); //=> false\n\t     *      R.eqProps('c', o1, o2); //=> true\n\t     */\n\t    var eqProps = _curry3(function eqProps(prop, obj1, obj2) {\n\t        return equals(obj1[prop], obj2[prop]);\n\t    });\n\t\n\t    /**\n\t     * Returns the position of the first occurrence of an item in an array, or -1\n\t     * if the item is not included in the array. `R.equals` is used to determine\n\t     * equality.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig a -> [a] -> Number\n\t     * @param {*} target The item to find.\n\t     * @param {Array} xs The array to search in.\n\t     * @return {Number} the index of the target, or -1 if the target is not found.\n\t     * @see R.lastIndexOf\n\t     * @example\n\t     *\n\t     *      R.indexOf(3, [1,2,3,4]); //=> 2\n\t     *      R.indexOf(10, [1,2,3,4]); //=> -1\n\t     */\n\t    var indexOf = _curry2(function indexOf(target, xs) {\n\t        return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n\t    });\n\t\n\t    /**\n\t     * juxt applies a list of functions to a list of values.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since 0.19.1\n\t     * @since 0.19.0\n\t     * @category Function\n\t     * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n\t     * @param {Array} fns An array of functions\n\t     * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n\t     * @example\n\t     *\n\t     *      var range = R.juxt([Math.min, Math.max]);\n\t     *      range(3, 4, 9, -3); //=> [-3, 9]\n\t     */\n\t    var juxt = _curry1(function juxt(fns) {\n\t        return function () {\n\t            return map(apply(__, arguments), fns);\n\t        };\n\t    });\n\t\n\t    /**\n\t     * Returns a lens for the given getter and setter functions. The getter \"gets\"\n\t     * the value of the focus; the setter \"sets\" the value of the focus. The setter\n\t     * should not mutate the data structure.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.8.0\n\t     * @category Object\n\t     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n\t     * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n\t     * @param {Function} getter\n\t     * @param {Function} setter\n\t     * @return {Lens}\n\t     * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n\t     * @example\n\t     *\n\t     *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\n\t     *\n\t     *      R.view(xLens, {x: 1, y: 2});            //=> 1\n\t     *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n\t     *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n\t     */\n\t    var lens = _curry2(function lens(getter, setter) {\n\t        return function (f) {\n\t            return function (s) {\n\t                return map(function (v) {\n\t                    return setter(v, s);\n\t                }, f(getter(s)));\n\t            };\n\t        };\n\t    });\n\t\n\t    /**\n\t     * Returns a lens whose focus is the specified index.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.14.0\n\t     * @category Object\n\t     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n\t     * @sig Number -> Lens s a\n\t     * @param {Number} n\n\t     * @return {Lens}\n\t     * @see R.view, R.set, R.over\n\t     * @example\n\t     *\n\t     *      var headLens = R.lensIndex(0);\n\t     *\n\t     *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n\t     *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n\t     *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n\t     */\n\t    var lensIndex = _curry1(function lensIndex(n) {\n\t        return lens(nth(n), update(n));\n\t    });\n\t\n\t    /**\n\t     * Returns a lens whose focus is the specified path.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since 0.19.1\n\t     * @since 0.19.0\n\t     * @category Object\n\t     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n\t     * @sig [String] -> Lens s a\n\t     * @param {Array} path The path to use.\n\t     * @return {Lens}\n\t     * @see R.view, R.set, R.over\n\t     * @example\n\t     *\n\t     *      var xyLens = R.lensPath(['x', 'y']);\n\t     *\n\t     *      R.view(xyLens, {x: {y: 2, z: 3}});            //=> 2\n\t     *      R.set(xyLens, 4, {x: {y: 2, z: 3}});          //=> {x: {y: 4, z: 3}}\n\t     *      R.over(xyLens, R.negate, {x: {y: 2, z: 3}});  //=> {x: {y: -2, z: 3}}\n\t     */\n\t    var lensPath = _curry1(function lensPath(p) {\n\t        return lens(path(p), assocPath(p));\n\t    });\n\t\n\t    /**\n\t     * Returns a lens whose focus is the specified property.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.14.0\n\t     * @category Object\n\t     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n\t     * @sig String -> Lens s a\n\t     * @param {String} k\n\t     * @return {Lens}\n\t     * @see R.view, R.set, R.over\n\t     * @example\n\t     *\n\t     *      var xLens = R.lensProp('x');\n\t     *\n\t     *      R.view(xLens, {x: 1, y: 2});            //=> 1\n\t     *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n\t     *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n\t     */\n\t    var lensProp = _curry1(function lensProp(k) {\n\t        return lens(prop(k), assoc(k));\n\t    });\n\t\n\t    /**\n\t     * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n\t     * many lists (or other objects that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply)).\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.7.0\n\t     * @category Function\n\t     * @sig Number -> (*... -> *) -> ([*]... -> [*])\n\t     * @param {Function} fn The function to lift into higher context\n\t     * @return {Function} The lifted function.\n\t     * @see R.lift\n\t     * @example\n\t     *\n\t     *      var madd3 = R.liftN(3, R.curryN(3, (...args) => R.sum(args)));\n\t     *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n\t     */\n\t    var liftN = _curry2(function liftN(arity, fn) {\n\t        var lifted = curryN(arity, fn);\n\t        return curryN(arity, function () {\n\t            return _reduce(ap, map(lifted, arguments[0]), _slice(arguments, 1));\n\t        });\n\t    });\n\t\n\t    /**\n\t     * Returns the mean of the given list of numbers.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.14.0\n\t     * @category Math\n\t     * @sig [Number] -> Number\n\t     * @param {Array} list\n\t     * @return {Number}\n\t     * @example\n\t     *\n\t     *      R.mean([2, 7, 9]); //=> 6\n\t     *      R.mean([]); //=> NaN\n\t     */\n\t    var mean = _curry1(function mean(list) {\n\t        return sum(list) / list.length;\n\t    });\n\t\n\t    /**\n\t     * Returns the median of the given list of numbers.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.14.0\n\t     * @category Math\n\t     * @sig [Number] -> Number\n\t     * @param {Array} list\n\t     * @return {Number}\n\t     * @example\n\t     *\n\t     *      R.median([2, 9, 7]); //=> 7\n\t     *      R.median([7, 2, 10, 9]); //=> 8\n\t     *      R.median([]); //=> NaN\n\t     */\n\t    var median = _curry1(function median(list) {\n\t        var len = list.length;\n\t        if (len === 0) {\n\t            return NaN;\n\t        }\n\t        var width = 2 - len % 2;\n\t        var idx = (len - width) / 2;\n\t        return mean(_slice(list).sort(function (a, b) {\n\t            return a < b ? -1 : a > b ? 1 : 0;\n\t        }).slice(idx, idx + width));\n\t    });\n\t\n\t    /**\n\t     * Create a new object with the own properties of the first object merged with\n\t     * the own properties of the second object. If a key exists in both objects,\n\t     * the value from the second object will be used.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Object\n\t     * @sig {k: v} -> {k: v} -> {k: v}\n\t     * @param {Object} l\n\t     * @param {Object} r\n\t     * @return {Object}\n\t     * @see R.mergeWith, R.mergeWithKey\n\t     * @example\n\t     *\n\t     *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n\t     *      //=> { 'name': 'fred', 'age': 40 }\n\t     *\n\t     *      var resetToDefault = R.merge(R.__, {x: 0});\n\t     *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n\t     */\n\t    var merge = mergeWith(function (l, r) {\n\t        return r;\n\t    });\n\t\n\t    /**\n\t     * Merges a list of objects together into one object.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.10.0\n\t     * @category List\n\t     * @sig [{k: v}] -> {k: v}\n\t     * @param {Array} list An array of objects\n\t     * @return {Object} A merged object.\n\t     * @see R.reduce\n\t     * @example\n\t     *\n\t     *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n\t     *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n\t     */\n\t    var mergeAll = _curry1(function mergeAll(list) {\n\t        return reduce(merge, {}, list);\n\t    });\n\t\n\t    /**\n\t     * Performs left-to-right function composition. The leftmost function may have\n\t     * any arity; the remaining functions must be unary.\n\t     *\n\t     * In some libraries this function is named `sequence`.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Function\n\t     * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n\t     * @param {...Function} functions\n\t     * @return {Function}\n\t     * @see R.compose\n\t     * @example\n\t     *\n\t     *      var f = R.pipe(Math.pow, R.negate, R.inc);\n\t     *\n\t     *      f(3, 4); // -(3^4) + 1\n\t     */\n\t    var pipe = function pipe() {\n\t        if (arguments.length === 0) {\n\t            throw new Error('pipe requires at least one argument');\n\t        }\n\t        return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n\t    };\n\t\n\t    /**\n\t     * Performs left-to-right composition of one or more Promise-returning\n\t     * functions. The leftmost function may have any arity; the remaining functions\n\t     * must be unary.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.10.0\n\t     * @category Function\n\t     * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n\t     * @param {...Function} functions\n\t     * @return {Function}\n\t     * @see R.composeP\n\t     * @example\n\t     *\n\t     *      //  followersForUser :: String -> Promise [User]\n\t     *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n\t     */\n\t    var pipeP = function pipeP() {\n\t        if (arguments.length === 0) {\n\t            throw new Error('pipeP requires at least one argument');\n\t        }\n\t        return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));\n\t    };\n\t\n\t    /**\n\t     * Multiplies together all the elements of a list.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Math\n\t     * @sig [Number] -> Number\n\t     * @param {Array} list An array of numbers\n\t     * @return {Number} The product of all the numbers in the list.\n\t     * @see R.reduce\n\t     * @example\n\t     *\n\t     *      R.product([2,4,6,8,100,1]); //=> 38400\n\t     */\n\t    var product = reduce(multiply, 1);\n\t\n\t    /**\n\t     * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n\t     * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n\t     * Applicative of Traversable.\n\t     *\n\t     * Dispatches to the `sequence` method of the second argument, if present.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since 0.19.1\n\t     * @since 0.19.0\n\t     * @category List\n\t     * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n\t     * @param {Function} of\n\t     * @param {*} traversable\n\t     * @return {*}\n\t     * @see R.traverse\n\t     * @example\n\t     *\n\t     *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n\t     *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n\t     *\n\t     *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n\t     *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n\t     */\n\t    var sequence = _curry2(function sequence(of, traversable) {\n\t        return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (acc, x) {\n\t            return ap(map(prepend, x), acc);\n\t        }, of([]), traversable);\n\t    });\n\t\n\t    /**\n\t     * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n\t     * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n\t     * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n\t     * into an Applicative of Traversable.\n\t     *\n\t     * Dispatches to the `sequence` method of the third argument, if present.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since 0.19.1\n\t     * @since 0.19.0\n\t     * @category List\n\t     * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\n\t     * @param {Function} of\n\t     * @param {Function} f\n\t     * @param {*} traversable\n\t     * @return {*}\n\t     * @see R.sequence\n\t     * @example\n\t     *\n\t     *      R.traverse(Maybe.of, R.negate, [Just(1), Just(2), Just(3)]);   //=> Just([-1, -2, -3])\n\t     *      R.traverse(Maybe.of, R.negate, [Just(1), Just(2), Nothing()]); //=> Nothing()\n\t     *\n\t     *      R.traverse(R.of, R.negate, Just([1, 2, 3])); //=> [Just(-1), Just(-2), Just(-3)]\n\t     *      R.traverse(R.of, R.negate, Nothing());       //=> [Nothing()]\n\t     */\n\t    var traverse = _curry3(function traverse(of, f, traversable) {\n\t        return sequence(of, map(f, traversable));\n\t    });\n\t\n\t    /**\n\t     * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n\t     * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.3.0\n\t     * @category List\n\t     * @sig Chain c => c (c a) -> c a\n\t     * @param {*} list\n\t     * @return {*}\n\t     * @see R.flatten, R.chain\n\t     * @example\n\t     *\n\t     *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n\t     *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n\t     */\n\t    var unnest = chain(_identity);\n\t\n\t    var _contains = function _contains(a, list) {\n\t        return _indexOf(list, a, 0) >= 0;\n\t    };\n\t\n\t    var _stepCat = function () {\n\t        var _stepCatArray = {\n\t            '@@transducer/init': Array,\n\t            '@@transducer/step': function (xs, x) {\n\t                return _concat(xs, [x]);\n\t            },\n\t            '@@transducer/result': _identity\n\t        };\n\t        var _stepCatString = {\n\t            '@@transducer/init': String,\n\t            '@@transducer/step': function (a, b) {\n\t                return a + b;\n\t            },\n\t            '@@transducer/result': _identity\n\t        };\n\t        var _stepCatObject = {\n\t            '@@transducer/init': Object,\n\t            '@@transducer/step': function (result, input) {\n\t                return merge(result, isArrayLike(input) ? objOf(input[0], input[1]) : input);\n\t            },\n\t            '@@transducer/result': _identity\n\t        };\n\t        return function _stepCat(obj) {\n\t            if (_isTransformer(obj)) {\n\t                return obj;\n\t            }\n\t            if (isArrayLike(obj)) {\n\t                return _stepCatArray;\n\t            }\n\t            if (typeof obj === 'string') {\n\t                return _stepCatString;\n\t            }\n\t            if (typeof obj === 'object') {\n\t                return _stepCatObject;\n\t            }\n\t            throw new Error('Cannot create transformer for ' + obj);\n\t        };\n\t    }();\n\t\n\t    //  mapPairs :: (Object, [String]) -> [String]\n\t    var _toString = function _toString(x, seen) {\n\t        var recur = function recur(y) {\n\t            var xs = seen.concat([x]);\n\t            return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n\t        };\n\t        //  mapPairs :: (Object, [String]) -> [String]\n\t        var mapPairs = function (obj, keys) {\n\t            return _map(function (k) {\n\t                return _quote(k) + ': ' + recur(obj[k]);\n\t            }, keys.slice().sort());\n\t        };\n\t        switch (Object.prototype.toString.call(x)) {\n\t        case '[object Arguments]':\n\t            return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n\t        case '[object Array]':\n\t            return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n\t                return /^\\d+$/.test(k);\n\t            }, keys(x)))).join(', ') + ']';\n\t        case '[object Boolean]':\n\t            return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n\t        case '[object Date]':\n\t            return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n\t        case '[object Null]':\n\t            return 'null';\n\t        case '[object Number]':\n\t            return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n\t        case '[object String]':\n\t            return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n\t        case '[object Undefined]':\n\t            return 'undefined';\n\t        default:\n\t            if (typeof x.toString === 'function') {\n\t                var repr = x.toString();\n\t                if (repr !== '[object Object]') {\n\t                    return repr;\n\t                }\n\t            }\n\t            return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n\t        }\n\t    };\n\t\n\t    /**\n\t     * Turns a list of Functors into a Functor of a list.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.8.0\n\t     * @category List\n\t     * @sig Functor f => (x -> f x) -> [f a] -> f [a]\n\t     * @param {Function} of A function that returns the data type to return\n\t     * @param {Array} list An array of functors of the same type\n\t     * @return {*}\n\t     * @see R.sequence\n\t     * @deprecated since v0.19.0\n\t     * @example\n\t     *\n\t     *      R.commute(R.of, [[1], [2, 3]]);   //=> [[1, 2], [1, 3]]\n\t     *      R.commute(R.of, [[1, 2], [3]]);   //=> [[1, 3], [2, 3]]\n\t     *      R.commute(R.of, [[1], [2], [3]]); //=> [[1, 2, 3]]\n\t     *      R.commute(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n\t     *      R.commute(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n\t     */\n\t    var commute = commuteMap(identity);\n\t\n\t    /**\n\t     * Performs right-to-left function composition. The rightmost function may have\n\t     * any arity; the remaining functions must be unary.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Function\n\t     * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n\t     * @param {...Function} functions\n\t     * @return {Function}\n\t     * @see R.pipe\n\t     * @example\n\t     *\n\t     *      var f = R.compose(R.inc, R.negate, Math.pow);\n\t     *\n\t     *      f(3, 4); // -(3^4) + 1\n\t     */\n\t    var compose = function compose() {\n\t        if (arguments.length === 0) {\n\t            throw new Error('compose requires at least one argument');\n\t        }\n\t        return pipe.apply(this, reverse(arguments));\n\t    };\n\t\n\t    /**\n\t     * Returns the right-to-left Kleisli composition of the provided functions,\n\t     * each of which must return a value of a type supported by [`chain`](#chain).\n\t     *\n\t     * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), R.chain(f))`.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.16.0\n\t     * @category Function\n\t     * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (m a -> m z)\n\t     * @param {...Function}\n\t     * @return {Function}\n\t     * @see R.pipeK\n\t     * @example\n\t     *\n\t     *      //  parseJson :: String -> Maybe *\n\t     *      //  get :: String -> Object -> Maybe *\n\t     *\n\t     *      //  getStateCode :: Maybe String -> Maybe String\n\t     *      var getStateCode = R.composeK(\n\t     *        R.compose(Maybe.of, R.toUpper),\n\t     *        get('state'),\n\t     *        get('address'),\n\t     *        get('user'),\n\t     *        parseJson\n\t     *      );\n\t     *\n\t     *      getStateCode(Maybe.of('{\"user\":{\"address\":{\"state\":\"ny\"}}}'));\n\t     *      //=> Just('NY')\n\t     *      getStateCode(Maybe.of('[Invalid JSON]'));\n\t     *      //=> Nothing()\n\t     */\n\t    var composeK = function composeK() {\n\t        return compose.apply(this, prepend(identity, map(chain, arguments)));\n\t    };\n\t\n\t    /**\n\t     * Performs right-to-left composition of one or more Promise-returning\n\t     * functions. The rightmost function may have any arity; the remaining\n\t     * functions must be unary.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.10.0\n\t     * @category Function\n\t     * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n\t     * @param {...Function} functions\n\t     * @return {Function}\n\t     * @see R.pipeP\n\t     * @example\n\t     *\n\t     *      //  followersForUser :: String -> Promise [User]\n\t     *      var followersForUser = R.composeP(db.getFollowers, db.getUserById);\n\t     */\n\t    var composeP = function composeP() {\n\t        if (arguments.length === 0) {\n\t            throw new Error('composeP requires at least one argument');\n\t        }\n\t        return pipeP.apply(this, reverse(arguments));\n\t    };\n\t\n\t    /**\n\t     * Wraps a constructor function inside a curried function that can be called\n\t     * with the same arguments and returns the same type.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Function\n\t     * @sig (* -> {*}) -> (* -> {*})\n\t     * @param {Function} Fn The constructor function to wrap.\n\t     * @return {Function} A wrapped, curried constructor function.\n\t     * @example\n\t     *\n\t     *      // Constructor function\n\t     *      var Widget = config => {\n\t     *        // ...\n\t     *      };\n\t     *      Widget.prototype = {\n\t     *        // ...\n\t     *      };\n\t     *      var allConfigs = [\n\t     *        // ...\n\t     *      ];\n\t     *      R.map(R.construct(Widget), allConfigs); // a list of Widgets\n\t     */\n\t    var construct = _curry1(function construct(Fn) {\n\t        return constructN(Fn.length, Fn);\n\t    });\n\t\n\t    /**\n\t     * Returns `true` if the specified value is equal, in `R.equals` terms, to at\n\t     * least one element of the given list; `false` otherwise.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig a -> [a] -> Boolean\n\t     * @param {Object} a The item to compare against.\n\t     * @param {Array} list The array to consider.\n\t     * @return {Boolean} `true` if the item is in the list, `false` otherwise.\n\t     * @see R.any\n\t     * @example\n\t     *\n\t     *      R.contains(3, [1, 2, 3]); //=> true\n\t     *      R.contains(4, [1, 2, 3]); //=> false\n\t     *      R.contains([42], [[42]]); //=> true\n\t     */\n\t    var contains = _curry2(_contains);\n\t\n\t    /**\n\t     * Finds the set (i.e. no duplicates) of all elements in the first list not\n\t     * contained in the second list.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Relation\n\t     * @sig [*] -> [*] -> [*]\n\t     * @param {Array} list1 The first list.\n\t     * @param {Array} list2 The second list.\n\t     * @return {Array} The elements in `list1` that are not in `list2`.\n\t     * @see R.differenceWith\n\t     * @example\n\t     *\n\t     *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n\t     *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n\t     */\n\t    var difference = _curry2(function difference(first, second) {\n\t        var out = [];\n\t        var idx = 0;\n\t        var firstLen = first.length;\n\t        while (idx < firstLen) {\n\t            if (!_contains(first[idx], second) && !_contains(first[idx], out)) {\n\t                out[out.length] = first[idx];\n\t            }\n\t            idx += 1;\n\t        }\n\t        return out;\n\t    });\n\t\n\t    /**\n\t     * Returns a new list without any consecutively repeating elements. `R.equals`\n\t     * is used to determine equality.\n\t     *\n\t     * Dispatches to the `dropRepeats` method of the first argument, if present.\n\t     *\n\t     * Acts as a transducer if a transformer is given in list position.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.14.0\n\t     * @category List\n\t     * @sig [a] -> [a]\n\t     * @param {Array} list The array to consider.\n\t     * @return {Array} `list` without repeating elements.\n\t     * @see R.transduce\n\t     * @example\n\t     *\n\t     *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n\t     */\n\t    var dropRepeats = _curry1(_dispatchable('dropRepeats', _xdropRepeatsWith(equals), dropRepeatsWith(equals)));\n\t\n\t    /**\n\t     * Transforms the items of the list with the transducer and appends the\n\t     * transformed items to the accumulator using an appropriate iterator function\n\t     * based on the accumulator type.\n\t     *\n\t     * The accumulator can be an array, string, object or a transformer. Iterated\n\t     * items will be appended to arrays and concatenated to strings. Objects will\n\t     * be merged directly or 2-item arrays will be merged as key, value pairs.\n\t     *\n\t     * The accumulator can also be a transformer object that provides a 2-arity\n\t     * reducing iterator function, step, 0-arity initial value function, init, and\n\t     * 1-arity result extraction function result. The step function is used as the\n\t     * iterator function in reduce. The result function is used to convert the\n\t     * final accumulator into the return type and in most cases is R.identity. The\n\t     * init function is used to provide the initial accumulator.\n\t     *\n\t     * The iteration is performed with R.reduce after initializing the transducer.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.12.0\n\t     * @category List\n\t     * @sig a -> (b -> b) -> [c] -> a\n\t     * @param {*} acc The initial accumulator value.\n\t     * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n\t     * @param {Array} list The list to iterate over.\n\t     * @return {*} The final, accumulated value.\n\t     * @example\n\t     *\n\t     *      var numbers = [1, 2, 3, 4];\n\t     *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n\t     *\n\t     *      R.into([], transducer, numbers); //=> [2, 3]\n\t     *\n\t     *      var intoArray = R.into([]);\n\t     *      intoArray(transducer, numbers); //=> [2, 3]\n\t     */\n\t    var into = _curry3(function into(acc, xf, list) {\n\t        return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), acc, list);\n\t    });\n\t\n\t    /**\n\t     * \"lifts\" a function of arity > 1 so that it may \"map over\" an Array or other\n\t     * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.7.0\n\t     * @category Function\n\t     * @sig (*... -> *) -> ([*]... -> [*])\n\t     * @param {Function} fn The function to lift into higher context\n\t     * @return {Function} The lifted function.\n\t     * @see R.liftN\n\t     * @example\n\t     *\n\t     *      var madd3 = R.lift(R.curry((a, b, c) => a + b + c));\n\t     *\n\t     *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n\t     *\n\t     *      var madd5 = R.lift(R.curry((a, b, c, d, e) => a + b + c + d + e));\n\t     *\n\t     *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n\t     */\n\t    var lift = _curry1(function lift(fn) {\n\t        return liftN(fn.length, fn);\n\t    });\n\t\n\t    /**\n\t     * Returns a partial copy of an object omitting the keys specified.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Object\n\t     * @sig [String] -> {String: *} -> {String: *}\n\t     * @param {Array} names an array of String property names to omit from the new object\n\t     * @param {Object} obj The object to copy from\n\t     * @return {Object} A new object with properties from `names` not on it.\n\t     * @see R.pick\n\t     * @example\n\t     *\n\t     *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n\t     */\n\t    var omit = _curry2(function omit(names, obj) {\n\t        var result = {};\n\t        for (var prop in obj) {\n\t            if (!_contains(prop, names)) {\n\t                result[prop] = obj[prop];\n\t            }\n\t        }\n\t        return result;\n\t    });\n\t\n\t    /**\n\t     * Returns the left-to-right Kleisli composition of the provided functions,\n\t     * each of which must return a value of a type supported by [`chain`](#chain).\n\t     *\n\t     * `R.pipeK(f, g, h)` is equivalent to `R.pipe(R.chain(f), R.chain(g), R.chain(h))`.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.16.0\n\t     * @category Function\n\t     * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (m a -> m z)\n\t     * @param {...Function}\n\t     * @return {Function}\n\t     * @see R.composeK\n\t     * @example\n\t     *\n\t     *      //  parseJson :: String -> Maybe *\n\t     *      //  get :: String -> Object -> Maybe *\n\t     *\n\t     *      //  getStateCode :: Maybe String -> Maybe String\n\t     *      var getStateCode = R.pipeK(\n\t     *        parseJson,\n\t     *        get('user'),\n\t     *        get('address'),\n\t     *        get('state'),\n\t     *        R.compose(Maybe.of, R.toUpper)\n\t     *      );\n\t     *\n\t     *      getStateCode(Maybe.of('{\"user\":{\"address\":{\"state\":\"ny\"}}}'));\n\t     *      //=> Just('NY')\n\t     *      getStateCode(Maybe.of('[Invalid JSON]'));\n\t     *      //=> Nothing()\n\t     */\n\t    var pipeK = function pipeK() {\n\t        return composeK.apply(this, reverse(arguments));\n\t    };\n\t\n\t    /**\n\t     * Returns the string representation of the given value. `eval`'ing the output\n\t     * should result in a value equivalent to the input value. Many of the built-in\n\t     * `toString` methods do not satisfy this requirement.\n\t     *\n\t     * If the given value is an `[object Object]` with a `toString` method other\n\t     * than `Object.prototype.toString`, this method is invoked with no arguments\n\t     * to produce the return value. This means user-defined constructor functions\n\t     * can provide a suitable `toString` method. For example:\n\t     *\n\t     *     function Point(x, y) {\n\t     *       this.x = x;\n\t     *       this.y = y;\n\t     *     }\n\t     *\n\t     *     Point.prototype.toString = function() {\n\t     *       return 'new Point(' + this.x + ', ' + this.y + ')';\n\t     *     };\n\t     *\n\t     *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.14.0\n\t     * @category String\n\t     * @sig * -> String\n\t     * @param {*} val\n\t     * @return {String}\n\t     * @example\n\t     *\n\t     *      R.toString(42); //=> '42'\n\t     *      R.toString('abc'); //=> '\"abc\"'\n\t     *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n\t     *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n\t     *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n\t     */\n\t    var toString = _curry1(function toString(val) {\n\t        return _toString(val, []);\n\t    });\n\t\n\t    /**\n\t     * Returns a new list containing only one copy of each element in the original\n\t     * list, based upon the value returned by applying the supplied function to\n\t     * each list element. Prefers the first item if the supplied function produces\n\t     * the same value on two items. `R.equals` is used for comparison.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.16.0\n\t     * @category List\n\t     * @sig (a -> b) -> [a] -> [a]\n\t     * @param {Function} fn A function used to produce a value to use during comparisons.\n\t     * @param {Array} list The array to consider.\n\t     * @return {Array} The list of unique items.\n\t     * @example\n\t     *\n\t     *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n\t     */\n\t    /* globals Set */\n\t    // distinguishing between +0 and -0 is not supported by Set\n\t    /* falls through */\n\t    // these types can all utilise Set\n\t    // prevent scan for null by tracking as a boolean\n\t    /* falls through */\n\t    // scan through all previously applied items\n\t    var uniqBy = _curry2(/* globals Set */\n\t    typeof Set === 'undefined' ? function uniqBy(fn, list) {\n\t        var idx = 0;\n\t        var applied = [];\n\t        var result = [];\n\t        var appliedItem, item;\n\t        while (idx < list.length) {\n\t            item = list[idx];\n\t            appliedItem = fn(item);\n\t            if (!_contains(appliedItem, applied)) {\n\t                result.push(item);\n\t                applied.push(appliedItem);\n\t            }\n\t            idx += 1;\n\t        }\n\t        return result;\n\t    } : function uniqBySet(fn, list) {\n\t        var set = new Set();\n\t        var applied = [];\n\t        var prevSetSize = 0;\n\t        var result = [];\n\t        var nullExists = false;\n\t        var negZeroExists = false;\n\t        var idx = 0;\n\t        var appliedItem, item, newSetSize;\n\t        while (idx < list.length) {\n\t            item = list[idx];\n\t            appliedItem = fn(item);\n\t            switch (typeof appliedItem) {\n\t            case 'number':\n\t                // distinguishing between +0 and -0 is not supported by Set\n\t                if (appliedItem === 0 && !negZeroExists && 1 / appliedItem === -Infinity) {\n\t                    negZeroExists = true;\n\t                    result.push(item);\n\t                    break;\n\t                }\n\t            /* falls through */\n\t            case 'string':\n\t            case 'boolean':\n\t            case 'function':\n\t            case 'undefined':\n\t                // these types can all utilise Set\n\t                set.add(appliedItem);\n\t                newSetSize = set.size;\n\t                if (newSetSize > prevSetSize) {\n\t                    result.push(item);\n\t                    prevSetSize = newSetSize;\n\t                }\n\t                break;\n\t            case 'object':\n\t                if (appliedItem === null) {\n\t                    if (!nullExists) {\n\t                        // prevent scan for null by tracking as a boolean\n\t                        nullExists = true;\n\t                        result.push(null);\n\t                    }\n\t                    break;\n\t                }\n\t            /* falls through */\n\t            default:\n\t                // scan through all previously applied items\n\t                if (!_contains(appliedItem, applied)) {\n\t                    applied.push(appliedItem);\n\t                    result.push(item);\n\t                }\n\t            }\n\t            idx += 1;\n\t        }\n\t        return result;\n\t    });\n\t\n\t    /**\n\t     * Returns a new list without values in the first argument.\n\t     * `R.equals` is used to determine equality.\n\t     *\n\t     * Acts as a transducer if a transformer is given in list position.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since 0.19.1\n\t     * @since 0.19.0\n\t     * @category List\n\t     * @sig [a] -> [a] -> [a]\n\t     * @param {Array} list1 The values to be removed from `list2`.\n\t     * @param {Array} list2 The array to remove values from.\n\t     * @return {Array} The new array without values in `list1`.\n\t     * @see R.transduce\n\t     * @example\n\t     *\n\t     *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n\t     */\n\t    var without = _curry2(function (xs, list) {\n\t        return reject(flip(_contains)(xs), list);\n\t    });\n\t\n\t    /**\n\t     * Takes a function `f` and returns a function `g` such that:\n\t     *\n\t     *   - applying `g` to zero or more arguments will give __true__ if applying\n\t     *     the same arguments to `f` gives a logical __false__ value; and\n\t     *\n\t     *   - applying `g` to zero or more arguments will give __false__ if applying\n\t     *     the same arguments to `f` gives a logical __true__ value.\n\t     *\n\t     * `R.complement` will work on all other functors as well.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.12.0\n\t     * @category Logic\n\t     * @sig (*... -> *) -> (*... -> Boolean)\n\t     * @param {Function} f\n\t     * @return {Function}\n\t     * @see R.not\n\t     * @example\n\t     *\n\t     *      var isEven = n => n % 2 === 0;\n\t     *      var isOdd = R.complement(isEven);\n\t     *      isOdd(21); //=> true\n\t     *      isOdd(42); //=> false\n\t     */\n\t    var complement = lift(not);\n\t\n\t    /**\n\t     * Turns a named method with a specified arity into a function that can be\n\t     * called directly supplied with arguments and a target object.\n\t     *\n\t     * The returned function is curried and accepts `arity + 1` parameters where\n\t     * the final parameter is the target object.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Function\n\t     * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n\t     * @param {Number} arity Number of arguments the returned function should take\n\t     *        before the target object.\n\t     * @param {String} method Name of the method to call.\n\t     * @return {Function} A new curried function.\n\t     * @example\n\t     *\n\t     *      var sliceFrom = R.invoker(1, 'slice');\n\t     *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n\t     *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n\t     *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n\t     */\n\t    var invoker = _curry2(function invoker(arity, method) {\n\t        return curryN(arity + 1, function () {\n\t            var target = arguments[arity];\n\t            if (target != null && is(Function, target[method])) {\n\t                return target[method].apply(target, _slice(arguments, 0, arity));\n\t            }\n\t            throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n\t        });\n\t    });\n\t\n\t    /**\n\t     * Returns a string made by inserting the `separator` between each element and\n\t     * concatenating all the elements into a single string.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig String -> [a] -> String\n\t     * @param {Number|String} separator The string used to separate the elements.\n\t     * @param {Array} xs The elements to join into a string.\n\t     * @return {String} str The string made by concatenating `xs` with `separator`.\n\t     * @see R.split\n\t     * @example\n\t     *\n\t     *      var spacer = R.join(' ');\n\t     *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n\t     *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n\t     */\n\t    var join = invoker(1, 'join');\n\t\n\t    /**\n\t     * Creates a new function that, when invoked, caches the result of calling `fn`\n\t     * for a given argument set and returns the result. Subsequent calls to the\n\t     * memoized `fn` with the same argument set will not result in an additional\n\t     * call to `fn`; instead, the cached result for that set of arguments will be\n\t     * returned.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Function\n\t     * @sig (*... -> a) -> (*... -> a)\n\t     * @param {Function} fn The function to memoize.\n\t     * @return {Function} Memoized version of `fn`.\n\t     * @example\n\t     *\n\t     *      var count = 0;\n\t     *      var factorial = R.memoize(n => {\n\t     *        count += 1;\n\t     *        return R.product(R.range(1, n + 1));\n\t     *      });\n\t     *      factorial(5); //=> 120\n\t     *      factorial(5); //=> 120\n\t     *      factorial(5); //=> 120\n\t     *      count; //=> 1\n\t     */\n\t    var memoize = _curry1(function memoize(fn) {\n\t        var cache = {};\n\t        return _arity(fn.length, function () {\n\t            var key = toString(arguments);\n\t            if (!_has(key, cache)) {\n\t                cache[key] = fn.apply(this, arguments);\n\t            }\n\t            return cache[key];\n\t        });\n\t    });\n\t\n\t    /**\n\t     * Splits a string into an array of strings based on the given\n\t     * separator.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category String\n\t     * @sig (String | RegExp) -> String -> [String]\n\t     * @param {String|RegExp} sep The pattern.\n\t     * @param {String} str The string to separate into an array.\n\t     * @return {Array} The array of strings from `str` separated by `str`.\n\t     * @see R.join\n\t     * @example\n\t     *\n\t     *      var pathComponents = R.split('/');\n\t     *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n\t     *\n\t     *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n\t     */\n\t    var split = invoker(1, 'split');\n\t\n\t    /**\n\t     * Determines whether a given string matches a given regular expression.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.12.0\n\t     * @category String\n\t     * @sig RegExp -> String -> Boolean\n\t     * @param {RegExp} pattern\n\t     * @param {String} str\n\t     * @return {Boolean}\n\t     * @see R.match\n\t     * @example\n\t     *\n\t     *      R.test(/^x/, 'xyz'); //=> true\n\t     *      R.test(/^y/, 'xyz'); //=> false\n\t     */\n\t    var test = _curry2(function test(pattern, str) {\n\t        if (!_isRegExp(pattern)) {\n\t            throw new TypeError('\\u2018test\\u2019 requires a value of type RegExp as its first argument; received ' + toString(pattern));\n\t        }\n\t        return _cloneRegExp(pattern).test(str);\n\t    });\n\t\n\t    /**\n\t     * The lower case version of a string.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category String\n\t     * @sig String -> String\n\t     * @param {String} str The string to lower case.\n\t     * @return {String} The lower case version of `str`.\n\t     * @see R.toUpper\n\t     * @example\n\t     *\n\t     *      R.toLower('XYZ'); //=> 'xyz'\n\t     */\n\t    var toLower = invoker(0, 'toLowerCase');\n\t\n\t    /**\n\t     * The upper case version of a string.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.9.0\n\t     * @category String\n\t     * @sig String -> String\n\t     * @param {String} str The string to upper case.\n\t     * @return {String} The upper case version of `str`.\n\t     * @see R.toLower\n\t     * @example\n\t     *\n\t     *      R.toUpper('abc'); //=> 'ABC'\n\t     */\n\t    var toUpper = invoker(0, 'toUpperCase');\n\t\n\t    /**\n\t     * Returns a new list containing only one copy of each element in the original\n\t     * list. `R.equals` is used to determine equality.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig [a] -> [a]\n\t     * @param {Array} list The array to consider.\n\t     * @return {Array} The list of unique items.\n\t     * @example\n\t     *\n\t     *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n\t     *      R.uniq([1, '1']);     //=> [1, '1']\n\t     *      R.uniq([[42], [42]]); //=> [[42]]\n\t     */\n\t    var uniq = uniqBy(identity);\n\t\n\t    /**\n\t     * Returns the result of concatenating the given lists or strings.\n\t     *\n\t     * Dispatches to the `concat` method of the second argument, if present.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category List\n\t     * @sig [a] -> [a] -> [a]\n\t     * @sig String -> String -> String\n\t     * @param {Array|String} a\n\t     * @param {Array|String} b\n\t     * @return {Array|String}\n\t     *\n\t     * @example\n\t     *\n\t     *      R.concat([], []); //=> []\n\t     *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n\t     *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n\t     */\n\t    var concat = flip(invoker(1, 'concat'));\n\t\n\t    /**\n\t     * Combines two lists into a set (i.e. no duplicates) composed of those\n\t     * elements common to both lists.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Relation\n\t     * @sig [*] -> [*] -> [*]\n\t     * @param {Array} list1 The first list.\n\t     * @param {Array} list2 The second list.\n\t     * @return {Array} The list of elements found in both `list1` and `list2`.\n\t     * @see R.intersectionWith\n\t     * @example\n\t     *\n\t     *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n\t     */\n\t    var intersection = _curry2(function intersection(list1, list2) {\n\t        return uniq(_filter(flip(_contains)(list1), list2));\n\t    });\n\t\n\t    /**\n\t     * Finds the set (i.e. no duplicates) of all elements contained in the first or\n\t     * second list, but not both.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since 0.19.1\n\t     * @since 0.19.0\n\t     * @category Relation\n\t     * @sig [*] -> [*] -> [*]\n\t     * @param {Array} list1 The first list.\n\t     * @param {Array} list2 The second list.\n\t     * @return {Array} The elements in `list1` or `list2`, but not both.\n\t     * @see R.symmetricDifferenceWith\n\t     * @example\n\t     *\n\t     *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n\t     *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n\t     */\n\t    var symmetricDifference = _curry2(function symmetricDifference(list1, list2) {\n\t        return concat(difference(list1, list2), difference(list2, list1));\n\t    });\n\t\n\t    /**\n\t     * Finds the set (i.e. no duplicates) of all elements contained in the first or\n\t     * second list, but not both. Duplication is determined according to the value\n\t     * returned by applying the supplied predicate to two list elements.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since 0.19.1\n\t     * @since 0.19.0\n\t     * @category Relation\n\t     * @sig (a -> a -> Boolean) -> [a] -> [a] -> [a]\n\t     * @param {Function} pred A predicate used to test whether two items are equal.\n\t     * @param {Array} list1 The first list.\n\t     * @param {Array} list2 The second list.\n\t     * @return {Array} The elements in `list1` or `list2`, but not both.\n\t     * @see R.symmetricDifference\n\t     * @example\n\t     *\n\t     *      var eqA = R.eqBy(R.prop('a'));\n\t     *      var l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n\t     *      var l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n\t     *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n\t     */\n\t    var symmetricDifferenceWith = _curry3(function symmetricDifferenceWith(pred, list1, list2) {\n\t        return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n\t    });\n\t\n\t    /**\n\t     * Combines two lists into a set (i.e. no duplicates) composed of the elements\n\t     * of each list.\n\t     *\n\t     * @func\n\t     * @memberOf R\n\t     * @since v0.1.0\n\t     * @category Relation\n\t     * @sig [*] -> [*] -> [*]\n\t     * @param {Array} as The first list.\n\t     * @param {Array} bs The second list.\n\t     * @return {Array} The first and second lists concatenated, with\n\t     *         duplicates removed.\n\t     * @example\n\t     *\n\t     *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n\t     */\n\t    var union = _curry2(compose(uniq, _concat));\n\t\n\t    var R = {\n\t        F: F,\n\t        T: T,\n\t        __: __,\n\t        add: add,\n\t        addIndex: addIndex,\n\t        adjust: adjust,\n\t        all: all,\n\t        allPass: allPass,\n\t        allUniq: allUniq,\n\t        always: always,\n\t        and: and,\n\t        any: any,\n\t        anyPass: anyPass,\n\t        ap: ap,\n\t        aperture: aperture,\n\t        append: append,\n\t        apply: apply,\n\t        assoc: assoc,\n\t        assocPath: assocPath,\n\t        binary: binary,\n\t        bind: bind,\n\t        both: both,\n\t        call: call,\n\t        chain: chain,\n\t        clone: clone,\n\t        commute: commute,\n\t        commuteMap: commuteMap,\n\t        comparator: comparator,\n\t        complement: complement,\n\t        compose: compose,\n\t        composeK: composeK,\n\t        composeP: composeP,\n\t        concat: concat,\n\t        cond: cond,\n\t        construct: construct,\n\t        constructN: constructN,\n\t        contains: contains,\n\t        converge: converge,\n\t        countBy: countBy,\n\t        curry: curry,\n\t        curryN: curryN,\n\t        dec: dec,\n\t        defaultTo: defaultTo,\n\t        difference: difference,\n\t        differenceWith: differenceWith,\n\t        dissoc: dissoc,\n\t        dissocPath: dissocPath,\n\t        divide: divide,\n\t        drop: drop,\n\t        dropLast: dropLast,\n\t        dropLastWhile: dropLastWhile,\n\t        dropRepeats: dropRepeats,\n\t        dropRepeatsWith: dropRepeatsWith,\n\t        dropWhile: dropWhile,\n\t        either: either,\n\t        empty: empty,\n\t        eqBy: eqBy,\n\t        eqProps: eqProps,\n\t        equals: equals,\n\t        evolve: evolve,\n\t        filter: filter,\n\t        find: find,\n\t        findIndex: findIndex,\n\t        findLast: findLast,\n\t        findLastIndex: findLastIndex,\n\t        flatten: flatten,\n\t        flip: flip,\n\t        forEach: forEach,\n\t        fromPairs: fromPairs,\n\t        groupBy: groupBy,\n\t        gt: gt,\n\t        gte: gte,\n\t        has: has,\n\t        hasIn: hasIn,\n\t        head: head,\n\t        identical: identical,\n\t        identity: identity,\n\t        ifElse: ifElse,\n\t        inc: inc,\n\t        indexBy: indexBy,\n\t        indexOf: indexOf,\n\t        init: init,\n\t        insert: insert,\n\t        insertAll: insertAll,\n\t        intersection: intersection,\n\t        intersectionWith: intersectionWith,\n\t        intersperse: intersperse,\n\t        into: into,\n\t        invert: invert,\n\t        invertObj: invertObj,\n\t        invoker: invoker,\n\t        is: is,\n\t        isArrayLike: isArrayLike,\n\t        isEmpty: isEmpty,\n\t        isNil: isNil,\n\t        join: join,\n\t        juxt: juxt,\n\t        keys: keys,\n\t        keysIn: keysIn,\n\t        last: last,\n\t        lastIndexOf: lastIndexOf,\n\t        length: length,\n\t        lens: lens,\n\t        lensIndex: lensIndex,\n\t        lensPath: lensPath,\n\t        lensProp: lensProp,\n\t        lift: lift,\n\t        liftN: liftN,\n\t        lt: lt,\n\t        lte: lte,\n\t        map: map,\n\t        mapAccum: mapAccum,\n\t        mapAccumRight: mapAccumRight,\n\t        mapObjIndexed: mapObjIndexed,\n\t        match: match,\n\t        mathMod: mathMod,\n\t        max: max,\n\t        maxBy: maxBy,\n\t        mean: mean,\n\t        median: median,\n\t        memoize: memoize,\n\t        merge: merge,\n\t        mergeAll: mergeAll,\n\t        mergeWith: mergeWith,\n\t        mergeWithKey: mergeWithKey,\n\t        min: min,\n\t        minBy: minBy,\n\t        modulo: modulo,\n\t        multiply: multiply,\n\t        nAry: nAry,\n\t        negate: negate,\n\t        none: none,\n\t        not: not,\n\t        nth: nth,\n\t        nthArg: nthArg,\n\t        objOf: objOf,\n\t        of: of,\n\t        omit: omit,\n\t        once: once,\n\t        or: or,\n\t        over: over,\n\t        pair: pair,\n\t        partial: partial,\n\t        partialRight: partialRight,\n\t        partition: partition,\n\t        path: path,\n\t        pathEq: pathEq,\n\t        pathOr: pathOr,\n\t        pathSatisfies: pathSatisfies,\n\t        pick: pick,\n\t        pickAll: pickAll,\n\t        pickBy: pickBy,\n\t        pipe: pipe,\n\t        pipeK: pipeK,\n\t        pipeP: pipeP,\n\t        pluck: pluck,\n\t        prepend: prepend,\n\t        product: product,\n\t        project: project,\n\t        prop: prop,\n\t        propEq: propEq,\n\t        propIs: propIs,\n\t        propOr: propOr,\n\t        propSatisfies: propSatisfies,\n\t        props: props,\n\t        range: range,\n\t        reduce: reduce,\n\t        reduceRight: reduceRight,\n\t        reduced: reduced,\n\t        reject: reject,\n\t        remove: remove,\n\t        repeat: repeat,\n\t        replace: replace,\n\t        reverse: reverse,\n\t        scan: scan,\n\t        sequence: sequence,\n\t        set: set,\n\t        slice: slice,\n\t        sort: sort,\n\t        sortBy: sortBy,\n\t        split: split,\n\t        splitAt: splitAt,\n\t        splitEvery: splitEvery,\n\t        splitWhen: splitWhen,\n\t        subtract: subtract,\n\t        sum: sum,\n\t        symmetricDifference: symmetricDifference,\n\t        symmetricDifferenceWith: symmetricDifferenceWith,\n\t        tail: tail,\n\t        take: take,\n\t        takeLast: takeLast,\n\t        takeLastWhile: takeLastWhile,\n\t        takeWhile: takeWhile,\n\t        tap: tap,\n\t        test: test,\n\t        times: times,\n\t        toLower: toLower,\n\t        toPairs: toPairs,\n\t        toPairsIn: toPairsIn,\n\t        toString: toString,\n\t        toUpper: toUpper,\n\t        transduce: transduce,\n\t        transpose: transpose,\n\t        traverse: traverse,\n\t        trim: trim,\n\t        type: type,\n\t        unapply: unapply,\n\t        unary: unary,\n\t        uncurryN: uncurryN,\n\t        unfold: unfold,\n\t        union: union,\n\t        unionWith: unionWith,\n\t        uniq: uniq,\n\t        uniqBy: uniqBy,\n\t        uniqWith: uniqWith,\n\t        unless: unless,\n\t        unnest: unnest,\n\t        update: update,\n\t        useWith: useWith,\n\t        values: values,\n\t        valuesIn: valuesIn,\n\t        view: view,\n\t        when: when,\n\t        where: where,\n\t        whereEq: whereEq,\n\t        without: without,\n\t        wrap: wrap,\n\t        xprod: xprod,\n\t        zip: zip,\n\t        zipObj: zipObj,\n\t        zipWith: zipWith\n\t    };\n\t  /* eslint-env amd */\n\t\n\t  /* TEST_ENTRY_POINT */\n\t\n\t  if (true) {\n\t    module.exports = R;\n\t  } else if (typeof define === 'function' && define.amd) {\n\t    define(function() { return R; });\n\t  } else {\n\t    this.R = R;\n\t  }\n\t\n\t}.call(this));\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactReconciler\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactRef = __webpack_require__(129);\n\t\n\t/**\n\t * Helper to call ReactRef.attachRefs with this composite component, split out\n\t * to avoid allocations in the transaction mount-ready queue.\n\t */\n\tfunction attachRefs() {\n\t  ReactRef.attachRefs(this, this._currentElement);\n\t}\n\t\n\tvar ReactReconciler = {\n\t\n\t  /**\n\t   * Initializes the component, renders markup, and registers event listeners.\n\t   *\n\t   * @param {ReactComponent} internalInstance\n\t   * @param {string} rootID DOM ID of the root node.\n\t   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n\t   * @return {?string} Rendered markup to be inserted into the DOM.\n\t   * @final\n\t   * @internal\n\t   */\n\t  mountComponent: function (internalInstance, rootID, transaction, context) {\n\t    var markup = internalInstance.mountComponent(rootID, transaction, context);\n\t    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {\n\t      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n\t    }\n\t    return markup;\n\t  },\n\t\n\t  /**\n\t   * Releases any resources allocated by `mountComponent`.\n\t   *\n\t   * @final\n\t   * @internal\n\t   */\n\t  unmountComponent: function (internalInstance) {\n\t    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);\n\t    internalInstance.unmountComponent();\n\t  },\n\t\n\t  /**\n\t   * Update a component using a new element.\n\t   *\n\t   * @param {ReactComponent} internalInstance\n\t   * @param {ReactElement} nextElement\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @param {object} context\n\t   * @internal\n\t   */\n\t  receiveComponent: function (internalInstance, nextElement, transaction, context) {\n\t    var prevElement = internalInstance._currentElement;\n\t\n\t    if (nextElement === prevElement && context === internalInstance._context) {\n\t      // Since elements are immutable after the owner is rendered,\n\t      // we can do a cheap identity compare here to determine if this is a\n\t      // superfluous reconcile. It's possible for state to be mutable but such\n\t      // change should trigger an update of the owner which would recreate\n\t      // the element. We explicitly check for the existence of an owner since\n\t      // it's possible for an element created outside a composite to be\n\t      // deeply mutated and reused.\n\t\n\t      // TODO: Bailing out early is just a perf optimization right?\n\t      // TODO: Removing the return statement should affect correctness?\n\t      return;\n\t    }\n\t\n\t    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);\n\t\n\t    if (refsChanged) {\n\t      ReactRef.detachRefs(internalInstance, prevElement);\n\t    }\n\t\n\t    internalInstance.receiveComponent(nextElement, transaction, context);\n\t\n\t    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {\n\t      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Flush any dirty changes in a component.\n\t   *\n\t   * @param {ReactComponent} internalInstance\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @internal\n\t   */\n\t  performUpdateIfNecessary: function (internalInstance, transaction) {\n\t    internalInstance.performUpdateIfNecessary(transaction);\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactReconciler;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticEvent\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar PooledClass = __webpack_require__(12);\n\t\n\tvar assign = __webpack_require__(2);\n\tvar emptyFunction = __webpack_require__(9);\n\tvar warning = __webpack_require__(3);\n\t\n\t/**\n\t * @interface Event\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/\n\t */\n\tvar EventInterface = {\n\t  type: null,\n\t  target: null,\n\t  // currentTarget is set when dispatching; no use in copying it here\n\t  currentTarget: emptyFunction.thatReturnsNull,\n\t  eventPhase: null,\n\t  bubbles: null,\n\t  cancelable: null,\n\t  timeStamp: function (event) {\n\t    return event.timeStamp || Date.now();\n\t  },\n\t  defaultPrevented: null,\n\t  isTrusted: null\n\t};\n\t\n\t/**\n\t * Synthetic events are dispatched by event plugins, typically in response to a\n\t * top-level event delegation handler.\n\t *\n\t * These systems should generally use pooling to reduce the frequency of garbage\n\t * collection. The system should check `isPersistent` to determine whether the\n\t * event should be released into the pool after being dispatched. Users that\n\t * need a persisted event should invoke `persist`.\n\t *\n\t * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n\t * normalizing browser quirks. Subclasses do not necessarily have to implement a\n\t * DOM interface; custom application-specific events can also subclass this.\n\t *\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t */\n\tfunction SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  this.dispatchConfig = dispatchConfig;\n\t  this.dispatchMarker = dispatchMarker;\n\t  this.nativeEvent = nativeEvent;\n\t\n\t  var Interface = this.constructor.Interface;\n\t  for (var propName in Interface) {\n\t    if (!Interface.hasOwnProperty(propName)) {\n\t      continue;\n\t    }\n\t    var normalize = Interface[propName];\n\t    if (normalize) {\n\t      this[propName] = normalize(nativeEvent);\n\t    } else {\n\t      if (propName === 'target') {\n\t        this.target = nativeEventTarget;\n\t      } else {\n\t        this[propName] = nativeEvent[propName];\n\t      }\n\t    }\n\t  }\n\t\n\t  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;\n\t  if (defaultPrevented) {\n\t    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n\t  } else {\n\t    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;\n\t  }\n\t  this.isPropagationStopped = emptyFunction.thatReturnsFalse;\n\t}\n\t\n\tassign(SyntheticEvent.prototype, {\n\t\n\t  preventDefault: function () {\n\t    this.defaultPrevented = true;\n\t    var event = this.nativeEvent;\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\\'re ' + 'seeing this, you\\'re calling `preventDefault` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;\n\t    }\n\t    if (!event) {\n\t      return;\n\t    }\n\t\n\t    if (event.preventDefault) {\n\t      event.preventDefault();\n\t    } else {\n\t      event.returnValue = false;\n\t    }\n\t    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n\t  },\n\t\n\t  stopPropagation: function () {\n\t    var event = this.nativeEvent;\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\\'re ' + 'seeing this, you\\'re calling `stopPropagation` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;\n\t    }\n\t    if (!event) {\n\t      return;\n\t    }\n\t\n\t    if (event.stopPropagation) {\n\t      event.stopPropagation();\n\t    } else {\n\t      event.cancelBubble = true;\n\t    }\n\t    this.isPropagationStopped = emptyFunction.thatReturnsTrue;\n\t  },\n\t\n\t  /**\n\t   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n\t   * them back into the pool. This allows a way to hold onto a reference that\n\t   * won't be added back into the pool.\n\t   */\n\t  persist: function () {\n\t    this.isPersistent = emptyFunction.thatReturnsTrue;\n\t  },\n\t\n\t  /**\n\t   * Checks if this event should be released back into the pool.\n\t   *\n\t   * @return {boolean} True if this should not be released, false otherwise.\n\t   */\n\t  isPersistent: emptyFunction.thatReturnsFalse,\n\t\n\t  /**\n\t   * `PooledClass` looks for `destructor` on each instance it releases.\n\t   */\n\t  destructor: function () {\n\t    var Interface = this.constructor.Interface;\n\t    for (var propName in Interface) {\n\t      this[propName] = null;\n\t    }\n\t    this.dispatchConfig = null;\n\t    this.dispatchMarker = null;\n\t    this.nativeEvent = null;\n\t  }\n\t\n\t});\n\t\n\tSyntheticEvent.Interface = EventInterface;\n\t\n\t/**\n\t * Helper to reduce boilerplate when creating subclasses.\n\t *\n\t * @param {function} Class\n\t * @param {?object} Interface\n\t */\n\tSyntheticEvent.augmentClass = function (Class, Interface) {\n\t  var Super = this;\n\t\n\t  var prototype = Object.create(Super.prototype);\n\t  assign(prototype, Class.prototype);\n\t  Class.prototype = prototype;\n\t  Class.prototype.constructor = Class;\n\t\n\t  Class.Interface = assign({}, Super.Interface, Interface);\n\t  Class.augmentClass = Super.augmentClass;\n\t\n\t  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);\n\t};\n\t\n\tPooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);\n\t\n\tmodule.exports = SyntheticEvent;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule DOMProperty\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\tfunction checkMask(value, bitmask) {\n\t  return (value & bitmask) === bitmask;\n\t}\n\t\n\tvar DOMPropertyInjection = {\n\t  /**\n\t   * Mapping from normalized, camelcased property names to a configuration that\n\t   * specifies how the associated DOM property should be accessed or rendered.\n\t   */\n\t  MUST_USE_ATTRIBUTE: 0x1,\n\t  MUST_USE_PROPERTY: 0x2,\n\t  HAS_SIDE_EFFECTS: 0x4,\n\t  HAS_BOOLEAN_VALUE: 0x8,\n\t  HAS_NUMERIC_VALUE: 0x10,\n\t  HAS_POSITIVE_NUMERIC_VALUE: 0x20 | 0x10,\n\t  HAS_OVERLOADED_BOOLEAN_VALUE: 0x40,\n\t\n\t  /**\n\t   * Inject some specialized knowledge about the DOM. This takes a config object\n\t   * with the following properties:\n\t   *\n\t   * isCustomAttribute: function that given an attribute name will return true\n\t   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*\n\t   * attributes where it's impossible to enumerate all of the possible\n\t   * attribute names,\n\t   *\n\t   * Properties: object mapping DOM property name to one of the\n\t   * DOMPropertyInjection constants or null. If your attribute isn't in here,\n\t   * it won't get written to the DOM.\n\t   *\n\t   * DOMAttributeNames: object mapping React attribute name to the DOM\n\t   * attribute name. Attribute names not specified use the **lowercase**\n\t   * normalized name.\n\t   *\n\t   * DOMAttributeNamespaces: object mapping React attribute name to the DOM\n\t   * attribute namespace URL. (Attribute names not specified use no namespace.)\n\t   *\n\t   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.\n\t   * Property names not specified use the normalized name.\n\t   *\n\t   * DOMMutationMethods: Properties that require special mutation methods. If\n\t   * `value` is undefined, the mutation method should unset the property.\n\t   *\n\t   * @param {object} domPropertyConfig the config as described above.\n\t   */\n\t  injectDOMPropertyConfig: function (domPropertyConfig) {\n\t    var Injection = DOMPropertyInjection;\n\t    var Properties = domPropertyConfig.Properties || {};\n\t    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};\n\t    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};\n\t    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};\n\t    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};\n\t\n\t    if (domPropertyConfig.isCustomAttribute) {\n\t      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);\n\t    }\n\t\n\t    for (var propName in Properties) {\n\t      !!DOMProperty.properties.hasOwnProperty(propName) ?  false ? invariant(false, 'injectDOMPropertyConfig(...): You\\'re trying to inject DOM property ' + '\\'%s\\' which has already been injected. You may be accidentally ' + 'injecting the same DOM property config twice, or you may be ' + 'injecting two configs that have conflicting property names.', propName) : invariant(false) : undefined;\n\t\n\t      var lowerCased = propName.toLowerCase();\n\t      var propConfig = Properties[propName];\n\t\n\t      var propertyInfo = {\n\t        attributeName: lowerCased,\n\t        attributeNamespace: null,\n\t        propertyName: propName,\n\t        mutationMethod: null,\n\t\n\t        mustUseAttribute: checkMask(propConfig, Injection.MUST_USE_ATTRIBUTE),\n\t        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),\n\t        hasSideEffects: checkMask(propConfig, Injection.HAS_SIDE_EFFECTS),\n\t        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),\n\t        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),\n\t        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),\n\t        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)\n\t      };\n\t\n\t      !(!propertyInfo.mustUseAttribute || !propertyInfo.mustUseProperty) ?  false ? invariant(false, 'DOMProperty: Cannot require using both attribute and property: %s', propName) : invariant(false) : undefined;\n\t      !(propertyInfo.mustUseProperty || !propertyInfo.hasSideEffects) ?  false ? invariant(false, 'DOMProperty: Properties that have side effects must use property: %s', propName) : invariant(false) : undefined;\n\t      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ?  false ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or ' + 'numeric value, but not a combination: %s', propName) : invariant(false) : undefined;\n\t\n\t      if (false) {\n\t        DOMProperty.getPossibleStandardName[lowerCased] = propName;\n\t      }\n\t\n\t      if (DOMAttributeNames.hasOwnProperty(propName)) {\n\t        var attributeName = DOMAttributeNames[propName];\n\t        propertyInfo.attributeName = attributeName;\n\t        if (false) {\n\t          DOMProperty.getPossibleStandardName[attributeName] = propName;\n\t        }\n\t      }\n\t\n\t      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {\n\t        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];\n\t      }\n\t\n\t      if (DOMPropertyNames.hasOwnProperty(propName)) {\n\t        propertyInfo.propertyName = DOMPropertyNames[propName];\n\t      }\n\t\n\t      if (DOMMutationMethods.hasOwnProperty(propName)) {\n\t        propertyInfo.mutationMethod = DOMMutationMethods[propName];\n\t      }\n\t\n\t      DOMProperty.properties[propName] = propertyInfo;\n\t    }\n\t  }\n\t};\n\tvar defaultValueCache = {};\n\t\n\t/**\n\t * DOMProperty exports lookup objects that can be used like functions:\n\t *\n\t *   > DOMProperty.isValid['id']\n\t *   true\n\t *   > DOMProperty.isValid['foobar']\n\t *   undefined\n\t *\n\t * Although this may be confusing, it performs better in general.\n\t *\n\t * @see http://jsperf.com/key-exists\n\t * @see http://jsperf.com/key-missing\n\t */\n\tvar DOMProperty = {\n\t\n\t  ID_ATTRIBUTE_NAME: 'data-reactid',\n\t\n\t  /**\n\t   * Map from property \"standard name\" to an object with info about how to set\n\t   * the property in the DOM. Each object contains:\n\t   *\n\t   * attributeName:\n\t   *   Used when rendering markup or with `*Attribute()`.\n\t   * attributeNamespace\n\t   * propertyName:\n\t   *   Used on DOM node instances. (This includes properties that mutate due to\n\t   *   external factors.)\n\t   * mutationMethod:\n\t   *   If non-null, used instead of the property or `setAttribute()` after\n\t   *   initial render.\n\t   * mustUseAttribute:\n\t   *   Whether the property must be accessed and mutated using `*Attribute()`.\n\t   *   (This includes anything that fails `<propName> in <element>`.)\n\t   * mustUseProperty:\n\t   *   Whether the property must be accessed and mutated as an object property.\n\t   * hasSideEffects:\n\t   *   Whether or not setting a value causes side effects such as triggering\n\t   *   resources to be loaded or text selection changes. If true, we read from\n\t   *   the DOM before updating to ensure that the value is only set if it has\n\t   *   changed.\n\t   * hasBooleanValue:\n\t   *   Whether the property should be removed when set to a falsey value.\n\t   * hasNumericValue:\n\t   *   Whether the property must be numeric or parse as a numeric and should be\n\t   *   removed when set to a falsey value.\n\t   * hasPositiveNumericValue:\n\t   *   Whether the property must be positive numeric or parse as a positive\n\t   *   numeric and should be removed when set to a falsey value.\n\t   * hasOverloadedBooleanValue:\n\t   *   Whether the property can be used as a flag as well as with a value.\n\t   *   Removed when strictly equal to false; present without a value when\n\t   *   strictly equal to true; present with a value otherwise.\n\t   */\n\t  properties: {},\n\t\n\t  /**\n\t   * Mapping from lowercase property names to the properly cased version, used\n\t   * to warn in the case of missing properties. Available only in __DEV__.\n\t   * @type {Object}\n\t   */\n\t  getPossibleStandardName:  false ? {} : null,\n\t\n\t  /**\n\t   * All of the isCustomAttribute() functions that have been injected.\n\t   */\n\t  _isCustomAttributeFunctions: [],\n\t\n\t  /**\n\t   * Checks whether a property name is a custom attribute.\n\t   * @method\n\t   */\n\t  isCustomAttribute: function (attributeName) {\n\t    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {\n\t      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];\n\t      if (isCustomAttributeFn(attributeName)) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  },\n\t\n\t  /**\n\t   * Returns the default property value for a DOM property (i.e., not an\n\t   * attribute). Most default values are '' or false, but not all. Worse yet,\n\t   * some (in particular, `type`) vary depending on the type of element.\n\t   *\n\t   * TODO: Is it better to grab all the possible properties when creating an\n\t   * element to avoid having to create the same element twice?\n\t   */\n\t  getDefaultValueForProperty: function (nodeName, prop) {\n\t    var nodeDefaults = defaultValueCache[nodeName];\n\t    var testElement;\n\t    if (!nodeDefaults) {\n\t      defaultValueCache[nodeName] = nodeDefaults = {};\n\t    }\n\t    if (!(prop in nodeDefaults)) {\n\t      testElement = document.createElement(nodeName);\n\t      nodeDefaults[prop] = testElement[prop];\n\t    }\n\t    return nodeDefaults[prop];\n\t  },\n\t\n\t  injection: DOMPropertyInjection\n\t};\n\t\n\tmodule.exports = DOMProperty;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactInstanceHandles\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactRootIndex = __webpack_require__(79);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\tvar SEPARATOR = '.';\n\tvar SEPARATOR_LENGTH = SEPARATOR.length;\n\t\n\t/**\n\t * Maximum depth of traversals before we consider the possibility of a bad ID.\n\t */\n\tvar MAX_TREE_DEPTH = 10000;\n\t\n\t/**\n\t * Creates a DOM ID prefix to use when mounting React components.\n\t *\n\t * @param {number} index A unique integer\n\t * @return {string} React root ID.\n\t * @internal\n\t */\n\tfunction getReactRootIDString(index) {\n\t  return SEPARATOR + index.toString(36);\n\t}\n\t\n\t/**\n\t * Checks if a character in the supplied ID is a separator or the end.\n\t *\n\t * @param {string} id A React DOM ID.\n\t * @param {number} index Index of the character to check.\n\t * @return {boolean} True if the character is a separator or end of the ID.\n\t * @private\n\t */\n\tfunction isBoundary(id, index) {\n\t  return id.charAt(index) === SEPARATOR || index === id.length;\n\t}\n\t\n\t/**\n\t * Checks if the supplied string is a valid React DOM ID.\n\t *\n\t * @param {string} id A React DOM ID, maybe.\n\t * @return {boolean} True if the string is a valid React DOM ID.\n\t * @private\n\t */\n\tfunction isValidID(id) {\n\t  return id === '' || id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR;\n\t}\n\t\n\t/**\n\t * Checks if the first ID is an ancestor of or equal to the second ID.\n\t *\n\t * @param {string} ancestorID\n\t * @param {string} descendantID\n\t * @return {boolean} True if `ancestorID` is an ancestor of `descendantID`.\n\t * @internal\n\t */\n\tfunction isAncestorIDOf(ancestorID, descendantID) {\n\t  return descendantID.indexOf(ancestorID) === 0 && isBoundary(descendantID, ancestorID.length);\n\t}\n\t\n\t/**\n\t * Gets the parent ID of the supplied React DOM ID, `id`.\n\t *\n\t * @param {string} id ID of a component.\n\t * @return {string} ID of the parent, or an empty string.\n\t * @private\n\t */\n\tfunction getParentID(id) {\n\t  return id ? id.substr(0, id.lastIndexOf(SEPARATOR)) : '';\n\t}\n\t\n\t/**\n\t * Gets the next DOM ID on the tree path from the supplied `ancestorID` to the\n\t * supplied `destinationID`. If they are equal, the ID is returned.\n\t *\n\t * @param {string} ancestorID ID of an ancestor node of `destinationID`.\n\t * @param {string} destinationID ID of the destination node.\n\t * @return {string} Next ID on the path from `ancestorID` to `destinationID`.\n\t * @private\n\t */\n\tfunction getNextDescendantID(ancestorID, destinationID) {\n\t  !(isValidID(ancestorID) && isValidID(destinationID)) ?  false ? invariant(false, 'getNextDescendantID(%s, %s): Received an invalid React DOM ID.', ancestorID, destinationID) : invariant(false) : undefined;\n\t  !isAncestorIDOf(ancestorID, destinationID) ?  false ? invariant(false, 'getNextDescendantID(...): React has made an invalid assumption about ' + 'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.', ancestorID, destinationID) : invariant(false) : undefined;\n\t  if (ancestorID === destinationID) {\n\t    return ancestorID;\n\t  }\n\t  // Skip over the ancestor and the immediate separator. Traverse until we hit\n\t  // another separator or we reach the end of `destinationID`.\n\t  var start = ancestorID.length + SEPARATOR_LENGTH;\n\t  var i;\n\t  for (i = start; i < destinationID.length; i++) {\n\t    if (isBoundary(destinationID, i)) {\n\t      break;\n\t    }\n\t  }\n\t  return destinationID.substr(0, i);\n\t}\n\t\n\t/**\n\t * Gets the nearest common ancestor ID of two IDs.\n\t *\n\t * Using this ID scheme, the nearest common ancestor ID is the longest common\n\t * prefix of the two IDs that immediately preceded a \"marker\" in both strings.\n\t *\n\t * @param {string} oneID\n\t * @param {string} twoID\n\t * @return {string} Nearest common ancestor ID, or the empty string if none.\n\t * @private\n\t */\n\tfunction getFirstCommonAncestorID(oneID, twoID) {\n\t  var minLength = Math.min(oneID.length, twoID.length);\n\t  if (minLength === 0) {\n\t    return '';\n\t  }\n\t  var lastCommonMarkerIndex = 0;\n\t  // Use `<=` to traverse until the \"EOL\" of the shorter string.\n\t  for (var i = 0; i <= minLength; i++) {\n\t    if (isBoundary(oneID, i) && isBoundary(twoID, i)) {\n\t      lastCommonMarkerIndex = i;\n\t    } else if (oneID.charAt(i) !== twoID.charAt(i)) {\n\t      break;\n\t    }\n\t  }\n\t  var longestCommonID = oneID.substr(0, lastCommonMarkerIndex);\n\t  !isValidID(longestCommonID) ?  false ? invariant(false, 'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s', oneID, twoID, longestCommonID) : invariant(false) : undefined;\n\t  return longestCommonID;\n\t}\n\t\n\t/**\n\t * Traverses the parent path between two IDs (either up or down). The IDs must\n\t * not be the same, and there must exist a parent path between them. If the\n\t * callback returns `false`, traversal is stopped.\n\t *\n\t * @param {?string} start ID at which to start traversal.\n\t * @param {?string} stop ID at which to end traversal.\n\t * @param {function} cb Callback to invoke each ID with.\n\t * @param {*} arg Argument to invoke the callback with.\n\t * @param {?boolean} skipFirst Whether or not to skip the first node.\n\t * @param {?boolean} skipLast Whether or not to skip the last node.\n\t * @private\n\t */\n\tfunction traverseParentPath(start, stop, cb, arg, skipFirst, skipLast) {\n\t  start = start || '';\n\t  stop = stop || '';\n\t  !(start !== stop) ?  false ? invariant(false, 'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.', start) : invariant(false) : undefined;\n\t  var traverseUp = isAncestorIDOf(stop, start);\n\t  !(traverseUp || isAncestorIDOf(start, stop)) ?  false ? invariant(false, 'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' + 'not have a parent path.', start, stop) : invariant(false) : undefined;\n\t  // Traverse from `start` to `stop` one depth at a time.\n\t  var depth = 0;\n\t  var traverse = traverseUp ? getParentID : getNextDescendantID;\n\t  for (var id = start;; /* until break */id = traverse(id, stop)) {\n\t    var ret;\n\t    if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {\n\t      ret = cb(id, traverseUp, arg);\n\t    }\n\t    if (ret === false || id === stop) {\n\t      // Only break //after// visiting `stop`.\n\t      break;\n\t    }\n\t    !(depth++ < MAX_TREE_DEPTH) ?  false ? invariant(false, 'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' + 'traversing the React DOM ID tree. This may be due to malformed IDs: %s', start, stop, id) : invariant(false) : undefined;\n\t  }\n\t}\n\t\n\t/**\n\t * Manages the IDs assigned to DOM representations of React components. This\n\t * uses a specific scheme in order to traverse the DOM efficiently (e.g. in\n\t * order to simulate events).\n\t *\n\t * @internal\n\t */\n\tvar ReactInstanceHandles = {\n\t\n\t  /**\n\t   * Constructs a React root ID\n\t   * @return {string} A React root ID.\n\t   */\n\t  createReactRootID: function () {\n\t    return getReactRootIDString(ReactRootIndex.createReactRootIndex());\n\t  },\n\t\n\t  /**\n\t   * Constructs a React ID by joining a root ID with a name.\n\t   *\n\t   * @param {string} rootID Root ID of a parent component.\n\t   * @param {string} name A component's name (as flattened children).\n\t   * @return {string} A React ID.\n\t   * @internal\n\t   */\n\t  createReactID: function (rootID, name) {\n\t    return rootID + name;\n\t  },\n\t\n\t  /**\n\t   * Gets the DOM ID of the React component that is the root of the tree that\n\t   * contains the React component with the supplied DOM ID.\n\t   *\n\t   * @param {string} id DOM ID of a React component.\n\t   * @return {?string} DOM ID of the React component that is the root.\n\t   * @internal\n\t   */\n\t  getReactRootIDFromNodeID: function (id) {\n\t    if (id && id.charAt(0) === SEPARATOR && id.length > 1) {\n\t      var index = id.indexOf(SEPARATOR, 1);\n\t      return index > -1 ? id.substr(0, index) : id;\n\t    }\n\t    return null;\n\t  },\n\t\n\t  /**\n\t   * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that\n\t   * should would receive a `mouseEnter` or `mouseLeave` event.\n\t   *\n\t   * NOTE: Does not invoke the callback on the nearest common ancestor because\n\t   * nothing \"entered\" or \"left\" that element.\n\t   *\n\t   * @param {string} leaveID ID being left.\n\t   * @param {string} enterID ID being entered.\n\t   * @param {function} cb Callback to invoke on each entered/left ID.\n\t   * @param {*} upArg Argument to invoke the callback with on left IDs.\n\t   * @param {*} downArg Argument to invoke the callback with on entered IDs.\n\t   * @internal\n\t   */\n\t  traverseEnterLeave: function (leaveID, enterID, cb, upArg, downArg) {\n\t    var ancestorID = getFirstCommonAncestorID(leaveID, enterID);\n\t    if (ancestorID !== leaveID) {\n\t      traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);\n\t    }\n\t    if (ancestorID !== enterID) {\n\t      traverseParentPath(ancestorID, enterID, cb, downArg, true, false);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Simulates the traversal of a two-phase, capture/bubble event dispatch.\n\t   *\n\t   * NOTE: This traversal happens on IDs without touching the DOM.\n\t   *\n\t   * @param {string} targetID ID of the target node.\n\t   * @param {function} cb Callback to invoke.\n\t   * @param {*} arg Argument to invoke the callback with.\n\t   * @internal\n\t   */\n\t  traverseTwoPhase: function (targetID, cb, arg) {\n\t    if (targetID) {\n\t      traverseParentPath('', targetID, cb, arg, true, false);\n\t      traverseParentPath(targetID, '', cb, arg, false, true);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Same as `traverseTwoPhase` but skips the `targetID`.\n\t   */\n\t  traverseTwoPhaseSkipTarget: function (targetID, cb, arg) {\n\t    if (targetID) {\n\t      traverseParentPath('', targetID, cb, arg, true, true);\n\t      traverseParentPath(targetID, '', cb, arg, true, true);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Traverse a node ID, calling the supplied `cb` for each ancestor ID. For\n\t   * example, passing `.0.$row-0.1` would result in `cb` getting called\n\t   * with `.0`, `.0.$row-0`, and `.0.$row-0.1`.\n\t   *\n\t   * NOTE: This traversal happens on IDs without touching the DOM.\n\t   *\n\t   * @param {string} targetID ID of the target node.\n\t   * @param {function} cb Callback to invoke.\n\t   * @param {*} arg Argument to invoke the callback with.\n\t   * @internal\n\t   */\n\t  traverseAncestors: function (targetID, cb, arg) {\n\t    traverseParentPath('', targetID, cb, arg, true, false);\n\t  },\n\t\n\t  getFirstCommonAncestorID: getFirstCommonAncestorID,\n\t\n\t  /**\n\t   * Exposed for unit testing.\n\t   * @private\n\t   */\n\t  _getNextDescendantID: getNextDescendantID,\n\t\n\t  isAncestorIDOf: isAncestorIDOf,\n\t\n\t  SEPARATOR: SEPARATOR\n\t\n\t};\n\t\n\tmodule.exports = ReactInstanceHandles;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule EventPluginHub\n\t */\n\t\n\t'use strict';\n\t\n\tvar EventPluginRegistry = __webpack_require__(59);\n\tvar EventPluginUtils = __webpack_require__(107);\n\tvar ReactErrorUtils = __webpack_require__(72);\n\t\n\tvar accumulateInto = __webpack_require__(81);\n\tvar forEachAccumulated = __webpack_require__(82);\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\t/**\n\t * Internal store for event listeners\n\t */\n\tvar listenerBank = {};\n\t\n\t/**\n\t * Internal queue of events that have accumulated their dispatches and are\n\t * waiting to have their dispatches executed.\n\t */\n\tvar eventQueue = null;\n\t\n\t/**\n\t * Dispatches an event and releases it back into the pool, unless persistent.\n\t *\n\t * @param {?object} event Synthetic event to be dispatched.\n\t * @param {boolean} simulated If the event is simulated (changes exn behavior)\n\t * @private\n\t */\n\tvar executeDispatchesAndRelease = function (event, simulated) {\n\t  if (event) {\n\t    EventPluginUtils.executeDispatchesInOrder(event, simulated);\n\t\n\t    if (!event.isPersistent()) {\n\t      event.constructor.release(event);\n\t    }\n\t  }\n\t};\n\tvar executeDispatchesAndReleaseSimulated = function (e) {\n\t  return executeDispatchesAndRelease(e, true);\n\t};\n\tvar executeDispatchesAndReleaseTopLevel = function (e) {\n\t  return executeDispatchesAndRelease(e, false);\n\t};\n\t\n\t/**\n\t * - `InstanceHandle`: [required] Module that performs logical traversals of DOM\n\t *   hierarchy given ids of the logical DOM elements involved.\n\t */\n\tvar InstanceHandle = null;\n\t\n\tfunction validateInstanceHandle() {\n\t  var valid = InstanceHandle && InstanceHandle.traverseTwoPhase && InstanceHandle.traverseEnterLeave;\n\t   false ? warning(valid, 'InstanceHandle not injected before use!') : undefined;\n\t}\n\t\n\t/**\n\t * This is a unified interface for event plugins to be installed and configured.\n\t *\n\t * Event plugins can implement the following properties:\n\t *\n\t *   `extractEvents` {function(string, DOMEventTarget, string, object): *}\n\t *     Required. When a top-level event is fired, this method is expected to\n\t *     extract synthetic events that will in turn be queued and dispatched.\n\t *\n\t *   `eventTypes` {object}\n\t *     Optional, plugins that fire events must publish a mapping of registration\n\t *     names that are used to register listeners. Values of this mapping must\n\t *     be objects that contain `registrationName` or `phasedRegistrationNames`.\n\t *\n\t *   `executeDispatch` {function(object, function, string)}\n\t *     Optional, allows plugins to override how an event gets dispatched. By\n\t *     default, the listener is simply invoked.\n\t *\n\t * Each plugin that is injected into `EventsPluginHub` is immediately operable.\n\t *\n\t * @public\n\t */\n\tvar EventPluginHub = {\n\t\n\t  /**\n\t   * Methods for injecting dependencies.\n\t   */\n\t  injection: {\n\t\n\t    /**\n\t     * @param {object} InjectedMount\n\t     * @public\n\t     */\n\t    injectMount: EventPluginUtils.injection.injectMount,\n\t\n\t    /**\n\t     * @param {object} InjectedInstanceHandle\n\t     * @public\n\t     */\n\t    injectInstanceHandle: function (InjectedInstanceHandle) {\n\t      InstanceHandle = InjectedInstanceHandle;\n\t      if (false) {\n\t        validateInstanceHandle();\n\t      }\n\t    },\n\t\n\t    getInstanceHandle: function () {\n\t      if (false) {\n\t        validateInstanceHandle();\n\t      }\n\t      return InstanceHandle;\n\t    },\n\t\n\t    /**\n\t     * @param {array} InjectedEventPluginOrder\n\t     * @public\n\t     */\n\t    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,\n\t\n\t    /**\n\t     * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n\t     */\n\t    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName\n\t\n\t  },\n\t\n\t  eventNameDispatchConfigs: EventPluginRegistry.eventNameDispatchConfigs,\n\t\n\t  registrationNameModules: EventPluginRegistry.registrationNameModules,\n\t\n\t  /**\n\t   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.\n\t   *\n\t   * @param {string} id ID of the DOM element.\n\t   * @param {string} registrationName Name of listener (e.g. `onClick`).\n\t   * @param {?function} listener The callback to store.\n\t   */\n\t  putListener: function (id, registrationName, listener) {\n\t    !(typeof listener === 'function') ?  false ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : invariant(false) : undefined;\n\t\n\t    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});\n\t    bankForRegistrationName[id] = listener;\n\t\n\t    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n\t    if (PluginModule && PluginModule.didPutListener) {\n\t      PluginModule.didPutListener(id, registrationName, listener);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @param {string} id ID of the DOM element.\n\t   * @param {string} registrationName Name of listener (e.g. `onClick`).\n\t   * @return {?function} The stored callback.\n\t   */\n\t  getListener: function (id, registrationName) {\n\t    var bankForRegistrationName = listenerBank[registrationName];\n\t    return bankForRegistrationName && bankForRegistrationName[id];\n\t  },\n\t\n\t  /**\n\t   * Deletes a listener from the registration bank.\n\t   *\n\t   * @param {string} id ID of the DOM element.\n\t   * @param {string} registrationName Name of listener (e.g. `onClick`).\n\t   */\n\t  deleteListener: function (id, registrationName) {\n\t    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n\t    if (PluginModule && PluginModule.willDeleteListener) {\n\t      PluginModule.willDeleteListener(id, registrationName);\n\t    }\n\t\n\t    var bankForRegistrationName = listenerBank[registrationName];\n\t    // TODO: This should never be null -- when is it?\n\t    if (bankForRegistrationName) {\n\t      delete bankForRegistrationName[id];\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Deletes all listeners for the DOM element with the supplied ID.\n\t   *\n\t   * @param {string} id ID of the DOM element.\n\t   */\n\t  deleteAllListeners: function (id) {\n\t    for (var registrationName in listenerBank) {\n\t      if (!listenerBank[registrationName][id]) {\n\t        continue;\n\t      }\n\t\n\t      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n\t      if (PluginModule && PluginModule.willDeleteListener) {\n\t        PluginModule.willDeleteListener(id, registrationName);\n\t      }\n\t\n\t      delete listenerBank[registrationName][id];\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Allows registered plugins an opportunity to extract events from top-level\n\t   * native browser events.\n\t   *\n\t   * @param {string} topLevelType Record from `EventConstants`.\n\t   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n\t   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n\t   * @param {object} nativeEvent Native browser event.\n\t   * @return {*} An accumulation of synthetic events.\n\t   * @internal\n\t   */\n\t  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n\t    var events;\n\t    var plugins = EventPluginRegistry.plugins;\n\t    for (var i = 0; i < plugins.length; i++) {\n\t      // Not every plugin in the ordering may be loaded at runtime.\n\t      var possiblePlugin = plugins[i];\n\t      if (possiblePlugin) {\n\t        var extractedEvents = possiblePlugin.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);\n\t        if (extractedEvents) {\n\t          events = accumulateInto(events, extractedEvents);\n\t        }\n\t      }\n\t    }\n\t    return events;\n\t  },\n\t\n\t  /**\n\t   * Enqueues a synthetic event that should be dispatched when\n\t   * `processEventQueue` is invoked.\n\t   *\n\t   * @param {*} events An accumulation of synthetic events.\n\t   * @internal\n\t   */\n\t  enqueueEvents: function (events) {\n\t    if (events) {\n\t      eventQueue = accumulateInto(eventQueue, events);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Dispatches all synthetic events on the event queue.\n\t   *\n\t   * @internal\n\t   */\n\t  processEventQueue: function (simulated) {\n\t    // Set `eventQueue` to null before processing it so that we can tell if more\n\t    // events get enqueued while processing.\n\t    var processingEventQueue = eventQueue;\n\t    eventQueue = null;\n\t    if (simulated) {\n\t      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);\n\t    } else {\n\t      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);\n\t    }\n\t    !!eventQueue ?  false ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing ' + 'an event queue. Support for this has not yet been implemented.') : invariant(false) : undefined;\n\t    // This would be a good time to rethrow if any of the event handlers threw.\n\t    ReactErrorUtils.rethrowCaughtError();\n\t  },\n\t\n\t  /**\n\t   * These are needed for tests only. Do not use!\n\t   */\n\t  __purge: function () {\n\t    listenerBank = {};\n\t  },\n\t\n\t  __getListenerBank: function () {\n\t    return listenerBank;\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = EventPluginHub;\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule EventPropagators\n\t */\n\t\n\t'use strict';\n\t\n\tvar EventConstants = __webpack_require__(10);\n\tvar EventPluginHub = __webpack_require__(19);\n\t\n\tvar warning = __webpack_require__(3);\n\t\n\tvar accumulateInto = __webpack_require__(81);\n\tvar forEachAccumulated = __webpack_require__(82);\n\t\n\tvar PropagationPhases = EventConstants.PropagationPhases;\n\tvar getListener = EventPluginHub.getListener;\n\t\n\t/**\n\t * Some event types have a notion of different registration names for different\n\t * \"phases\" of propagation. This finds listeners by a given phase.\n\t */\n\tfunction listenerAtPhase(id, event, propagationPhase) {\n\t  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n\t  return getListener(id, registrationName);\n\t}\n\t\n\t/**\n\t * Tags a `SyntheticEvent` with dispatched listeners. Creating this function\n\t * here, allows us to not have to bind or create functions for each event.\n\t * Mutating the event's members allows us to not have to create a wrapping\n\t * \"dispatch\" object that pairs the event with the listener.\n\t */\n\tfunction accumulateDirectionalDispatches(domID, upwards, event) {\n\t  if (false) {\n\t    process.env.NODE_ENV !== 'production' ? warning(domID, 'Dispatching id must not be null') : undefined;\n\t  }\n\t  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;\n\t  var listener = listenerAtPhase(domID, event, phase);\n\t  if (listener) {\n\t    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n\t    event._dispatchIDs = accumulateInto(event._dispatchIDs, domID);\n\t  }\n\t}\n\t\n\t/**\n\t * Collect dispatches (must be entirely collected before dispatching - see unit\n\t * tests). Lazily allocate the array to conserve memory.  We must loop through\n\t * each event and perform the traversal for each one. We cannot perform a\n\t * single traversal for the entire collection of events because each event may\n\t * have a different target.\n\t */\n\tfunction accumulateTwoPhaseDispatchesSingle(event) {\n\t  if (event && event.dispatchConfig.phasedRegistrationNames) {\n\t    EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(event.dispatchMarker, accumulateDirectionalDispatches, event);\n\t  }\n\t}\n\t\n\t/**\n\t * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.\n\t */\n\tfunction accumulateTwoPhaseDispatchesSingleSkipTarget(event) {\n\t  if (event && event.dispatchConfig.phasedRegistrationNames) {\n\t    EventPluginHub.injection.getInstanceHandle().traverseTwoPhaseSkipTarget(event.dispatchMarker, accumulateDirectionalDispatches, event);\n\t  }\n\t}\n\t\n\t/**\n\t * Accumulates without regard to direction, does not look for phased\n\t * registration names. Same as `accumulateDirectDispatchesSingle` but without\n\t * requiring that the `dispatchMarker` be the same as the dispatched ID.\n\t */\n\tfunction accumulateDispatches(id, ignoredDirection, event) {\n\t  if (event && event.dispatchConfig.registrationName) {\n\t    var registrationName = event.dispatchConfig.registrationName;\n\t    var listener = getListener(id, registrationName);\n\t    if (listener) {\n\t      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n\t      event._dispatchIDs = accumulateInto(event._dispatchIDs, id);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Accumulates dispatches on an `SyntheticEvent`, but only for the\n\t * `dispatchMarker`.\n\t * @param {SyntheticEvent} event\n\t */\n\tfunction accumulateDirectDispatchesSingle(event) {\n\t  if (event && event.dispatchConfig.registrationName) {\n\t    accumulateDispatches(event.dispatchMarker, null, event);\n\t  }\n\t}\n\t\n\tfunction accumulateTwoPhaseDispatches(events) {\n\t  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\n\t}\n\t\n\tfunction accumulateTwoPhaseDispatchesSkipTarget(events) {\n\t  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);\n\t}\n\t\n\tfunction accumulateEnterLeaveDispatches(leave, enter, fromID, toID) {\n\t  EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(fromID, toID, accumulateDispatches, leave, enter);\n\t}\n\t\n\tfunction accumulateDirectDispatches(events) {\n\t  forEachAccumulated(events, accumulateDirectDispatchesSingle);\n\t}\n\t\n\t/**\n\t * A small set of propagation patterns, each of which will accept a small amount\n\t * of information, and generate a set of \"dispatch ready event objects\" - which\n\t * are sets of events that have already been annotated with a set of dispatched\n\t * listener functions/ids. The API is designed this way to discourage these\n\t * propagation strategies from actually executing the dispatches, since we\n\t * always want to collect the entire set of dispatches before executing event a\n\t * single one.\n\t *\n\t * @constructor EventPropagators\n\t */\n\tvar EventPropagators = {\n\t  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,\n\t  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,\n\t  accumulateDirectDispatches: accumulateDirectDispatches,\n\t  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches\n\t};\n\t\n\tmodule.exports = EventPropagators;\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactInstanceMap\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * `ReactInstanceMap` maintains a mapping from a public facing stateful\n\t * instance (key) and the internal representation (value). This allows public\n\t * methods to accept the user facing instance as an argument and map them back\n\t * to internal methods.\n\t */\n\t\n\t// TODO: Replace this with ES6: var ReactInstanceMap = new Map();\n\tvar ReactInstanceMap = {\n\t\n\t  /**\n\t   * This API should be called `delete` but we'd have to make sure to always\n\t   * transform these to strings for IE support. When this transform is fully\n\t   * supported we can rename it.\n\t   */\n\t  remove: function (key) {\n\t    key._reactInternalInstance = undefined;\n\t  },\n\t\n\t  get: function (key) {\n\t    return key._reactInternalInstance;\n\t  },\n\t\n\t  has: function (key) {\n\t    return key._reactInternalInstance !== undefined;\n\t  },\n\t\n\t  set: function (key, value) {\n\t    key._reactInternalInstance = value;\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactInstanceMap;\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticUIEvent\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticEvent = __webpack_require__(16);\n\t\n\tvar getEventTarget = __webpack_require__(46);\n\t\n\t/**\n\t * @interface UIEvent\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/\n\t */\n\tvar UIEventInterface = {\n\t  view: function (event) {\n\t    if (event.view) {\n\t      return event.view;\n\t    }\n\t\n\t    var target = getEventTarget(event);\n\t    if (target != null && target.window === target) {\n\t      // target is a window object\n\t      return target;\n\t    }\n\t\n\t    var doc = target.ownerDocument;\n\t    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n\t    if (doc) {\n\t      return doc.defaultView || doc.parentWindow;\n\t    } else {\n\t      return window;\n\t    }\n\t  },\n\t  detail: function (event) {\n\t    return event.detail || 0;\n\t  }\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticEvent}\n\t */\n\tfunction SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);\n\t\n\tmodule.exports = SyntheticUIEvent;\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule emptyObject\n\t */\n\t\n\t'use strict';\n\t\n\tvar emptyObject = {};\n\t\n\tif (false) {\n\t  Object.freeze(emptyObject);\n\t}\n\t\n\tmodule.exports = emptyObject;\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(110);\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactBrowserEventEmitter\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar EventConstants = __webpack_require__(10);\n\tvar EventPluginHub = __webpack_require__(19);\n\tvar EventPluginRegistry = __webpack_require__(59);\n\tvar ReactEventEmitterMixin = __webpack_require__(122);\n\tvar ReactPerf = __webpack_require__(7);\n\tvar ViewportMetrics = __webpack_require__(80);\n\t\n\tvar assign = __webpack_require__(2);\n\tvar isEventSupported = __webpack_require__(49);\n\t\n\t/**\n\t * Summary of `ReactBrowserEventEmitter` event handling:\n\t *\n\t *  - Top-level delegation is used to trap most native browser events. This\n\t *    may only occur in the main thread and is the responsibility of\n\t *    ReactEventListener, which is injected and can therefore support pluggable\n\t *    event sources. This is the only work that occurs in the main thread.\n\t *\n\t *  - We normalize and de-duplicate events to account for browser quirks. This\n\t *    may be done in the worker thread.\n\t *\n\t *  - Forward these native events (with the associated top-level type used to\n\t *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want\n\t *    to extract any synthetic events.\n\t *\n\t *  - The `EventPluginHub` will then process each event by annotating them with\n\t *    \"dispatches\", a sequence of listeners and IDs that care about that event.\n\t *\n\t *  - The `EventPluginHub` then dispatches the events.\n\t *\n\t * Overview of React and the event system:\n\t *\n\t * +------------+    .\n\t * |    DOM     |    .\n\t * +------------+    .\n\t *       |           .\n\t *       v           .\n\t * +------------+    .\n\t * | ReactEvent |    .\n\t * |  Listener  |    .\n\t * +------------+    .                         +-----------+\n\t *       |           .               +--------+|SimpleEvent|\n\t *       |           .               |         |Plugin     |\n\t * +-----|------+    .               v         +-----------+\n\t * |     |      |    .    +--------------+                    +------------+\n\t * |     +-----------.--->|EventPluginHub|                    |    Event   |\n\t * |            |    .    |              |     +-----------+  | Propagators|\n\t * | ReactEvent |    .    |              |     |TapEvent   |  |------------|\n\t * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|\n\t * |            |    .    |              |     +-----------+  |  utilities |\n\t * |     +-----------.--->|              |                    +------------+\n\t * |     |      |    .    +--------------+\n\t * +-----|------+    .                ^        +-----------+\n\t *       |           .                |        |Enter/Leave|\n\t *       +           .                +-------+|Plugin     |\n\t * +-------------+   .                         +-----------+\n\t * | application |   .\n\t * |-------------|   .\n\t * |             |   .\n\t * |             |   .\n\t * +-------------+   .\n\t *                   .\n\t *    React Core     .  General Purpose Event Plugin System\n\t */\n\t\n\tvar alreadyListeningTo = {};\n\tvar isMonitoringScrollValue = false;\n\tvar reactTopListenersCounter = 0;\n\t\n\t// For events like 'submit' which don't consistently bubble (which we trap at a\n\t// lower node than `document`), binding at `document` would cause duplicate\n\t// events so we don't include them here\n\tvar topEventMapping = {\n\t  topAbort: 'abort',\n\t  topBlur: 'blur',\n\t  topCanPlay: 'canplay',\n\t  topCanPlayThrough: 'canplaythrough',\n\t  topChange: 'change',\n\t  topClick: 'click',\n\t  topCompositionEnd: 'compositionend',\n\t  topCompositionStart: 'compositionstart',\n\t  topCompositionUpdate: 'compositionupdate',\n\t  topContextMenu: 'contextmenu',\n\t  topCopy: 'copy',\n\t  topCut: 'cut',\n\t  topDoubleClick: 'dblclick',\n\t  topDrag: 'drag',\n\t  topDragEnd: 'dragend',\n\t  topDragEnter: 'dragenter',\n\t  topDragExit: 'dragexit',\n\t  topDragLeave: 'dragleave',\n\t  topDragOver: 'dragover',\n\t  topDragStart: 'dragstart',\n\t  topDrop: 'drop',\n\t  topDurationChange: 'durationchange',\n\t  topEmptied: 'emptied',\n\t  topEncrypted: 'encrypted',\n\t  topEnded: 'ended',\n\t  topError: 'error',\n\t  topFocus: 'focus',\n\t  topInput: 'input',\n\t  topKeyDown: 'keydown',\n\t  topKeyPress: 'keypress',\n\t  topKeyUp: 'keyup',\n\t  topLoadedData: 'loadeddata',\n\t  topLoadedMetadata: 'loadedmetadata',\n\t  topLoadStart: 'loadstart',\n\t  topMouseDown: 'mousedown',\n\t  topMouseMove: 'mousemove',\n\t  topMouseOut: 'mouseout',\n\t  topMouseOver: 'mouseover',\n\t  topMouseUp: 'mouseup',\n\t  topPaste: 'paste',\n\t  topPause: 'pause',\n\t  topPlay: 'play',\n\t  topPlaying: 'playing',\n\t  topProgress: 'progress',\n\t  topRateChange: 'ratechange',\n\t  topScroll: 'scroll',\n\t  topSeeked: 'seeked',\n\t  topSeeking: 'seeking',\n\t  topSelectionChange: 'selectionchange',\n\t  topStalled: 'stalled',\n\t  topSuspend: 'suspend',\n\t  topTextInput: 'textInput',\n\t  topTimeUpdate: 'timeupdate',\n\t  topTouchCancel: 'touchcancel',\n\t  topTouchEnd: 'touchend',\n\t  topTouchMove: 'touchmove',\n\t  topTouchStart: 'touchstart',\n\t  topVolumeChange: 'volumechange',\n\t  topWaiting: 'waiting',\n\t  topWheel: 'wheel'\n\t};\n\t\n\t/**\n\t * To ensure no conflicts with other potential React instances on the page\n\t */\n\tvar topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);\n\t\n\tfunction getListeningForDocument(mountAt) {\n\t  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`\n\t  // directly.\n\t  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {\n\t    mountAt[topListenersIDKey] = reactTopListenersCounter++;\n\t    alreadyListeningTo[mountAt[topListenersIDKey]] = {};\n\t  }\n\t  return alreadyListeningTo[mountAt[topListenersIDKey]];\n\t}\n\t\n\t/**\n\t * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For\n\t * example:\n\t *\n\t *   ReactBrowserEventEmitter.putListener('myID', 'onClick', myFunction);\n\t *\n\t * This would allocate a \"registration\" of `('onClick', myFunction)` on 'myID'.\n\t *\n\t * @internal\n\t */\n\tvar ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {\n\t\n\t  /**\n\t   * Injectable event backend\n\t   */\n\t  ReactEventListener: null,\n\t\n\t  injection: {\n\t    /**\n\t     * @param {object} ReactEventListener\n\t     */\n\t    injectReactEventListener: function (ReactEventListener) {\n\t      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);\n\t      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Sets whether or not any created callbacks should be enabled.\n\t   *\n\t   * @param {boolean} enabled True if callbacks should be enabled.\n\t   */\n\t  setEnabled: function (enabled) {\n\t    if (ReactBrowserEventEmitter.ReactEventListener) {\n\t      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @return {boolean} True if callbacks are enabled.\n\t   */\n\t  isEnabled: function () {\n\t    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());\n\t  },\n\t\n\t  /**\n\t   * We listen for bubbled touch events on the document object.\n\t   *\n\t   * Firefox v8.01 (and possibly others) exhibited strange behavior when\n\t   * mounting `onmousemove` events at some node that was not the document\n\t   * element. The symptoms were that if your mouse is not moving over something\n\t   * contained within that mount point (for example on the background) the\n\t   * top-level listeners for `onmousemove` won't be called. However, if you\n\t   * register the `mousemove` on the document object, then it will of course\n\t   * catch all `mousemove`s. This along with iOS quirks, justifies restricting\n\t   * top-level listeners to the document object only, at least for these\n\t   * movement types of events and possibly all events.\n\t   *\n\t   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n\t   *\n\t   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but\n\t   * they bubble to document.\n\t   *\n\t   * @param {string} registrationName Name of listener (e.g. `onClick`).\n\t   * @param {object} contentDocumentHandle Document which owns the container\n\t   */\n\t  listenTo: function (registrationName, contentDocumentHandle) {\n\t    var mountAt = contentDocumentHandle;\n\t    var isListening = getListeningForDocument(mountAt);\n\t    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];\n\t\n\t    var topLevelTypes = EventConstants.topLevelTypes;\n\t    for (var i = 0; i < dependencies.length; i++) {\n\t      var dependency = dependencies[i];\n\t      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {\n\t        if (dependency === topLevelTypes.topWheel) {\n\t          if (isEventSupported('wheel')) {\n\t            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);\n\t          } else if (isEventSupported('mousewheel')) {\n\t            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);\n\t          } else {\n\t            // Firefox needs to capture a different mouse scroll event.\n\t            // @see http://www.quirksmode.org/dom/events/tests/scroll.html\n\t            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);\n\t          }\n\t        } else if (dependency === topLevelTypes.topScroll) {\n\t\n\t          if (isEventSupported('scroll', true)) {\n\t            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);\n\t          } else {\n\t            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);\n\t          }\n\t        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {\n\t\n\t          if (isEventSupported('focus', true)) {\n\t            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);\n\t            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);\n\t          } else if (isEventSupported('focusin')) {\n\t            // IE has `focusin` and `focusout` events which bubble.\n\t            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html\n\t            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);\n\t            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);\n\t          }\n\t\n\t          // to make sure blur and focus event listeners are only attached once\n\t          isListening[topLevelTypes.topBlur] = true;\n\t          isListening[topLevelTypes.topFocus] = true;\n\t        } else if (topEventMapping.hasOwnProperty(dependency)) {\n\t          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);\n\t        }\n\t\n\t        isListening[dependency] = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {\n\t    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);\n\t  },\n\t\n\t  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {\n\t    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);\n\t  },\n\t\n\t  /**\n\t   * Listens to window scroll and resize events. We cache scroll values so that\n\t   * application code can access them without triggering reflows.\n\t   *\n\t   * NOTE: Scroll events do not bubble.\n\t   *\n\t   * @see http://www.quirksmode.org/dom/events/scroll.html\n\t   */\n\t  ensureScrollValueMonitoring: function () {\n\t    if (!isMonitoringScrollValue) {\n\t      var refresh = ViewportMetrics.refreshScrollValues;\n\t      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);\n\t      isMonitoringScrollValue = true;\n\t    }\n\t  },\n\t\n\t  eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,\n\t\n\t  registrationNameModules: EventPluginHub.registrationNameModules,\n\t\n\t  putListener: EventPluginHub.putListener,\n\t\n\t  getListener: EventPluginHub.getListener,\n\t\n\t  deleteListener: EventPluginHub.deleteListener,\n\t\n\t  deleteAllListeners: EventPluginHub.deleteAllListeners\n\t\n\t});\n\t\n\tReactPerf.measureMethods(ReactBrowserEventEmitter, 'ReactBrowserEventEmitter', {\n\t  putListener: 'putListener',\n\t  deleteListener: 'deleteListener'\n\t});\n\t\n\tmodule.exports = ReactBrowserEventEmitter;\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactPropTypeLocationNames\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactPropTypeLocationNames = {};\n\t\n\tif (false) {\n\t  ReactPropTypeLocationNames = {\n\t    prop: 'prop',\n\t    context: 'context',\n\t    childContext: 'child context'\n\t  };\n\t}\n\t\n\tmodule.exports = ReactPropTypeLocationNames;\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactPropTypeLocations\n\t */\n\t\n\t'use strict';\n\t\n\tvar keyMirror = __webpack_require__(33);\n\t\n\tvar ReactPropTypeLocations = keyMirror({\n\t  prop: null,\n\t  context: null,\n\t  childContext: null\n\t});\n\t\n\tmodule.exports = ReactPropTypeLocations;\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticMouseEvent\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticUIEvent = __webpack_require__(22);\n\tvar ViewportMetrics = __webpack_require__(80);\n\t\n\tvar getEventModifierState = __webpack_require__(45);\n\t\n\t/**\n\t * @interface MouseEvent\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/\n\t */\n\tvar MouseEventInterface = {\n\t  screenX: null,\n\t  screenY: null,\n\t  clientX: null,\n\t  clientY: null,\n\t  ctrlKey: null,\n\t  shiftKey: null,\n\t  altKey: null,\n\t  metaKey: null,\n\t  getModifierState: getEventModifierState,\n\t  button: function (event) {\n\t    // Webkit, Firefox, IE9+\n\t    // which:  1 2 3\n\t    // button: 0 1 2 (standard)\n\t    var button = event.button;\n\t    if ('which' in event) {\n\t      return button;\n\t    }\n\t    // IE<9\n\t    // which:  undefined\n\t    // button: 0 0 0\n\t    // button: 1 4 2 (onmouseup)\n\t    return button === 2 ? 2 : button === 4 ? 1 : 0;\n\t  },\n\t  buttons: null,\n\t  relatedTarget: function (event) {\n\t    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);\n\t  },\n\t  // \"Proprietary\" Interface.\n\t  pageX: function (event) {\n\t    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;\n\t  },\n\t  pageY: function (event) {\n\t    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;\n\t  }\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);\n\t\n\tmodule.exports = SyntheticMouseEvent;\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule Transaction\n\t */\n\t\n\t'use strict';\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * `Transaction` creates a black box that is able to wrap any method such that\n\t * certain invariants are maintained before and after the method is invoked\n\t * (Even if an exception is thrown while invoking the wrapped method). Whoever\n\t * instantiates a transaction can provide enforcers of the invariants at\n\t * creation time. The `Transaction` class itself will supply one additional\n\t * automatic invariant for you - the invariant that any transaction instance\n\t * should not be run while it is already being run. You would typically create a\n\t * single instance of a `Transaction` for reuse multiple times, that potentially\n\t * is used to wrap several different methods. Wrappers are extremely simple -\n\t * they only require implementing two methods.\n\t *\n\t * <pre>\n\t *                       wrappers (injected at creation time)\n\t *                                      +        +\n\t *                                      |        |\n\t *                    +-----------------|--------|--------------+\n\t *                    |                 v        |              |\n\t *                    |      +---------------+   |              |\n\t *                    |   +--|    wrapper1   |---|----+         |\n\t *                    |   |  +---------------+   v    |         |\n\t *                    |   |          +-------------+  |         |\n\t *                    |   |     +----|   wrapper2  |--------+   |\n\t *                    |   |     |    +-------------+  |     |   |\n\t *                    |   |     |                     |     |   |\n\t *                    |   v     v                     v     v   | wrapper\n\t *                    | +---+ +---+   +---------+   +---+ +---+ | invariants\n\t * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained\n\t * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->\n\t *                    | |   | |   |   |         |   |   | |   | |\n\t *                    | |   | |   |   |         |   |   | |   | |\n\t *                    | |   | |   |   |         |   |   | |   | |\n\t *                    | +---+ +---+   +---------+   +---+ +---+ |\n\t *                    |  initialize                    close    |\n\t *                    +-----------------------------------------+\n\t * </pre>\n\t *\n\t * Use cases:\n\t * - Preserving the input selection ranges before/after reconciliation.\n\t *   Restoring selection even in the event of an unexpected error.\n\t * - Deactivating events while rearranging the DOM, preventing blurs/focuses,\n\t *   while guaranteeing that afterwards, the event system is reactivated.\n\t * - Flushing a queue of collected DOM mutations to the main UI thread after a\n\t *   reconciliation takes place in a worker thread.\n\t * - Invoking any collected `componentDidUpdate` callbacks after rendering new\n\t *   content.\n\t * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue\n\t *   to preserve the `scrollTop` (an automatic scroll aware DOM).\n\t * - (Future use case): Layout calculations before and after DOM updates.\n\t *\n\t * Transactional plugin API:\n\t * - A module that has an `initialize` method that returns any precomputation.\n\t * - and a `close` method that accepts the precomputation. `close` is invoked\n\t *   when the wrapped process is completed, or has failed.\n\t *\n\t * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules\n\t * that implement `initialize` and `close`.\n\t * @return {Transaction} Single transaction for reuse in thread.\n\t *\n\t * @class Transaction\n\t */\n\tvar Mixin = {\n\t  /**\n\t   * Sets up this instance so that it is prepared for collecting metrics. Does\n\t   * so such that this setup method may be used on an instance that is already\n\t   * initialized, in a way that does not consume additional memory upon reuse.\n\t   * That can be useful if you decide to make your subclass of this mixin a\n\t   * \"PooledClass\".\n\t   */\n\t  reinitializeTransaction: function () {\n\t    this.transactionWrappers = this.getTransactionWrappers();\n\t    if (this.wrapperInitData) {\n\t      this.wrapperInitData.length = 0;\n\t    } else {\n\t      this.wrapperInitData = [];\n\t    }\n\t    this._isInTransaction = false;\n\t  },\n\t\n\t  _isInTransaction: false,\n\t\n\t  /**\n\t   * @abstract\n\t   * @return {Array<TransactionWrapper>} Array of transaction wrappers.\n\t   */\n\t  getTransactionWrappers: null,\n\t\n\t  isInTransaction: function () {\n\t    return !!this._isInTransaction;\n\t  },\n\t\n\t  /**\n\t   * Executes the function within a safety window. Use this for the top level\n\t   * methods that result in large amounts of computation/mutations that would\n\t   * need to be safety checked. The optional arguments helps prevent the need\n\t   * to bind in many cases.\n\t   *\n\t   * @param {function} method Member of scope to call.\n\t   * @param {Object} scope Scope to invoke from.\n\t   * @param {Object?=} a Argument to pass to the method.\n\t   * @param {Object?=} b Argument to pass to the method.\n\t   * @param {Object?=} c Argument to pass to the method.\n\t   * @param {Object?=} d Argument to pass to the method.\n\t   * @param {Object?=} e Argument to pass to the method.\n\t   * @param {Object?=} f Argument to pass to the method.\n\t   *\n\t   * @return {*} Return value from `method`.\n\t   */\n\t  perform: function (method, scope, a, b, c, d, e, f) {\n\t    !!this.isInTransaction() ?  false ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there ' + 'is already an outstanding transaction.') : invariant(false) : undefined;\n\t    var errorThrown;\n\t    var ret;\n\t    try {\n\t      this._isInTransaction = true;\n\t      // Catching errors makes debugging more difficult, so we start with\n\t      // errorThrown set to true before setting it to false after calling\n\t      // close -- if it's still set to true in the finally block, it means\n\t      // one of these calls threw.\n\t      errorThrown = true;\n\t      this.initializeAll(0);\n\t      ret = method.call(scope, a, b, c, d, e, f);\n\t      errorThrown = false;\n\t    } finally {\n\t      try {\n\t        if (errorThrown) {\n\t          // If `method` throws, prefer to show that stack trace over any thrown\n\t          // by invoking `closeAll`.\n\t          try {\n\t            this.closeAll(0);\n\t          } catch (err) {}\n\t        } else {\n\t          // Since `method` didn't throw, we don't want to silence the exception\n\t          // here.\n\t          this.closeAll(0);\n\t        }\n\t      } finally {\n\t        this._isInTransaction = false;\n\t      }\n\t    }\n\t    return ret;\n\t  },\n\t\n\t  initializeAll: function (startIndex) {\n\t    var transactionWrappers = this.transactionWrappers;\n\t    for (var i = startIndex; i < transactionWrappers.length; i++) {\n\t      var wrapper = transactionWrappers[i];\n\t      try {\n\t        // Catching errors makes debugging more difficult, so we start with the\n\t        // OBSERVED_ERROR state before overwriting it with the real return value\n\t        // of initialize -- if it's still set to OBSERVED_ERROR in the finally\n\t        // block, it means wrapper.initialize threw.\n\t        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;\n\t        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;\n\t      } finally {\n\t        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {\n\t          // The initializer for wrapper i threw an error; initialize the\n\t          // remaining wrappers but silence any exceptions from them to ensure\n\t          // that the first error is the one to bubble up.\n\t          try {\n\t            this.initializeAll(i + 1);\n\t          } catch (err) {}\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into\n\t   * them the respective return values of `this.transactionWrappers.init[i]`\n\t   * (`close`rs that correspond to initializers that failed will not be\n\t   * invoked).\n\t   */\n\t  closeAll: function (startIndex) {\n\t    !this.isInTransaction() ?  false ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : invariant(false) : undefined;\n\t    var transactionWrappers = this.transactionWrappers;\n\t    for (var i = startIndex; i < transactionWrappers.length; i++) {\n\t      var wrapper = transactionWrappers[i];\n\t      var initData = this.wrapperInitData[i];\n\t      var errorThrown;\n\t      try {\n\t        // Catching errors makes debugging more difficult, so we start with\n\t        // errorThrown set to true before setting it to false after calling\n\t        // close -- if it's still set to true in the finally block, it means\n\t        // wrapper.close threw.\n\t        errorThrown = true;\n\t        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {\n\t          wrapper.close.call(this, initData);\n\t        }\n\t        errorThrown = false;\n\t      } finally {\n\t        if (errorThrown) {\n\t          // The closer for wrapper i threw an error; close the remaining\n\t          // wrappers but silence any exceptions from them to ensure that the\n\t          // first error is the one to bubble up.\n\t          try {\n\t            this.closeAll(i + 1);\n\t          } catch (e) {}\n\t        }\n\t      }\n\t    }\n\t    this.wrapperInitData.length = 0;\n\t  }\n\t};\n\t\n\tvar Transaction = {\n\t\n\t  Mixin: Mixin,\n\t\n\t  /**\n\t   * Token to look for to determine if an error occurred.\n\t   */\n\t  OBSERVED_ERROR: {}\n\t\n\t};\n\t\n\tmodule.exports = Transaction;\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule canDefineProperty\n\t */\n\t\n\t'use strict';\n\t\n\tvar canDefineProperty = false;\n\tif (false) {\n\t  try {\n\t    Object.defineProperty({}, 'x', { get: function () {} });\n\t    canDefineProperty = true;\n\t  } catch (x) {\n\t    // IE will fail on defineProperty\n\t  }\n\t}\n\t\n\tmodule.exports = canDefineProperty;\n\n/***/ },\n/* 31 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule escapeTextContentForBrowser\n\t */\n\t\n\t'use strict';\n\t\n\tvar ESCAPE_LOOKUP = {\n\t  '&': '&amp;',\n\t  '>': '&gt;',\n\t  '<': '&lt;',\n\t  '\"': '&quot;',\n\t  '\\'': '&#x27;'\n\t};\n\t\n\tvar ESCAPE_REGEX = /[&><\"']/g;\n\t\n\tfunction escaper(match) {\n\t  return ESCAPE_LOOKUP[match];\n\t}\n\t\n\t/**\n\t * Escapes text to prevent scripting attacks.\n\t *\n\t * @param {*} text Text value to escape.\n\t * @return {string} An escaped string.\n\t */\n\tfunction escapeTextContentForBrowser(text) {\n\t  return ('' + text).replace(ESCAPE_REGEX, escaper);\n\t}\n\t\n\tmodule.exports = escapeTextContentForBrowser;\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule setInnerHTML\n\t */\n\t\n\t/* globals MSApp */\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(4);\n\t\n\tvar WHITESPACE_TEST = /^[ \\r\\n\\t\\f]/;\n\tvar NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \\r\\n\\t\\f\\/>]/;\n\t\n\t/**\n\t * Set the innerHTML property of a node, ensuring that whitespace is preserved\n\t * even in IE8.\n\t *\n\t * @param {DOMElement} node\n\t * @param {string} html\n\t * @internal\n\t */\n\tvar setInnerHTML = function (node, html) {\n\t  node.innerHTML = html;\n\t};\n\t\n\t// Win8 apps: Allow all html to be inserted\n\tif (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {\n\t  setInnerHTML = function (node, html) {\n\t    MSApp.execUnsafeLocalFunction(function () {\n\t      node.innerHTML = html;\n\t    });\n\t  };\n\t}\n\t\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  // IE8: When updating a just created node with innerHTML only leading\n\t  // whitespace is removed. When updating an existing node with innerHTML\n\t  // whitespace in root TextNodes is also collapsed.\n\t  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html\n\t\n\t  // Feature detection; only IE8 is known to behave improperly like this.\n\t  var testElement = document.createElement('div');\n\t  testElement.innerHTML = ' ';\n\t  if (testElement.innerHTML === '') {\n\t    setInnerHTML = function (node, html) {\n\t      // Magic theory: IE8 supposedly differentiates between added and updated\n\t      // nodes when processing innerHTML, innerHTML on updated nodes suffers\n\t      // from worse whitespace behavior. Re-adding a node like this triggers\n\t      // the initial and more favorable whitespace behavior.\n\t      // TODO: What to do on a detached node?\n\t      if (node.parentNode) {\n\t        node.parentNode.replaceChild(node, node);\n\t      }\n\t\n\t      // We also implement a workaround for non-visible tags disappearing into\n\t      // thin air on IE8, this only happens if there is no visible text\n\t      // in-front of the non-visible tags. Piggyback on the whitespace fix\n\t      // and simply check if any non-visible tags appear in the source.\n\t      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {\n\t        // Recover leading whitespace by temporarily prepending any character.\n\t        // \\uFEFF has the potential advantage of being zero-width/invisible.\n\t        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode\n\t        // in hopes that this is preserved even if \"\\uFEFF\" is transformed to\n\t        // the actual Unicode character (by Babel, for example).\n\t        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216\n\t        node.innerHTML = String.fromCharCode(0xFEFF) + html;\n\t\n\t        // deleteData leaves an empty `TextNode` which offsets the index of all\n\t        // children. Definitely want to avoid this.\n\t        var textNode = node.firstChild;\n\t        if (textNode.data.length === 1) {\n\t          node.removeChild(textNode);\n\t        } else {\n\t          textNode.deleteData(0, 1);\n\t        }\n\t      } else {\n\t        node.innerHTML = html;\n\t      }\n\t    };\n\t  }\n\t}\n\t\n\tmodule.exports = setInnerHTML;\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule keyMirror\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Constructs an enumeration with keys equal to their value.\n\t *\n\t * For example:\n\t *\n\t *   var COLORS = keyMirror({blue: null, red: null});\n\t *   var myColor = COLORS.blue;\n\t *   var isColorValid = !!COLORS[myColor];\n\t *\n\t * The last line could not be performed if the values of the generated enum were\n\t * not equal to their keys.\n\t *\n\t *   Input:  {key1: val1, key2: val2}\n\t *   Output: {key1: key1, key2: key2}\n\t *\n\t * @param {object} obj\n\t * @return {object}\n\t */\n\tvar keyMirror = function (obj) {\n\t  var ret = {};\n\t  var key;\n\t  !(obj instanceof Object && !Array.isArray(obj)) ?  false ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : undefined;\n\t  for (key in obj) {\n\t    if (!obj.hasOwnProperty(key)) {\n\t      continue;\n\t    }\n\t    ret[key] = key;\n\t  }\n\t  return ret;\n\t};\n\t\n\tmodule.exports = keyMirror;\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Generated by CoffeeScript 1.9.1\n\t(function() {\n\t  var R, _composeP2, add, addIndex, adjust, call, cc, ccp, clamp, complement, compose, composeP, composeP2, concat, concatMany, curry, dec, difference, evolve, evolveAll, exports, fail, flip, flipAllAndPrependY, fromPairs, getPath, head, init, intersection, into, isNil, isNotNil, isThenable, keys, last, map, mapIndexed, mapObjIndexed, max, maxIn, merge, mergeMany, mergeOrEvolve, min, minIn, path, pick, pickAll, pickBy, pickOr, pluck, prop, ramdaFlipped, reduce, reduceObj, reduceRight, ref, split, sum, toPairs, toStr,\n\t    slice = [].slice;\n\t\n\t  ref = R = __webpack_require__(14), add = ref.add, addIndex = ref.addIndex, adjust = ref.adjust, call = ref.call, complement = ref.complement, compose = ref.compose, composeP = ref.composeP, concat = ref.concat, curry = ref.curry, dec = ref.dec, difference = ref.difference, evolve = ref.evolve, flip = ref.flip, fromPairs = ref.fromPairs, head = ref.head, init = ref.init, intersection = ref.intersection, into = ref.into, isNil = ref.isNil, keys = ref.keys, last = ref.last, map = ref.map, mapObjIndexed = ref.mapObjIndexed, max = ref.max, merge = ref.merge, min = ref.min, path = ref.path, pick = ref.pick, pickAll = ref.pickAll, pickBy = ref.pickBy, pluck = ref.pluck, prop = ref.prop, reduce = ref.reduce, reduceRight = ref.reduceRight, split = ref.split, sum = ref.sum, toPairs = ref.toPairs;\n\t\n\t  getPath = curry(function(path, o) {\n\t    var pathToUse;\n\t    pathToUse = R.is(String, path) ? split('.', path) : path;\n\t    return R.path(pathToUse, o);\n\t  });\n\t\n\t  concatMany = function() {\n\t    var lists;\n\t    lists = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n\t    return reduce(concat, [], lists);\n\t  };\n\t\n\t  maxIn = reduce(max, -Infinity);\n\t\n\t  minIn = reduce(min, Infinity);\n\t\n\t  mapIndexed = addIndex(map);\n\t\n\t  pickOr = function(keysAndDefaults, o) {\n\t    var picked, valueOrDefault;\n\t    picked = pickAll(keys(keysAndDefaults), o);\n\t    valueOrDefault = function(v, k) {\n\t      if (v === void 0) {\n\t        return prop(k, keysAndDefaults);\n\t      } else {\n\t        return v;\n\t      }\n\t    };\n\t    return mapObjIndexed(valueOrDefault, picked);\n\t  };\n\t\n\t  mergeMany = function() {\n\t    var objects, original;\n\t    original = arguments[0], objects = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n\t    return reduce(merge, original, objects);\n\t  };\n\t\n\t  isThenable = function(value) {\n\t    return value !== null && value === Object(value) && typeof value.then === 'function';\n\t  };\n\t\n\t  reduceObj = curry(function(f, init, o) {\n\t    var callF, ret;\n\t    ret = cloneShallow(init);\n\t    callF = function(v, k) {\n\t      return ret = f(ret, k, v);\n\t    };\n\t    mapObjIndexed(callF, o);\n\t    return ret;\n\t  });\n\t\n\t  mergeOrEvolve = curry(function(spec, data) {\n\t    var data2, forcedMerges, merged, missingKeys, sharedKeys, spec2, toMerge, transformations;\n\t    forcedMerges = pickBy(complement(R.is(Array)), spec);\n\t    data2 = merge(data, forcedMerges);\n\t    spec2 = pickBy(R.is(Array), spec);\n\t    missingKeys = difference(keys(spec2), keys(data2));\n\t    sharedKeys = intersection(keys(spec2), keys(data2));\n\t    toMerge = map(head, pick(missingKeys, spec2));\n\t    merged = merge(data2, toMerge);\n\t    transformations = map(last, pick(sharedKeys, spec2));\n\t    return evolve(transformations, merged);\n\t  });\n\t\n\t  evolveAll = function(spec, data) {\n\t    var data2, missingKeys, toMerge;\n\t    missingKeys = difference(keys(spec), keys(data));\n\t    toMerge = pick(missingKeys, spec);\n\t    data2 = merge(data, toMerge);\n\t    return evolve(spec, data2);\n\t  };\n\t\n\t  cc = function() {\n\t    var data, functions, i;\n\t    functions = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), data = arguments[i++];\n\t    return compose.apply(null, functions)(data);\n\t  };\n\t\n\t  ccp = function() {\n\t    var data, functions, i;\n\t    functions = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), data = arguments[i++];\n\t    return composeP.apply(null, functions)(data);\n\t  };\n\t\n\t  _composeP2 = function(acc, f) {\n\t    return function() {\n\t      var context, value;\n\t      context = this;\n\t      if (!acc) {\n\t        return f.apply(this, arguments);\n\t      }\n\t      value = acc.apply(this, arguments);\n\t      if (isThenable(value)) {\n\t        if (f._fail) {\n\t          return value.fail(function(x) {\n\t            return f.call(context, x);\n\t          });\n\t        } else {\n\t          return value.then(function(x) {\n\t            return f.call(context, x);\n\t          });\n\t        }\n\t      } else {\n\t        return f.call(this, value);\n\t      }\n\t    };\n\t  };\n\t\n\t  composeP2 = function() {\n\t    var fs;\n\t    fs = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n\t    return reduceRight(_composeP2, null, fs);\n\t  };\n\t\n\t  fail = function(f) {\n\t    var context, f2;\n\t    context = this;\n\t    f2 = function() {\n\t      return f.apply(context, arguments);\n\t    };\n\t    f2._fail = true;\n\t    return f2;\n\t  };\n\t\n\t  isNotNil = complement(isNil);\n\t\n\t  toStr = function(a) {\n\t    return a + '';\n\t  };\n\t\n\t  clamp = curry(function(a, b, x) {\n\t    return Math.min(b, Math.max(a, x));\n\t  });\n\t\n\t  flipAllAndPrependY = compose(fromPairs, map(adjust(add('y'), 0)), toPairs, mapObjIndexed(flip));\n\t\n\t  ramdaFlipped = flipAllAndPrependY(R);\n\t\n\t  exports = {\n\t    maxIn: maxIn,\n\t    minIn: minIn,\n\t    mapIndexed: mapIndexed,\n\t    getPath: getPath,\n\t    cc: cc,\n\t    ccp: ccp,\n\t    mergeMany: mergeMany,\n\t    toStr: toStr,\n\t    pickOr: pickOr,\n\t    isThenable: isThenable,\n\t    composeP2: composeP2,\n\t    fail: fail,\n\t    reduceObj: reduceObj,\n\t    mergeOrEvolve: mergeOrEvolve,\n\t    evolveAll: evolveAll,\n\t    clamp: clamp,\n\t    isNotNil: isNotNil\n\t  };\n\t\n\t  module.exports = merge(exports, ramdaFlipped);\n\t\n\t}).call(this);\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule CallbackQueue\n\t */\n\t\n\t'use strict';\n\t\n\tvar PooledClass = __webpack_require__(12);\n\t\n\tvar assign = __webpack_require__(2);\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * A specialized pseudo-event module to help keep track of components waiting to\n\t * be notified when their DOM representations are available for use.\n\t *\n\t * This implements `PooledClass`, so you should never need to instantiate this.\n\t * Instead, use `CallbackQueue.getPooled()`.\n\t *\n\t * @class ReactMountReady\n\t * @implements PooledClass\n\t * @internal\n\t */\n\tfunction CallbackQueue() {\n\t  this._callbacks = null;\n\t  this._contexts = null;\n\t}\n\t\n\tassign(CallbackQueue.prototype, {\n\t\n\t  /**\n\t   * Enqueues a callback to be invoked when `notifyAll` is invoked.\n\t   *\n\t   * @param {function} callback Invoked when `notifyAll` is invoked.\n\t   * @param {?object} context Context to call `callback` with.\n\t   * @internal\n\t   */\n\t  enqueue: function (callback, context) {\n\t    this._callbacks = this._callbacks || [];\n\t    this._contexts = this._contexts || [];\n\t    this._callbacks.push(callback);\n\t    this._contexts.push(context);\n\t  },\n\t\n\t  /**\n\t   * Invokes all enqueued callbacks and clears the queue. This is invoked after\n\t   * the DOM representation of a component has been created or updated.\n\t   *\n\t   * @internal\n\t   */\n\t  notifyAll: function () {\n\t    var callbacks = this._callbacks;\n\t    var contexts = this._contexts;\n\t    if (callbacks) {\n\t      !(callbacks.length === contexts.length) ?  false ? invariant(false, 'Mismatched list of contexts in callback queue') : invariant(false) : undefined;\n\t      this._callbacks = null;\n\t      this._contexts = null;\n\t      for (var i = 0; i < callbacks.length; i++) {\n\t        callbacks[i].call(contexts[i]);\n\t      }\n\t      callbacks.length = 0;\n\t      contexts.length = 0;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resets the internal queue.\n\t   *\n\t   * @internal\n\t   */\n\t  reset: function () {\n\t    this._callbacks = null;\n\t    this._contexts = null;\n\t  },\n\t\n\t  /**\n\t   * `PooledClass` looks for this.\n\t   */\n\t  destructor: function () {\n\t    this.reset();\n\t  }\n\t\n\t});\n\t\n\tPooledClass.addPoolingTo(CallbackQueue);\n\t\n\tmodule.exports = CallbackQueue;\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule DOMPropertyOperations\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMProperty = __webpack_require__(17);\n\tvar ReactPerf = __webpack_require__(7);\n\t\n\tvar quoteAttributeValueForBrowser = __webpack_require__(152);\n\tvar warning = __webpack_require__(3);\n\t\n\t// Simplified subset\n\tvar VALID_ATTRIBUTE_NAME_REGEX = /^[a-zA-Z_][\\w\\.\\-]*$/;\n\tvar illegalAttributeNameCache = {};\n\tvar validatedAttributeNameCache = {};\n\t\n\tfunction isAttributeNameSafe(attributeName) {\n\t  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {\n\t    return true;\n\t  }\n\t  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {\n\t    return false;\n\t  }\n\t  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {\n\t    validatedAttributeNameCache[attributeName] = true;\n\t    return true;\n\t  }\n\t  illegalAttributeNameCache[attributeName] = true;\n\t   false ? warning(false, 'Invalid attribute name: `%s`', attributeName) : undefined;\n\t  return false;\n\t}\n\t\n\tfunction shouldIgnoreValue(propertyInfo, value) {\n\t  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;\n\t}\n\t\n\tif (false) {\n\t  var reactProps = {\n\t    children: true,\n\t    dangerouslySetInnerHTML: true,\n\t    key: true,\n\t    ref: true\n\t  };\n\t  var warnedProperties = {};\n\t\n\t  var warnUnknownProperty = function (name) {\n\t    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {\n\t      return;\n\t    }\n\t\n\t    warnedProperties[name] = true;\n\t    var lowerCasedName = name.toLowerCase();\n\t\n\t    // data-* attributes should be lowercase; suggest the lowercase version\n\t    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;\n\t\n\t    // For now, only warn when we have a suggested correction. This prevents\n\t    // logging too much when using transferPropsTo.\n\t    process.env.NODE_ENV !== 'production' ? warning(standardName == null, 'Unknown DOM property %s. Did you mean %s?', name, standardName) : undefined;\n\t  };\n\t}\n\t\n\t/**\n\t * Operations for dealing with DOM properties.\n\t */\n\tvar DOMPropertyOperations = {\n\t\n\t  /**\n\t   * Creates markup for the ID property.\n\t   *\n\t   * @param {string} id Unescaped ID.\n\t   * @return {string} Markup string.\n\t   */\n\t  createMarkupForID: function (id) {\n\t    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);\n\t  },\n\t\n\t  setAttributeForID: function (node, id) {\n\t    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);\n\t  },\n\t\n\t  /**\n\t   * Creates markup for a property.\n\t   *\n\t   * @param {string} name\n\t   * @param {*} value\n\t   * @return {?string} Markup string, or null if the property was invalid.\n\t   */\n\t  createMarkupForProperty: function (name, value) {\n\t    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n\t    if (propertyInfo) {\n\t      if (shouldIgnoreValue(propertyInfo, value)) {\n\t        return '';\n\t      }\n\t      var attributeName = propertyInfo.attributeName;\n\t      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {\n\t        return attributeName + '=\"\"';\n\t      }\n\t      return attributeName + '=' + quoteAttributeValueForBrowser(value);\n\t    } else if (DOMProperty.isCustomAttribute(name)) {\n\t      if (value == null) {\n\t        return '';\n\t      }\n\t      return name + '=' + quoteAttributeValueForBrowser(value);\n\t    } else if (false) {\n\t      warnUnknownProperty(name);\n\t    }\n\t    return null;\n\t  },\n\t\n\t  /**\n\t   * Creates markup for a custom property.\n\t   *\n\t   * @param {string} name\n\t   * @param {*} value\n\t   * @return {string} Markup string, or empty string if the property was invalid.\n\t   */\n\t  createMarkupForCustomAttribute: function (name, value) {\n\t    if (!isAttributeNameSafe(name) || value == null) {\n\t      return '';\n\t    }\n\t    return name + '=' + quoteAttributeValueForBrowser(value);\n\t  },\n\t\n\t  /**\n\t   * Sets the value for a property on a node.\n\t   *\n\t   * @param {DOMElement} node\n\t   * @param {string} name\n\t   * @param {*} value\n\t   */\n\t  setValueForProperty: function (node, name, value) {\n\t    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n\t    if (propertyInfo) {\n\t      var mutationMethod = propertyInfo.mutationMethod;\n\t      if (mutationMethod) {\n\t        mutationMethod(node, value);\n\t      } else if (shouldIgnoreValue(propertyInfo, value)) {\n\t        this.deleteValueForProperty(node, name);\n\t      } else if (propertyInfo.mustUseAttribute) {\n\t        var attributeName = propertyInfo.attributeName;\n\t        var namespace = propertyInfo.attributeNamespace;\n\t        // `setAttribute` with objects becomes only `[object]` in IE8/9,\n\t        // ('' + value) makes it output the correct toString()-value.\n\t        if (namespace) {\n\t          node.setAttributeNS(namespace, attributeName, '' + value);\n\t        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {\n\t          node.setAttribute(attributeName, '');\n\t        } else {\n\t          node.setAttribute(attributeName, '' + value);\n\t        }\n\t      } else {\n\t        var propName = propertyInfo.propertyName;\n\t        // Must explicitly cast values for HAS_SIDE_EFFECTS-properties to the\n\t        // property type before comparing; only `value` does and is string.\n\t        if (!propertyInfo.hasSideEffects || '' + node[propName] !== '' + value) {\n\t          // Contrary to `setAttribute`, object properties are properly\n\t          // `toString`ed by IE8/9.\n\t          node[propName] = value;\n\t        }\n\t      }\n\t    } else if (DOMProperty.isCustomAttribute(name)) {\n\t      DOMPropertyOperations.setValueForAttribute(node, name, value);\n\t    } else if (false) {\n\t      warnUnknownProperty(name);\n\t    }\n\t  },\n\t\n\t  setValueForAttribute: function (node, name, value) {\n\t    if (!isAttributeNameSafe(name)) {\n\t      return;\n\t    }\n\t    if (value == null) {\n\t      node.removeAttribute(name);\n\t    } else {\n\t      node.setAttribute(name, '' + value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Deletes the value for a property on a node.\n\t   *\n\t   * @param {DOMElement} node\n\t   * @param {string} name\n\t   */\n\t  deleteValueForProperty: function (node, name) {\n\t    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n\t    if (propertyInfo) {\n\t      var mutationMethod = propertyInfo.mutationMethod;\n\t      if (mutationMethod) {\n\t        mutationMethod(node, undefined);\n\t      } else if (propertyInfo.mustUseAttribute) {\n\t        node.removeAttribute(propertyInfo.attributeName);\n\t      } else {\n\t        var propName = propertyInfo.propertyName;\n\t        var defaultValue = DOMProperty.getDefaultValueForProperty(node.nodeName, propName);\n\t        if (!propertyInfo.hasSideEffects || '' + node[propName] !== defaultValue) {\n\t          node[propName] = defaultValue;\n\t        }\n\t      }\n\t    } else if (DOMProperty.isCustomAttribute(name)) {\n\t      node.removeAttribute(name);\n\t    } else if (false) {\n\t      warnUnknownProperty(name);\n\t    }\n\t  }\n\t\n\t};\n\t\n\tReactPerf.measureMethods(DOMPropertyOperations, 'DOMPropertyOperations', {\n\t  setValueForProperty: 'setValueForProperty',\n\t  setValueForAttribute: 'setValueForAttribute',\n\t  deleteValueForProperty: 'deleteValueForProperty'\n\t});\n\t\n\tmodule.exports = DOMPropertyOperations;\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule LinkedValueUtils\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactPropTypes = __webpack_require__(78);\n\tvar ReactPropTypeLocations = __webpack_require__(27);\n\t\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar hasReadOnlyValue = {\n\t  'button': true,\n\t  'checkbox': true,\n\t  'image': true,\n\t  'hidden': true,\n\t  'radio': true,\n\t  'reset': true,\n\t  'submit': true\n\t};\n\t\n\tfunction _assertSingleLink(inputProps) {\n\t  !(inputProps.checkedLink == null || inputProps.valueLink == null) ?  false ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use ' + 'checkedLink, you probably don\\'t want to use valueLink and vice versa.') : invariant(false) : undefined;\n\t}\n\tfunction _assertValueLink(inputProps) {\n\t  _assertSingleLink(inputProps);\n\t  !(inputProps.value == null && inputProps.onChange == null) ?  false ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want ' + 'to use value or onChange, you probably don\\'t want to use valueLink.') : invariant(false) : undefined;\n\t}\n\t\n\tfunction _assertCheckedLink(inputProps) {\n\t  _assertSingleLink(inputProps);\n\t  !(inputProps.checked == null && inputProps.onChange == null) ?  false ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. ' + 'If you want to use checked or onChange, you probably don\\'t want to ' + 'use checkedLink') : invariant(false) : undefined;\n\t}\n\t\n\tvar propTypes = {\n\t  value: function (props, propName, componentName) {\n\t    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {\n\t      return null;\n\t    }\n\t    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n\t  },\n\t  checked: function (props, propName, componentName) {\n\t    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {\n\t      return null;\n\t    }\n\t    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n\t  },\n\t  onChange: ReactPropTypes.func\n\t};\n\t\n\tvar loggedTypeFailures = {};\n\tfunction getDeclarationErrorAddendum(owner) {\n\t  if (owner) {\n\t    var name = owner.getName();\n\t    if (name) {\n\t      return ' Check the render method of `' + name + '`.';\n\t    }\n\t  }\n\t  return '';\n\t}\n\t\n\t/**\n\t * Provide a linked `value` attribute for controlled forms. You should not use\n\t * this outside of the ReactDOM controlled form components.\n\t */\n\tvar LinkedValueUtils = {\n\t  checkPropTypes: function (tagName, props, owner) {\n\t    for (var propName in propTypes) {\n\t      if (propTypes.hasOwnProperty(propName)) {\n\t        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop);\n\t      }\n\t      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n\t        // Only monitor this failure once because there tends to be a lot of the\n\t        // same error.\n\t        loggedTypeFailures[error.message] = true;\n\t\n\t        var addendum = getDeclarationErrorAddendum(owner);\n\t         false ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : undefined;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @param {object} inputProps Props for form component\n\t   * @return {*} current value of the input either from value prop or link.\n\t   */\n\t  getValue: function (inputProps) {\n\t    if (inputProps.valueLink) {\n\t      _assertValueLink(inputProps);\n\t      return inputProps.valueLink.value;\n\t    }\n\t    return inputProps.value;\n\t  },\n\t\n\t  /**\n\t   * @param {object} inputProps Props for form component\n\t   * @return {*} current checked status of the input either from checked prop\n\t   *             or link.\n\t   */\n\t  getChecked: function (inputProps) {\n\t    if (inputProps.checkedLink) {\n\t      _assertCheckedLink(inputProps);\n\t      return inputProps.checkedLink.value;\n\t    }\n\t    return inputProps.checked;\n\t  },\n\t\n\t  /**\n\t   * @param {object} inputProps Props for form component\n\t   * @param {SyntheticEvent} event change event to handle\n\t   */\n\t  executeOnChange: function (inputProps, event) {\n\t    if (inputProps.valueLink) {\n\t      _assertValueLink(inputProps);\n\t      return inputProps.valueLink.requestChange(event.target.value);\n\t    } else if (inputProps.checkedLink) {\n\t      _assertCheckedLink(inputProps);\n\t      return inputProps.checkedLink.requestChange(event.target.checked);\n\t    } else if (inputProps.onChange) {\n\t      return inputProps.onChange.call(undefined, event);\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = LinkedValueUtils;\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactComponentBrowserEnvironment\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactDOMIDOperations = __webpack_require__(40);\n\tvar ReactMount = __webpack_require__(5);\n\t\n\t/**\n\t * Abstracts away all functionality of the reconciler that requires knowledge of\n\t * the browser context. TODO: These callers should be refactored to avoid the\n\t * need for this injection.\n\t */\n\tvar ReactComponentBrowserEnvironment = {\n\t\n\t  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,\n\t\n\t  replaceNodeWithMarkupByID: ReactDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,\n\t\n\t  /**\n\t   * If a particular environment requires that some resources be cleaned up,\n\t   * specify this in the injected Mixin. In the DOM, we would likely want to\n\t   * purge any cached node ID lookups.\n\t   *\n\t   * @private\n\t   */\n\t  unmountIDFromEnvironment: function (rootNodeID) {\n\t    ReactMount.purgeID(rootNodeID);\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactComponentBrowserEnvironment;\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactComponentEnvironment\n\t */\n\t\n\t'use strict';\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\tvar injected = false;\n\t\n\tvar ReactComponentEnvironment = {\n\t\n\t  /**\n\t   * Optionally injectable environment dependent cleanup hook. (server vs.\n\t   * browser etc). Example: A browser system caches DOM nodes based on component\n\t   * ID and must remove that cache entry when this instance is unmounted.\n\t   */\n\t  unmountIDFromEnvironment: null,\n\t\n\t  /**\n\t   * Optionally injectable hook for swapping out mount images in the middle of\n\t   * the tree.\n\t   */\n\t  replaceNodeWithMarkupByID: null,\n\t\n\t  /**\n\t   * Optionally injectable hook for processing a queue of child updates. Will\n\t   * later move into MultiChildComponents.\n\t   */\n\t  processChildrenUpdates: null,\n\t\n\t  injection: {\n\t    injectEnvironment: function (environment) {\n\t      !!injected ?  false ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : invariant(false) : undefined;\n\t      ReactComponentEnvironment.unmountIDFromEnvironment = environment.unmountIDFromEnvironment;\n\t      ReactComponentEnvironment.replaceNodeWithMarkupByID = environment.replaceNodeWithMarkupByID;\n\t      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;\n\t      injected = true;\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactComponentEnvironment;\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMIDOperations\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMChildrenOperations = __webpack_require__(58);\n\tvar DOMPropertyOperations = __webpack_require__(36);\n\tvar ReactMount = __webpack_require__(5);\n\tvar ReactPerf = __webpack_require__(7);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Errors for properties that should not be updated with `updatePropertyByID()`.\n\t *\n\t * @type {object}\n\t * @private\n\t */\n\tvar INVALID_PROPERTY_ERRORS = {\n\t  dangerouslySetInnerHTML: '`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.',\n\t  style: '`style` must be set using `updateStylesByID()`.'\n\t};\n\t\n\t/**\n\t * Operations used to process updates to DOM nodes.\n\t */\n\tvar ReactDOMIDOperations = {\n\t\n\t  /**\n\t   * Updates a DOM node with new property values. This should only be used to\n\t   * update DOM properties in `DOMProperty`.\n\t   *\n\t   * @param {string} id ID of the node to update.\n\t   * @param {string} name A valid property name, see `DOMProperty`.\n\t   * @param {*} value New value of the property.\n\t   * @internal\n\t   */\n\t  updatePropertyByID: function (id, name, value) {\n\t    var node = ReactMount.getNode(id);\n\t    !!INVALID_PROPERTY_ERRORS.hasOwnProperty(name) ?  false ? invariant(false, 'updatePropertyByID(...): %s', INVALID_PROPERTY_ERRORS[name]) : invariant(false) : undefined;\n\t\n\t    // If we're updating to null or undefined, we should remove the property\n\t    // from the DOM node instead of inadvertantly setting to a string. This\n\t    // brings us in line with the same behavior we have on initial render.\n\t    if (value != null) {\n\t      DOMPropertyOperations.setValueForProperty(node, name, value);\n\t    } else {\n\t      DOMPropertyOperations.deleteValueForProperty(node, name);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Replaces a DOM node that exists in the document with markup.\n\t   *\n\t   * @param {string} id ID of child to be replaced.\n\t   * @param {string} markup Dangerous markup to inject in place of child.\n\t   * @internal\n\t   * @see {Danger.dangerouslyReplaceNodeWithMarkup}\n\t   */\n\t  dangerouslyReplaceNodeWithMarkupByID: function (id, markup) {\n\t    var node = ReactMount.getNode(id);\n\t    DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup(node, markup);\n\t  },\n\t\n\t  /**\n\t   * Updates a component's children by processing a series of updates.\n\t   *\n\t   * @param {array<object>} updates List of update configurations.\n\t   * @param {array<string>} markup List of markup strings.\n\t   * @internal\n\t   */\n\t  dangerouslyProcessChildrenUpdates: function (updates, markup) {\n\t    for (var i = 0; i < updates.length; i++) {\n\t      updates[i].parentNode = ReactMount.getNode(updates[i].parentID);\n\t    }\n\t    DOMChildrenOperations.processUpdates(updates, markup);\n\t  }\n\t};\n\t\n\tReactPerf.measureMethods(ReactDOMIDOperations, 'ReactDOMIDOperations', {\n\t  dangerouslyReplaceNodeWithMarkupByID: 'dangerouslyReplaceNodeWithMarkupByID',\n\t  dangerouslyProcessChildrenUpdates: 'dangerouslyProcessChildrenUpdates'\n\t});\n\t\n\tmodule.exports = ReactDOMIDOperations;\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactUpdateQueue\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactCurrentOwner = __webpack_require__(11);\n\tvar ReactElement = __webpack_require__(6);\n\tvar ReactInstanceMap = __webpack_require__(21);\n\tvar ReactUpdates = __webpack_require__(8);\n\t\n\tvar assign = __webpack_require__(2);\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\tfunction enqueueUpdate(internalInstance) {\n\t  ReactUpdates.enqueueUpdate(internalInstance);\n\t}\n\t\n\tfunction getInternalInstanceReadyForUpdate(publicInstance, callerName) {\n\t  var internalInstance = ReactInstanceMap.get(publicInstance);\n\t  if (!internalInstance) {\n\t    if (false) {\n\t      // Only warn when we have a callerName. Otherwise we should be silent.\n\t      // We're probably calling from enqueueCallback. We don't want to warn\n\t      // there because we already warned for the corresponding lifecycle method.\n\t      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor.displayName) : undefined;\n\t    }\n\t    return null;\n\t  }\n\t\n\t  if (false) {\n\t    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition ' + '(such as within `render`). Render methods should be a pure function ' + 'of props and state.', callerName) : undefined;\n\t  }\n\t\n\t  return internalInstance;\n\t}\n\t\n\t/**\n\t * ReactUpdateQueue allows for state updates to be scheduled into a later\n\t * reconciliation step.\n\t */\n\tvar ReactUpdateQueue = {\n\t\n\t  /**\n\t   * Checks whether or not this composite component is mounted.\n\t   * @param {ReactClass} publicInstance The instance we want to test.\n\t   * @return {boolean} True if mounted, false otherwise.\n\t   * @protected\n\t   * @final\n\t   */\n\t  isMounted: function (publicInstance) {\n\t    if (false) {\n\t      var owner = ReactCurrentOwner.current;\n\t      if (owner !== null) {\n\t        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : undefined;\n\t        owner._warnedAboutRefsInRender = true;\n\t      }\n\t    }\n\t    var internalInstance = ReactInstanceMap.get(publicInstance);\n\t    if (internalInstance) {\n\t      // During componentWillMount and render this will still be null but after\n\t      // that will always render to something. At least for now. So we can use\n\t      // this hack.\n\t      return !!internalInstance._renderedComponent;\n\t    } else {\n\t      return false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Enqueue a callback that will be executed after all the pending updates\n\t   * have processed.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance to use as `this` context.\n\t   * @param {?function} callback Called after state is updated.\n\t   * @internal\n\t   */\n\t  enqueueCallback: function (publicInstance, callback) {\n\t    !(typeof callback === 'function') ?  false ? invariant(false, 'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + '`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 'isn\\'t callable.') : invariant(false) : undefined;\n\t    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);\n\t\n\t    // Previously we would throw an error if we didn't have an internal\n\t    // instance. Since we want to make it a no-op instead, we mirror the same\n\t    // behavior we have in other enqueue* methods.\n\t    // We also need to ignore callbacks in componentWillMount. See\n\t    // enqueueUpdates.\n\t    if (!internalInstance) {\n\t      return null;\n\t    }\n\t\n\t    if (internalInstance._pendingCallbacks) {\n\t      internalInstance._pendingCallbacks.push(callback);\n\t    } else {\n\t      internalInstance._pendingCallbacks = [callback];\n\t    }\n\t    // TODO: The callback here is ignored when setState is called from\n\t    // componentWillMount. Either fix it or disallow doing so completely in\n\t    // favor of getInitialState. Alternatively, we can disallow\n\t    // componentWillMount during server-side rendering.\n\t    enqueueUpdate(internalInstance);\n\t  },\n\t\n\t  enqueueCallbackInternal: function (internalInstance, callback) {\n\t    !(typeof callback === 'function') ?  false ? invariant(false, 'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + '`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 'isn\\'t callable.') : invariant(false) : undefined;\n\t    if (internalInstance._pendingCallbacks) {\n\t      internalInstance._pendingCallbacks.push(callback);\n\t    } else {\n\t      internalInstance._pendingCallbacks = [callback];\n\t    }\n\t    enqueueUpdate(internalInstance);\n\t  },\n\t\n\t  /**\n\t   * Forces an update. This should only be invoked when it is known with\n\t   * certainty that we are **not** in a DOM transaction.\n\t   *\n\t   * You may want to call this when you know that some deeper aspect of the\n\t   * component's state has changed but `setState` was not called.\n\t   *\n\t   * This will not invoke `shouldComponentUpdate`, but it will invoke\n\t   * `componentWillUpdate` and `componentDidUpdate`.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @internal\n\t   */\n\t  enqueueForceUpdate: function (publicInstance) {\n\t    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');\n\t\n\t    if (!internalInstance) {\n\t      return;\n\t    }\n\t\n\t    internalInstance._pendingForceUpdate = true;\n\t\n\t    enqueueUpdate(internalInstance);\n\t  },\n\t\n\t  /**\n\t   * Replaces all of the state. Always use this or `setState` to mutate state.\n\t   * You should treat `this.state` as immutable.\n\t   *\n\t   * There is no guarantee that `this.state` will be immediately updated, so\n\t   * accessing `this.state` after calling this method may return the old value.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @param {object} completeState Next state.\n\t   * @internal\n\t   */\n\t  enqueueReplaceState: function (publicInstance, completeState) {\n\t    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');\n\t\n\t    if (!internalInstance) {\n\t      return;\n\t    }\n\t\n\t    internalInstance._pendingStateQueue = [completeState];\n\t    internalInstance._pendingReplaceState = true;\n\t\n\t    enqueueUpdate(internalInstance);\n\t  },\n\t\n\t  /**\n\t   * Sets a subset of the state. This only exists because _pendingState is\n\t   * internal. This provides a merging strategy that is not available to deep\n\t   * properties which is confusing. TODO: Expose pendingState or don't use it\n\t   * during the merge.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @param {object} partialState Next partial state to be merged with state.\n\t   * @internal\n\t   */\n\t  enqueueSetState: function (publicInstance, partialState) {\n\t    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');\n\t\n\t    if (!internalInstance) {\n\t      return;\n\t    }\n\t\n\t    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);\n\t    queue.push(partialState);\n\t\n\t    enqueueUpdate(internalInstance);\n\t  },\n\t\n\t  /**\n\t   * Sets a subset of the props.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @param {object} partialProps Subset of the next props.\n\t   * @internal\n\t   */\n\t  enqueueSetProps: function (publicInstance, partialProps) {\n\t    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setProps');\n\t    if (!internalInstance) {\n\t      return;\n\t    }\n\t    ReactUpdateQueue.enqueueSetPropsInternal(internalInstance, partialProps);\n\t  },\n\t\n\t  enqueueSetPropsInternal: function (internalInstance, partialProps) {\n\t    var topLevelWrapper = internalInstance._topLevelWrapper;\n\t    !topLevelWrapper ?  false ? invariant(false, 'setProps(...): You called `setProps` on a ' + 'component with a parent. This is an anti-pattern since props will ' + 'get reactively updated when rendered. Instead, change the owner\\'s ' + '`render` method to pass the correct value as props to the component ' + 'where it is created.') : invariant(false) : undefined;\n\t\n\t    // Merge with the pending element if it exists, otherwise with existing\n\t    // element props.\n\t    var wrapElement = topLevelWrapper._pendingElement || topLevelWrapper._currentElement;\n\t    var element = wrapElement.props;\n\t    var props = assign({}, element.props, partialProps);\n\t    topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(wrapElement, ReactElement.cloneAndReplaceProps(element, props));\n\t\n\t    enqueueUpdate(topLevelWrapper);\n\t  },\n\t\n\t  /**\n\t   * Replaces all of the props.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @param {object} props New props.\n\t   * @internal\n\t   */\n\t  enqueueReplaceProps: function (publicInstance, props) {\n\t    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceProps');\n\t    if (!internalInstance) {\n\t      return;\n\t    }\n\t    ReactUpdateQueue.enqueueReplacePropsInternal(internalInstance, props);\n\t  },\n\t\n\t  enqueueReplacePropsInternal: function (internalInstance, props) {\n\t    var topLevelWrapper = internalInstance._topLevelWrapper;\n\t    !topLevelWrapper ?  false ? invariant(false, 'replaceProps(...): You called `replaceProps` on a ' + 'component with a parent. This is an anti-pattern since props will ' + 'get reactively updated when rendered. Instead, change the owner\\'s ' + '`render` method to pass the correct value as props to the component ' + 'where it is created.') : invariant(false) : undefined;\n\t\n\t    // Merge with the pending element if it exists, otherwise with existing\n\t    // element props.\n\t    var wrapElement = topLevelWrapper._pendingElement || topLevelWrapper._currentElement;\n\t    var element = wrapElement.props;\n\t    topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(wrapElement, ReactElement.cloneAndReplaceProps(element, props));\n\t\n\t    enqueueUpdate(topLevelWrapper);\n\t  },\n\t\n\t  enqueueElementInternal: function (internalInstance, newElement) {\n\t    internalInstance._pendingElement = newElement;\n\t    enqueueUpdate(internalInstance);\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactUpdateQueue;\n\n/***/ },\n/* 42 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactVersion\n\t */\n\t\n\t'use strict';\n\t\n\tmodule.exports = '0.14.8';\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule findDOMNode\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactCurrentOwner = __webpack_require__(11);\n\tvar ReactInstanceMap = __webpack_require__(21);\n\tvar ReactMount = __webpack_require__(5);\n\t\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\t/**\n\t * Returns the DOM node rendered by this element.\n\t *\n\t * @param {ReactComponent|DOMElement} componentOrElement\n\t * @return {?DOMElement} The root node of this element.\n\t */\n\tfunction findDOMNode(componentOrElement) {\n\t  if (false) {\n\t    var owner = ReactCurrentOwner.current;\n\t    if (owner !== null) {\n\t      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing getDOMNode or findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : undefined;\n\t      owner._warnedAboutRefsInRender = true;\n\t    }\n\t  }\n\t  if (componentOrElement == null) {\n\t    return null;\n\t  }\n\t  if (componentOrElement.nodeType === 1) {\n\t    return componentOrElement;\n\t  }\n\t  if (ReactInstanceMap.has(componentOrElement)) {\n\t    return ReactMount.getNodeFromInstance(componentOrElement);\n\t  }\n\t  !(componentOrElement.render == null || typeof componentOrElement.render !== 'function') ?  false ? invariant(false, 'findDOMNode was called on an unmounted component.') : invariant(false) : undefined;\n\t   true ?  false ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : invariant(false) : undefined;\n\t}\n\t\n\tmodule.exports = findDOMNode;\n\n/***/ },\n/* 44 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule getEventCharCode\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * `charCode` represents the actual \"character code\" and is safe to use with\n\t * `String.fromCharCode`. As such, only keys that correspond to printable\n\t * characters produce a valid `charCode`, the only exception to this is Enter.\n\t * The Tab-key is considered non-printable and does not have a `charCode`,\n\t * presumably because it does not produce a tab-character in browsers.\n\t *\n\t * @param {object} nativeEvent Native browser event.\n\t * @return {number} Normalized `charCode` property.\n\t */\n\tfunction getEventCharCode(nativeEvent) {\n\t  var charCode;\n\t  var keyCode = nativeEvent.keyCode;\n\t\n\t  if ('charCode' in nativeEvent) {\n\t    charCode = nativeEvent.charCode;\n\t\n\t    // FF does not set `charCode` for the Enter-key, check against `keyCode`.\n\t    if (charCode === 0 && keyCode === 13) {\n\t      charCode = 13;\n\t    }\n\t  } else {\n\t    // IE8 does not implement `charCode`, but `keyCode` has the correct value.\n\t    charCode = keyCode;\n\t  }\n\t\n\t  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.\n\t  // Must not discard the (non-)printable Enter-key.\n\t  if (charCode >= 32 || charCode === 13) {\n\t    return charCode;\n\t  }\n\t\n\t  return 0;\n\t}\n\t\n\tmodule.exports = getEventCharCode;\n\n/***/ },\n/* 45 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule getEventModifierState\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Translation from modifier key to the associated property in the event.\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers\n\t */\n\t\n\tvar modifierKeyToProp = {\n\t  'Alt': 'altKey',\n\t  'Control': 'ctrlKey',\n\t  'Meta': 'metaKey',\n\t  'Shift': 'shiftKey'\n\t};\n\t\n\t// IE8 does not implement getModifierState so we simply map it to the only\n\t// modifier keys exposed by the event itself, does not support Lock-keys.\n\t// Currently, all major browsers except Chrome seems to support Lock-keys.\n\tfunction modifierStateGetter(keyArg) {\n\t  var syntheticEvent = this;\n\t  var nativeEvent = syntheticEvent.nativeEvent;\n\t  if (nativeEvent.getModifierState) {\n\t    return nativeEvent.getModifierState(keyArg);\n\t  }\n\t  var keyProp = modifierKeyToProp[keyArg];\n\t  return keyProp ? !!nativeEvent[keyProp] : false;\n\t}\n\t\n\tfunction getEventModifierState(nativeEvent) {\n\t  return modifierStateGetter;\n\t}\n\t\n\tmodule.exports = getEventModifierState;\n\n/***/ },\n/* 46 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule getEventTarget\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Gets the target node from a native browser event by accounting for\n\t * inconsistencies in browser DOM APIs.\n\t *\n\t * @param {object} nativeEvent Native browser event.\n\t * @return {DOMEventTarget} Target node.\n\t */\n\tfunction getEventTarget(nativeEvent) {\n\t  var target = nativeEvent.target || nativeEvent.srcElement || window;\n\t  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).\n\t  // @see http://www.quirksmode.org/js/events_properties.html\n\t  return target.nodeType === 3 ? target.parentNode : target;\n\t}\n\t\n\tmodule.exports = getEventTarget;\n\n/***/ },\n/* 47 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule getIteratorFn\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\t/* global Symbol */\n\tvar ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n\tvar FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\t\n\t/**\n\t * Returns the iterator method function contained on the iterable object.\n\t *\n\t * Be sure to invoke the function with the iterable as context:\n\t *\n\t *     var iteratorFn = getIteratorFn(myIterable);\n\t *     if (iteratorFn) {\n\t *       var iterator = iteratorFn.call(myIterable);\n\t *       ...\n\t *     }\n\t *\n\t * @param {?object} maybeIterable\n\t * @return {?function}\n\t */\n\tfunction getIteratorFn(maybeIterable) {\n\t  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n\t  if (typeof iteratorFn === 'function') {\n\t    return iteratorFn;\n\t  }\n\t}\n\t\n\tmodule.exports = getIteratorFn;\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule instantiateReactComponent\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactCompositeComponent = __webpack_require__(113);\n\tvar ReactEmptyComponent = __webpack_require__(70);\n\tvar ReactNativeComponent = __webpack_require__(76);\n\t\n\tvar assign = __webpack_require__(2);\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\t// To avoid a cyclic dependency, we create the final class in this module\n\tvar ReactCompositeComponentWrapper = function () {};\n\tassign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {\n\t  _instantiateReactComponent: instantiateReactComponent\n\t});\n\t\n\tfunction getDeclarationErrorAddendum(owner) {\n\t  if (owner) {\n\t    var name = owner.getName();\n\t    if (name) {\n\t      return ' Check the render method of `' + name + '`.';\n\t    }\n\t  }\n\t  return '';\n\t}\n\t\n\t/**\n\t * Check if the type reference is a known internal type. I.e. not a user\n\t * provided composite type.\n\t *\n\t * @param {function} type\n\t * @return {boolean} Returns true if this is a valid internal type.\n\t */\n\tfunction isInternalComponentType(type) {\n\t  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';\n\t}\n\t\n\t/**\n\t * Given a ReactNode, create an instance that will actually be mounted.\n\t *\n\t * @param {ReactNode} node\n\t * @return {object} A new instance of the element's constructor.\n\t * @protected\n\t */\n\tfunction instantiateReactComponent(node) {\n\t  var instance;\n\t\n\t  if (node === null || node === false) {\n\t    instance = new ReactEmptyComponent(instantiateReactComponent);\n\t  } else if (typeof node === 'object') {\n\t    var element = node;\n\t    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ?  false ? invariant(false, 'Element type is invalid: expected a string (for built-in components) ' + 'or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : invariant(false) : undefined;\n\t\n\t    // Special case string values\n\t    if (typeof element.type === 'string') {\n\t      instance = ReactNativeComponent.createInternalComponent(element);\n\t    } else if (isInternalComponentType(element.type)) {\n\t      // This is temporarily available for custom components that are not string\n\t      // representations. I.e. ART. Once those are updated to use the string\n\t      // representation, we can drop this code path.\n\t      instance = new element.type(element);\n\t    } else {\n\t      instance = new ReactCompositeComponentWrapper();\n\t    }\n\t  } else if (typeof node === 'string' || typeof node === 'number') {\n\t    instance = ReactNativeComponent.createInstanceForText(node);\n\t  } else {\n\t     true ?  false ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : invariant(false) : undefined;\n\t  }\n\t\n\t  if (false) {\n\t    process.env.NODE_ENV !== 'production' ? warning(typeof instance.construct === 'function' && typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : undefined;\n\t  }\n\t\n\t  // Sets up the instance. This can probably just move into the constructor now.\n\t  instance.construct(node);\n\t\n\t  // These two fields are used by the DOM and ART diffing algorithms\n\t  // respectively. Instead of using expandos on components, we should be\n\t  // storing the state needed by the diffing algorithms elsewhere.\n\t  instance._mountIndex = 0;\n\t  instance._mountImage = null;\n\t\n\t  if (false) {\n\t    instance._isOwnerNecessary = false;\n\t    instance._warnedAboutRefsInRender = false;\n\t  }\n\t\n\t  // Internal instances should fully constructed at this point, so they should\n\t  // not get any new fields added to them at this point.\n\t  if (false) {\n\t    if (Object.preventExtensions) {\n\t      Object.preventExtensions(instance);\n\t    }\n\t  }\n\t\n\t  return instance;\n\t}\n\t\n\tmodule.exports = instantiateReactComponent;\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule isEventSupported\n\t */\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(4);\n\t\n\tvar useHasFeature;\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  useHasFeature = document.implementation && document.implementation.hasFeature &&\n\t  // always returns true in newer browsers as per the standard.\n\t  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n\t  document.implementation.hasFeature('', '') !== true;\n\t}\n\t\n\t/**\n\t * Checks if an event is supported in the current execution environment.\n\t *\n\t * NOTE: This will not work correctly for non-generic events such as `change`,\n\t * `reset`, `load`, `error`, and `select`.\n\t *\n\t * Borrows from Modernizr.\n\t *\n\t * @param {string} eventNameSuffix Event name, e.g. \"click\".\n\t * @param {?boolean} capture Check if the capture phase is supported.\n\t * @return {boolean} True if the event is supported.\n\t * @internal\n\t * @license Modernizr 3.0.0pre (Custom Build) | MIT\n\t */\n\tfunction isEventSupported(eventNameSuffix, capture) {\n\t  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {\n\t    return false;\n\t  }\n\t\n\t  var eventName = 'on' + eventNameSuffix;\n\t  var isSupported = (eventName in document);\n\t\n\t  if (!isSupported) {\n\t    var element = document.createElement('div');\n\t    element.setAttribute(eventName, 'return;');\n\t    isSupported = typeof element[eventName] === 'function';\n\t  }\n\t\n\t  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {\n\t    // This is the only way to test support for the `wheel` event in IE9+.\n\t    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n\t  }\n\t\n\t  return isSupported;\n\t}\n\t\n\tmodule.exports = isEventSupported;\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule setTextContent\n\t */\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(4);\n\tvar escapeTextContentForBrowser = __webpack_require__(31);\n\tvar setInnerHTML = __webpack_require__(32);\n\t\n\t/**\n\t * Set the textContent property of a node, ensuring that whitespace is preserved\n\t * even in IE8. innerText is a poor substitute for textContent and, among many\n\t * issues, inserts <br> instead of the literal newline chars. innerHTML behaves\n\t * as it should.\n\t *\n\t * @param {DOMElement} node\n\t * @param {string} text\n\t * @internal\n\t */\n\tvar setTextContent = function (node, text) {\n\t  node.textContent = text;\n\t};\n\t\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  if (!('textContent' in document.documentElement)) {\n\t    setTextContent = function (node, text) {\n\t      setInnerHTML(node, escapeTextContentForBrowser(text));\n\t    };\n\t  }\n\t}\n\t\n\tmodule.exports = setTextContent;\n\n/***/ },\n/* 51 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule shouldUpdateReactComponent\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Given a `prevElement` and `nextElement`, determines if the existing\n\t * instance should be updated as opposed to being destroyed or replaced by a new\n\t * instance. Both arguments are elements. This ensures that this logic can\n\t * operate on stateless trees without any backing instance.\n\t *\n\t * @param {?object} prevElement\n\t * @param {?object} nextElement\n\t * @return {boolean} True if the existing instance should be updated.\n\t * @protected\n\t */\n\tfunction shouldUpdateReactComponent(prevElement, nextElement) {\n\t  var prevEmpty = prevElement === null || prevElement === false;\n\t  var nextEmpty = nextElement === null || nextElement === false;\n\t  if (prevEmpty || nextEmpty) {\n\t    return prevEmpty === nextEmpty;\n\t  }\n\t\n\t  var prevType = typeof prevElement;\n\t  var nextType = typeof nextElement;\n\t  if (prevType === 'string' || prevType === 'number') {\n\t    return nextType === 'string' || nextType === 'number';\n\t  } else {\n\t    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;\n\t  }\n\t  return false;\n\t}\n\t\n\tmodule.exports = shouldUpdateReactComponent;\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule traverseAllChildren\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactCurrentOwner = __webpack_require__(11);\n\tvar ReactElement = __webpack_require__(6);\n\tvar ReactInstanceHandles = __webpack_require__(18);\n\t\n\tvar getIteratorFn = __webpack_require__(47);\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar SEPARATOR = ReactInstanceHandles.SEPARATOR;\n\tvar SUBSEPARATOR = ':';\n\t\n\t/**\n\t * TODO: Test that a single child and an array with one item have the same key\n\t * pattern.\n\t */\n\t\n\tvar userProvidedKeyEscaperLookup = {\n\t  '=': '=0',\n\t  '.': '=1',\n\t  ':': '=2'\n\t};\n\t\n\tvar userProvidedKeyEscapeRegex = /[=.:]/g;\n\t\n\tvar didWarnAboutMaps = false;\n\t\n\tfunction userProvidedKeyEscaper(match) {\n\t  return userProvidedKeyEscaperLookup[match];\n\t}\n\t\n\t/**\n\t * Generate a key string that identifies a component within a set.\n\t *\n\t * @param {*} component A component that could contain a manual key.\n\t * @param {number} index Index that is used if a manual key is not provided.\n\t * @return {string}\n\t */\n\tfunction getComponentKey(component, index) {\n\t  if (component && component.key != null) {\n\t    // Explicit key\n\t    return wrapUserProvidedKey(component.key);\n\t  }\n\t  // Implicit key determined by the index in the set\n\t  return index.toString(36);\n\t}\n\t\n\t/**\n\t * Escape a component key so that it is safe to use in a reactid.\n\t *\n\t * @param {*} text Component key to be escaped.\n\t * @return {string} An escaped string.\n\t */\n\tfunction escapeUserProvidedKey(text) {\n\t  return ('' + text).replace(userProvidedKeyEscapeRegex, userProvidedKeyEscaper);\n\t}\n\t\n\t/**\n\t * Wrap a `key` value explicitly provided by the user to distinguish it from\n\t * implicitly-generated keys generated by a component's index in its parent.\n\t *\n\t * @param {string} key Value of a user-provided `key` attribute\n\t * @return {string}\n\t */\n\tfunction wrapUserProvidedKey(key) {\n\t  return '$' + escapeUserProvidedKey(key);\n\t}\n\t\n\t/**\n\t * @param {?*} children Children tree container.\n\t * @param {!string} nameSoFar Name of the key path so far.\n\t * @param {!function} callback Callback to invoke with each child found.\n\t * @param {?*} traverseContext Used to pass information throughout the traversal\n\t * process.\n\t * @return {!number} The number of children in this subtree.\n\t */\n\tfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n\t  var type = typeof children;\n\t\n\t  if (type === 'undefined' || type === 'boolean') {\n\t    // All of the above are perceived as null.\n\t    children = null;\n\t  }\n\t\n\t  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {\n\t    callback(traverseContext, children,\n\t    // If it's the only child, treat the name as if it was wrapped in an array\n\t    // so that it's consistent if the number of children grows.\n\t    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n\t    return 1;\n\t  }\n\t\n\t  var child;\n\t  var nextName;\n\t  var subtreeCount = 0; // Count of children found in the current subtree.\n\t  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\t\n\t  if (Array.isArray(children)) {\n\t    for (var i = 0; i < children.length; i++) {\n\t      child = children[i];\n\t      nextName = nextNamePrefix + getComponentKey(child, i);\n\t      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n\t    }\n\t  } else {\n\t    var iteratorFn = getIteratorFn(children);\n\t    if (iteratorFn) {\n\t      var iterator = iteratorFn.call(children);\n\t      var step;\n\t      if (iteratorFn !== children.entries) {\n\t        var ii = 0;\n\t        while (!(step = iterator.next()).done) {\n\t          child = step.value;\n\t          nextName = nextNamePrefix + getComponentKey(child, ii++);\n\t          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n\t        }\n\t      } else {\n\t        if (false) {\n\t          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.') : undefined;\n\t          didWarnAboutMaps = true;\n\t        }\n\t        // Iterator will provide entry [k,v] tuples rather than values.\n\t        while (!(step = iterator.next()).done) {\n\t          var entry = step.value;\n\t          if (entry) {\n\t            child = entry[1];\n\t            nextName = nextNamePrefix + wrapUserProvidedKey(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);\n\t            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n\t          }\n\t        }\n\t      }\n\t    } else if (type === 'object') {\n\t      var addendum = '';\n\t      if (false) {\n\t        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';\n\t        if (children._isReactElement) {\n\t          addendum = ' It looks like you\\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';\n\t        }\n\t        if (ReactCurrentOwner.current) {\n\t          var name = ReactCurrentOwner.current.getName();\n\t          if (name) {\n\t            addendum += ' Check the render method of `' + name + '`.';\n\t          }\n\t        }\n\t      }\n\t      var childrenString = String(children);\n\t       true ?  false ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : invariant(false) : undefined;\n\t    }\n\t  }\n\t\n\t  return subtreeCount;\n\t}\n\t\n\t/**\n\t * Traverses children that are typically specified as `props.children`, but\n\t * might also be specified through attributes:\n\t *\n\t * - `traverseAllChildren(this.props.children, ...)`\n\t * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n\t *\n\t * The `traverseContext` is an optional argument that is passed through the\n\t * entire traversal. It can be used to store accumulations or anything else that\n\t * the callback might find relevant.\n\t *\n\t * @param {?*} children Children tree object.\n\t * @param {!function} callback To invoke upon traversing each child.\n\t * @param {?*} traverseContext Context for traversal.\n\t * @return {!number} The number of children in this subtree.\n\t */\n\tfunction traverseAllChildren(children, callback, traverseContext) {\n\t  if (children == null) {\n\t    return 0;\n\t  }\n\t\n\t  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n\t}\n\t\n\tmodule.exports = traverseAllChildren;\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule validateDOMNesting\n\t */\n\t\n\t'use strict';\n\t\n\tvar assign = __webpack_require__(2);\n\tvar emptyFunction = __webpack_require__(9);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar validateDOMNesting = emptyFunction;\n\t\n\tif (false) {\n\t  // This validation code was written based on the HTML5 parsing spec:\n\t  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n\t  //\n\t  // Note: this does not catch all invalid nesting, nor does it try to (as it's\n\t  // not clear what practical benefit doing so provides); instead, we warn only\n\t  // for cases where the parser will give a parse tree differing from what React\n\t  // intended. For example, <b><div></div></b> is invalid but we don't warn\n\t  // because it still parses correctly; we do warn for other cases like nested\n\t  // <p> tags where the beginning of the second element implicitly closes the\n\t  // first, causing a confusing mess.\n\t\n\t  // https://html.spec.whatwg.org/multipage/syntax.html#special\n\t  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];\n\t\n\t  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n\t  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',\n\t\n\t  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point\n\t  // TODO: Distinguish by namespace here -- for <title>, including it here\n\t  // errs on the side of fewer warnings\n\t  'foreignObject', 'desc', 'title'];\n\t\n\t  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope\n\t  var buttonScopeTags = inScopeTags.concat(['button']);\n\t\n\t  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags\n\t  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];\n\t\n\t  var emptyAncestorInfo = {\n\t    parentTag: null,\n\t\n\t    formTag: null,\n\t    aTagInScope: null,\n\t    buttonTagInScope: null,\n\t    nobrTagInScope: null,\n\t    pTagInButtonScope: null,\n\t\n\t    listItemTagAutoclosing: null,\n\t    dlItemTagAutoclosing: null\n\t  };\n\t\n\t  var updatedAncestorInfo = function (oldInfo, tag, instance) {\n\t    var ancestorInfo = assign({}, oldInfo || emptyAncestorInfo);\n\t    var info = { tag: tag, instance: instance };\n\t\n\t    if (inScopeTags.indexOf(tag) !== -1) {\n\t      ancestorInfo.aTagInScope = null;\n\t      ancestorInfo.buttonTagInScope = null;\n\t      ancestorInfo.nobrTagInScope = null;\n\t    }\n\t    if (buttonScopeTags.indexOf(tag) !== -1) {\n\t      ancestorInfo.pTagInButtonScope = null;\n\t    }\n\t\n\t    // See rules for 'li', 'dd', 'dt' start tags in\n\t    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n\t    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {\n\t      ancestorInfo.listItemTagAutoclosing = null;\n\t      ancestorInfo.dlItemTagAutoclosing = null;\n\t    }\n\t\n\t    ancestorInfo.parentTag = info;\n\t\n\t    if (tag === 'form') {\n\t      ancestorInfo.formTag = info;\n\t    }\n\t    if (tag === 'a') {\n\t      ancestorInfo.aTagInScope = info;\n\t    }\n\t    if (tag === 'button') {\n\t      ancestorInfo.buttonTagInScope = info;\n\t    }\n\t    if (tag === 'nobr') {\n\t      ancestorInfo.nobrTagInScope = info;\n\t    }\n\t    if (tag === 'p') {\n\t      ancestorInfo.pTagInButtonScope = info;\n\t    }\n\t    if (tag === 'li') {\n\t      ancestorInfo.listItemTagAutoclosing = info;\n\t    }\n\t    if (tag === 'dd' || tag === 'dt') {\n\t      ancestorInfo.dlItemTagAutoclosing = info;\n\t    }\n\t\n\t    return ancestorInfo;\n\t  };\n\t\n\t  /**\n\t   * Returns whether\n\t   */\n\t  var isTagValidWithParent = function (tag, parentTag) {\n\t    // First, let's check if we're in an unusual parsing mode...\n\t    switch (parentTag) {\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect\n\t      case 'select':\n\t        return tag === 'option' || tag === 'optgroup' || tag === '#text';\n\t      case 'optgroup':\n\t        return tag === 'option' || tag === '#text';\n\t      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>\n\t      // but\n\t      case 'option':\n\t        return tag === '#text';\n\t\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption\n\t      // No special behavior since these rules fall back to \"in body\" mode for\n\t      // all except special table nodes which cause bad parsing behavior anyway.\n\t\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr\n\t      case 'tr':\n\t        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';\n\t\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody\n\t      case 'tbody':\n\t      case 'thead':\n\t      case 'tfoot':\n\t        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';\n\t\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup\n\t      case 'colgroup':\n\t        return tag === 'col' || tag === 'template';\n\t\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable\n\t      case 'table':\n\t        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';\n\t\n\t      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead\n\t      case 'head':\n\t        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';\n\t\n\t      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element\n\t      case 'html':\n\t        return tag === 'head' || tag === 'body';\n\t    }\n\t\n\t    // Probably in the \"in body\" parsing mode, so we outlaw only tag combos\n\t    // where the parsing rules cause implicit opens or closes to be added.\n\t    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n\t    switch (tag) {\n\t      case 'h1':\n\t      case 'h2':\n\t      case 'h3':\n\t      case 'h4':\n\t      case 'h5':\n\t      case 'h6':\n\t        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';\n\t\n\t      case 'rp':\n\t      case 'rt':\n\t        return impliedEndTags.indexOf(parentTag) === -1;\n\t\n\t      case 'caption':\n\t      case 'col':\n\t      case 'colgroup':\n\t      case 'frame':\n\t      case 'head':\n\t      case 'tbody':\n\t      case 'td':\n\t      case 'tfoot':\n\t      case 'th':\n\t      case 'thead':\n\t      case 'tr':\n\t        // These tags are only valid with a few parents that have special child\n\t        // parsing rules -- if we're down here, then none of those matched and\n\t        // so we allow it only if we don't know what the parent is, as all other\n\t        // cases are invalid.\n\t        return parentTag == null;\n\t    }\n\t\n\t    return true;\n\t  };\n\t\n\t  /**\n\t   * Returns whether\n\t   */\n\t  var findInvalidAncestorForTag = function (tag, ancestorInfo) {\n\t    switch (tag) {\n\t      case 'address':\n\t      case 'article':\n\t      case 'aside':\n\t      case 'blockquote':\n\t      case 'center':\n\t      case 'details':\n\t      case 'dialog':\n\t      case 'dir':\n\t      case 'div':\n\t      case 'dl':\n\t      case 'fieldset':\n\t      case 'figcaption':\n\t      case 'figure':\n\t      case 'footer':\n\t      case 'header':\n\t      case 'hgroup':\n\t      case 'main':\n\t      case 'menu':\n\t      case 'nav':\n\t      case 'ol':\n\t      case 'p':\n\t      case 'section':\n\t      case 'summary':\n\t      case 'ul':\n\t\n\t      case 'pre':\n\t      case 'listing':\n\t\n\t      case 'table':\n\t\n\t      case 'hr':\n\t\n\t      case 'xmp':\n\t\n\t      case 'h1':\n\t      case 'h2':\n\t      case 'h3':\n\t      case 'h4':\n\t      case 'h5':\n\t      case 'h6':\n\t        return ancestorInfo.pTagInButtonScope;\n\t\n\t      case 'form':\n\t        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;\n\t\n\t      case 'li':\n\t        return ancestorInfo.listItemTagAutoclosing;\n\t\n\t      case 'dd':\n\t      case 'dt':\n\t        return ancestorInfo.dlItemTagAutoclosing;\n\t\n\t      case 'button':\n\t        return ancestorInfo.buttonTagInScope;\n\t\n\t      case 'a':\n\t        // Spec says something about storing a list of markers, but it sounds\n\t        // equivalent to this check.\n\t        return ancestorInfo.aTagInScope;\n\t\n\t      case 'nobr':\n\t        return ancestorInfo.nobrTagInScope;\n\t    }\n\t\n\t    return null;\n\t  };\n\t\n\t  /**\n\t   * Given a ReactCompositeComponent instance, return a list of its recursive\n\t   * owners, starting at the root and ending with the instance itself.\n\t   */\n\t  var findOwnerStack = function (instance) {\n\t    if (!instance) {\n\t      return [];\n\t    }\n\t\n\t    var stack = [];\n\t    /*eslint-disable space-after-keywords */\n\t    do {\n\t      /*eslint-enable space-after-keywords */\n\t      stack.push(instance);\n\t    } while (instance = instance._currentElement._owner);\n\t    stack.reverse();\n\t    return stack;\n\t  };\n\t\n\t  var didWarn = {};\n\t\n\t  validateDOMNesting = function (childTag, childInstance, ancestorInfo) {\n\t    ancestorInfo = ancestorInfo || emptyAncestorInfo;\n\t    var parentInfo = ancestorInfo.parentTag;\n\t    var parentTag = parentInfo && parentInfo.tag;\n\t\n\t    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;\n\t    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);\n\t    var problematic = invalidParent || invalidAncestor;\n\t\n\t    if (problematic) {\n\t      var ancestorTag = problematic.tag;\n\t      var ancestorInstance = problematic.instance;\n\t\n\t      var childOwner = childInstance && childInstance._currentElement._owner;\n\t      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;\n\t\n\t      var childOwners = findOwnerStack(childOwner);\n\t      var ancestorOwners = findOwnerStack(ancestorOwner);\n\t\n\t      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);\n\t      var i;\n\t\n\t      var deepestCommon = -1;\n\t      for (i = 0; i < minStackLen; i++) {\n\t        if (childOwners[i] === ancestorOwners[i]) {\n\t          deepestCommon = i;\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t\n\t      var UNKNOWN = '(unknown)';\n\t      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {\n\t        return inst.getName() || UNKNOWN;\n\t      });\n\t      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {\n\t        return inst.getName() || UNKNOWN;\n\t      });\n\t      var ownerInfo = [].concat(\n\t      // If the parent and child instances have a common owner ancestor, start\n\t      // with that -- otherwise we just start with the parent's owners.\n\t      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,\n\t      // If we're warning about an invalid (non-parent) ancestry, add '...'\n\t      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');\n\t\n\t      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;\n\t      if (didWarn[warnKey]) {\n\t        return;\n\t      }\n\t      didWarn[warnKey] = true;\n\t\n\t      if (invalidParent) {\n\t        var info = '';\n\t        if (ancestorTag === 'table' && childTag === 'tr') {\n\t          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';\n\t        }\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): <%s> cannot appear as a child of <%s>. ' + 'See %s.%s', childTag, ancestorTag, ownerInfo, info) : undefined;\n\t      } else {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): <%s> cannot appear as a descendant of ' + '<%s>. See %s.', childTag, ancestorTag, ownerInfo) : undefined;\n\t      }\n\t    }\n\t  };\n\t\n\t  validateDOMNesting.ancestorInfoContextKey = '__validateDOMNesting_ancestorInfo$' + Math.random().toString(36).slice(2);\n\t\n\t  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;\n\t\n\t  // For testing\n\t  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {\n\t    ancestorInfo = ancestorInfo || emptyAncestorInfo;\n\t    var parentInfo = ancestorInfo.parentTag;\n\t    var parentTag = parentInfo && parentInfo.tag;\n\t    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);\n\t  };\n\t}\n\t\n\tmodule.exports = validateDOMNesting;\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar React,\n\t    adjustState,\n\t    any,\n\t    applyTheme,\n\t    build,\n\t    cc,\n\t    curry,\n\t    evolve,\n\t    evolveState,\n\t    keys,\n\t    lo,\n\t    merge,\n\t    mergeState,\n\t    over,\n\t    pick,\n\t    prop,\n\t    props,\n\t    ref,\n\t    ref1,\n\t    yforEach,\n\t    slice = [].slice;\n\t\n\tref = __webpack_require__(14), any = ref.any, curry = ref.curry, evolve = ref.evolve, keys = ref.keys, merge = ref.merge, over = ref.over, pick = ref.pick, prop = ref.prop, props = ref.props;\n\t\n\tref1 = __webpack_require__(34), cc = ref1.cc, yforEach = ref1.yforEach;\n\t\n\tlo = __webpack_require__(97);\n\t\n\tReact = __webpack_require__(24);\n\t\n\tevolveState = function evolveState(component, spec, cb) {\n\t  var state;\n\t  state = pick(keys(spec), component.state);\n\t  return component.setState(evolve(spec, state), cb);\n\t};\n\t\n\tmergeState = function mergeState(component, spec, cb) {\n\t  var stateCopy;\n\t  stateCopy = lo.cloneDeep(component.state);\n\t  return component.setState(lo.merge(stateCopy, spec), cb);\n\t};\n\t\n\tadjustState = function adjustState(component, f, cb) {\n\t  var result;\n\t  result = f(component.state);\n\t  return component.setState(result, cb);\n\t};\n\t\n\tbuild = function build() {\n\t  var children, comp, props;\n\t  comp = arguments[0], props = arguments[1], children = 3 <= arguments.length ? slice.call(arguments, 2) : [];\n\t  return React.createElement.apply(React, [comp, props].concat(slice.call(children)));\n\t};\n\t\n\tapplyTheme = curry(function (componentStyle, props) {\n\t  var baseStyle, extraStyle;\n\t  baseStyle = props.theme || componentStyle;\n\t  extraStyle = props.style || {};\n\t  return merge({\n\t    style: merge(baseStyle, extraStyle)\n\t  }, props);\n\t});\n\t\n\tmodule.exports = {\n\t  evolveState: evolveState,\n\t  mergeState: mergeState,\n\t  adjustState: adjustState,\n\t  applyTheme: applyTheme,\n\t  build: build\n\t};\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar R, _isLeftClickEvent, _isModifiedEvent, _kvToQuery, assoc, cc, createUrl, createUrlHelper, dissoc, either, getQuery, has, identity, ifElse, inc, isEmptyObj, join, map, mergeOrEvolve, nav, nav2, navigate, pair, ref, ref1, remove, stop, toPairs, toQueryString, type, urlWithoutQuery, values, without;\n\t\n\tref = R = __webpack_require__(14), assoc = ref.assoc, dissoc = ref.dissoc, either = ref.either, has = ref.has, identity = ref.identity, ifElse = ref.ifElse, inc = ref.inc, join = ref.join, map = ref.map, pair = ref.pair, remove = ref.remove, toPairs = ref.toPairs, type = ref.type, values = ref.values, without = ref.without;\n\t\n\tref1 = __webpack_require__(34), cc = ref1.cc, isEmptyObj = ref1.isEmptyObj, mergeOrEvolve = ref1.mergeOrEvolve;\n\t\n\tgetQuery = function getQuery() {\n\t  var m, queryString, re, result, v, value;\n\t  result = {};\n\t  queryString = location.search.slice(1);\n\t  re = /([^&=]+)=([^&]*)/g;\n\t  m = void 0;\n\t  while (m = re.exec(queryString)) {\n\t    v = decodeURIComponent(m[2]);\n\t    value = function () {\n\t      switch (false) {\n\t        case v !== 'true':\n\t          return true;\n\t        case v !== 'false':\n\t          return false;\n\t        default:\n\t          return v;\n\t      }\n\t    }();\n\t    result[decodeURIComponent(m[1])] = value;\n\t  }\n\t  return result;\n\t};\n\t\n\turlWithoutQuery = function urlWithoutQuery() {\n\t  return [location.protocol, '//', location.host, location.pathname].join('');\n\t};\n\t\n\t_kvToQuery = function _kvToQuery(arg) {\n\t  var k, v;\n\t  k = arg[0], v = arg[1];\n\t  return k + \"=\" + v;\n\t};\n\t\n\ttoQueryString = function toQueryString(o) {\n\t  return '?' + cc(join('&'), map(_kvToQuery), toPairs, o);\n\t};\n\t\n\tcreateUrl = function createUrl(arg) {\n\t  var f, newQuery, spec, url, urlToUse;\n\t  f = arg.f, spec = arg.spec, url = arg.url;\n\t  urlToUse = url || urlWithoutQuery();\n\t  if (f) {\n\t    return urlToUse + toQueryString(f(getQuery()));\n\t  } else if (spec) {\n\t    newQuery = mergeOrEvolve(spec, getQuery());\n\t    return urlToUse + toQueryString(newQuery);\n\t  } else {\n\t    throw Error('createUrl must be called with either f or spec');\n\t  }\n\t};\n\t\n\tcreateUrlHelper = function createUrlHelper(urlOrFnOrObj) {\n\t  if (R.is(String, urlOrFnOrObj)) {\n\t    return urlOrFnOrObj;\n\t  } else if (R.is(Function, urlOrFnOrObj)) {\n\t    return createUrl({\n\t      f: urlOrFnOrObj\n\t    });\n\t  } else if (R.is(Object, urlOrFnOrObj)) {\n\t    return createUrl({\n\t      spec: urlOrFnOrObj\n\t    });\n\t  }\n\t};\n\t\n\tnavigate = function navigate(urlOrFnOrObj) {\n\t  var url;\n\t  url = createUrlHelper(urlOrFnOrObj);\n\t  window.history.pushState({}, '', url);\n\t  window.dispatchEvent(new window.Event('popstate'));\n\t  return null;\n\t};\n\t\n\t_isLeftClickEvent = function _isLeftClickEvent(e) {\n\t  return e.button === 0;\n\t};\n\t\n\t_isModifiedEvent = function _isModifiedEvent(e) {\n\t  return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey);\n\t};\n\t\n\tstop = function stop(e) {\n\t  return e.stopPropagation();\n\t};\n\t\n\tnav = function nav(urlOrFnOrObj) {\n\t  return function (e) {\n\t    if (_isModifiedEvent(e) || !_isLeftClickEvent(e)) {\n\t      return e;\n\t    }\n\t    navigate(createUrlHelper(urlOrFnOrObj));\n\t    e.preventDefault();\n\t    return e;\n\t  };\n\t};\n\t\n\tnav2 = function nav2(urlOrFnOrObj) {\n\t  return function (e) {\n\t    e.stopPropagation();\n\t    navigate(createUrlHelper(urlOrFnOrObj));\n\t    return null;\n\t  };\n\t};\n\t\n\tmodule.exports = {\n\t  getQuery: getQuery,\n\t  urlWithoutQuery: urlWithoutQuery,\n\t  createUrl: createUrl,\n\t  createUrlHelper: createUrlHelper,\n\t  navigate: navigate,\n\t  nav: nav,\n\t  nav2: nav2,\n\t  stop: stop\n\t};\n\n/***/ },\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Link, Radium, React, a, all, any, applyTheme, cc, createUrlHelper, func, merge, nav, object, omit, oneOfType, props, ref, ref1, ref2, string;\n\t\n\tref = (React = __webpack_require__(24)).PropTypes, string = ref.string, func = ref.func, object = ref.object, oneOfType = ref.oneOfType;\n\t\n\tRadium = __webpack_require__(91);\n\t\n\tref1 = __webpack_require__(14), all = ref1.all, any = ref1.any, merge = ref1.merge, omit = ref1.omit, props = ref1.props;\n\t\n\tcc = __webpack_require__(34).cc;\n\t\n\ta = React.DOM.a;\n\t\n\tref2 = __webpack_require__(55), createUrlHelper = ref2.createUrlHelper, nav = ref2.nav;\n\t\n\tapplyTheme = __webpack_require__(54).applyTheme;\n\t\n\tLink = Radium(React.createClass({\n\t  displayName: 'Link',\n\t  propTypes: {\n\t    to: oneOfType([func, object, string]),\n\t    href: string,\n\t    theme: object\n\t  },\n\t  render: function render() {\n\t    var href, linkProps, omitSpecialProps, otherProps, ref3, to;\n\t    ref3 = this.props, to = ref3.to, href = ref3.href;\n\t    omitSpecialProps = omit(['to', 'theme']);\n\t    otherProps = cc(applyTheme(null), omitSpecialProps, this.props);\n\t    if (href) {\n\t      return a(otherProps);\n\t    }\n\t    href = createUrlHelper(to);\n\t    linkProps = {\n\t      href: href,\n\t      onClick: nav(href)\n\t    };\n\t    return a(merge(linkProps, otherProps));\n\t  }\n\t}));\n\t\n\tmodule.exports = Link;\n\n/***/ },\n/* 57 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule CSSProperty\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * CSS properties which accept numbers but are not in units of \"px\".\n\t */\n\tvar isUnitlessNumber = {\n\t  animationIterationCount: true,\n\t  boxFlex: true,\n\t  boxFlexGroup: true,\n\t  boxOrdinalGroup: true,\n\t  columnCount: true,\n\t  flex: true,\n\t  flexGrow: true,\n\t  flexPositive: true,\n\t  flexShrink: true,\n\t  flexNegative: true,\n\t  flexOrder: true,\n\t  fontWeight: true,\n\t  lineClamp: true,\n\t  lineHeight: true,\n\t  opacity: true,\n\t  order: true,\n\t  orphans: true,\n\t  tabSize: true,\n\t  widows: true,\n\t  zIndex: true,\n\t  zoom: true,\n\t\n\t  // SVG-related properties\n\t  fillOpacity: true,\n\t  stopOpacity: true,\n\t  strokeDashoffset: true,\n\t  strokeOpacity: true,\n\t  strokeWidth: true\n\t};\n\t\n\t/**\n\t * @param {string} prefix vendor-specific prefix, eg: Webkit\n\t * @param {string} key style name, eg: transitionDuration\n\t * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\n\t * WebkitTransitionDuration\n\t */\n\tfunction prefixKey(prefix, key) {\n\t  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n\t}\n\t\n\t/**\n\t * Support style names that may come passed in prefixed by adding permutations\n\t * of vendor prefixes.\n\t */\n\tvar prefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\t\n\t// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\n\t// infinite loop, because it iterates over the newly added props too.\n\tObject.keys(isUnitlessNumber).forEach(function (prop) {\n\t  prefixes.forEach(function (prefix) {\n\t    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\n\t  });\n\t});\n\t\n\t/**\n\t * Most style properties can be unset by doing .style[prop] = '' but IE8\n\t * doesn't like doing that with shorthand properties so for the properties that\n\t * IE8 breaks on, which are listed here, we instead unset each of the\n\t * individual properties. See http://bugs.jquery.com/ticket/12385.\n\t * The 4-value 'clock' properties like margin, padding, border-width seem to\n\t * behave without any problems. Curiously, list-style works too without any\n\t * special prodding.\n\t */\n\tvar shorthandPropertyExpansions = {\n\t  background: {\n\t    backgroundAttachment: true,\n\t    backgroundColor: true,\n\t    backgroundImage: true,\n\t    backgroundPositionX: true,\n\t    backgroundPositionY: true,\n\t    backgroundRepeat: true\n\t  },\n\t  backgroundPosition: {\n\t    backgroundPositionX: true,\n\t    backgroundPositionY: true\n\t  },\n\t  border: {\n\t    borderWidth: true,\n\t    borderStyle: true,\n\t    borderColor: true\n\t  },\n\t  borderBottom: {\n\t    borderBottomWidth: true,\n\t    borderBottomStyle: true,\n\t    borderBottomColor: true\n\t  },\n\t  borderLeft: {\n\t    borderLeftWidth: true,\n\t    borderLeftStyle: true,\n\t    borderLeftColor: true\n\t  },\n\t  borderRight: {\n\t    borderRightWidth: true,\n\t    borderRightStyle: true,\n\t    borderRightColor: true\n\t  },\n\t  borderTop: {\n\t    borderTopWidth: true,\n\t    borderTopStyle: true,\n\t    borderTopColor: true\n\t  },\n\t  font: {\n\t    fontStyle: true,\n\t    fontVariant: true,\n\t    fontWeight: true,\n\t    fontSize: true,\n\t    lineHeight: true,\n\t    fontFamily: true\n\t  },\n\t  outline: {\n\t    outlineWidth: true,\n\t    outlineStyle: true,\n\t    outlineColor: true\n\t  }\n\t};\n\t\n\tvar CSSProperty = {\n\t  isUnitlessNumber: isUnitlessNumber,\n\t  shorthandPropertyExpansions: shorthandPropertyExpansions\n\t};\n\t\n\tmodule.exports = CSSProperty;\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule DOMChildrenOperations\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar Danger = __webpack_require__(104);\n\tvar ReactMultiChildUpdateTypes = __webpack_require__(75);\n\tvar ReactPerf = __webpack_require__(7);\n\t\n\tvar setInnerHTML = __webpack_require__(32);\n\tvar setTextContent = __webpack_require__(50);\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Inserts `childNode` as a child of `parentNode` at the `index`.\n\t *\n\t * @param {DOMElement} parentNode Parent node in which to insert.\n\t * @param {DOMElement} childNode Child node to insert.\n\t * @param {number} index Index at which to insert the child.\n\t * @internal\n\t */\n\tfunction insertChildAt(parentNode, childNode, index) {\n\t  // By exploiting arrays returning `undefined` for an undefined index, we can\n\t  // rely exclusively on `insertBefore(node, null)` instead of also using\n\t  // `appendChild(node)`. However, using `undefined` is not allowed by all\n\t  // browsers so we must replace it with `null`.\n\t\n\t  // fix render order error in safari\n\t  // IE8 will throw error when index out of list size.\n\t  var beforeChild = index >= parentNode.childNodes.length ? null : parentNode.childNodes.item(index);\n\t\n\t  parentNode.insertBefore(childNode, beforeChild);\n\t}\n\t\n\t/**\n\t * Operations for updating with DOM children.\n\t */\n\tvar DOMChildrenOperations = {\n\t\n\t  dangerouslyReplaceNodeWithMarkup: Danger.dangerouslyReplaceNodeWithMarkup,\n\t\n\t  updateTextContent: setTextContent,\n\t\n\t  /**\n\t   * Updates a component's children by processing a series of updates. The\n\t   * update configurations are each expected to have a `parentNode` property.\n\t   *\n\t   * @param {array<object>} updates List of update configurations.\n\t   * @param {array<string>} markupList List of markup strings.\n\t   * @internal\n\t   */\n\t  processUpdates: function (updates, markupList) {\n\t    var update;\n\t    // Mapping from parent IDs to initial child orderings.\n\t    var initialChildren = null;\n\t    // List of children that will be moved or removed.\n\t    var updatedChildren = null;\n\t\n\t    for (var i = 0; i < updates.length; i++) {\n\t      update = updates[i];\n\t      if (update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING || update.type === ReactMultiChildUpdateTypes.REMOVE_NODE) {\n\t        var updatedIndex = update.fromIndex;\n\t        var updatedChild = update.parentNode.childNodes[updatedIndex];\n\t        var parentID = update.parentID;\n\t\n\t        !updatedChild ?  false ? invariant(false, 'processUpdates(): Unable to find child %s of element. This ' + 'probably means the DOM was unexpectedly mutated (e.g., by the ' + 'browser), usually due to forgetting a <tbody> when using tables, ' + 'nesting tags like <form>, <p>, or <a>, or using non-SVG elements ' + 'in an <svg> parent. Try inspecting the child nodes of the element ' + 'with React ID `%s`.', updatedIndex, parentID) : invariant(false) : undefined;\n\t\n\t        initialChildren = initialChildren || {};\n\t        initialChildren[parentID] = initialChildren[parentID] || [];\n\t        initialChildren[parentID][updatedIndex] = updatedChild;\n\t\n\t        updatedChildren = updatedChildren || [];\n\t        updatedChildren.push(updatedChild);\n\t      }\n\t    }\n\t\n\t    var renderedMarkup;\n\t    // markupList is either a list of markup or just a list of elements\n\t    if (markupList.length && typeof markupList[0] === 'string') {\n\t      renderedMarkup = Danger.dangerouslyRenderMarkup(markupList);\n\t    } else {\n\t      renderedMarkup = markupList;\n\t    }\n\t\n\t    // Remove updated children first so that `toIndex` is consistent.\n\t    if (updatedChildren) {\n\t      for (var j = 0; j < updatedChildren.length; j++) {\n\t        updatedChildren[j].parentNode.removeChild(updatedChildren[j]);\n\t      }\n\t    }\n\t\n\t    for (var k = 0; k < updates.length; k++) {\n\t      update = updates[k];\n\t      switch (update.type) {\n\t        case ReactMultiChildUpdateTypes.INSERT_MARKUP:\n\t          insertChildAt(update.parentNode, renderedMarkup[update.markupIndex], update.toIndex);\n\t          break;\n\t        case ReactMultiChildUpdateTypes.MOVE_EXISTING:\n\t          insertChildAt(update.parentNode, initialChildren[update.parentID][update.fromIndex], update.toIndex);\n\t          break;\n\t        case ReactMultiChildUpdateTypes.SET_MARKUP:\n\t          setInnerHTML(update.parentNode, update.content);\n\t          break;\n\t        case ReactMultiChildUpdateTypes.TEXT_CONTENT:\n\t          setTextContent(update.parentNode, update.content);\n\t          break;\n\t        case ReactMultiChildUpdateTypes.REMOVE_NODE:\n\t          // Already removed by the for-loop above.\n\t          break;\n\t      }\n\t    }\n\t  }\n\t\n\t};\n\t\n\tReactPerf.measureMethods(DOMChildrenOperations, 'DOMChildrenOperations', {\n\t  updateTextContent: 'updateTextContent'\n\t});\n\t\n\tmodule.exports = DOMChildrenOperations;\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule EventPluginRegistry\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Injectable ordering of event plugins.\n\t */\n\tvar EventPluginOrder = null;\n\t\n\t/**\n\t * Injectable mapping from names to event plugin modules.\n\t */\n\tvar namesToPlugins = {};\n\t\n\t/**\n\t * Recomputes the plugin list using the injected plugins and plugin ordering.\n\t *\n\t * @private\n\t */\n\tfunction recomputePluginOrdering() {\n\t  if (!EventPluginOrder) {\n\t    // Wait until an `EventPluginOrder` is injected.\n\t    return;\n\t  }\n\t  for (var pluginName in namesToPlugins) {\n\t    var PluginModule = namesToPlugins[pluginName];\n\t    var pluginIndex = EventPluginOrder.indexOf(pluginName);\n\t    !(pluginIndex > -1) ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in ' + 'the plugin ordering, `%s`.', pluginName) : invariant(false) : undefined;\n\t    if (EventPluginRegistry.plugins[pluginIndex]) {\n\t      continue;\n\t    }\n\t    !PluginModule.extractEvents ?  false ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` ' + 'method, but `%s` does not.', pluginName) : invariant(false) : undefined;\n\t    EventPluginRegistry.plugins[pluginIndex] = PluginModule;\n\t    var publishedEvents = PluginModule.eventTypes;\n\t    for (var eventName in publishedEvents) {\n\t      !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ?  false ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : invariant(false) : undefined;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Publishes an event so that it can be dispatched by the supplied plugin.\n\t *\n\t * @param {object} dispatchConfig Dispatch configuration for the event.\n\t * @param {object} PluginModule Plugin publishing the event.\n\t * @return {boolean} True if the event was successfully published.\n\t * @private\n\t */\n\tfunction publishEventForPlugin(dispatchConfig, PluginModule, eventName) {\n\t  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ?  false ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'event name, `%s`.', eventName) : invariant(false) : undefined;\n\t  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;\n\t\n\t  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n\t  if (phasedRegistrationNames) {\n\t    for (var phaseName in phasedRegistrationNames) {\n\t      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {\n\t        var phasedRegistrationName = phasedRegistrationNames[phaseName];\n\t        publishRegistrationName(phasedRegistrationName, PluginModule, eventName);\n\t      }\n\t    }\n\t    return true;\n\t  } else if (dispatchConfig.registrationName) {\n\t    publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);\n\t    return true;\n\t  }\n\t  return false;\n\t}\n\t\n\t/**\n\t * Publishes a registration name that is used to identify dispatched events and\n\t * can be used with `EventPluginHub.putListener` to register listeners.\n\t *\n\t * @param {string} registrationName Registration name to add.\n\t * @param {object} PluginModule Plugin publishing the event.\n\t * @private\n\t */\n\tfunction publishRegistrationName(registrationName, PluginModule, eventName) {\n\t  !!EventPluginRegistry.registrationNameModules[registrationName] ?  false ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'registration name, `%s`.', registrationName) : invariant(false) : undefined;\n\t  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;\n\t  EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;\n\t}\n\t\n\t/**\n\t * Registers plugins so that they can extract and dispatch events.\n\t *\n\t * @see {EventPluginHub}\n\t */\n\tvar EventPluginRegistry = {\n\t\n\t  /**\n\t   * Ordered list of injected plugins.\n\t   */\n\t  plugins: [],\n\t\n\t  /**\n\t   * Mapping from event name to dispatch config\n\t   */\n\t  eventNameDispatchConfigs: {},\n\t\n\t  /**\n\t   * Mapping from registration name to plugin module\n\t   */\n\t  registrationNameModules: {},\n\t\n\t  /**\n\t   * Mapping from registration name to event name\n\t   */\n\t  registrationNameDependencies: {},\n\t\n\t  /**\n\t   * Injects an ordering of plugins (by plugin name). This allows the ordering\n\t   * to be decoupled from injection of the actual plugins so that ordering is\n\t   * always deterministic regardless of packaging, on-the-fly injection, etc.\n\t   *\n\t   * @param {array} InjectedEventPluginOrder\n\t   * @internal\n\t   * @see {EventPluginHub.injection.injectEventPluginOrder}\n\t   */\n\t  injectEventPluginOrder: function (InjectedEventPluginOrder) {\n\t    !!EventPluginOrder ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than ' + 'once. You are likely trying to load more than one copy of React.') : invariant(false) : undefined;\n\t    // Clone the ordering so it cannot be dynamically mutated.\n\t    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);\n\t    recomputePluginOrdering();\n\t  },\n\t\n\t  /**\n\t   * Injects plugins to be used by `EventPluginHub`. The plugin names must be\n\t   * in the ordering injected by `injectEventPluginOrder`.\n\t   *\n\t   * Plugins can be injected as part of page initialization or on-the-fly.\n\t   *\n\t   * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n\t   * @internal\n\t   * @see {EventPluginHub.injection.injectEventPluginsByName}\n\t   */\n\t  injectEventPluginsByName: function (injectedNamesToPlugins) {\n\t    var isOrderingDirty = false;\n\t    for (var pluginName in injectedNamesToPlugins) {\n\t      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {\n\t        continue;\n\t      }\n\t      var PluginModule = injectedNamesToPlugins[pluginName];\n\t      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {\n\t        !!namesToPlugins[pluginName] ?  false ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins ' + 'using the same name, `%s`.', pluginName) : invariant(false) : undefined;\n\t        namesToPlugins[pluginName] = PluginModule;\n\t        isOrderingDirty = true;\n\t      }\n\t    }\n\t    if (isOrderingDirty) {\n\t      recomputePluginOrdering();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Looks up the plugin for the supplied event.\n\t   *\n\t   * @param {object} event A synthetic event.\n\t   * @return {?object} The plugin that created the supplied event.\n\t   * @internal\n\t   */\n\t  getPluginModuleForEvent: function (event) {\n\t    var dispatchConfig = event.dispatchConfig;\n\t    if (dispatchConfig.registrationName) {\n\t      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;\n\t    }\n\t    for (var phase in dispatchConfig.phasedRegistrationNames) {\n\t      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {\n\t        continue;\n\t      }\n\t      var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];\n\t      if (PluginModule) {\n\t        return PluginModule;\n\t      }\n\t    }\n\t    return null;\n\t  },\n\t\n\t  /**\n\t   * Exposed for unit testing.\n\t   * @private\n\t   */\n\t  _resetEventPlugins: function () {\n\t    EventPluginOrder = null;\n\t    for (var pluginName in namesToPlugins) {\n\t      if (namesToPlugins.hasOwnProperty(pluginName)) {\n\t        delete namesToPlugins[pluginName];\n\t      }\n\t    }\n\t    EventPluginRegistry.plugins.length = 0;\n\t\n\t    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;\n\t    for (var eventName in eventNameDispatchConfigs) {\n\t      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {\n\t        delete eventNameDispatchConfigs[eventName];\n\t      }\n\t    }\n\t\n\t    var registrationNameModules = EventPluginRegistry.registrationNameModules;\n\t    for (var registrationName in registrationNameModules) {\n\t      if (registrationNameModules.hasOwnProperty(registrationName)) {\n\t        delete registrationNameModules[registrationName];\n\t      }\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = EventPluginRegistry;\n\n/***/ },\n/* 60 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactChildren\n\t */\n\t\n\t'use strict';\n\t\n\tvar PooledClass = __webpack_require__(12);\n\tvar ReactElement = __webpack_require__(6);\n\t\n\tvar emptyFunction = __webpack_require__(9);\n\tvar traverseAllChildren = __webpack_require__(52);\n\t\n\tvar twoArgumentPooler = PooledClass.twoArgumentPooler;\n\tvar fourArgumentPooler = PooledClass.fourArgumentPooler;\n\t\n\tvar userProvidedKeyEscapeRegex = /\\/(?!\\/)/g;\n\tfunction escapeUserProvidedKey(text) {\n\t  return ('' + text).replace(userProvidedKeyEscapeRegex, '//');\n\t}\n\t\n\t/**\n\t * PooledClass representing the bookkeeping associated with performing a child\n\t * traversal. Allows avoiding binding callbacks.\n\t *\n\t * @constructor ForEachBookKeeping\n\t * @param {!function} forEachFunction Function to perform traversal with.\n\t * @param {?*} forEachContext Context to perform context with.\n\t */\n\tfunction ForEachBookKeeping(forEachFunction, forEachContext) {\n\t  this.func = forEachFunction;\n\t  this.context = forEachContext;\n\t  this.count = 0;\n\t}\n\tForEachBookKeeping.prototype.destructor = function () {\n\t  this.func = null;\n\t  this.context = null;\n\t  this.count = 0;\n\t};\n\tPooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);\n\t\n\tfunction forEachSingleChild(bookKeeping, child, name) {\n\t  var func = bookKeeping.func;\n\t  var context = bookKeeping.context;\n\t\n\t  func.call(context, child, bookKeeping.count++);\n\t}\n\t\n\t/**\n\t * Iterates through children that are typically specified as `props.children`.\n\t *\n\t * The provided forEachFunc(child, index) will be called for each\n\t * leaf child.\n\t *\n\t * @param {?*} children Children tree container.\n\t * @param {function(*, int)} forEachFunc\n\t * @param {*} forEachContext Context for forEachContext.\n\t */\n\tfunction forEachChildren(children, forEachFunc, forEachContext) {\n\t  if (children == null) {\n\t    return children;\n\t  }\n\t  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);\n\t  traverseAllChildren(children, forEachSingleChild, traverseContext);\n\t  ForEachBookKeeping.release(traverseContext);\n\t}\n\t\n\t/**\n\t * PooledClass representing the bookkeeping associated with performing a child\n\t * mapping. Allows avoiding binding callbacks.\n\t *\n\t * @constructor MapBookKeeping\n\t * @param {!*} mapResult Object containing the ordered map of results.\n\t * @param {!function} mapFunction Function to perform mapping with.\n\t * @param {?*} mapContext Context to perform mapping with.\n\t */\n\tfunction MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {\n\t  this.result = mapResult;\n\t  this.keyPrefix = keyPrefix;\n\t  this.func = mapFunction;\n\t  this.context = mapContext;\n\t  this.count = 0;\n\t}\n\tMapBookKeeping.prototype.destructor = function () {\n\t  this.result = null;\n\t  this.keyPrefix = null;\n\t  this.func = null;\n\t  this.context = null;\n\t  this.count = 0;\n\t};\n\tPooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);\n\t\n\tfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\n\t  var result = bookKeeping.result;\n\t  var keyPrefix = bookKeeping.keyPrefix;\n\t  var func = bookKeeping.func;\n\t  var context = bookKeeping.context;\n\t\n\t  var mappedChild = func.call(context, child, bookKeeping.count++);\n\t  if (Array.isArray(mappedChild)) {\n\t    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);\n\t  } else if (mappedChild != null) {\n\t    if (ReactElement.isValidElement(mappedChild)) {\n\t      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,\n\t      // Keep both the (mapped) and old keys if they differ, just as\n\t      // traverseAllChildren used to do for objects as children\n\t      keyPrefix + (mappedChild !== child ? escapeUserProvidedKey(mappedChild.key || '') + '/' : '') + childKey);\n\t    }\n\t    result.push(mappedChild);\n\t  }\n\t}\n\t\n\tfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n\t  var escapedPrefix = '';\n\t  if (prefix != null) {\n\t    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n\t  }\n\t  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);\n\t  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n\t  MapBookKeeping.release(traverseContext);\n\t}\n\t\n\t/**\n\t * Maps children that are typically specified as `props.children`.\n\t *\n\t * The provided mapFunction(child, key, index) will be called for each\n\t * leaf child.\n\t *\n\t * @param {?*} children Children tree container.\n\t * @param {function(*, int)} func The map function.\n\t * @param {*} context Context for mapFunction.\n\t * @return {object} Object containing the ordered map of results.\n\t */\n\tfunction mapChildren(children, func, context) {\n\t  if (children == null) {\n\t    return children;\n\t  }\n\t  var result = [];\n\t  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n\t  return result;\n\t}\n\t\n\tfunction forEachSingleChildDummy(traverseContext, child, name) {\n\t  return null;\n\t}\n\t\n\t/**\n\t * Count the number of children that are typically specified as\n\t * `props.children`.\n\t *\n\t * @param {?*} children Children tree container.\n\t * @return {number} The number of children.\n\t */\n\tfunction countChildren(children, context) {\n\t  return traverseAllChildren(children, forEachSingleChildDummy, null);\n\t}\n\t\n\t/**\n\t * Flatten a children object (typically specified as `props.children`) and\n\t * return an array with appropriately re-keyed children.\n\t */\n\tfunction toArray(children) {\n\t  var result = [];\n\t  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);\n\t  return result;\n\t}\n\t\n\tvar ReactChildren = {\n\t  forEach: forEachChildren,\n\t  map: mapChildren,\n\t  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,\n\t  count: countChildren,\n\t  toArray: toArray\n\t};\n\t\n\tmodule.exports = ReactChildren;\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactClass\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactComponent = __webpack_require__(62);\n\tvar ReactElement = __webpack_require__(6);\n\tvar ReactPropTypeLocations = __webpack_require__(27);\n\tvar ReactPropTypeLocationNames = __webpack_require__(26);\n\tvar ReactNoopUpdateQueue = __webpack_require__(77);\n\t\n\tvar assign = __webpack_require__(2);\n\tvar emptyObject = __webpack_require__(23);\n\tvar invariant = __webpack_require__(1);\n\tvar keyMirror = __webpack_require__(33);\n\tvar keyOf = __webpack_require__(13);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar MIXINS_KEY = keyOf({ mixins: null });\n\t\n\t/**\n\t * Policies that describe methods in `ReactClassInterface`.\n\t */\n\tvar SpecPolicy = keyMirror({\n\t  /**\n\t   * These methods may be defined only once by the class specification or mixin.\n\t   */\n\t  DEFINE_ONCE: null,\n\t  /**\n\t   * These methods may be defined by both the class specification and mixins.\n\t   * Subsequent definitions will be chained. These methods must return void.\n\t   */\n\t  DEFINE_MANY: null,\n\t  /**\n\t   * These methods are overriding the base class.\n\t   */\n\t  OVERRIDE_BASE: null,\n\t  /**\n\t   * These methods are similar to DEFINE_MANY, except we assume they return\n\t   * objects. We try to merge the keys of the return values of all the mixed in\n\t   * functions. If there is a key conflict we throw.\n\t   */\n\t  DEFINE_MANY_MERGED: null\n\t});\n\t\n\tvar injectedMixins = [];\n\t\n\tvar warnedSetProps = false;\n\tfunction warnSetProps() {\n\t  if (!warnedSetProps) {\n\t    warnedSetProps = true;\n\t     false ? warning(false, 'setProps(...) and replaceProps(...) are deprecated. ' + 'Instead, call render again at the top level.') : undefined;\n\t  }\n\t}\n\t\n\t/**\n\t * Composite components are higher-level components that compose other composite\n\t * or native components.\n\t *\n\t * To create a new type of `ReactClass`, pass a specification of\n\t * your new class to `React.createClass`. The only requirement of your class\n\t * specification is that you implement a `render` method.\n\t *\n\t *   var MyComponent = React.createClass({\n\t *     render: function() {\n\t *       return <div>Hello World</div>;\n\t *     }\n\t *   });\n\t *\n\t * The class specification supports a specific protocol of methods that have\n\t * special meaning (e.g. `render`). See `ReactClassInterface` for\n\t * more the comprehensive protocol. Any other properties and methods in the\n\t * class specification will be available on the prototype.\n\t *\n\t * @interface ReactClassInterface\n\t * @internal\n\t */\n\tvar ReactClassInterface = {\n\t\n\t  /**\n\t   * An array of Mixin objects to include when defining your component.\n\t   *\n\t   * @type {array}\n\t   * @optional\n\t   */\n\t  mixins: SpecPolicy.DEFINE_MANY,\n\t\n\t  /**\n\t   * An object containing properties and methods that should be defined on\n\t   * the component's constructor instead of its prototype (static methods).\n\t   *\n\t   * @type {object}\n\t   * @optional\n\t   */\n\t  statics: SpecPolicy.DEFINE_MANY,\n\t\n\t  /**\n\t   * Definition of prop types for this component.\n\t   *\n\t   * @type {object}\n\t   * @optional\n\t   */\n\t  propTypes: SpecPolicy.DEFINE_MANY,\n\t\n\t  /**\n\t   * Definition of context types for this component.\n\t   *\n\t   * @type {object}\n\t   * @optional\n\t   */\n\t  contextTypes: SpecPolicy.DEFINE_MANY,\n\t\n\t  /**\n\t   * Definition of context types this component sets for its children.\n\t   *\n\t   * @type {object}\n\t   * @optional\n\t   */\n\t  childContextTypes: SpecPolicy.DEFINE_MANY,\n\t\n\t  // ==== Definition methods ====\n\t\n\t  /**\n\t   * Invoked when the component is mounted. Values in the mapping will be set on\n\t   * `this.props` if that prop is not specified (i.e. using an `in` check).\n\t   *\n\t   * This method is invoked before `getInitialState` and therefore cannot rely\n\t   * on `this.state` or use `this.setState`.\n\t   *\n\t   * @return {object}\n\t   * @optional\n\t   */\n\t  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,\n\t\n\t  /**\n\t   * Invoked once before the component is mounted. The return value will be used\n\t   * as the initial value of `this.state`.\n\t   *\n\t   *   getInitialState: function() {\n\t   *     return {\n\t   *       isOn: false,\n\t   *       fooBaz: new BazFoo()\n\t   *     }\n\t   *   }\n\t   *\n\t   * @return {object}\n\t   * @optional\n\t   */\n\t  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,\n\t\n\t  /**\n\t   * @return {object}\n\t   * @optional\n\t   */\n\t  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,\n\t\n\t  /**\n\t   * Uses props from `this.props` and state from `this.state` to render the\n\t   * structure of the component.\n\t   *\n\t   * No guarantees are made about when or how often this method is invoked, so\n\t   * it must not have side effects.\n\t   *\n\t   *   render: function() {\n\t   *     var name = this.props.name;\n\t   *     return <div>Hello, {name}!</div>;\n\t   *   }\n\t   *\n\t   * @return {ReactComponent}\n\t   * @nosideeffects\n\t   * @required\n\t   */\n\t  render: SpecPolicy.DEFINE_ONCE,\n\t\n\t  // ==== Delegate methods ====\n\t\n\t  /**\n\t   * Invoked when the component is initially created and about to be mounted.\n\t   * This may have side effects, but any external subscriptions or data created\n\t   * by this method must be cleaned up in `componentWillUnmount`.\n\t   *\n\t   * @optional\n\t   */\n\t  componentWillMount: SpecPolicy.DEFINE_MANY,\n\t\n\t  /**\n\t   * Invoked when the component has been mounted and has a DOM representation.\n\t   * However, there is no guarantee that the DOM node is in the document.\n\t   *\n\t   * Use this as an opportunity to operate on the DOM when the component has\n\t   * been mounted (initialized and rendered) for the first time.\n\t   *\n\t   * @param {DOMElement} rootNode DOM element representing the component.\n\t   * @optional\n\t   */\n\t  componentDidMount: SpecPolicy.DEFINE_MANY,\n\t\n\t  /**\n\t   * Invoked before the component receives new props.\n\t   *\n\t   * Use this as an opportunity to react to a prop transition by updating the\n\t   * state using `this.setState`. Current props are accessed via `this.props`.\n\t   *\n\t   *   componentWillReceiveProps: function(nextProps, nextContext) {\n\t   *     this.setState({\n\t   *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n\t   *     });\n\t   *   }\n\t   *\n\t   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n\t   * transition may cause a state change, but the opposite is not true. If you\n\t   * need it, you are probably looking for `componentWillUpdate`.\n\t   *\n\t   * @param {object} nextProps\n\t   * @optional\n\t   */\n\t  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,\n\t\n\t  /**\n\t   * Invoked while deciding if the component should be updated as a result of\n\t   * receiving new props, state and/or context.\n\t   *\n\t   * Use this as an opportunity to `return false` when you're certain that the\n\t   * transition to the new props/state/context will not require a component\n\t   * update.\n\t   *\n\t   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n\t   *     return !equal(nextProps, this.props) ||\n\t   *       !equal(nextState, this.state) ||\n\t   *       !equal(nextContext, this.context);\n\t   *   }\n\t   *\n\t   * @param {object} nextProps\n\t   * @param {?object} nextState\n\t   * @param {?object} nextContext\n\t   * @return {boolean} True if the component should update.\n\t   * @optional\n\t   */\n\t  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,\n\t\n\t  /**\n\t   * Invoked when the component is about to update due to a transition from\n\t   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n\t   * and `nextContext`.\n\t   *\n\t   * Use this as an opportunity to perform preparation before an update occurs.\n\t   *\n\t   * NOTE: You **cannot** use `this.setState()` in this method.\n\t   *\n\t   * @param {object} nextProps\n\t   * @param {?object} nextState\n\t   * @param {?object} nextContext\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @optional\n\t   */\n\t  componentWillUpdate: SpecPolicy.DEFINE_MANY,\n\t\n\t  /**\n\t   * Invoked when the component's DOM representation has been updated.\n\t   *\n\t   * Use this as an opportunity to operate on the DOM when the component has\n\t   * been updated.\n\t   *\n\t   * @param {object} prevProps\n\t   * @param {?object} prevState\n\t   * @param {?object} prevContext\n\t   * @param {DOMElement} rootNode DOM element representing the component.\n\t   * @optional\n\t   */\n\t  componentDidUpdate: SpecPolicy.DEFINE_MANY,\n\t\n\t  /**\n\t   * Invoked when the component is about to be removed from its parent and have\n\t   * its DOM representation destroyed.\n\t   *\n\t   * Use this as an opportunity to deallocate any external resources.\n\t   *\n\t   * NOTE: There is no `componentDidUnmount` since your component will have been\n\t   * destroyed by that point.\n\t   *\n\t   * @optional\n\t   */\n\t  componentWillUnmount: SpecPolicy.DEFINE_MANY,\n\t\n\t  // ==== Advanced methods ====\n\t\n\t  /**\n\t   * Updates the component's currently mounted DOM representation.\n\t   *\n\t   * By default, this implements React's rendering and reconciliation algorithm.\n\t   * Sophisticated clients may wish to override this.\n\t   *\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @internal\n\t   * @overridable\n\t   */\n\t  updateComponent: SpecPolicy.OVERRIDE_BASE\n\t\n\t};\n\t\n\t/**\n\t * Mapping from class specification keys to special processing functions.\n\t *\n\t * Although these are declared like instance properties in the specification\n\t * when defining classes using `React.createClass`, they are actually static\n\t * and are accessible on the constructor instead of the prototype. Despite\n\t * being static, they must be defined outside of the \"statics\" key under\n\t * which all other static methods are defined.\n\t */\n\tvar RESERVED_SPEC_KEYS = {\n\t  displayName: function (Constructor, displayName) {\n\t    Constructor.displayName = displayName;\n\t  },\n\t  mixins: function (Constructor, mixins) {\n\t    if (mixins) {\n\t      for (var i = 0; i < mixins.length; i++) {\n\t        mixSpecIntoComponent(Constructor, mixins[i]);\n\t      }\n\t    }\n\t  },\n\t  childContextTypes: function (Constructor, childContextTypes) {\n\t    if (false) {\n\t      validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);\n\t    }\n\t    Constructor.childContextTypes = assign({}, Constructor.childContextTypes, childContextTypes);\n\t  },\n\t  contextTypes: function (Constructor, contextTypes) {\n\t    if (false) {\n\t      validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);\n\t    }\n\t    Constructor.contextTypes = assign({}, Constructor.contextTypes, contextTypes);\n\t  },\n\t  /**\n\t   * Special case getDefaultProps which should move into statics but requires\n\t   * automatic merging.\n\t   */\n\t  getDefaultProps: function (Constructor, getDefaultProps) {\n\t    if (Constructor.getDefaultProps) {\n\t      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);\n\t    } else {\n\t      Constructor.getDefaultProps = getDefaultProps;\n\t    }\n\t  },\n\t  propTypes: function (Constructor, propTypes) {\n\t    if (false) {\n\t      validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);\n\t    }\n\t    Constructor.propTypes = assign({}, Constructor.propTypes, propTypes);\n\t  },\n\t  statics: function (Constructor, statics) {\n\t    mixStaticSpecIntoComponent(Constructor, statics);\n\t  },\n\t  autobind: function () {} };\n\t\n\t// noop\n\tfunction validateTypeDef(Constructor, typeDef, location) {\n\t  for (var propName in typeDef) {\n\t    if (typeDef.hasOwnProperty(propName)) {\n\t      // use a warning instead of an invariant so components\n\t      // don't show up in prod but not in __DEV__\n\t       false ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : undefined;\n\t    }\n\t  }\n\t}\n\t\n\tfunction validateMethodOverride(proto, name) {\n\t  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;\n\t\n\t  // Disallow overriding of base class methods unless explicitly allowed.\n\t  if (ReactClassMixin.hasOwnProperty(name)) {\n\t    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ?  false ? invariant(false, 'ReactClassInterface: You are attempting to override ' + '`%s` from your class specification. Ensure that your method names ' + 'do not overlap with React methods.', name) : invariant(false) : undefined;\n\t  }\n\t\n\t  // Disallow defining methods more than once unless explicitly allowed.\n\t  if (proto.hasOwnProperty(name)) {\n\t    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ?  false ? invariant(false, 'ReactClassInterface: You are attempting to define ' + '`%s` on your component more than once. This conflict may be due ' + 'to a mixin.', name) : invariant(false) : undefined;\n\t  }\n\t}\n\t\n\t/**\n\t * Mixin helper which handles policy validation and reserved\n\t * specification keys when building React classses.\n\t */\n\tfunction mixSpecIntoComponent(Constructor, spec) {\n\t  if (!spec) {\n\t    return;\n\t  }\n\t\n\t  !(typeof spec !== 'function') ?  false ? invariant(false, 'ReactClass: You\\'re attempting to ' + 'use a component class as a mixin. Instead, just use a regular object.') : invariant(false) : undefined;\n\t  !!ReactElement.isValidElement(spec) ?  false ? invariant(false, 'ReactClass: You\\'re attempting to ' + 'use a component as a mixin. Instead, just use a regular object.') : invariant(false) : undefined;\n\t\n\t  var proto = Constructor.prototype;\n\t\n\t  // By handling mixins before any other properties, we ensure the same\n\t  // chaining order is applied to methods with DEFINE_MANY policy, whether\n\t  // mixins are listed before or after these methods in the spec.\n\t  if (spec.hasOwnProperty(MIXINS_KEY)) {\n\t    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n\t  }\n\t\n\t  for (var name in spec) {\n\t    if (!spec.hasOwnProperty(name)) {\n\t      continue;\n\t    }\n\t\n\t    if (name === MIXINS_KEY) {\n\t      // We have already handled mixins in a special case above.\n\t      continue;\n\t    }\n\t\n\t    var property = spec[name];\n\t    validateMethodOverride(proto, name);\n\t\n\t    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n\t      RESERVED_SPEC_KEYS[name](Constructor, property);\n\t    } else {\n\t      // Setup methods on prototype:\n\t      // The following member methods should not be automatically bound:\n\t      // 1. Expected ReactClass methods (in the \"interface\").\n\t      // 2. Overridden methods (that were mixed in).\n\t      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);\n\t      var isAlreadyDefined = proto.hasOwnProperty(name);\n\t      var isFunction = typeof property === 'function';\n\t      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;\n\t\n\t      if (shouldAutoBind) {\n\t        if (!proto.__reactAutoBindMap) {\n\t          proto.__reactAutoBindMap = {};\n\t        }\n\t        proto.__reactAutoBindMap[name] = property;\n\t        proto[name] = property;\n\t      } else {\n\t        if (isAlreadyDefined) {\n\t          var specPolicy = ReactClassInterface[name];\n\t\n\t          // These cases should already be caught by validateMethodOverride.\n\t          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ?  false ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s ' + 'when mixing in component specs.', specPolicy, name) : invariant(false) : undefined;\n\t\n\t          // For methods which are defined more than once, call the existing\n\t          // methods before calling the new property, merging if appropriate.\n\t          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {\n\t            proto[name] = createMergedResultFunction(proto[name], property);\n\t          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {\n\t            proto[name] = createChainedFunction(proto[name], property);\n\t          }\n\t        } else {\n\t          proto[name] = property;\n\t          if (false) {\n\t            // Add verbose displayName to the function, which helps when looking\n\t            // at profiling tools.\n\t            if (typeof property === 'function' && spec.displayName) {\n\t              proto[name].displayName = spec.displayName + '_' + name;\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction mixStaticSpecIntoComponent(Constructor, statics) {\n\t  if (!statics) {\n\t    return;\n\t  }\n\t  for (var name in statics) {\n\t    var property = statics[name];\n\t    if (!statics.hasOwnProperty(name)) {\n\t      continue;\n\t    }\n\t\n\t    var isReserved = (name in RESERVED_SPEC_KEYS);\n\t    !!isReserved ?  false ? invariant(false, 'ReactClass: You are attempting to define a reserved ' + 'property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it ' + 'as an instance property instead; it will still be accessible on the ' + 'constructor.', name) : invariant(false) : undefined;\n\t\n\t    var isInherited = (name in Constructor);\n\t    !!isInherited ?  false ? invariant(false, 'ReactClass: You are attempting to define ' + '`%s` on your component more than once. This conflict may be ' + 'due to a mixin.', name) : invariant(false) : undefined;\n\t    Constructor[name] = property;\n\t  }\n\t}\n\t\n\t/**\n\t * Merge two objects, but throw if both contain the same key.\n\t *\n\t * @param {object} one The first object, which is mutated.\n\t * @param {object} two The second object\n\t * @return {object} one after it has been mutated to contain everything in two.\n\t */\n\tfunction mergeIntoWithNoDuplicateKeys(one, two) {\n\t  !(one && two && typeof one === 'object' && typeof two === 'object') ?  false ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : invariant(false) : undefined;\n\t\n\t  for (var key in two) {\n\t    if (two.hasOwnProperty(key)) {\n\t      !(one[key] === undefined) ?  false ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): ' + 'Tried to merge two objects with the same key: `%s`. This conflict ' + 'may be due to a mixin; in particular, this may be caused by two ' + 'getInitialState() or getDefaultProps() methods returning objects ' + 'with clashing keys.', key) : invariant(false) : undefined;\n\t      one[key] = two[key];\n\t    }\n\t  }\n\t  return one;\n\t}\n\t\n\t/**\n\t * Creates a function that invokes two functions and merges their return values.\n\t *\n\t * @param {function} one Function to invoke first.\n\t * @param {function} two Function to invoke second.\n\t * @return {function} Function that invokes the two argument functions.\n\t * @private\n\t */\n\tfunction createMergedResultFunction(one, two) {\n\t  return function mergedResult() {\n\t    var a = one.apply(this, arguments);\n\t    var b = two.apply(this, arguments);\n\t    if (a == null) {\n\t      return b;\n\t    } else if (b == null) {\n\t      return a;\n\t    }\n\t    var c = {};\n\t    mergeIntoWithNoDuplicateKeys(c, a);\n\t    mergeIntoWithNoDuplicateKeys(c, b);\n\t    return c;\n\t  };\n\t}\n\t\n\t/**\n\t * Creates a function that invokes two functions and ignores their return vales.\n\t *\n\t * @param {function} one Function to invoke first.\n\t * @param {function} two Function to invoke second.\n\t * @return {function} Function that invokes the two argument functions.\n\t * @private\n\t */\n\tfunction createChainedFunction(one, two) {\n\t  return function chainedFunction() {\n\t    one.apply(this, arguments);\n\t    two.apply(this, arguments);\n\t  };\n\t}\n\t\n\t/**\n\t * Binds a method to the component.\n\t *\n\t * @param {object} component Component whose method is going to be bound.\n\t * @param {function} method Method to be bound.\n\t * @return {function} The bound method.\n\t */\n\tfunction bindAutoBindMethod(component, method) {\n\t  var boundMethod = method.bind(component);\n\t  if (false) {\n\t    boundMethod.__reactBoundContext = component;\n\t    boundMethod.__reactBoundMethod = method;\n\t    boundMethod.__reactBoundArguments = null;\n\t    var componentName = component.constructor.displayName;\n\t    var _bind = boundMethod.bind;\n\t    /* eslint-disable block-scoped-var, no-undef */\n\t    boundMethod.bind = function (newThis) {\n\t      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t        args[_key - 1] = arguments[_key];\n\t      }\n\t\n\t      // User is trying to bind() an autobound method; we effectively will\n\t      // ignore the value of \"this\" that the user is trying to use, so\n\t      // let's warn.\n\t      if (newThis !== component && newThis !== null) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : undefined;\n\t      } else if (!args.length) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : undefined;\n\t        return boundMethod;\n\t      }\n\t      var reboundMethod = _bind.apply(boundMethod, arguments);\n\t      reboundMethod.__reactBoundContext = component;\n\t      reboundMethod.__reactBoundMethod = method;\n\t      reboundMethod.__reactBoundArguments = args;\n\t      return reboundMethod;\n\t      /* eslint-enable */\n\t    };\n\t  }\n\t  return boundMethod;\n\t}\n\t\n\t/**\n\t * Binds all auto-bound methods in a component.\n\t *\n\t * @param {object} component Component whose method is going to be bound.\n\t */\n\tfunction bindAutoBindMethods(component) {\n\t  for (var autoBindKey in component.__reactAutoBindMap) {\n\t    if (component.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {\n\t      var method = component.__reactAutoBindMap[autoBindKey];\n\t      component[autoBindKey] = bindAutoBindMethod(component, method);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Add more to the ReactClass base class. These are all legacy features and\n\t * therefore not already part of the modern ReactComponent.\n\t */\n\tvar ReactClassMixin = {\n\t\n\t  /**\n\t   * TODO: This will be deprecated because state should always keep a consistent\n\t   * type signature and the only use case for this, is to avoid that.\n\t   */\n\t  replaceState: function (newState, callback) {\n\t    this.updater.enqueueReplaceState(this, newState);\n\t    if (callback) {\n\t      this.updater.enqueueCallback(this, callback);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Checks whether or not this composite component is mounted.\n\t   * @return {boolean} True if mounted, false otherwise.\n\t   * @protected\n\t   * @final\n\t   */\n\t  isMounted: function () {\n\t    return this.updater.isMounted(this);\n\t  },\n\t\n\t  /**\n\t   * Sets a subset of the props.\n\t   *\n\t   * @param {object} partialProps Subset of the next props.\n\t   * @param {?function} callback Called after props are updated.\n\t   * @final\n\t   * @public\n\t   * @deprecated\n\t   */\n\t  setProps: function (partialProps, callback) {\n\t    if (false) {\n\t      warnSetProps();\n\t    }\n\t    this.updater.enqueueSetProps(this, partialProps);\n\t    if (callback) {\n\t      this.updater.enqueueCallback(this, callback);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Replace all the props.\n\t   *\n\t   * @param {object} newProps Subset of the next props.\n\t   * @param {?function} callback Called after props are updated.\n\t   * @final\n\t   * @public\n\t   * @deprecated\n\t   */\n\t  replaceProps: function (newProps, callback) {\n\t    if (false) {\n\t      warnSetProps();\n\t    }\n\t    this.updater.enqueueReplaceProps(this, newProps);\n\t    if (callback) {\n\t      this.updater.enqueueCallback(this, callback);\n\t    }\n\t  }\n\t};\n\t\n\tvar ReactClassComponent = function () {};\n\tassign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);\n\t\n\t/**\n\t * Module for creating composite components.\n\t *\n\t * @class ReactClass\n\t */\n\tvar ReactClass = {\n\t\n\t  /**\n\t   * Creates a composite component class given a class specification.\n\t   *\n\t   * @param {object} spec Class specification (which must define `render`).\n\t   * @return {function} Component constructor function.\n\t   * @public\n\t   */\n\t  createClass: function (spec) {\n\t    var Constructor = function (props, context, updater) {\n\t      // This constructor is overridden by mocks. The argument is used\n\t      // by mocks to assert on what gets mounted.\n\t\n\t      if (false) {\n\t        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : undefined;\n\t      }\n\t\n\t      // Wire up auto-binding\n\t      if (this.__reactAutoBindMap) {\n\t        bindAutoBindMethods(this);\n\t      }\n\t\n\t      this.props = props;\n\t      this.context = context;\n\t      this.refs = emptyObject;\n\t      this.updater = updater || ReactNoopUpdateQueue;\n\t\n\t      this.state = null;\n\t\n\t      // ReactClasses doesn't have constructors. Instead, they use the\n\t      // getInitialState and componentWillMount methods for initialization.\n\t\n\t      var initialState = this.getInitialState ? this.getInitialState() : null;\n\t      if (false) {\n\t        // We allow auto-mocks to proceed as if they're returning null.\n\t        if (typeof initialState === 'undefined' && this.getInitialState._isMockFunction) {\n\t          // This is probably bad practice. Consider warning here and\n\t          // deprecating this convenience.\n\t          initialState = null;\n\t        }\n\t      }\n\t      !(typeof initialState === 'object' && !Array.isArray(initialState)) ?  false ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : invariant(false) : undefined;\n\t\n\t      this.state = initialState;\n\t    };\n\t    Constructor.prototype = new ReactClassComponent();\n\t    Constructor.prototype.constructor = Constructor;\n\t\n\t    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));\n\t\n\t    mixSpecIntoComponent(Constructor, spec);\n\t\n\t    // Initialize the defaultProps property after all mixins have been merged.\n\t    if (Constructor.getDefaultProps) {\n\t      Constructor.defaultProps = Constructor.getDefaultProps();\n\t    }\n\t\n\t    if (false) {\n\t      // This is a tag to indicate that the use of these method names is ok,\n\t      // since it's used with createClass. If it's not, then it's likely a\n\t      // mistake so we'll warn you to use the static property, property\n\t      // initializer or constructor respectively.\n\t      if (Constructor.getDefaultProps) {\n\t        Constructor.getDefaultProps.isReactClassApproved = {};\n\t      }\n\t      if (Constructor.prototype.getInitialState) {\n\t        Constructor.prototype.getInitialState.isReactClassApproved = {};\n\t      }\n\t    }\n\t\n\t    !Constructor.prototype.render ?  false ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : invariant(false) : undefined;\n\t\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : undefined;\n\t      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : undefined;\n\t    }\n\t\n\t    // Reduce time spent doing lookups by setting these on the prototype.\n\t    for (var methodName in ReactClassInterface) {\n\t      if (!Constructor.prototype[methodName]) {\n\t        Constructor.prototype[methodName] = null;\n\t      }\n\t    }\n\t\n\t    return Constructor;\n\t  },\n\t\n\t  injection: {\n\t    injectMixin: function (mixin) {\n\t      injectedMixins.push(mixin);\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactClass;\n\n/***/ },\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactComponent\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactNoopUpdateQueue = __webpack_require__(77);\n\t\n\tvar canDefineProperty = __webpack_require__(30);\n\tvar emptyObject = __webpack_require__(23);\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\t/**\n\t * Base class helpers for the updating state of a component.\n\t */\n\tfunction ReactComponent(props, context, updater) {\n\t  this.props = props;\n\t  this.context = context;\n\t  this.refs = emptyObject;\n\t  // We initialize the default updater but the real one gets injected by the\n\t  // renderer.\n\t  this.updater = updater || ReactNoopUpdateQueue;\n\t}\n\t\n\tReactComponent.prototype.isReactComponent = {};\n\t\n\t/**\n\t * Sets a subset of the state. Always use this to mutate\n\t * state. You should treat `this.state` as immutable.\n\t *\n\t * There is no guarantee that `this.state` will be immediately updated, so\n\t * accessing `this.state` after calling this method may return the old value.\n\t *\n\t * There is no guarantee that calls to `setState` will run synchronously,\n\t * as they may eventually be batched together.  You can provide an optional\n\t * callback that will be executed when the call to setState is actually\n\t * completed.\n\t *\n\t * When a function is provided to setState, it will be called at some point in\n\t * the future (not synchronously). It will be called with the up to date\n\t * component arguments (state, props, context). These values can be different\n\t * from this.* because your function may be called after receiveProps but before\n\t * shouldComponentUpdate, and this new state, props, and context will not yet be\n\t * assigned to this.\n\t *\n\t * @param {object|function} partialState Next partial state or function to\n\t *        produce next partial state to be merged with current state.\n\t * @param {?function} callback Called after state is updated.\n\t * @final\n\t * @protected\n\t */\n\tReactComponent.prototype.setState = function (partialState, callback) {\n\t  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ?  false ? invariant(false, 'setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.') : invariant(false) : undefined;\n\t  if (false) {\n\t    process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : undefined;\n\t  }\n\t  this.updater.enqueueSetState(this, partialState);\n\t  if (callback) {\n\t    this.updater.enqueueCallback(this, callback);\n\t  }\n\t};\n\t\n\t/**\n\t * Forces an update. This should only be invoked when it is known with\n\t * certainty that we are **not** in a DOM transaction.\n\t *\n\t * You may want to call this when you know that some deeper aspect of the\n\t * component's state has changed but `setState` was not called.\n\t *\n\t * This will not invoke `shouldComponentUpdate`, but it will invoke\n\t * `componentWillUpdate` and `componentDidUpdate`.\n\t *\n\t * @param {?function} callback Called after update is complete.\n\t * @final\n\t * @protected\n\t */\n\tReactComponent.prototype.forceUpdate = function (callback) {\n\t  this.updater.enqueueForceUpdate(this);\n\t  if (callback) {\n\t    this.updater.enqueueCallback(this, callback);\n\t  }\n\t};\n\t\n\t/**\n\t * Deprecated APIs. These APIs used to exist on classic React classes but since\n\t * we would like to deprecate them, we're not going to move them over to this\n\t * modern base class. Instead, we define a getter that warns if it's accessed.\n\t */\n\tif (false) {\n\t  var deprecatedAPIs = {\n\t    getDOMNode: ['getDOMNode', 'Use ReactDOM.findDOMNode(component) instead.'],\n\t    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n\t    replaceProps: ['replaceProps', 'Instead, call render again at the top level.'],\n\t    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).'],\n\t    setProps: ['setProps', 'Instead, call render again at the top level.']\n\t  };\n\t  var defineDeprecationWarning = function (methodName, info) {\n\t    if (canDefineProperty) {\n\t      Object.defineProperty(ReactComponent.prototype, methodName, {\n\t        get: function () {\n\t          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : undefined;\n\t          return undefined;\n\t        }\n\t      });\n\t    }\n\t  };\n\t  for (var fnName in deprecatedAPIs) {\n\t    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n\t      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n\t    }\n\t  }\n\t}\n\t\n\tmodule.exports = ReactComponent;\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOM\n\t */\n\t\n\t/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/\n\t\n\t'use strict';\n\t\n\tvar ReactCurrentOwner = __webpack_require__(11);\n\tvar ReactDOMTextComponent = __webpack_require__(66);\n\tvar ReactDefaultInjection = __webpack_require__(68);\n\tvar ReactInstanceHandles = __webpack_require__(18);\n\tvar ReactMount = __webpack_require__(5);\n\tvar ReactPerf = __webpack_require__(7);\n\tvar ReactReconciler = __webpack_require__(15);\n\tvar ReactUpdates = __webpack_require__(8);\n\tvar ReactVersion = __webpack_require__(42);\n\t\n\tvar findDOMNode = __webpack_require__(43);\n\tvar renderSubtreeIntoContainer = __webpack_require__(153);\n\tvar warning = __webpack_require__(3);\n\t\n\tReactDefaultInjection.inject();\n\t\n\tvar render = ReactPerf.measure('React', 'render', ReactMount.render);\n\t\n\tvar React = {\n\t  findDOMNode: findDOMNode,\n\t  render: render,\n\t  unmountComponentAtNode: ReactMount.unmountComponentAtNode,\n\t  version: ReactVersion,\n\t\n\t  /* eslint-disable camelcase */\n\t  unstable_batchedUpdates: ReactUpdates.batchedUpdates,\n\t  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer\n\t};\n\t\n\t// Inject the runtime into a devtools global hook regardless of browser.\n\t// Allows for debugging when the hook is injected on the page.\n\t/* eslint-enable camelcase */\n\tif (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {\n\t  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({\n\t    CurrentOwner: ReactCurrentOwner,\n\t    InstanceHandles: ReactInstanceHandles,\n\t    Mount: ReactMount,\n\t    Reconciler: ReactReconciler,\n\t    TextComponent: ReactDOMTextComponent\n\t  });\n\t}\n\t\n\tif (false) {\n\t  var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\t  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {\n\t\n\t    // First check if devtools is not installed\n\t    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n\t      // If we're in Chrome or Firefox, provide a download link if not installed.\n\t      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {\n\t        console.debug('Download the React DevTools for a better development experience: ' + 'https://fb.me/react-devtools');\n\t      }\n\t    }\n\t\n\t    // If we're in IE8, check to see if we are in compatibility mode and provide\n\t    // information on preventing compatibility mode\n\t    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;\n\t\n\t    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />') : undefined;\n\t\n\t    var expectedFeatures = [\n\t    // shims\n\t    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim,\n\t\n\t    // shams\n\t    Object.create, Object.freeze];\n\t\n\t    for (var i = 0; i < expectedFeatures.length; i++) {\n\t      if (!expectedFeatures[i]) {\n\t        console.error('One or more ES5 shim/shams expected by React are not available: ' + 'https://fb.me/react-warning-polyfills');\n\t        break;\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tmodule.exports = React;\n\n/***/ },\n/* 64 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMFeatureFlags\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactDOMFeatureFlags = {\n\t  useCreateElement: false\n\t};\n\t\n\tmodule.exports = ReactDOMFeatureFlags;\n\n/***/ },\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMSelect\n\t */\n\t\n\t'use strict';\n\t\n\tvar LinkedValueUtils = __webpack_require__(37);\n\tvar ReactMount = __webpack_require__(5);\n\tvar ReactUpdates = __webpack_require__(8);\n\t\n\tvar assign = __webpack_require__(2);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar valueContextKey = '__ReactDOMSelect_value$' + Math.random().toString(36).slice(2);\n\t\n\tfunction updateOptionsIfPendingUpdateAndMounted() {\n\t  if (this._rootNodeID && this._wrapperState.pendingUpdate) {\n\t    this._wrapperState.pendingUpdate = false;\n\t\n\t    var props = this._currentElement.props;\n\t    var value = LinkedValueUtils.getValue(props);\n\t\n\t    if (value != null) {\n\t      updateOptions(this, Boolean(props.multiple), value);\n\t    }\n\t  }\n\t}\n\t\n\tfunction getDeclarationErrorAddendum(owner) {\n\t  if (owner) {\n\t    var name = owner.getName();\n\t    if (name) {\n\t      return ' Check the render method of `' + name + '`.';\n\t    }\n\t  }\n\t  return '';\n\t}\n\t\n\tvar valuePropNames = ['value', 'defaultValue'];\n\t\n\t/**\n\t * Validation function for `value` and `defaultValue`.\n\t * @private\n\t */\n\tfunction checkSelectPropTypes(inst, props) {\n\t  var owner = inst._currentElement._owner;\n\t  LinkedValueUtils.checkPropTypes('select', props, owner);\n\t\n\t  for (var i = 0; i < valuePropNames.length; i++) {\n\t    var propName = valuePropNames[i];\n\t    if (props[propName] == null) {\n\t      continue;\n\t    }\n\t    if (props.multiple) {\n\t       false ? warning(Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : undefined;\n\t    } else {\n\t       false ? warning(!Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : undefined;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * @param {ReactDOMComponent} inst\n\t * @param {boolean} multiple\n\t * @param {*} propValue A stringable (with `multiple`, a list of stringables).\n\t * @private\n\t */\n\tfunction updateOptions(inst, multiple, propValue) {\n\t  var selectedValue, i;\n\t  var options = ReactMount.getNode(inst._rootNodeID).options;\n\t\n\t  if (multiple) {\n\t    selectedValue = {};\n\t    for (i = 0; i < propValue.length; i++) {\n\t      selectedValue['' + propValue[i]] = true;\n\t    }\n\t    for (i = 0; i < options.length; i++) {\n\t      var selected = selectedValue.hasOwnProperty(options[i].value);\n\t      if (options[i].selected !== selected) {\n\t        options[i].selected = selected;\n\t      }\n\t    }\n\t  } else {\n\t    // Do not set `select.value` as exact behavior isn't consistent across all\n\t    // browsers for all cases.\n\t    selectedValue = '' + propValue;\n\t    for (i = 0; i < options.length; i++) {\n\t      if (options[i].value === selectedValue) {\n\t        options[i].selected = true;\n\t        return;\n\t      }\n\t    }\n\t    if (options.length) {\n\t      options[0].selected = true;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Implements a <select> native component that allows optionally setting the\n\t * props `value` and `defaultValue`. If `multiple` is false, the prop must be a\n\t * stringable. If `multiple` is true, the prop must be an array of stringables.\n\t *\n\t * If `value` is not supplied (or null/undefined), user actions that change the\n\t * selected option will trigger updates to the rendered options.\n\t *\n\t * If it is supplied (and not null/undefined), the rendered options will not\n\t * update in response to user actions. Instead, the `value` prop must change in\n\t * order for the rendered options to update.\n\t *\n\t * If `defaultValue` is provided, any options with the supplied values will be\n\t * selected.\n\t */\n\tvar ReactDOMSelect = {\n\t  valueContextKey: valueContextKey,\n\t\n\t  getNativeProps: function (inst, props, context) {\n\t    return assign({}, props, {\n\t      onChange: inst._wrapperState.onChange,\n\t      value: undefined\n\t    });\n\t  },\n\t\n\t  mountWrapper: function (inst, props) {\n\t    if (false) {\n\t      checkSelectPropTypes(inst, props);\n\t    }\n\t\n\t    var value = LinkedValueUtils.getValue(props);\n\t    inst._wrapperState = {\n\t      pendingUpdate: false,\n\t      initialValue: value != null ? value : props.defaultValue,\n\t      onChange: _handleChange.bind(inst),\n\t      wasMultiple: Boolean(props.multiple)\n\t    };\n\t  },\n\t\n\t  processChildContext: function (inst, props, context) {\n\t    // Pass down initial value so initial generated markup has correct\n\t    // `selected` attributes\n\t    var childContext = assign({}, context);\n\t    childContext[valueContextKey] = inst._wrapperState.initialValue;\n\t    return childContext;\n\t  },\n\t\n\t  postUpdateWrapper: function (inst) {\n\t    var props = inst._currentElement.props;\n\t\n\t    // After the initial mount, we control selected-ness manually so don't pass\n\t    // the context value down\n\t    inst._wrapperState.initialValue = undefined;\n\t\n\t    var wasMultiple = inst._wrapperState.wasMultiple;\n\t    inst._wrapperState.wasMultiple = Boolean(props.multiple);\n\t\n\t    var value = LinkedValueUtils.getValue(props);\n\t    if (value != null) {\n\t      inst._wrapperState.pendingUpdate = false;\n\t      updateOptions(inst, Boolean(props.multiple), value);\n\t    } else if (wasMultiple !== Boolean(props.multiple)) {\n\t      // For simplicity, reapply `defaultValue` if `multiple` is toggled.\n\t      if (props.defaultValue != null) {\n\t        updateOptions(inst, Boolean(props.multiple), props.defaultValue);\n\t      } else {\n\t        // Revert the select back to its default unselected state.\n\t        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tfunction _handleChange(event) {\n\t  var props = this._currentElement.props;\n\t  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\t\n\t  this._wrapperState.pendingUpdate = true;\n\t  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);\n\t  return returnValue;\n\t}\n\t\n\tmodule.exports = ReactDOMSelect;\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMTextComponent\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMChildrenOperations = __webpack_require__(58);\n\tvar DOMPropertyOperations = __webpack_require__(36);\n\tvar ReactComponentBrowserEnvironment = __webpack_require__(38);\n\tvar ReactMount = __webpack_require__(5);\n\t\n\tvar assign = __webpack_require__(2);\n\tvar escapeTextContentForBrowser = __webpack_require__(31);\n\tvar setTextContent = __webpack_require__(50);\n\tvar validateDOMNesting = __webpack_require__(53);\n\t\n\t/**\n\t * Text nodes violate a couple assumptions that React makes about components:\n\t *\n\t *  - When mounting text into the DOM, adjacent text nodes are merged.\n\t *  - Text nodes cannot be assigned a React root ID.\n\t *\n\t * This component is used to wrap strings in elements so that they can undergo\n\t * the same reconciliation that is applied to elements.\n\t *\n\t * TODO: Investigate representing React components in the DOM with text nodes.\n\t *\n\t * @class ReactDOMTextComponent\n\t * @extends ReactComponent\n\t * @internal\n\t */\n\tvar ReactDOMTextComponent = function (props) {\n\t  // This constructor and its argument is currently used by mocks.\n\t};\n\t\n\tassign(ReactDOMTextComponent.prototype, {\n\t\n\t  /**\n\t   * @param {ReactText} text\n\t   * @internal\n\t   */\n\t  construct: function (text) {\n\t    // TODO: This is really a ReactText (ReactNode), not a ReactElement\n\t    this._currentElement = text;\n\t    this._stringText = '' + text;\n\t\n\t    // Properties\n\t    this._rootNodeID = null;\n\t    this._mountIndex = 0;\n\t  },\n\t\n\t  /**\n\t   * Creates the markup for this text node. This node is not intended to have\n\t   * any features besides containing text content.\n\t   *\n\t   * @param {string} rootID DOM ID of the root node.\n\t   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n\t   * @return {string} Markup for this text node.\n\t   * @internal\n\t   */\n\t  mountComponent: function (rootID, transaction, context) {\n\t    if (false) {\n\t      if (context[validateDOMNesting.ancestorInfoContextKey]) {\n\t        validateDOMNesting('span', null, context[validateDOMNesting.ancestorInfoContextKey]);\n\t      }\n\t    }\n\t\n\t    this._rootNodeID = rootID;\n\t    if (transaction.useCreateElement) {\n\t      var ownerDocument = context[ReactMount.ownerDocumentContextKey];\n\t      var el = ownerDocument.createElement('span');\n\t      DOMPropertyOperations.setAttributeForID(el, rootID);\n\t      // Populate node cache\n\t      ReactMount.getID(el);\n\t      setTextContent(el, this._stringText);\n\t      return el;\n\t    } else {\n\t      var escapedText = escapeTextContentForBrowser(this._stringText);\n\t\n\t      if (transaction.renderToStaticMarkup) {\n\t        // Normally we'd wrap this in a `span` for the reasons stated above, but\n\t        // since this is a situation where React won't take over (static pages),\n\t        // we can simply return the text as it is.\n\t        return escapedText;\n\t      }\n\t\n\t      return '<span ' + DOMPropertyOperations.createMarkupForID(rootID) + '>' + escapedText + '</span>';\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Updates this component by updating the text content.\n\t   *\n\t   * @param {ReactText} nextText The next text content\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @internal\n\t   */\n\t  receiveComponent: function (nextText, transaction) {\n\t    if (nextText !== this._currentElement) {\n\t      this._currentElement = nextText;\n\t      var nextStringText = '' + nextText;\n\t      if (nextStringText !== this._stringText) {\n\t        // TODO: Save this as pending props and use performUpdateIfNecessary\n\t        // and/or updateComponent to do the actual update for consistency with\n\t        // other component types?\n\t        this._stringText = nextStringText;\n\t        var node = ReactMount.getNode(this._rootNodeID);\n\t        DOMChildrenOperations.updateTextContent(node, nextStringText);\n\t      }\n\t    }\n\t  },\n\t\n\t  unmountComponent: function () {\n\t    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);\n\t  }\n\t\n\t});\n\t\n\tmodule.exports = ReactDOMTextComponent;\n\n/***/ },\n/* 67 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDefaultBatchingStrategy\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactUpdates = __webpack_require__(8);\n\tvar Transaction = __webpack_require__(29);\n\t\n\tvar assign = __webpack_require__(2);\n\tvar emptyFunction = __webpack_require__(9);\n\t\n\tvar RESET_BATCHED_UPDATES = {\n\t  initialize: emptyFunction,\n\t  close: function () {\n\t    ReactDefaultBatchingStrategy.isBatchingUpdates = false;\n\t  }\n\t};\n\t\n\tvar FLUSH_BATCHED_UPDATES = {\n\t  initialize: emptyFunction,\n\t  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)\n\t};\n\t\n\tvar TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];\n\t\n\tfunction ReactDefaultBatchingStrategyTransaction() {\n\t  this.reinitializeTransaction();\n\t}\n\t\n\tassign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {\n\t  getTransactionWrappers: function () {\n\t    return TRANSACTION_WRAPPERS;\n\t  }\n\t});\n\t\n\tvar transaction = new ReactDefaultBatchingStrategyTransaction();\n\t\n\tvar ReactDefaultBatchingStrategy = {\n\t  isBatchingUpdates: false,\n\t\n\t  /**\n\t   * Call the provided function in a context within which calls to `setState`\n\t   * and friends are batched such that components aren't updated unnecessarily.\n\t   */\n\t  batchedUpdates: function (callback, a, b, c, d, e) {\n\t    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;\n\t\n\t    ReactDefaultBatchingStrategy.isBatchingUpdates = true;\n\t\n\t    // The code is written this way to avoid extra allocations\n\t    if (alreadyBatchingUpdates) {\n\t      callback(a, b, c, d, e);\n\t    } else {\n\t      transaction.perform(callback, null, a, b, c, d, e);\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = ReactDefaultBatchingStrategy;\n\n/***/ },\n/* 68 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDefaultInjection\n\t */\n\t\n\t'use strict';\n\t\n\tvar BeforeInputEventPlugin = __webpack_require__(100);\n\tvar ChangeEventPlugin = __webpack_require__(102);\n\tvar ClientReactRootIndex = __webpack_require__(103);\n\tvar DefaultEventPluginOrder = __webpack_require__(105);\n\tvar EnterLeaveEventPlugin = __webpack_require__(106);\n\tvar ExecutionEnvironment = __webpack_require__(4);\n\tvar HTMLDOMPropertyConfig = __webpack_require__(109);\n\tvar ReactBrowserComponentMixin = __webpack_require__(111);\n\tvar ReactComponentBrowserEnvironment = __webpack_require__(38);\n\tvar ReactDefaultBatchingStrategy = __webpack_require__(67);\n\tvar ReactDOMComponent = __webpack_require__(115);\n\tvar ReactDOMTextComponent = __webpack_require__(66);\n\tvar ReactEventListener = __webpack_require__(123);\n\tvar ReactInjection = __webpack_require__(124);\n\tvar ReactInstanceHandles = __webpack_require__(18);\n\tvar ReactMount = __webpack_require__(5);\n\tvar ReactReconcileTransaction = __webpack_require__(128);\n\tvar SelectEventPlugin = __webpack_require__(134);\n\tvar ServerReactRootIndex = __webpack_require__(135);\n\tvar SimpleEventPlugin = __webpack_require__(136);\n\tvar SVGDOMPropertyConfig = __webpack_require__(133);\n\t\n\tvar alreadyInjected = false;\n\t\n\tfunction inject() {\n\t  if (alreadyInjected) {\n\t    // TODO: This is currently true because these injections are shared between\n\t    // the client and the server package. They should be built independently\n\t    // and not share any injection state. Then this problem will be solved.\n\t    return;\n\t  }\n\t  alreadyInjected = true;\n\t\n\t  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);\n\t\n\t  /**\n\t   * Inject modules for resolving DOM hierarchy and plugin ordering.\n\t   */\n\t  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);\n\t  ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);\n\t  ReactInjection.EventPluginHub.injectMount(ReactMount);\n\t\n\t  /**\n\t   * Some important event plugins included by default (without having to require\n\t   * them).\n\t   */\n\t  ReactInjection.EventPluginHub.injectEventPluginsByName({\n\t    SimpleEventPlugin: SimpleEventPlugin,\n\t    EnterLeaveEventPlugin: EnterLeaveEventPlugin,\n\t    ChangeEventPlugin: ChangeEventPlugin,\n\t    SelectEventPlugin: SelectEventPlugin,\n\t    BeforeInputEventPlugin: BeforeInputEventPlugin\n\t  });\n\t\n\t  ReactInjection.NativeComponent.injectGenericComponentClass(ReactDOMComponent);\n\t\n\t  ReactInjection.NativeComponent.injectTextComponentClass(ReactDOMTextComponent);\n\t\n\t  ReactInjection.Class.injectMixin(ReactBrowserComponentMixin);\n\t\n\t  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);\n\t  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);\n\t\n\t  ReactInjection.EmptyComponent.injectEmptyComponent('noscript');\n\t\n\t  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);\n\t  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);\n\t\n\t  ReactInjection.RootIndex.injectCreateReactRootIndex(ExecutionEnvironment.canUseDOM ? ClientReactRootIndex.createReactRootIndex : ServerReactRootIndex.createReactRootIndex);\n\t\n\t  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);\n\t\n\t  if (false) {\n\t    var url = ExecutionEnvironment.canUseDOM && window.location.href || '';\n\t    if (/[?&]react_perf\\b/.test(url)) {\n\t      var ReactDefaultPerf = require('./ReactDefaultPerf');\n\t      ReactDefaultPerf.start();\n\t    }\n\t  }\n\t}\n\t\n\tmodule.exports = {\n\t  inject: inject\n\t};\n\n/***/ },\n/* 69 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactElementValidator\n\t */\n\t\n\t/**\n\t * ReactElementValidator provides a wrapper around a element factory\n\t * which validates the props passed to the element. This is intended to be\n\t * used only in DEV and could be replaced by a static type checker for languages\n\t * that support it.\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactElement = __webpack_require__(6);\n\tvar ReactPropTypeLocations = __webpack_require__(27);\n\tvar ReactPropTypeLocationNames = __webpack_require__(26);\n\tvar ReactCurrentOwner = __webpack_require__(11);\n\t\n\tvar canDefineProperty = __webpack_require__(30);\n\tvar getIteratorFn = __webpack_require__(47);\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\tfunction getDeclarationErrorAddendum() {\n\t  if (ReactCurrentOwner.current) {\n\t    var name = ReactCurrentOwner.current.getName();\n\t    if (name) {\n\t      return ' Check the render method of `' + name + '`.';\n\t    }\n\t  }\n\t  return '';\n\t}\n\t\n\t/**\n\t * Warn if there's no key explicitly set on dynamic arrays of children or\n\t * object keys are not valid. This allows us to keep track of children between\n\t * updates.\n\t */\n\tvar ownerHasKeyUseWarning = {};\n\t\n\tvar loggedTypeFailures = {};\n\t\n\t/**\n\t * Warn if the element doesn't have an explicit key assigned to it.\n\t * This element is in an array. The array could grow and shrink or be\n\t * reordered. All children that haven't already been validated are required to\n\t * have a \"key\" property assigned to it.\n\t *\n\t * @internal\n\t * @param {ReactElement} element Element that requires a key.\n\t * @param {*} parentType element's parent's type.\n\t */\n\tfunction validateExplicitKey(element, parentType) {\n\t  if (!element._store || element._store.validated || element.key != null) {\n\t    return;\n\t  }\n\t  element._store.validated = true;\n\t\n\t  var addenda = getAddendaForKeyUse('uniqueKey', element, parentType);\n\t  if (addenda === null) {\n\t    // we already showed the warning\n\t    return;\n\t  }\n\t   false ? warning(false, 'Each child in an array or iterator should have a unique \"key\" prop.' + '%s%s%s', addenda.parentOrOwner || '', addenda.childOwner || '', addenda.url || '') : undefined;\n\t}\n\t\n\t/**\n\t * Shared warning and monitoring code for the key warnings.\n\t *\n\t * @internal\n\t * @param {string} messageType A key used for de-duping warnings.\n\t * @param {ReactElement} element Component that requires a key.\n\t * @param {*} parentType element's parent's type.\n\t * @returns {?object} A set of addenda to use in the warning message, or null\n\t * if the warning has already been shown before (and shouldn't be shown again).\n\t */\n\tfunction getAddendaForKeyUse(messageType, element, parentType) {\n\t  var addendum = getDeclarationErrorAddendum();\n\t  if (!addendum) {\n\t    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\t    if (parentName) {\n\t      addendum = ' Check the top-level render call using <' + parentName + '>.';\n\t    }\n\t  }\n\t\n\t  var memoizer = ownerHasKeyUseWarning[messageType] || (ownerHasKeyUseWarning[messageType] = {});\n\t  if (memoizer[addendum]) {\n\t    return null;\n\t  }\n\t  memoizer[addendum] = true;\n\t\n\t  var addenda = {\n\t    parentOrOwner: addendum,\n\t    url: ' See https://fb.me/react-warning-keys for more information.',\n\t    childOwner: null\n\t  };\n\t\n\t  // Usually the current owner is the offender, but if it accepts children as a\n\t  // property, it may be the creator of the child that's responsible for\n\t  // assigning it a key.\n\t  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n\t    // Give the component that originally created this child.\n\t    addenda.childOwner = ' It was passed a child from ' + element._owner.getName() + '.';\n\t  }\n\t\n\t  return addenda;\n\t}\n\t\n\t/**\n\t * Ensure that every element either is passed in a static location, in an\n\t * array with an explicit keys property defined, or in an object literal\n\t * with valid key property.\n\t *\n\t * @internal\n\t * @param {ReactNode} node Statically passed child of any type.\n\t * @param {*} parentType node's parent's type.\n\t */\n\tfunction validateChildKeys(node, parentType) {\n\t  if (typeof node !== 'object') {\n\t    return;\n\t  }\n\t  if (Array.isArray(node)) {\n\t    for (var i = 0; i < node.length; i++) {\n\t      var child = node[i];\n\t      if (ReactElement.isValidElement(child)) {\n\t        validateExplicitKey(child, parentType);\n\t      }\n\t    }\n\t  } else if (ReactElement.isValidElement(node)) {\n\t    // This element was passed in a valid location.\n\t    if (node._store) {\n\t      node._store.validated = true;\n\t    }\n\t  } else if (node) {\n\t    var iteratorFn = getIteratorFn(node);\n\t    // Entry iterators provide implicit keys.\n\t    if (iteratorFn) {\n\t      if (iteratorFn !== node.entries) {\n\t        var iterator = iteratorFn.call(node);\n\t        var step;\n\t        while (!(step = iterator.next()).done) {\n\t          if (ReactElement.isValidElement(step.value)) {\n\t            validateExplicitKey(step.value, parentType);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Assert that the props are valid\n\t *\n\t * @param {string} componentName Name of the component for error messages.\n\t * @param {object} propTypes Map of prop name to a ReactPropType\n\t * @param {object} props\n\t * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n\t * @private\n\t */\n\tfunction checkPropTypes(componentName, propTypes, props, location) {\n\t  for (var propName in propTypes) {\n\t    if (propTypes.hasOwnProperty(propName)) {\n\t      var error;\n\t      // Prop type validation may throw. In case they do, we don't want to\n\t      // fail the render phase where it didn't fail before. So we log it.\n\t      // After these have been cleaned up, we'll let them throw.\n\t      try {\n\t        // This is intentionally an invariant that gets caught. It's the same\n\t        // behavior as without this statement except with a better message.\n\t        !(typeof propTypes[propName] === 'function') ?  false ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : undefined;\n\t        error = propTypes[propName](props, propName, componentName, location);\n\t      } catch (ex) {\n\t        error = ex;\n\t      }\n\t       false ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], propName, typeof error) : undefined;\n\t      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n\t        // Only monitor this failure once because there tends to be a lot of the\n\t        // same error.\n\t        loggedTypeFailures[error.message] = true;\n\t\n\t        var addendum = getDeclarationErrorAddendum();\n\t         false ? warning(false, 'Failed propType: %s%s', error.message, addendum) : undefined;\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Given an element, validate that its props follow the propTypes definition,\n\t * provided by the type.\n\t *\n\t * @param {ReactElement} element\n\t */\n\tfunction validatePropTypes(element) {\n\t  var componentClass = element.type;\n\t  if (typeof componentClass !== 'function') {\n\t    return;\n\t  }\n\t  var name = componentClass.displayName || componentClass.name;\n\t  if (componentClass.propTypes) {\n\t    checkPropTypes(name, componentClass.propTypes, element.props, ReactPropTypeLocations.prop);\n\t  }\n\t  if (typeof componentClass.getDefaultProps === 'function') {\n\t     false ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : undefined;\n\t  }\n\t}\n\t\n\tvar ReactElementValidator = {\n\t\n\t  createElement: function (type, props, children) {\n\t    var validType = typeof type === 'string' || typeof type === 'function';\n\t    // We warn in this case but don't throw. We expect the element creation to\n\t    // succeed and there will likely be errors in render.\n\t     false ? warning(validType, 'React.createElement: type should not be null, undefined, boolean, or ' + 'number. It should be a string (for DOM elements) or a ReactClass ' + '(for composite components).%s', getDeclarationErrorAddendum()) : undefined;\n\t\n\t    var element = ReactElement.createElement.apply(this, arguments);\n\t\n\t    // The result can be nullish if a mock or a custom function is used.\n\t    // TODO: Drop this when these are no longer allowed as the type argument.\n\t    if (element == null) {\n\t      return element;\n\t    }\n\t\n\t    // Skip key warning if the type isn't valid since our key validation logic\n\t    // doesn't expect a non-string/function type and can throw confusing errors.\n\t    // We don't want exception behavior to differ between dev and prod.\n\t    // (Rendering will throw with a helpful message and as soon as the type is\n\t    // fixed, the key warnings will appear.)\n\t    if (validType) {\n\t      for (var i = 2; i < arguments.length; i++) {\n\t        validateChildKeys(arguments[i], type);\n\t      }\n\t    }\n\t\n\t    validatePropTypes(element);\n\t\n\t    return element;\n\t  },\n\t\n\t  createFactory: function (type) {\n\t    var validatedFactory = ReactElementValidator.createElement.bind(null, type);\n\t    // Legacy hook TODO: Warn if this is accessed\n\t    validatedFactory.type = type;\n\t\n\t    if (false) {\n\t      if (canDefineProperty) {\n\t        Object.defineProperty(validatedFactory, 'type', {\n\t          enumerable: false,\n\t          get: function () {\n\t            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : undefined;\n\t            Object.defineProperty(this, 'type', {\n\t              value: type\n\t            });\n\t            return type;\n\t          }\n\t        });\n\t      }\n\t    }\n\t\n\t    return validatedFactory;\n\t  },\n\t\n\t  cloneElement: function (element, props, children) {\n\t    var newElement = ReactElement.cloneElement.apply(this, arguments);\n\t    for (var i = 2; i < arguments.length; i++) {\n\t      validateChildKeys(arguments[i], newElement.type);\n\t    }\n\t    validatePropTypes(newElement);\n\t    return newElement;\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactElementValidator;\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactEmptyComponent\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactElement = __webpack_require__(6);\n\tvar ReactEmptyComponentRegistry = __webpack_require__(71);\n\tvar ReactReconciler = __webpack_require__(15);\n\t\n\tvar assign = __webpack_require__(2);\n\t\n\tvar placeholderElement;\n\t\n\tvar ReactEmptyComponentInjection = {\n\t  injectEmptyComponent: function (component) {\n\t    placeholderElement = ReactElement.createElement(component);\n\t  }\n\t};\n\t\n\tfunction registerNullComponentID() {\n\t  ReactEmptyComponentRegistry.registerNullComponentID(this._rootNodeID);\n\t}\n\t\n\tvar ReactEmptyComponent = function (instantiate) {\n\t  this._currentElement = null;\n\t  this._rootNodeID = null;\n\t  this._renderedComponent = instantiate(placeholderElement);\n\t};\n\tassign(ReactEmptyComponent.prototype, {\n\t  construct: function (element) {},\n\t  mountComponent: function (rootID, transaction, context) {\n\t    transaction.getReactMountReady().enqueue(registerNullComponentID, this);\n\t    this._rootNodeID = rootID;\n\t    return ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, context);\n\t  },\n\t  receiveComponent: function () {},\n\t  unmountComponent: function (rootID, transaction, context) {\n\t    ReactReconciler.unmountComponent(this._renderedComponent);\n\t    ReactEmptyComponentRegistry.deregisterNullComponentID(this._rootNodeID);\n\t    this._rootNodeID = null;\n\t    this._renderedComponent = null;\n\t  }\n\t});\n\t\n\tReactEmptyComponent.injection = ReactEmptyComponentInjection;\n\t\n\tmodule.exports = ReactEmptyComponent;\n\n/***/ },\n/* 71 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2014-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactEmptyComponentRegistry\n\t */\n\t\n\t'use strict';\n\t\n\t// This registry keeps track of the React IDs of the components that rendered to\n\t// `null` (in reality a placeholder such as `noscript`)\n\tvar nullComponentIDsRegistry = {};\n\t\n\t/**\n\t * @param {string} id Component's `_rootNodeID`.\n\t * @return {boolean} True if the component is rendered to null.\n\t */\n\tfunction isNullComponentID(id) {\n\t  return !!nullComponentIDsRegistry[id];\n\t}\n\t\n\t/**\n\t * Mark the component as having rendered to null.\n\t * @param {string} id Component's `_rootNodeID`.\n\t */\n\tfunction registerNullComponentID(id) {\n\t  nullComponentIDsRegistry[id] = true;\n\t}\n\t\n\t/**\n\t * Unmark the component as having rendered to null: it renders to something now.\n\t * @param {string} id Component's `_rootNodeID`.\n\t */\n\tfunction deregisterNullComponentID(id) {\n\t  delete nullComponentIDsRegistry[id];\n\t}\n\t\n\tvar ReactEmptyComponentRegistry = {\n\t  isNullComponentID: isNullComponentID,\n\t  registerNullComponentID: registerNullComponentID,\n\t  deregisterNullComponentID: deregisterNullComponentID\n\t};\n\t\n\tmodule.exports = ReactEmptyComponentRegistry;\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactErrorUtils\n\t * @typechecks\n\t */\n\t\n\t'use strict';\n\t\n\tvar caughtError = null;\n\t\n\t/**\n\t * Call a function while guarding against errors that happens within it.\n\t *\n\t * @param {?String} name of the guard to use for logging or debugging\n\t * @param {Function} func The function to invoke\n\t * @param {*} a First argument\n\t * @param {*} b Second argument\n\t */\n\tfunction invokeGuardedCallback(name, func, a, b) {\n\t  try {\n\t    return func(a, b);\n\t  } catch (x) {\n\t    if (caughtError === null) {\n\t      caughtError = x;\n\t    }\n\t    return undefined;\n\t  }\n\t}\n\t\n\tvar ReactErrorUtils = {\n\t  invokeGuardedCallback: invokeGuardedCallback,\n\t\n\t  /**\n\t   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event\n\t   * handler are sure to be rethrown by rethrowCaughtError.\n\t   */\n\t  invokeGuardedCallbackWithCatch: invokeGuardedCallback,\n\t\n\t  /**\n\t   * During execution of guarded functions we will capture the first error which\n\t   * we will rethrow to be handled by the top level error handler.\n\t   */\n\t  rethrowCaughtError: function () {\n\t    if (caughtError) {\n\t      var error = caughtError;\n\t      caughtError = null;\n\t      throw error;\n\t    }\n\t  }\n\t};\n\t\n\tif (false) {\n\t  /**\n\t   * To help development we can get better devtools integration by simulating a\n\t   * real browser event.\n\t   */\n\t  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {\n\t    var fakeNode = document.createElement('react');\n\t    ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {\n\t      var boundFunc = func.bind(null, a, b);\n\t      var evtType = 'react-' + name;\n\t      fakeNode.addEventListener(evtType, boundFunc, false);\n\t      var evt = document.createEvent('Event');\n\t      evt.initEvent(evtType, false, false);\n\t      fakeNode.dispatchEvent(evt);\n\t      fakeNode.removeEventListener(evtType, boundFunc, false);\n\t    };\n\t  }\n\t}\n\t\n\tmodule.exports = ReactErrorUtils;\n\n/***/ },\n/* 73 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactInputSelection\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactDOMSelection = __webpack_require__(119);\n\t\n\tvar containsNode = __webpack_require__(86);\n\tvar focusNode = __webpack_require__(87);\n\tvar getActiveElement = __webpack_require__(88);\n\t\n\tfunction isInDocument(node) {\n\t  return containsNode(document.documentElement, node);\n\t}\n\t\n\t/**\n\t * @ReactInputSelection: React input selection module. Based on Selection.js,\n\t * but modified to be suitable for react and has a couple of bug fixes (doesn't\n\t * assume buttons have range selections allowed).\n\t * Input selection module for React.\n\t */\n\tvar ReactInputSelection = {\n\t\n\t  hasSelectionCapabilities: function (elem) {\n\t    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n\t    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');\n\t  },\n\t\n\t  getSelectionInformation: function () {\n\t    var focusedElem = getActiveElement();\n\t    return {\n\t      focusedElem: focusedElem,\n\t      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null\n\t    };\n\t  },\n\t\n\t  /**\n\t   * @restoreSelection: If any selection information was potentially lost,\n\t   * restore it. This is useful when performing operations that could remove dom\n\t   * nodes and place them back in, resulting in focus being lost.\n\t   */\n\t  restoreSelection: function (priorSelectionInformation) {\n\t    var curFocusedElem = getActiveElement();\n\t    var priorFocusedElem = priorSelectionInformation.focusedElem;\n\t    var priorSelectionRange = priorSelectionInformation.selectionRange;\n\t    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {\n\t      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {\n\t        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);\n\t      }\n\t      focusNode(priorFocusedElem);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @getSelection: Gets the selection bounds of a focused textarea, input or\n\t   * contentEditable node.\n\t   * -@input: Look up selection bounds of this input\n\t   * -@return {start: selectionStart, end: selectionEnd}\n\t   */\n\t  getSelection: function (input) {\n\t    var selection;\n\t\n\t    if ('selectionStart' in input) {\n\t      // Modern browser with input or textarea.\n\t      selection = {\n\t        start: input.selectionStart,\n\t        end: input.selectionEnd\n\t      };\n\t    } else if (document.selection && (input.nodeName && input.nodeName.toLowerCase() === 'input')) {\n\t      // IE8 input.\n\t      var range = document.selection.createRange();\n\t      // There can only be one selection per document in IE, so it must\n\t      // be in our element.\n\t      if (range.parentElement() === input) {\n\t        selection = {\n\t          start: -range.moveStart('character', -input.value.length),\n\t          end: -range.moveEnd('character', -input.value.length)\n\t        };\n\t      }\n\t    } else {\n\t      // Content editable or old IE textarea.\n\t      selection = ReactDOMSelection.getOffsets(input);\n\t    }\n\t\n\t    return selection || { start: 0, end: 0 };\n\t  },\n\t\n\t  /**\n\t   * @setSelection: Sets the selection bounds of a textarea or input and focuses\n\t   * the input.\n\t   * -@input     Set selection bounds of this input or textarea\n\t   * -@offsets   Object of same form that is returned from get*\n\t   */\n\t  setSelection: function (input, offsets) {\n\t    var start = offsets.start;\n\t    var end = offsets.end;\n\t    if (typeof end === 'undefined') {\n\t      end = start;\n\t    }\n\t\n\t    if ('selectionStart' in input) {\n\t      input.selectionStart = start;\n\t      input.selectionEnd = Math.min(end, input.value.length);\n\t    } else if (document.selection && (input.nodeName && input.nodeName.toLowerCase() === 'input')) {\n\t      var range = input.createTextRange();\n\t      range.collapse(true);\n\t      range.moveStart('character', start);\n\t      range.moveEnd('character', end - start);\n\t      range.select();\n\t    } else {\n\t      ReactDOMSelection.setOffsets(input, offsets);\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = ReactInputSelection;\n\n/***/ },\n/* 74 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactMarkupChecksum\n\t */\n\t\n\t'use strict';\n\t\n\tvar adler32 = __webpack_require__(145);\n\t\n\tvar TAG_END = /\\/?>/;\n\t\n\tvar ReactMarkupChecksum = {\n\t  CHECKSUM_ATTR_NAME: 'data-react-checksum',\n\t\n\t  /**\n\t   * @param {string} markup Markup string\n\t   * @return {string} Markup string with checksum attribute attached\n\t   */\n\t  addChecksumToMarkup: function (markup) {\n\t    var checksum = adler32(markup);\n\t\n\t    // Add checksum (handle both parent tags and self-closing tags)\n\t    return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '=\"' + checksum + '\"$&');\n\t  },\n\t\n\t  /**\n\t   * @param {string} markup to use\n\t   * @param {DOMElement} element root React element\n\t   * @returns {boolean} whether or not the markup is the same\n\t   */\n\t  canReuseMarkup: function (markup, element) {\n\t    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n\t    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);\n\t    var markupChecksum = adler32(markup);\n\t    return markupChecksum === existingChecksum;\n\t  }\n\t};\n\t\n\tmodule.exports = ReactMarkupChecksum;\n\n/***/ },\n/* 75 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactMultiChildUpdateTypes\n\t */\n\t\n\t'use strict';\n\t\n\tvar keyMirror = __webpack_require__(33);\n\t\n\t/**\n\t * When a component's children are updated, a series of update configuration\n\t * objects are created in order to batch and serialize the required changes.\n\t *\n\t * Enumerates all the possible types of update configurations.\n\t *\n\t * @internal\n\t */\n\tvar ReactMultiChildUpdateTypes = keyMirror({\n\t  INSERT_MARKUP: null,\n\t  MOVE_EXISTING: null,\n\t  REMOVE_NODE: null,\n\t  SET_MARKUP: null,\n\t  TEXT_CONTENT: null\n\t});\n\t\n\tmodule.exports = ReactMultiChildUpdateTypes;\n\n/***/ },\n/* 76 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactNativeComponent\n\t */\n\t\n\t'use strict';\n\t\n\tvar assign = __webpack_require__(2);\n\tvar invariant = __webpack_require__(1);\n\t\n\tvar autoGenerateWrapperClass = null;\n\tvar genericComponentClass = null;\n\t// This registry keeps track of wrapper classes around native tags.\n\tvar tagToComponentClass = {};\n\tvar textComponentClass = null;\n\t\n\tvar ReactNativeComponentInjection = {\n\t  // This accepts a class that receives the tag string. This is a catch all\n\t  // that can render any kind of tag.\n\t  injectGenericComponentClass: function (componentClass) {\n\t    genericComponentClass = componentClass;\n\t  },\n\t  // This accepts a text component class that takes the text string to be\n\t  // rendered as props.\n\t  injectTextComponentClass: function (componentClass) {\n\t    textComponentClass = componentClass;\n\t  },\n\t  // This accepts a keyed object with classes as values. Each key represents a\n\t  // tag. That particular tag will use this class instead of the generic one.\n\t  injectComponentClasses: function (componentClasses) {\n\t    assign(tagToComponentClass, componentClasses);\n\t  }\n\t};\n\t\n\t/**\n\t * Get a composite component wrapper class for a specific tag.\n\t *\n\t * @param {ReactElement} element The tag for which to get the class.\n\t * @return {function} The React class constructor function.\n\t */\n\tfunction getComponentClassForElement(element) {\n\t  if (typeof element.type === 'function') {\n\t    return element.type;\n\t  }\n\t  var tag = element.type;\n\t  var componentClass = tagToComponentClass[tag];\n\t  if (componentClass == null) {\n\t    tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);\n\t  }\n\t  return componentClass;\n\t}\n\t\n\t/**\n\t * Get a native internal component class for a specific tag.\n\t *\n\t * @param {ReactElement} element The element to create.\n\t * @return {function} The internal class constructor function.\n\t */\n\tfunction createInternalComponent(element) {\n\t  !genericComponentClass ?  false ? invariant(false, 'There is no registered component for the tag %s', element.type) : invariant(false) : undefined;\n\t  return new genericComponentClass(element.type, element.props);\n\t}\n\t\n\t/**\n\t * @param {ReactText} text\n\t * @return {ReactComponent}\n\t */\n\tfunction createInstanceForText(text) {\n\t  return new textComponentClass(text);\n\t}\n\t\n\t/**\n\t * @param {ReactComponent} component\n\t * @return {boolean}\n\t */\n\tfunction isTextComponent(component) {\n\t  return component instanceof textComponentClass;\n\t}\n\t\n\tvar ReactNativeComponent = {\n\t  getComponentClassForElement: getComponentClassForElement,\n\t  createInternalComponent: createInternalComponent,\n\t  createInstanceForText: createInstanceForText,\n\t  isTextComponent: isTextComponent,\n\t  injection: ReactNativeComponentInjection\n\t};\n\t\n\tmodule.exports = ReactNativeComponent;\n\n/***/ },\n/* 77 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactNoopUpdateQueue\n\t */\n\t\n\t'use strict';\n\t\n\tvar warning = __webpack_require__(3);\n\t\n\tfunction warnTDZ(publicInstance, callerName) {\n\t  if (false) {\n\t    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor && publicInstance.constructor.displayName || '') : undefined;\n\t  }\n\t}\n\t\n\t/**\n\t * This is the abstract API for an update queue.\n\t */\n\tvar ReactNoopUpdateQueue = {\n\t\n\t  /**\n\t   * Checks whether or not this composite component is mounted.\n\t   * @param {ReactClass} publicInstance The instance we want to test.\n\t   * @return {boolean} True if mounted, false otherwise.\n\t   * @protected\n\t   * @final\n\t   */\n\t  isMounted: function (publicInstance) {\n\t    return false;\n\t  },\n\t\n\t  /**\n\t   * Enqueue a callback that will be executed after all the pending updates\n\t   * have processed.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance to use as `this` context.\n\t   * @param {?function} callback Called after state is updated.\n\t   * @internal\n\t   */\n\t  enqueueCallback: function (publicInstance, callback) {},\n\t\n\t  /**\n\t   * Forces an update. This should only be invoked when it is known with\n\t   * certainty that we are **not** in a DOM transaction.\n\t   *\n\t   * You may want to call this when you know that some deeper aspect of the\n\t   * component's state has changed but `setState` was not called.\n\t   *\n\t   * This will not invoke `shouldComponentUpdate`, but it will invoke\n\t   * `componentWillUpdate` and `componentDidUpdate`.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @internal\n\t   */\n\t  enqueueForceUpdate: function (publicInstance) {\n\t    warnTDZ(publicInstance, 'forceUpdate');\n\t  },\n\t\n\t  /**\n\t   * Replaces all of the state. Always use this or `setState` to mutate state.\n\t   * You should treat `this.state` as immutable.\n\t   *\n\t   * There is no guarantee that `this.state` will be immediately updated, so\n\t   * accessing `this.state` after calling this method may return the old value.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @param {object} completeState Next state.\n\t   * @internal\n\t   */\n\t  enqueueReplaceState: function (publicInstance, completeState) {\n\t    warnTDZ(publicInstance, 'replaceState');\n\t  },\n\t\n\t  /**\n\t   * Sets a subset of the state. This only exists because _pendingState is\n\t   * internal. This provides a merging strategy that is not available to deep\n\t   * properties which is confusing. TODO: Expose pendingState or don't use it\n\t   * during the merge.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @param {object} partialState Next partial state to be merged with state.\n\t   * @internal\n\t   */\n\t  enqueueSetState: function (publicInstance, partialState) {\n\t    warnTDZ(publicInstance, 'setState');\n\t  },\n\t\n\t  /**\n\t   * Sets a subset of the props.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @param {object} partialProps Subset of the next props.\n\t   * @internal\n\t   */\n\t  enqueueSetProps: function (publicInstance, partialProps) {\n\t    warnTDZ(publicInstance, 'setProps');\n\t  },\n\t\n\t  /**\n\t   * Replaces all of the props.\n\t   *\n\t   * @param {ReactClass} publicInstance The instance that should rerender.\n\t   * @param {object} props New props.\n\t   * @internal\n\t   */\n\t  enqueueReplaceProps: function (publicInstance, props) {\n\t    warnTDZ(publicInstance, 'replaceProps');\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactNoopUpdateQueue;\n\n/***/ },\n/* 78 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactPropTypes\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactElement = __webpack_require__(6);\n\tvar ReactPropTypeLocationNames = __webpack_require__(26);\n\t\n\tvar emptyFunction = __webpack_require__(9);\n\tvar getIteratorFn = __webpack_require__(47);\n\t\n\t/**\n\t * Collection of methods that allow declaration and validation of props that are\n\t * supplied to React components. Example usage:\n\t *\n\t *   var Props = require('ReactPropTypes');\n\t *   var MyArticle = React.createClass({\n\t *     propTypes: {\n\t *       // An optional string prop named \"description\".\n\t *       description: Props.string,\n\t *\n\t *       // A required enum prop named \"category\".\n\t *       category: Props.oneOf(['News','Photos']).isRequired,\n\t *\n\t *       // A prop named \"dialog\" that requires an instance of Dialog.\n\t *       dialog: Props.instanceOf(Dialog).isRequired\n\t *     },\n\t *     render: function() { ... }\n\t *   });\n\t *\n\t * A more formal specification of how these methods are used:\n\t *\n\t *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n\t *   decl := ReactPropTypes.{type}(.isRequired)?\n\t *\n\t * Each and every declaration produces a function with the same signature. This\n\t * allows the creation of custom validation functions. For example:\n\t *\n\t *  var MyLink = React.createClass({\n\t *    propTypes: {\n\t *      // An optional string or URI prop named \"href\".\n\t *      href: function(props, propName, componentName) {\n\t *        var propValue = props[propName];\n\t *        if (propValue != null && typeof propValue !== 'string' &&\n\t *            !(propValue instanceof URI)) {\n\t *          return new Error(\n\t *            'Expected a string or an URI for ' + propName + ' in ' +\n\t *            componentName\n\t *          );\n\t *        }\n\t *      }\n\t *    },\n\t *    render: function() {...}\n\t *  });\n\t *\n\t * @internal\n\t */\n\t\n\tvar ANONYMOUS = '<<anonymous>>';\n\t\n\tvar ReactPropTypes = {\n\t  array: createPrimitiveTypeChecker('array'),\n\t  bool: createPrimitiveTypeChecker('boolean'),\n\t  func: createPrimitiveTypeChecker('function'),\n\t  number: createPrimitiveTypeChecker('number'),\n\t  object: createPrimitiveTypeChecker('object'),\n\t  string: createPrimitiveTypeChecker('string'),\n\t\n\t  any: createAnyTypeChecker(),\n\t  arrayOf: createArrayOfTypeChecker,\n\t  element: createElementTypeChecker(),\n\t  instanceOf: createInstanceTypeChecker,\n\t  node: createNodeChecker(),\n\t  objectOf: createObjectOfTypeChecker,\n\t  oneOf: createEnumTypeChecker,\n\t  oneOfType: createUnionTypeChecker,\n\t  shape: createShapeTypeChecker\n\t};\n\t\n\tfunction createChainableTypeChecker(validate) {\n\t  function checkType(isRequired, props, propName, componentName, location, propFullName) {\n\t    componentName = componentName || ANONYMOUS;\n\t    propFullName = propFullName || propName;\n\t    if (props[propName] == null) {\n\t      var locationName = ReactPropTypeLocationNames[location];\n\t      if (isRequired) {\n\t        return new Error('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));\n\t      }\n\t      return null;\n\t    } else {\n\t      return validate(props, propName, componentName, location, propFullName);\n\t    }\n\t  }\n\t\n\t  var chainedCheckType = checkType.bind(null, false);\n\t  chainedCheckType.isRequired = checkType.bind(null, true);\n\t\n\t  return chainedCheckType;\n\t}\n\t\n\tfunction createPrimitiveTypeChecker(expectedType) {\n\t  function validate(props, propName, componentName, location, propFullName) {\n\t    var propValue = props[propName];\n\t    var propType = getPropType(propValue);\n\t    if (propType !== expectedType) {\n\t      var locationName = ReactPropTypeLocationNames[location];\n\t      // `propValue` being instance of, say, date/regexp, pass the 'object'\n\t      // check, but we can offer a more precise error message here rather than\n\t      // 'of type `object`'.\n\t      var preciseType = getPreciseType(propValue);\n\t\n\t      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n\t    }\n\t    return null;\n\t  }\n\t  return createChainableTypeChecker(validate);\n\t}\n\t\n\tfunction createAnyTypeChecker() {\n\t  return createChainableTypeChecker(emptyFunction.thatReturns(null));\n\t}\n\t\n\tfunction createArrayOfTypeChecker(typeChecker) {\n\t  function validate(props, propName, componentName, location, propFullName) {\n\t    var propValue = props[propName];\n\t    if (!Array.isArray(propValue)) {\n\t      var locationName = ReactPropTypeLocationNames[location];\n\t      var propType = getPropType(propValue);\n\t      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n\t    }\n\t    for (var i = 0; i < propValue.length; i++) {\n\t      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']');\n\t      if (error instanceof Error) {\n\t        return error;\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t  return createChainableTypeChecker(validate);\n\t}\n\t\n\tfunction createElementTypeChecker() {\n\t  function validate(props, propName, componentName, location, propFullName) {\n\t    if (!ReactElement.isValidElement(props[propName])) {\n\t      var locationName = ReactPropTypeLocationNames[location];\n\t      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a single ReactElement.'));\n\t    }\n\t    return null;\n\t  }\n\t  return createChainableTypeChecker(validate);\n\t}\n\t\n\tfunction createInstanceTypeChecker(expectedClass) {\n\t  function validate(props, propName, componentName, location, propFullName) {\n\t    if (!(props[propName] instanceof expectedClass)) {\n\t      var locationName = ReactPropTypeLocationNames[location];\n\t      var expectedClassName = expectedClass.name || ANONYMOUS;\n\t      var actualClassName = getClassName(props[propName]);\n\t      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n\t    }\n\t    return null;\n\t  }\n\t  return createChainableTypeChecker(validate);\n\t}\n\t\n\tfunction createEnumTypeChecker(expectedValues) {\n\t  if (!Array.isArray(expectedValues)) {\n\t    return createChainableTypeChecker(function () {\n\t      return new Error('Invalid argument supplied to oneOf, expected an instance of array.');\n\t    });\n\t  }\n\t\n\t  function validate(props, propName, componentName, location, propFullName) {\n\t    var propValue = props[propName];\n\t    for (var i = 0; i < expectedValues.length; i++) {\n\t      if (propValue === expectedValues[i]) {\n\t        return null;\n\t      }\n\t    }\n\t\n\t    var locationName = ReactPropTypeLocationNames[location];\n\t    var valuesString = JSON.stringify(expectedValues);\n\t    return new Error('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n\t  }\n\t  return createChainableTypeChecker(validate);\n\t}\n\t\n\tfunction createObjectOfTypeChecker(typeChecker) {\n\t  function validate(props, propName, componentName, location, propFullName) {\n\t    var propValue = props[propName];\n\t    var propType = getPropType(propValue);\n\t    if (propType !== 'object') {\n\t      var locationName = ReactPropTypeLocationNames[location];\n\t      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n\t    }\n\t    for (var key in propValue) {\n\t      if (propValue.hasOwnProperty(key)) {\n\t        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key);\n\t        if (error instanceof Error) {\n\t          return error;\n\t        }\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t  return createChainableTypeChecker(validate);\n\t}\n\t\n\tfunction createUnionTypeChecker(arrayOfTypeCheckers) {\n\t  if (!Array.isArray(arrayOfTypeCheckers)) {\n\t    return createChainableTypeChecker(function () {\n\t      return new Error('Invalid argument supplied to oneOfType, expected an instance of array.');\n\t    });\n\t  }\n\t\n\t  function validate(props, propName, componentName, location, propFullName) {\n\t    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n\t      var checker = arrayOfTypeCheckers[i];\n\t      if (checker(props, propName, componentName, location, propFullName) == null) {\n\t        return null;\n\t      }\n\t    }\n\t\n\t    var locationName = ReactPropTypeLocationNames[location];\n\t    return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n\t  }\n\t  return createChainableTypeChecker(validate);\n\t}\n\t\n\tfunction createNodeChecker() {\n\t  function validate(props, propName, componentName, location, propFullName) {\n\t    if (!isNode(props[propName])) {\n\t      var locationName = ReactPropTypeLocationNames[location];\n\t      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n\t    }\n\t    return null;\n\t  }\n\t  return createChainableTypeChecker(validate);\n\t}\n\t\n\tfunction createShapeTypeChecker(shapeTypes) {\n\t  function validate(props, propName, componentName, location, propFullName) {\n\t    var propValue = props[propName];\n\t    var propType = getPropType(propValue);\n\t    if (propType !== 'object') {\n\t      var locationName = ReactPropTypeLocationNames[location];\n\t      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n\t    }\n\t    for (var key in shapeTypes) {\n\t      var checker = shapeTypes[key];\n\t      if (!checker) {\n\t        continue;\n\t      }\n\t      var error = checker(propValue, key, componentName, location, propFullName + '.' + key);\n\t      if (error) {\n\t        return error;\n\t      }\n\t    }\n\t    return null;\n\t  }\n\t  return createChainableTypeChecker(validate);\n\t}\n\t\n\tfunction isNode(propValue) {\n\t  switch (typeof propValue) {\n\t    case 'number':\n\t    case 'string':\n\t    case 'undefined':\n\t      return true;\n\t    case 'boolean':\n\t      return !propValue;\n\t    case 'object':\n\t      if (Array.isArray(propValue)) {\n\t        return propValue.every(isNode);\n\t      }\n\t      if (propValue === null || ReactElement.isValidElement(propValue)) {\n\t        return true;\n\t      }\n\t\n\t      var iteratorFn = getIteratorFn(propValue);\n\t      if (iteratorFn) {\n\t        var iterator = iteratorFn.call(propValue);\n\t        var step;\n\t        if (iteratorFn !== propValue.entries) {\n\t          while (!(step = iterator.next()).done) {\n\t            if (!isNode(step.value)) {\n\t              return false;\n\t            }\n\t          }\n\t        } else {\n\t          // Iterator will provide entry [k,v] tuples rather than values.\n\t          while (!(step = iterator.next()).done) {\n\t            var entry = step.value;\n\t            if (entry) {\n\t              if (!isNode(entry[1])) {\n\t                return false;\n\t              }\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        return false;\n\t      }\n\t\n\t      return true;\n\t    default:\n\t      return false;\n\t  }\n\t}\n\t\n\t// Equivalent of `typeof` but with special handling for array and regexp.\n\tfunction getPropType(propValue) {\n\t  var propType = typeof propValue;\n\t  if (Array.isArray(propValue)) {\n\t    return 'array';\n\t  }\n\t  if (propValue instanceof RegExp) {\n\t    // Old webkits (at least until Android 4.0) return 'function' rather than\n\t    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n\t    // passes PropTypes.object.\n\t    return 'object';\n\t  }\n\t  return propType;\n\t}\n\t\n\t// This handles more types than `getPropType`. Only used for error messages.\n\t// See `createPrimitiveTypeChecker`.\n\tfunction getPreciseType(propValue) {\n\t  var propType = getPropType(propValue);\n\t  if (propType === 'object') {\n\t    if (propValue instanceof Date) {\n\t      return 'date';\n\t    } else if (propValue instanceof RegExp) {\n\t      return 'regexp';\n\t    }\n\t  }\n\t  return propType;\n\t}\n\t\n\t// Returns class name of the object, if any.\n\tfunction getClassName(propValue) {\n\t  if (!propValue.constructor || !propValue.constructor.name) {\n\t    return '<<anonymous>>';\n\t  }\n\t  return propValue.constructor.name;\n\t}\n\t\n\tmodule.exports = ReactPropTypes;\n\n/***/ },\n/* 79 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactRootIndex\n\t * @typechecks\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactRootIndexInjection = {\n\t  /**\n\t   * @param {function} _createReactRootIndex\n\t   */\n\t  injectCreateReactRootIndex: function (_createReactRootIndex) {\n\t    ReactRootIndex.createReactRootIndex = _createReactRootIndex;\n\t  }\n\t};\n\t\n\tvar ReactRootIndex = {\n\t  createReactRootIndex: null,\n\t  injection: ReactRootIndexInjection\n\t};\n\t\n\tmodule.exports = ReactRootIndex;\n\n/***/ },\n/* 80 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ViewportMetrics\n\t */\n\t\n\t'use strict';\n\t\n\tvar ViewportMetrics = {\n\t\n\t  currentScrollLeft: 0,\n\t\n\t  currentScrollTop: 0,\n\t\n\t  refreshScrollValues: function (scrollPosition) {\n\t    ViewportMetrics.currentScrollLeft = scrollPosition.x;\n\t    ViewportMetrics.currentScrollTop = scrollPosition.y;\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ViewportMetrics;\n\n/***/ },\n/* 81 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule accumulateInto\n\t */\n\t\n\t'use strict';\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t *\n\t * Accumulates items that must not be null or undefined into the first one. This\n\t * is used to conserve memory by avoiding array allocations, and thus sacrifices\n\t * API cleanness. Since `current` can be null before being passed in and not\n\t * null after this function, make sure to assign it back to `current`:\n\t *\n\t * `a = accumulateInto(a, b);`\n\t *\n\t * This API should be sparingly used. Try `accumulate` for something cleaner.\n\t *\n\t * @return {*|array<*>} An accumulation of items.\n\t */\n\t\n\tfunction accumulateInto(current, next) {\n\t  !(next != null) ?  false ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : invariant(false) : undefined;\n\t  if (current == null) {\n\t    return next;\n\t  }\n\t\n\t  // Both are not empty. Warning: Never call x.concat(y) when you are not\n\t  // certain that x is an Array (x could be a string with concat method).\n\t  var currentIsArray = Array.isArray(current);\n\t  var nextIsArray = Array.isArray(next);\n\t\n\t  if (currentIsArray && nextIsArray) {\n\t    current.push.apply(current, next);\n\t    return current;\n\t  }\n\t\n\t  if (currentIsArray) {\n\t    current.push(next);\n\t    return current;\n\t  }\n\t\n\t  if (nextIsArray) {\n\t    // A bit too dangerous to mutate `next`.\n\t    return [current].concat(next);\n\t  }\n\t\n\t  return [current, next];\n\t}\n\t\n\tmodule.exports = accumulateInto;\n\n/***/ },\n/* 82 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule forEachAccumulated\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * @param {array} arr an \"accumulation\" of items which is either an Array or\n\t * a single item. Useful when paired with the `accumulate` module. This is a\n\t * simple utility that allows us to reason about a collection of items, but\n\t * handling the case when there is exactly one item (and we do not need to\n\t * allocate an array).\n\t */\n\tvar forEachAccumulated = function (arr, cb, scope) {\n\t  if (Array.isArray(arr)) {\n\t    arr.forEach(cb, scope);\n\t  } else if (arr) {\n\t    cb.call(scope, arr);\n\t  }\n\t};\n\t\n\tmodule.exports = forEachAccumulated;\n\n/***/ },\n/* 83 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule getTextContentAccessor\n\t */\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(4);\n\t\n\tvar contentKey = null;\n\t\n\t/**\n\t * Gets the key used to access text content on a DOM node.\n\t *\n\t * @return {?string} Key used to access text content.\n\t * @internal\n\t */\n\tfunction getTextContentAccessor() {\n\t  if (!contentKey && ExecutionEnvironment.canUseDOM) {\n\t    // Prefer textContent to innerText because many browsers support both but\n\t    // SVG <text> elements don't support innerText even when <div> does.\n\t    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';\n\t  }\n\t  return contentKey;\n\t}\n\t\n\tmodule.exports = getTextContentAccessor;\n\n/***/ },\n/* 84 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule isTextInputElement\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\n\t */\n\tvar supportedInputTypes = {\n\t  'color': true,\n\t  'date': true,\n\t  'datetime': true,\n\t  'datetime-local': true,\n\t  'email': true,\n\t  'month': true,\n\t  'number': true,\n\t  'password': true,\n\t  'range': true,\n\t  'search': true,\n\t  'tel': true,\n\t  'text': true,\n\t  'time': true,\n\t  'url': true,\n\t  'week': true\n\t};\n\t\n\tfunction isTextInputElement(elem) {\n\t  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n\t  return nodeName && (nodeName === 'input' && supportedInputTypes[elem.type] || nodeName === 'textarea');\n\t}\n\t\n\tmodule.exports = isTextInputElement;\n\n/***/ },\n/* 85 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @providesModule EventListener\n\t * @typechecks\n\t */\n\t\n\t'use strict';\n\t\n\tvar emptyFunction = __webpack_require__(9);\n\t\n\t/**\n\t * Upstream version of event listener. Does not take into account specific\n\t * nature of platform.\n\t */\n\tvar EventListener = {\n\t  /**\n\t   * Listen to DOM events during the bubble phase.\n\t   *\n\t   * @param {DOMEventTarget} target DOM element to register listener on.\n\t   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n\t   * @param {function} callback Callback function.\n\t   * @return {object} Object with a `remove` method.\n\t   */\n\t  listen: function (target, eventType, callback) {\n\t    if (target.addEventListener) {\n\t      target.addEventListener(eventType, callback, false);\n\t      return {\n\t        remove: function () {\n\t          target.removeEventListener(eventType, callback, false);\n\t        }\n\t      };\n\t    } else if (target.attachEvent) {\n\t      target.attachEvent('on' + eventType, callback);\n\t      return {\n\t        remove: function () {\n\t          target.detachEvent('on' + eventType, callback);\n\t        }\n\t      };\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Listen to DOM events during the capture phase.\n\t   *\n\t   * @param {DOMEventTarget} target DOM element to register listener on.\n\t   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n\t   * @param {function} callback Callback function.\n\t   * @return {object} Object with a `remove` method.\n\t   */\n\t  capture: function (target, eventType, callback) {\n\t    if (target.addEventListener) {\n\t      target.addEventListener(eventType, callback, true);\n\t      return {\n\t        remove: function () {\n\t          target.removeEventListener(eventType, callback, true);\n\t        }\n\t      };\n\t    } else {\n\t      if (false) {\n\t        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');\n\t      }\n\t      return {\n\t        remove: emptyFunction\n\t      };\n\t    }\n\t  },\n\t\n\t  registerDefault: function () {}\n\t};\n\t\n\tmodule.exports = EventListener;\n\n/***/ },\n/* 86 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule containsNode\n\t * @typechecks\n\t */\n\t\n\t'use strict';\n\t\n\tvar isTextNode = __webpack_require__(162);\n\t\n\t/*eslint-disable no-bitwise */\n\t\n\t/**\n\t * Checks if a given DOM node contains or is another DOM node.\n\t *\n\t * @param {?DOMNode} outerNode Outer DOM node.\n\t * @param {?DOMNode} innerNode Inner DOM node.\n\t * @return {boolean} True if `outerNode` contains or is `innerNode`.\n\t */\n\tfunction containsNode(_x, _x2) {\n\t  var _again = true;\n\t\n\t  _function: while (_again) {\n\t    var outerNode = _x,\n\t        innerNode = _x2;\n\t    _again = false;\n\t\n\t    if (!outerNode || !innerNode) {\n\t      return false;\n\t    } else if (outerNode === innerNode) {\n\t      return true;\n\t    } else if (isTextNode(outerNode)) {\n\t      return false;\n\t    } else if (isTextNode(innerNode)) {\n\t      _x = outerNode;\n\t      _x2 = innerNode.parentNode;\n\t      _again = true;\n\t      continue _function;\n\t    } else if (outerNode.contains) {\n\t      return outerNode.contains(innerNode);\n\t    } else if (outerNode.compareDocumentPosition) {\n\t      return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n\t    } else {\n\t      return false;\n\t    }\n\t  }\n\t}\n\t\n\tmodule.exports = containsNode;\n\n/***/ },\n/* 87 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule focusNode\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * @param {DOMElement} node input/textarea to focus\n\t */\n\tfunction focusNode(node) {\n\t  // IE8 can throw \"Can't move focus to the control because it is invisible,\n\t  // not enabled, or of a type that does not accept the focus.\" for all kinds of\n\t  // reasons that are too expensive and fragile to test.\n\t  try {\n\t    node.focus();\n\t  } catch (e) {}\n\t}\n\t\n\tmodule.exports = focusNode;\n\n/***/ },\n/* 88 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule getActiveElement\n\t * @typechecks\n\t */\n\t\n\t/* eslint-disable fb-www/typeof-undefined */\n\t\n\t/**\n\t * Same as document.activeElement but wraps in a try-catch block. In IE it is\n\t * not safe to call document.activeElement if there is nothing focused.\n\t *\n\t * The activeElement will be null only if the document or document body is not\n\t * yet defined.\n\t */\n\t'use strict';\n\t\n\tfunction getActiveElement() /*?DOMElement*/{\n\t  if (typeof document === 'undefined') {\n\t    return null;\n\t  }\n\t  try {\n\t    return document.activeElement || document.body;\n\t  } catch (e) {\n\t    return document.body;\n\t  }\n\t}\n\t\n\tmodule.exports = getActiveElement;\n\n/***/ },\n/* 89 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule getMarkupWrap\n\t */\n\t\n\t/*eslint-disable fb-www/unsafe-html */\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(4);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Dummy container used to detect which wraps are necessary.\n\t */\n\tvar dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\t\n\t/**\n\t * Some browsers cannot use `innerHTML` to render certain elements standalone,\n\t * so we wrap them, render the wrapped nodes, then extract the desired node.\n\t *\n\t * In IE8, certain elements cannot render alone, so wrap all elements ('*').\n\t */\n\t\n\tvar shouldWrap = {};\n\t\n\tvar selectWrap = [1, '<select multiple=\"true\">', '</select>'];\n\tvar tableWrap = [1, '<table>', '</table>'];\n\tvar trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tvar svgWrap = [1, '<svg xmlns=\"http://www.w3.org/2000/svg\">', '</svg>'];\n\t\n\tvar markupWrap = {\n\t  '*': [1, '?<div>', '</div>'],\n\t\n\t  'area': [1, '<map>', '</map>'],\n\t  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n\t  'legend': [1, '<fieldset>', '</fieldset>'],\n\t  'param': [1, '<object>', '</object>'],\n\t  'tr': [2, '<table><tbody>', '</tbody></table>'],\n\t\n\t  'optgroup': selectWrap,\n\t  'option': selectWrap,\n\t\n\t  'caption': tableWrap,\n\t  'colgroup': tableWrap,\n\t  'tbody': tableWrap,\n\t  'tfoot': tableWrap,\n\t  'thead': tableWrap,\n\t\n\t  'td': trWrap,\n\t  'th': trWrap\n\t};\n\t\n\t// Initialize the SVG elements since we know they'll always need to be wrapped\n\t// consistently. If they are created inside a <div> they will be initialized in\n\t// the wrong namespace (and will not display).\n\tvar svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];\n\tsvgElements.forEach(function (nodeName) {\n\t  markupWrap[nodeName] = svgWrap;\n\t  shouldWrap[nodeName] = true;\n\t});\n\t\n\t/**\n\t * Gets the markup wrap configuration for the supplied `nodeName`.\n\t *\n\t * NOTE: This lazily detects which wraps are necessary for the current browser.\n\t *\n\t * @param {string} nodeName Lowercase `nodeName`.\n\t * @return {?array} Markup wrap configuration, if applicable.\n\t */\n\tfunction getMarkupWrap(nodeName) {\n\t  !!!dummyNode ?  false ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : undefined;\n\t  if (!markupWrap.hasOwnProperty(nodeName)) {\n\t    nodeName = '*';\n\t  }\n\t  if (!shouldWrap.hasOwnProperty(nodeName)) {\n\t    if (nodeName === '*') {\n\t      dummyNode.innerHTML = '<link />';\n\t    } else {\n\t      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';\n\t    }\n\t    shouldWrap[nodeName] = !dummyNode.firstChild;\n\t  }\n\t  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;\n\t}\n\t\n\tmodule.exports = getMarkupWrap;\n\n/***/ },\n/* 90 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule shallowEqual\n\t * @typechecks\n\t * \n\t */\n\t\n\t'use strict';\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\t/**\n\t * Performs equality by iterating through keys on an object and returning false\n\t * when any key has values which are not strictly equal between the arguments.\n\t * Returns true when the values of all keys are strictly equal.\n\t */\n\tfunction shallowEqual(objA, objB) {\n\t  if (objA === objB) {\n\t    return true;\n\t  }\n\t\n\t  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n\t    return false;\n\t  }\n\t\n\t  var keysA = Object.keys(objA);\n\t  var keysB = Object.keys(objB);\n\t\n\t  if (keysA.length !== keysB.length) {\n\t    return false;\n\t  }\n\t\n\t  // Test for A's keys different from B.\n\t  var bHasOwnProperty = hasOwnProperty.bind(objB);\n\t  for (var i = 0; i < keysA.length; i++) {\n\t    if (!bHasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\n\t      return false;\n\t    }\n\t  }\n\t\n\t  return true;\n\t}\n\t\n\tmodule.exports = shallowEqual;\n\n/***/ },\n/* 91 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_91__;\n\n/***/ },\n/* 92 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Link;\n\t\n\tLink = __webpack_require__(56);\n\t\n\tmodule.exports = {\n\t  Link: Link\n\t};\n\n/***/ },\n/* 93 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Dialog,\n\t    GlobalRules,\n\t    Link,\n\t    LinkStyle,\n\t    Link_,\n\t    Radium,\n\t    React,\n\t    a,\n\t    build,\n\t    merge,\n\t    modernElement,\n\t    none,\n\t    props,\n\t    ref,\n\t    test,\n\t    slice = [].slice;\n\t\n\tReact = __webpack_require__(24);\n\t\n\tRadium = __webpack_require__(91);\n\t\n\tref = __webpack_require__(14), merge = ref.merge, none = ref.none, props = ref.props, test = ref.test;\n\t\n\ta = React.DOM.a;\n\t\n\tbuild = function build() {\n\t  var children, comp, props;\n\t  comp = arguments[0], props = arguments[1], children = 3 <= arguments.length ? slice.call(arguments, 2) : [];\n\t  return React.createElement.apply(React, [comp, props].concat(slice.call(children)));\n\t};\n\t\n\tLink_ = React.createFactory(__webpack_require__(56));\n\t\n\tLinkStyle = {\n\t  color: 'red'\n\t};\n\t\n\tLink = Radium(React.createClass({\n\t  displayName: 'LinkThemeMaterialDesign',\n\t  render: function render() {\n\t    return Link_(merge({\n\t      theme: LinkStyle\n\t    }, this.props), this.props.children);\n\t  }\n\t}));\n\t\n\tDialog = __webpack_require__(94);\n\t\n\tmodernElement = {\n\t  display: 'flex',\n\t  position: 'relative',\n\t  flexDirection: 'column',\n\t  flexShrink: 0,\n\t  userSelect: 'none',\n\t  margin: 0,\n\t  padding: 0,\n\t  alignItems: 'stretch'\n\t};\n\t\n\tGlobalRules = {\n\t  body: merge(modernElement, {\n\t    margin: 0,\n\t    padding: 0,\n\t    fontFamily: 'proxima-nova, Helvetica Neue, Helvetica, Arial, sans-serif',\n\t    color: '#464646',\n\t    fontSize: '0.9em'\n\t  }),\n\t  html: merge(modernElement, {\n\t    margin: 0,\n\t    padding: 0,\n\t    background: '#EDEDE5'\n\t  }),\n\t  '*': {\n\t    boxSizing: 'border-box'\n\t  },\n\t  button: modernElement,\n\t  header: modernElement,\n\t  section: modernElement,\n\t  nav: modernElement,\n\t  li: modernElement,\n\t  div: modernElement,\n\t  h1: {\n\t    fontWeight: 600,\n\t    fontSize: '1.30rem',\n\t    marginTop: 0,\n\t    color: '#4D4D4D'\n\t  },\n\t  h3: {\n\t    fontWeight: 500,\n\t    fontSize: '1.0rem',\n\t    marginTop: 0,\n\t    color: '#666666'\n\t  },\n\t  '.no-scroll': {\n\t    overflow: 'hidden'\n\t  }\n\t};\n\t\n\tmodule.exports = {\n\t  Link: Link,\n\t  Dialog: Dialog,\n\t  GlobalRules: GlobalRules\n\t};\n\n/***/ },\n/* 94 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Dialog, Portal, React, bool, div, style;\n\t\n\tReact = __webpack_require__(24);\n\t\n\tbool = React.PropTypes.bool;\n\t\n\t__webpack_require__(14);\n\t\n\tdiv = React.DOM.div;\n\t\n\tPortal = React.createFactory(__webpack_require__(95));\n\t\n\tstyle = {\n\t  position: 'fixed',\n\t  zIndex: 99999,\n\t  top: 0,\n\t  display: 'flex',\n\t  justifyContent: 'center',\n\t  alignItems: 'center',\n\t  width: '100%',\n\t  height: '100%',\n\t  background: 'rgba(0, 0, 0, 0.32)'\n\t};\n\t\n\tDialog = React.createClass({\n\t  displayName: 'Dialog',\n\t\n\t  propTypes: {\n\t    isOpen: bool\n\t  },\n\t  renderLayer: function renderLayer() {\n\t    return div({\n\t      style: style\n\t    }, this.props.children);\n\t  },\n\t  render: function render() {\n\t    var isOpen;\n\t    isOpen = this.props.isOpen;\n\t    if (!isOpen) {\n\t      return null;\n\t    }\n\t    return Portal({\n\t      renderFn: this.renderLayer\n\t    });\n\t  }\n\t});\n\t\n\tmodule.exports = Dialog;\n\n/***/ },\n/* 95 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Portal, React, ReactDOM, any, div, func, isNil, ref;\n\t\n\tReact = __webpack_require__(24);\n\t\n\tfunc = React.PropTypes.func;\n\t\n\tReactDOM = __webpack_require__(98);\n\t\n\tdiv = React.DOM.div;\n\t\n\tref = __webpack_require__(14), any = ref.any, isNil = ref.isNil;\n\t\n\tPortal = React.createClass({\n\t  displayName: 'Portal',\n\t\n\t  propTypes: {\n\t    renderFn: func.isRequired\n\t  },\n\t  componentDidMount: function componentDidMount() {\n\t    return this.renderLayer();\n\t  },\n\t  componentDidUpdate: function componentDidUpdate() {\n\t    return this.renderLayer();\n\t  },\n\t  componentWillUnmount: function componentWillUnmount() {\n\t    return this.unrenderLayer();\n\t  },\n\t  render: function render() {\n\t    return null;\n\t  },\n\t  renderLayer: function renderLayer() {\n\t    var layerElement, renderFn;\n\t    renderFn = this.props.renderFn;\n\t    if (!this.layer) {\n\t      this.layer = document.createElement('div');\n\t      this.layer.style.position = 'initial';\n\t      document.body.appendChild(this.layer);\n\t    }\n\t    layerElement = renderFn();\n\t    if (isNil(layerElement)) {\n\t      return this.layerElement = ReactDOM.unstable_renderSubtreeIntoContainer(this, null, this.layer);\n\t    } else {\n\t      return this.layerElement = ReactDOM.unstable_renderSubtreeIntoContainer(this, layerElement, this.layer);\n\t    }\n\t  },\n\t  unrenderLayer: function unrenderLayer() {\n\t    if (!this.layer) {\n\t      return;\n\t    }\n\t    ReactDOM.unmountComponentAtNode(this.layer);\n\t    document.body.removeChild(this.layer);\n\t    return this.layer = null;\n\t  },\n\t  getLayer: function getLayer() {\n\t    return this.layer;\n\t  }\n\t});\n\t\n\tmodule.exports = Portal;\n\n/***/ },\n/* 96 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar ThemeDefault, ThemeMaterialDesign, a, react, url;\n\t\n\tThemeDefault = __webpack_require__(92);\n\t\n\tThemeMaterialDesign = __webpack_require__(93);\n\t\n\turl = __webpack_require__(55);\n\t\n\treact = __webpack_require__(54);\n\t\n\ta = {\n\t  ThemeDefault: ThemeDefault,\n\t  ThemeMaterialDesign: ThemeMaterialDesign,\n\t  url: url,\n\t  react: react\n\t};\n\t\n\tconsole.log('a', a);\n\t\n\tmodule.exports = a;\n\n/***/ },\n/* 97 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/**\n\t * @license\n\t * lodash 4.3.0 (Custom Build) <https://lodash.com/>\n\t * Build: `lodash -d -o ./foo/lodash.js`\n\t * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t * Available under MIT license <https://lodash.com/license>\n\t */\n\t;(function() {\n\t\n\t  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n\t  var undefined;\n\t\n\t  /** Used as the semantic version number. */\n\t  var VERSION = '4.3.0';\n\t\n\t  /** Used to compose bitmasks for wrapper metadata. */\n\t  var BIND_FLAG = 1,\n\t      BIND_KEY_FLAG = 2,\n\t      CURRY_BOUND_FLAG = 4,\n\t      CURRY_FLAG = 8,\n\t      CURRY_RIGHT_FLAG = 16,\n\t      PARTIAL_FLAG = 32,\n\t      PARTIAL_RIGHT_FLAG = 64,\n\t      ARY_FLAG = 128,\n\t      REARG_FLAG = 256,\n\t      FLIP_FLAG = 512;\n\t\n\t  /** Used to compose bitmasks for comparison styles. */\n\t  var UNORDERED_COMPARE_FLAG = 1,\n\t      PARTIAL_COMPARE_FLAG = 2;\n\t\n\t  /** Used as default options for `_.truncate`. */\n\t  var DEFAULT_TRUNC_LENGTH = 30,\n\t      DEFAULT_TRUNC_OMISSION = '...';\n\t\n\t  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n\t  var HOT_COUNT = 150,\n\t      HOT_SPAN = 16;\n\t\n\t  /** Used as the size to enable large array optimizations. */\n\t  var LARGE_ARRAY_SIZE = 200;\n\t\n\t  /** Used to indicate the type of lazy iteratees. */\n\t  var LAZY_FILTER_FLAG = 1,\n\t      LAZY_MAP_FLAG = 2,\n\t      LAZY_WHILE_FLAG = 3;\n\t\n\t  /** Used as the `TypeError` message for \"Functions\" methods. */\n\t  var FUNC_ERROR_TEXT = 'Expected a function';\n\t\n\t  /** Used to stand-in for `undefined` hash values. */\n\t  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\t\n\t  /** Used as references for various `Number` constants. */\n\t  var INFINITY = 1 / 0,\n\t      MAX_SAFE_INTEGER = 9007199254740991,\n\t      MAX_INTEGER = 1.7976931348623157e+308,\n\t      NAN = 0 / 0;\n\t\n\t  /** Used as references for the maximum length and index of an array. */\n\t  var MAX_ARRAY_LENGTH = 4294967295,\n\t      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n\t      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\t\n\t  /** Used as the internal argument placeholder. */\n\t  var PLACEHOLDER = '__lodash_placeholder__';\n\t\n\t  /** `Object#toString` result references. */\n\t  var argsTag = '[object Arguments]',\n\t      arrayTag = '[object Array]',\n\t      boolTag = '[object Boolean]',\n\t      dateTag = '[object Date]',\n\t      errorTag = '[object Error]',\n\t      funcTag = '[object Function]',\n\t      genTag = '[object GeneratorFunction]',\n\t      mapTag = '[object Map]',\n\t      numberTag = '[object Number]',\n\t      objectTag = '[object Object]',\n\t      regexpTag = '[object RegExp]',\n\t      setTag = '[object Set]',\n\t      stringTag = '[object String]',\n\t      symbolTag = '[object Symbol]',\n\t      weakMapTag = '[object WeakMap]',\n\t      weakSetTag = '[object WeakSet]';\n\t\n\t  var arrayBufferTag = '[object ArrayBuffer]',\n\t      float32Tag = '[object Float32Array]',\n\t      float64Tag = '[object Float64Array]',\n\t      int8Tag = '[object Int8Array]',\n\t      int16Tag = '[object Int16Array]',\n\t      int32Tag = '[object Int32Array]',\n\t      uint8Tag = '[object Uint8Array]',\n\t      uint8ClampedTag = '[object Uint8ClampedArray]',\n\t      uint16Tag = '[object Uint16Array]',\n\t      uint32Tag = '[object Uint32Array]';\n\t\n\t  /** Used to match empty string literals in compiled template source. */\n\t  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n\t      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n\t      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\t\n\t  /** Used to match HTML entities and HTML characters. */\n\t  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n\t      reUnescapedHtml = /[&<>\"'`]/g,\n\t      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n\t      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\t\n\t  /** Used to match template delimiters. */\n\t  var reEscape = /<%-([\\s\\S]+?)%>/g,\n\t      reEvaluate = /<%([\\s\\S]+?)%>/g,\n\t      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\t\n\t  /** Used to match property names within property paths. */\n\t  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n\t      reIsPlainProp = /^\\w*$/,\n\t      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]/g;\n\t\n\t  /** Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns). */\n\t  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n\t      reHasRegExpChar = RegExp(reRegExpChar.source);\n\t\n\t  /** Used to match leading and trailing whitespace. */\n\t  var reTrim = /^\\s+|\\s+$/g,\n\t      reTrimStart = /^\\s+/,\n\t      reTrimEnd = /\\s+$/;\n\t\n\t  /** Used to match backslashes in property paths. */\n\t  var reEscapeChar = /\\\\(\\\\)?/g;\n\t\n\t  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n\t  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\t\n\t  /** Used to match `RegExp` flags from their coerced string values. */\n\t  var reFlags = /\\w*$/;\n\t\n\t  /** Used to detect hexadecimal string values. */\n\t  var reHasHexPrefix = /^0x/i;\n\t\n\t  /** Used to detect bad signed hexadecimal string values. */\n\t  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\t\n\t  /** Used to detect binary string values. */\n\t  var reIsBinary = /^0b[01]+$/i;\n\t\n\t  /** Used to detect host constructors (Safari > 5). */\n\t  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\t\n\t  /** Used to detect octal string values. */\n\t  var reIsOctal = /^0o[0-7]+$/i;\n\t\n\t  /** Used to detect unsigned integer values. */\n\t  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\t\n\t  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n\t  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\t\n\t  /** Used to ensure capturing order of template delimiters. */\n\t  var reNoMatch = /($^)/;\n\t\n\t  /** Used to match unescaped characters in compiled string literals. */\n\t  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\t\n\t  /** Used to compose unicode character classes. */\n\t  var rsAstralRange = '\\\\ud800-\\\\udfff',\n\t      rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n\t      rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n\t      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n\t      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n\t      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n\t      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n\t      rsQuoteRange = '\\\\u2018\\\\u2019\\\\u201c\\\\u201d',\n\t      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n\t      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n\t      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n\t      rsBreakRange = rsMathOpRange + rsNonCharRange + rsQuoteRange + rsSpaceRange;\n\t\n\t  /** Used to compose unicode capture groups. */\n\t  var rsAstral = '[' + rsAstralRange + ']',\n\t      rsBreak = '[' + rsBreakRange + ']',\n\t      rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n\t      rsDigits = '\\\\d+',\n\t      rsDingbat = '[' + rsDingbatRange + ']',\n\t      rsLower = '[' + rsLowerRange + ']',\n\t      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n\t      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n\t      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n\t      rsNonAstral = '[^' + rsAstralRange + ']',\n\t      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n\t      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n\t      rsUpper = '[' + rsUpperRange + ']',\n\t      rsZWJ = '\\\\u200d';\n\t\n\t  /** Used to compose unicode regexes. */\n\t  var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n\t      rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n\t      reOptMod = rsModifier + '?',\n\t      rsOptVar = '[' + rsVarRange + ']?',\n\t      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n\t      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n\t      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n\t      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\t\n\t  /**\n\t   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n\t   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n\t   */\n\t  var reComboMark = RegExp(rsCombo, 'g');\n\t\n\t  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n\t  var reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\t\n\t  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n\t  var reHasComplexSymbol = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\t\n\t  /** Used to match non-compound words composed of alphanumeric characters. */\n\t  var reBasicWord = /[a-zA-Z0-9]+/g;\n\t\n\t  /** Used to match complex or compound words. */\n\t  var reComplexWord = RegExp([\n\t    rsUpper + '?' + rsLower + '+(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n\t    rsUpperMisc + '+(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n\t    rsUpper + '?' + rsLowerMisc + '+',\n\t    rsUpper + '+',\n\t    rsDigits,\n\t    rsEmoji\n\t  ].join('|'), 'g');\n\t\n\t  /** Used to detect strings that need a more robust regexp to match words. */\n\t  var reHasComplexWord = /[a-z][A-Z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\t\n\t  /** Used to assign default `context` object properties. */\n\t  var contextProps = [\n\t    'Array', 'Buffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n\t    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n\t    'Reflect', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n\t    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap', '_',\n\t    'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n\t  ];\n\t\n\t  /** Used to make template sourceURLs easier to identify. */\n\t  var templateCounter = -1;\n\t\n\t  /** Used to identify `toStringTag` values of typed arrays. */\n\t  var typedArrayTags = {};\n\t  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n\t  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n\t  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n\t  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n\t  typedArrayTags[uint32Tag] = true;\n\t  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n\t  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n\t  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n\t  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n\t  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n\t  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n\t  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\t\n\t  /** Used to identify `toStringTag` values supported by `_.clone`. */\n\t  var cloneableTags = {};\n\t  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n\t  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n\t  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n\t  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n\t  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n\t  cloneableTags[mapTag] = cloneableTags[numberTag] =\n\t  cloneableTags[objectTag] = cloneableTags[regexpTag] =\n\t  cloneableTags[setTag] = cloneableTags[stringTag] =\n\t  cloneableTags[symbolTag] = cloneableTags[uint8Tag] =\n\t  cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] =\n\t  cloneableTags[uint32Tag] = true;\n\t  cloneableTags[errorTag] = cloneableTags[funcTag] =\n\t  cloneableTags[weakMapTag] = false;\n\t\n\t  /** Used to map latin-1 supplementary letters to basic latin letters. */\n\t  var deburredLetters = {\n\t    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n\t    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n\t    '\\xc7': 'C',  '\\xe7': 'c',\n\t    '\\xd0': 'D',  '\\xf0': 'd',\n\t    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n\t    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n\t    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n\t    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n\t    '\\xd1': 'N',  '\\xf1': 'n',\n\t    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n\t    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n\t    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n\t    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n\t    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n\t    '\\xc6': 'Ae', '\\xe6': 'ae',\n\t    '\\xde': 'Th', '\\xfe': 'th',\n\t    '\\xdf': 'ss'\n\t  };\n\t\n\t  /** Used to map characters to HTML entities. */\n\t  var htmlEscapes = {\n\t    '&': '&amp;',\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    \"'\": '&#39;',\n\t    '`': '&#96;'\n\t  };\n\t\n\t  /** Used to map HTML entities to characters. */\n\t  var htmlUnescapes = {\n\t    '&amp;': '&',\n\t    '&lt;': '<',\n\t    '&gt;': '>',\n\t    '&quot;': '\"',\n\t    '&#39;': \"'\",\n\t    '&#96;': '`'\n\t  };\n\t\n\t  /** Used to determine if values are of the language type `Object`. */\n\t  var objectTypes = {\n\t    'function': true,\n\t    'object': true\n\t  };\n\t\n\t  /** Used to escape characters for inclusion in compiled string literals. */\n\t  var stringEscapes = {\n\t    '\\\\': '\\\\',\n\t    \"'\": \"'\",\n\t    '\\n': 'n',\n\t    '\\r': 'r',\n\t    '\\u2028': 'u2028',\n\t    '\\u2029': 'u2029'\n\t  };\n\t\n\t  /** Built-in method references without a dependency on `root`. */\n\t  var freeParseFloat = parseFloat,\n\t      freeParseInt = parseInt;\n\t\n\t  /** Detect free variable `exports`. */\n\t  var freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType) ? exports : null;\n\t\n\t  /** Detect free variable `module`. */\n\t  var freeModule = (objectTypes[typeof module] && module && !module.nodeType) ? module : null;\n\t\n\t  /** Detect free variable `global` from Node.js. */\n\t  var freeGlobal = checkGlobal(freeExports && freeModule && typeof global == 'object' && global);\n\t\n\t  /** Detect free variable `self`. */\n\t  var freeSelf = checkGlobal(objectTypes[typeof self] && self);\n\t\n\t  /** Detect free variable `window`. */\n\t  var freeWindow = checkGlobal(objectTypes[typeof window] && window);\n\t\n\t  /** Detect the popular CommonJS extension `module.exports`. */\n\t  var moduleExports = (freeModule && freeModule.exports === freeExports) ? freeExports : null;\n\t\n\t  /** Detect `this` as the global object. */\n\t  var thisGlobal = checkGlobal(objectTypes[typeof this] && this);\n\t\n\t  /**\n\t   * Used as a reference to the global object.\n\t   *\n\t   * The `this` value is used if it's the global object to avoid Greasemonkey's\n\t   * restricted `window` object, otherwise the `window` object is used.\n\t   */\n\t  var root = freeGlobal || ((freeWindow !== (thisGlobal && thisGlobal.window)) && freeWindow) || freeSelf || thisGlobal || Function('return this')();\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Adds the key-value `pair` to `map`.\n\t   *\n\t   * @private\n\t   * @param {Object} map The map to modify.\n\t   * @param {Array} pair The key-value pair to add.\n\t   * @returns {Object} Returns `map`.\n\t   */\n\t  function addMapEntry(map, pair) {\n\t    map.set(pair[0], pair[1]);\n\t    return map;\n\t  }\n\t\n\t  /**\n\t   * Adds `value` to `set`.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to modify.\n\t   * @param {*} value The value to add.\n\t   * @returns {Object} Returns `set`.\n\t   */\n\t  function addSetEntry(set, value) {\n\t    set.add(value);\n\t    return set;\n\t  }\n\t\n\t  /**\n\t   * A faster alternative to `Function#apply`, this function invokes `func`\n\t   * with the `this` binding of `thisArg` and the arguments of `args`.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to invoke.\n\t   * @param {*} thisArg The `this` binding of `func`.\n\t   * @param {...*} args The arguments to invoke `func` with.\n\t   * @returns {*} Returns the result of `func`.\n\t   */\n\t  function apply(func, thisArg, args) {\n\t    var length = args.length;\n\t    switch (length) {\n\t      case 0: return func.call(thisArg);\n\t      case 1: return func.call(thisArg, args[0]);\n\t      case 2: return func.call(thisArg, args[0], args[1]);\n\t      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n\t    }\n\t    return func.apply(thisArg, args);\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `baseAggregator` for arrays.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} setter The function to set `accumulator` values.\n\t   * @param {Function} iteratee The iteratee to transform keys.\n\t   * @param {Object} accumulator The initial aggregated object.\n\t   * @returns {Function} Returns `accumulator`.\n\t   */\n\t  function arrayAggregator(array, setter, iteratee, accumulator) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      setter(accumulator, value, iteratee(value), array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * Creates a new array concatenating `array` with `other`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The first array to concatenate.\n\t   * @param {Array} other The second array to concatenate.\n\t   * @returns {Array} Returns the new concatenated array.\n\t   */\n\t  function arrayConcat(array, other) {\n\t    var index = -1,\n\t        length = array.length,\n\t        othIndex = -1,\n\t        othLength = other.length,\n\t        result = Array(length + othLength);\n\t\n\t    while (++index < length) {\n\t      result[index] = array[index];\n\t    }\n\t    while (++othIndex < othLength) {\n\t      result[index++] = other[othIndex];\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.forEach` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayEach(array, iteratee) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (iteratee(array[index], index, array) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.forEachRight` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayEachRight(array, iteratee) {\n\t    var length = array.length;\n\t\n\t    while (length--) {\n\t      if (iteratee(array[length], length, array) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.every` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {boolean} Returns `true` if all elements pass the predicate check, else `false`.\n\t   */\n\t  function arrayEvery(array, predicate) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (!predicate(array[index], index, array)) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.filter` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {Array} Returns the new filtered array.\n\t   */\n\t  function arrayFilter(array, predicate) {\n\t    var index = -1,\n\t        length = array.length,\n\t        resIndex = -1,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      if (predicate(value, index, array)) {\n\t        result[++resIndex] = value;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.includes` for arrays without support for\n\t   * specifying an index to search from.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} target The value to search for.\n\t   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n\t   */\n\t  function arrayIncludes(array, value) {\n\t    return !!array.length && baseIndexOf(array, value, 0) > -1;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.includesWith` for arrays without support for\n\t   * specifying an index to search from.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} target The value to search for.\n\t   * @param {Function} comparator The comparator invoked per element.\n\t   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n\t   */\n\t  function arrayIncludesWith(array, value, comparator) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (comparator(value, array[index])) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.map` for arrays without support for iteratee\n\t   * shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns the new mapped array.\n\t   */\n\t  function arrayMap(array, iteratee) {\n\t    var index = -1,\n\t        length = array.length,\n\t        result = Array(length);\n\t\n\t    while (++index < length) {\n\t      result[index] = iteratee(array[index], index, array);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Appends the elements of `values` to `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {Array} values The values to append.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayPush(array, values) {\n\t    var index = -1,\n\t        length = values.length,\n\t        offset = array.length;\n\t\n\t    while (++index < length) {\n\t      array[offset + index] = values[index];\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.reduce` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} [accumulator] The initial value.\n\t   * @param {boolean} [initAccum] Specify using the first element of `array` as the initial value.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function arrayReduce(array, iteratee, accumulator, initAccum) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    if (initAccum && length) {\n\t      accumulator = array[++index];\n\t    }\n\t    while (++index < length) {\n\t      accumulator = iteratee(accumulator, array[index], index, array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.reduceRight` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} [accumulator] The initial value.\n\t   * @param {boolean} [initAccum] Specify using the last element of `array` as the initial value.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n\t    var length = array.length;\n\t    if (initAccum && length) {\n\t      accumulator = array[--length];\n\t    }\n\t    while (length--) {\n\t      accumulator = iteratee(accumulator, array[length], length, array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.some` for arrays without support for iteratee\n\t   * shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.\n\t   */\n\t  function arraySome(array, predicate) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (predicate(array[index], index, array)) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of methods like `_.max` and `_.min` which accepts a\n\t   * `comparator` to determine the extremum value.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The iteratee invoked per iteration.\n\t   * @param {Function} comparator The comparator used to compare values.\n\t   * @returns {*} Returns the extremum value.\n\t   */\n\t  function baseExtremum(array, iteratee, comparator) {\n\t    var index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      var value = array[index],\n\t          current = iteratee(value);\n\t\n\t      if (current != null && (computed === undefined\n\t            ? current === current\n\t            : comparator(current, computed)\n\t          )) {\n\t        var computed = current,\n\t            result = value;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of methods like `_.find` and `_.findKey`, without\n\t   * support for iteratee shorthands, which iterates over `collection` using\n\t   * `eachFunc`.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} collection The collection to search.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {Function} eachFunc The function to iterate over `collection`.\n\t   * @param {boolean} [retKey] Specify returning the key of the found element instead of the element itself.\n\t   * @returns {*} Returns the found element or its key, else `undefined`.\n\t   */\n\t  function baseFind(collection, predicate, eachFunc, retKey) {\n\t    var result;\n\t    eachFunc(collection, function(value, key, collection) {\n\t      if (predicate(value, key, collection)) {\n\t        result = retKey ? key : value;\n\t        return false;\n\t      }\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n\t   * support for iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseFindIndex(array, predicate, fromRight) {\n\t    var length = array.length,\n\t        index = fromRight ? length : -1;\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      if (predicate(array[index], index, array)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOf(array, value, fromIndex) {\n\t    if (value !== value) {\n\t      return indexOfNaN(array, fromIndex);\n\t    }\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (array[index] === value) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n\t   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} collection The collection to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} accumulator The initial value.\n\t   * @param {boolean} initAccum Specify using the first or last element of `collection` as the initial value.\n\t   * @param {Function} eachFunc The function to iterate over `collection`.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n\t    eachFunc(collection, function(value, index, collection) {\n\t      accumulator = initAccum\n\t        ? (initAccum = false, value)\n\t        : iteratee(accumulator, value, index, collection);\n\t    });\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.sortBy` which uses `comparer` to define\n\t   * the sort order of `array` and replaces criteria objects with their\n\t   * corresponding values.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to sort.\n\t   * @param {Function} comparer The function to define sort order.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function baseSortBy(array, comparer) {\n\t    var length = array.length;\n\t\n\t    array.sort(comparer);\n\t    while (length--) {\n\t      array[length] = array[length].value;\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.sum` without support for iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {number} Returns the sum.\n\t   */\n\t  function baseSum(array, iteratee) {\n\t    var result,\n\t        index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      var current = iteratee(array[index]);\n\t      if (current !== undefined) {\n\t        result = result === undefined ? current : (result + current);\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.times` without support for iteratee shorthands\n\t   * or max array length checks.\n\t   *\n\t   * @private\n\t   * @param {number} n The number of times to invoke `iteratee`.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns the array of results.\n\t   */\n\t  function baseTimes(n, iteratee) {\n\t    var index = -1,\n\t        result = Array(n);\n\t\n\t    while (++index < n) {\n\t      result[index] = iteratee(index);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n\t   * of key-value pairs for `object` corresponding to the property names of `props`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {Array} props The property names to get values for.\n\t   * @returns {Object} Returns the new array of key-value pairs.\n\t   */\n\t  function baseToPairs(object, props) {\n\t    return arrayMap(props, function(key) {\n\t      return [key, object[key]];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.unary` without support for storing wrapper metadata.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to cap arguments for.\n\t   * @returns {Function} Returns the new function.\n\t   */\n\t  function baseUnary(func) {\n\t    return function(value) {\n\t      return func(value);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.values` and `_.valuesIn` which creates an\n\t   * array of `object` property values corresponding to the property names\n\t   * of `props`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {Array} props The property names to get values for.\n\t   * @returns {Object} Returns the array of property values.\n\t   */\n\t  function baseValues(object, props) {\n\t    return arrayMap(props, function(key) {\n\t      return object[key];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n\t   * that is not found in the character symbols.\n\t   *\n\t   * @private\n\t   * @param {Array} strSymbols The string symbols to inspect.\n\t   * @param {Array} chrSymbols The character symbols to find.\n\t   * @returns {number} Returns the index of the first unmatched string symbol.\n\t   */\n\t  function charsStartIndex(strSymbols, chrSymbols) {\n\t    var index = -1,\n\t        length = strSymbols.length;\n\t\n\t    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n\t   * that is not found in the character symbols.\n\t   *\n\t   * @private\n\t   * @param {Array} strSymbols The string symbols to inspect.\n\t   * @param {Array} chrSymbols The character symbols to find.\n\t   * @returns {number} Returns the index of the last unmatched string symbol.\n\t   */\n\t  function charsEndIndex(strSymbols, chrSymbols) {\n\t    var index = strSymbols.length;\n\t\n\t    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Checks if `value` is a global object.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {null|Object} Returns `value` if it's a global object, else `null`.\n\t   */\n\t  function checkGlobal(value) {\n\t    return (value && value.Object === Object) ? value : null;\n\t  }\n\t\n\t  /**\n\t   * Compares values to sort them in ascending order.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to compare.\n\t   * @param {*} other The other value to compare.\n\t   * @returns {number} Returns the sort order indicator for `value`.\n\t   */\n\t  function compareAscending(value, other) {\n\t    if (value !== other) {\n\t      var valIsNull = value === null,\n\t          valIsUndef = value === undefined,\n\t          valIsReflexive = value === value;\n\t\n\t      var othIsNull = other === null,\n\t          othIsUndef = other === undefined,\n\t          othIsReflexive = other === other;\n\t\n\t      if ((value > other && !othIsNull) || !valIsReflexive ||\n\t          (valIsNull && !othIsUndef && othIsReflexive) ||\n\t          (valIsUndef && othIsReflexive)) {\n\t        return 1;\n\t      }\n\t      if ((value < other && !valIsNull) || !othIsReflexive ||\n\t          (othIsNull && !valIsUndef && valIsReflexive) ||\n\t          (othIsUndef && valIsReflexive)) {\n\t        return -1;\n\t      }\n\t    }\n\t    return 0;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.orderBy` to compare multiple properties of a value to another\n\t   * and stable sort them.\n\t   *\n\t   * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n\t   * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n\t   * of corresponding values.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to compare.\n\t   * @param {Object} other The other object to compare.\n\t   * @param {boolean[]|string[]} orders The order to sort by for each property.\n\t   * @returns {number} Returns the sort order indicator for `object`.\n\t   */\n\t  function compareMultiple(object, other, orders) {\n\t    var index = -1,\n\t        objCriteria = object.criteria,\n\t        othCriteria = other.criteria,\n\t        length = objCriteria.length,\n\t        ordersLength = orders.length;\n\t\n\t    while (++index < length) {\n\t      var result = compareAscending(objCriteria[index], othCriteria[index]);\n\t      if (result) {\n\t        if (index >= ordersLength) {\n\t          return result;\n\t        }\n\t        var order = orders[index];\n\t        return result * (order == 'desc' ? -1 : 1);\n\t      }\n\t    }\n\t    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n\t    // that causes it, under certain circumstances, to provide the same value for\n\t    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n\t    // for more details.\n\t    //\n\t    // This also ensures a stable sort in V8 and other engines.\n\t    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n\t    return object.index - other.index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n\t   *\n\t   * @private\n\t   * @param {string} letter The matched letter to deburr.\n\t   * @returns {string} Returns the deburred letter.\n\t   */\n\t  function deburrLetter(letter) {\n\t    return deburredLetters[letter];\n\t  }\n\t\n\t  /**\n\t   * Used by `_.escape` to convert characters to HTML entities.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeHtmlChar(chr) {\n\t    return htmlEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeStringChar(chr) {\n\t    return '\\\\' + stringEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n\t   */\n\t  function indexOfNaN(array, fromIndex, fromRight) {\n\t    var length = array.length,\n\t        index = fromIndex + (fromRight ? 0 : -1);\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      var other = array[index];\n\t      if (other !== other) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * Checks if `value` is a host object in IE < 9.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n\t   */\n\t  function isHostObject(value) {\n\t    // Many host objects are `Object` objects that can coerce to strings\n\t    // despite having improperly defined `toString` methods.\n\t    var result = false;\n\t    if (value != null && typeof value.toString != 'function') {\n\t      try {\n\t        result = !!(value + '');\n\t      } catch (e) {}\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Checks if `value` is a valid array-like index.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t   */\n\t  function isIndex(value, length) {\n\t    value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n\t    length = length == null ? MAX_SAFE_INTEGER : length;\n\t    return value > -1 && value % 1 == 0 && value < length;\n\t  }\n\t\n\t  /**\n\t   * Converts `iterator` to an array.\n\t   *\n\t   * @private\n\t   * @param {Object} iterator The iterator to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function iteratorToArray(iterator) {\n\t    var data,\n\t        result = [];\n\t\n\t    while (!(data = iterator.next()).done) {\n\t      result.push(data.value);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `map` to an array.\n\t   *\n\t   * @private\n\t   * @param {Object} map The map to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function mapToArray(map) {\n\t    var index = -1,\n\t        result = Array(map.size);\n\t\n\t    map.forEach(function(value, key) {\n\t      result[++index] = [key, value];\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Replaces all `placeholder` elements in `array` with an internal placeholder\n\t   * and returns an array of their indexes.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {*} placeholder The placeholder to replace.\n\t   * @returns {Array} Returns the new array of placeholder indexes.\n\t   */\n\t  function replaceHolders(array, placeholder) {\n\t    var index = -1,\n\t        length = array.length,\n\t        resIndex = -1,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      if (array[index] === placeholder) {\n\t        array[index] = PLACEHOLDER;\n\t        result[++resIndex] = index;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `set` to an array.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function setToArray(set) {\n\t    var index = -1,\n\t        result = Array(set.size);\n\t\n\t    set.forEach(function(value) {\n\t      result[++index] = value;\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Gets the number of symbols in `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the string size.\n\t   */\n\t  function stringSize(string) {\n\t    if (!(string && reHasComplexSymbol.test(string))) {\n\t      return string.length;\n\t    }\n\t    var result = reComplexSymbol.lastIndex = 0;\n\t    while (reComplexSymbol.test(string)) {\n\t      result++;\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `string` to an array.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function stringToArray(string) {\n\t    return string.match(reComplexSymbol);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.unescape` to convert HTML entities to characters.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to unescape.\n\t   * @returns {string} Returns the unescaped character.\n\t   */\n\t  function unescapeHtmlChar(chr) {\n\t    return htmlUnescapes[chr];\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Create a new pristine `lodash` function using the `context` object.\n\t   *\n\t   * @static\n\t   * @memberOf _\n\t   * @category Util\n\t   * @param {Object} [context=root] The context object.\n\t   * @returns {Function} Returns a new `lodash` function.\n\t   * @example\n\t   *\n\t   * _.mixin({ 'foo': _.constant('foo') });\n\t   *\n\t   * var lodash = _.runInContext();\n\t   * lodash.mixin({ 'bar': lodash.constant('bar') });\n\t   *\n\t   * _.isFunction(_.foo);\n\t   * // => true\n\t   * _.isFunction(_.bar);\n\t   * // => false\n\t   *\n\t   * lodash.isFunction(lodash.foo);\n\t   * // => false\n\t   * lodash.isFunction(lodash.bar);\n\t   * // => true\n\t   *\n\t   * // Use `context` to mock `Date#getTime` use in `_.now`.\n\t   * var mock = _.runInContext({\n\t   *   'Date': function() {\n\t   *     return { 'getTime': getTimeMock };\n\t   *   }\n\t   * });\n\t   *\n\t   * // Create a suped-up `defer` in Node.js.\n\t   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n\t   */\n\t  function runInContext(context) {\n\t    context = context ? _.defaults({}, context, _.pick(root, contextProps)) : root;\n\t\n\t    /** Built-in constructor references. */\n\t    var Date = context.Date,\n\t        Error = context.Error,\n\t        Math = context.Math,\n\t        RegExp = context.RegExp,\n\t        TypeError = context.TypeError;\n\t\n\t    /** Used for built-in method references. */\n\t    var arrayProto = context.Array.prototype,\n\t        objectProto = context.Object.prototype;\n\t\n\t    /** Used to resolve the decompiled source of functions. */\n\t    var funcToString = context.Function.prototype.toString;\n\t\n\t    /** Used to check objects for own properties. */\n\t    var hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t    /** Used to generate unique IDs. */\n\t    var idCounter = 0;\n\t\n\t    /** Used to infer the `Object` constructor. */\n\t    var objectCtorString = funcToString.call(Object);\n\t\n\t    /**\n\t     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t     * of values.\n\t     */\n\t    var objectToString = objectProto.toString;\n\t\n\t    /** Used to restore the original `_` reference in `_.noConflict`. */\n\t    var oldDash = root._;\n\t\n\t    /** Used to detect if a method is native. */\n\t    var reIsNative = RegExp('^' +\n\t      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n\t      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t    );\n\t\n\t    /** Built-in value references. */\n\t    var Buffer = moduleExports ? context.Buffer : undefined,\n\t        Reflect = context.Reflect,\n\t        Symbol = context.Symbol,\n\t        Uint8Array = context.Uint8Array,\n\t        clearTimeout = context.clearTimeout,\n\t        enumerate = Reflect ? Reflect.enumerate : undefined,\n\t        getPrototypeOf = Object.getPrototypeOf,\n\t        getOwnPropertySymbols = Object.getOwnPropertySymbols,\n\t        iteratorSymbol = typeof (iteratorSymbol = Symbol && Symbol.iterator) == 'symbol' ? iteratorSymbol : undefined,\n\t        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n\t        setTimeout = context.setTimeout,\n\t        splice = arrayProto.splice;\n\t\n\t    /* Built-in method references for those with the same name as other `lodash` methods. */\n\t    var nativeCeil = Math.ceil,\n\t        nativeFloor = Math.floor,\n\t        nativeIsFinite = context.isFinite,\n\t        nativeJoin = arrayProto.join,\n\t        nativeKeys = Object.keys,\n\t        nativeMax = Math.max,\n\t        nativeMin = Math.min,\n\t        nativeParseInt = context.parseInt,\n\t        nativeRandom = Math.random,\n\t        nativeReverse = arrayProto.reverse;\n\t\n\t    /* Built-in method references that are verified to be native. */\n\t    var Map = getNative(context, 'Map'),\n\t        Set = getNative(context, 'Set'),\n\t        WeakMap = getNative(context, 'WeakMap'),\n\t        nativeCreate = getNative(Object, 'create');\n\t\n\t    /** Used to store function metadata. */\n\t    var metaMap = WeakMap && new WeakMap;\n\t\n\t    /** Used to detect maps, sets, and weakmaps. */\n\t    var mapCtorString = Map ? funcToString.call(Map) : '',\n\t        setCtorString = Set ? funcToString.call(Set) : '',\n\t        weakMapCtorString = WeakMap ? funcToString.call(WeakMap) : '';\n\t\n\t    /** Used to convert symbols to primitives and strings. */\n\t    var symbolProto = Symbol ? Symbol.prototype : undefined,\n\t        symbolValueOf = Symbol ? symbolProto.valueOf : undefined,\n\t        symbolToString = Symbol ? symbolProto.toString : undefined;\n\t\n\t    /** Used to lookup unminified function names. */\n\t    var realNames = {};\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object which wraps `value` to enable implicit method\n\t     * chaining. Methods that operate on and return arrays, collections, and\n\t     * functions can be chained together. Methods that retrieve a single value or\n\t     * may return a primitive value will automatically end the chain sequence and\n\t     * return the unwrapped value. Otherwise, the value must be unwrapped with\n\t     * `_#value`.\n\t     *\n\t     * Explicit chaining, which must be unwrapped with `_#value` in all cases,\n\t     * may be enabled using `_.chain`.\n\t     *\n\t     * The execution of chained methods is lazy, that is, it's deferred until\n\t     * `_#value` is implicitly or explicitly called.\n\t     *\n\t     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n\t     * fusion is an optimization to merge iteratee calls; this avoids the creation\n\t     * of intermediate arrays and can greatly reduce the number of iteratee executions.\n\t     * Sections of a chain sequence qualify for shortcut fusion if the section is\n\t     * applied to an array of at least two hundred elements and any iteratees\n\t     * accept only one argument. The heuristic for whether a section qualifies\n\t     * for shortcut fusion is subject to change.\n\t     *\n\t     * Chaining is supported in custom builds as long as the `_#value` method is\n\t     * directly or indirectly included in the build.\n\t     *\n\t     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n\t     *\n\t     * The wrapper `Array` methods are:\n\t     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n\t     *\n\t     * The wrapper `String` methods are:\n\t     * `replace` and `split`\n\t     *\n\t     * The wrapper methods that support shortcut fusion are:\n\t     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n\t     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n\t     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n\t     *\n\t     * The chainable wrapper methods are:\n\t     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`,\n\t     * `at`, `before`, `bind`, `bindAll`, `bindKey`, `chain`, `chunk`, `commit`,\n\t     * `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`, `curry`,\n\t     * `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`, `difference`,\n\t     * `differenceBy`, `differenceWith`, `drop`, `dropRight`, `dropRightWhile`,\n\t     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flip`, `flow`,\n\t     * `flowRight`, `fromPairs`, `functions`, `functionsIn`, `groupBy`, `initial`,\n\t     * `intersection`, `intersectionBy`, `intersectionWith`, `invert`, `invertBy`,\n\t     * `invokeMap`, `iteratee`, `keyBy`, `keys`, `keysIn`, `map`, `mapKeys`,\n\t     * `mapValues`, `matches`, `matchesProperty`, `memoize`, `merge`, `mergeWith`,\n\t     * `method`, `methodOf`, `mixin`, `negate`, `nthArg`, `omit`, `omitBy`, `once`,\n\t     * `orderBy`, `over`, `overArgs`, `overEvery`, `overSome`, `partial`,\n\t     * `partialRight`, `partition`, `pick`, `pickBy`, `plant`, `property`,\n\t     * `propertyOf`, `pull`, `pullAll`, `pullAllBy`, `pullAt`, `push`, `range`,\n\t     * `rangeRight`, `rearg`, `reject`, `remove`, `rest`, `reverse`, `sampleSize`,\n\t     * `set`, `setWith`, `shuffle`, `slice`, `sort`, `sortBy`, `splice`, `spread`,\n\t     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `tap`, `throttle`,\n\t     * `thru`, `toArray`, `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`,\n\t     * `transform`, `unary`, `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`,\n\t     * `uniqWith`, `unset`, `unshift`, `unzip`, `unzipWith`, `values`, `valuesIn`,\n\t     * `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`, `zipObject`,\n\t     * `zipObjectDeep`, and `zipWith`\n\t     *\n\t     * The wrapper methods that are **not** chainable by default are:\n\t     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n\t     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `deburr`, `endsWith`, `eq`,\n\t     * `escape`, `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`,\n\t     * `findLast`, `findLastIndex`, `findLastKey`, `floor`, `forEach`, `forEachRight`,\n\t     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n\t     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n\t     * `isArguments`, `isArray`, `isArrayLike`, `isArrayLikeObject`, `isBoolean`,\n\t     * `isDate`, `isElement`, `isEmpty`, `isEqual`, `isEqualWith`, `isError`,\n\t     * `isFinite`, `isFunction`, `isInteger`, `isLength`, `isMatch`, `isMatchWith`,\n\t     * `isNaN`, `isNative`, `isNil`, `isNull`, `isNumber`, `isObject`, `isObjectLike`,\n\t     * `isPlainObject`, `isRegExp`, `isSafeInteger`, `isString`, `isUndefined`,\n\t     * `isTypedArray`, `join`, `kebabCase`, `last`, `lastIndexOf`, `lowerCase`,\n\t     * `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `min`, `minBy`,\n\t     * `noConflict`, `noop`, `now`, `pad`, `padEnd`, `padStart`, `parseInt`,\n\t     * `pop`, `random`, `reduce`, `reduceRight`, `repeat`, `result`, `round`,\n\t     * `runInContext`, `sample`, `shift`, `size`, `snakeCase`, `some`, `sortedIndex`,\n\t     * `sortedIndexBy`, `sortedLastIndex`, `sortedLastIndexBy`, `startCase`,\n\t     * `startsWith`, `subtract`, `sum`, `sumBy`, `template`, `times`, `toLower`,\n\t     * `toInteger`, `toLength`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`,\n\t     * `trim`, `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`,\n\t     * `upperCase`, `upperFirst`, `value`, and `words`\n\t     *\n\t     * @name _\n\t     * @constructor\n\t     * @category Seq\n\t     * @param {*} value The value to wrap in a `lodash` instance.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var wrapped = _([1, 2, 3]);\n\t     *\n\t     * // Returns an unwrapped value.\n\t     * wrapped.reduce(_.add);\n\t     * // => 6\n\t     *\n\t     * // Returns a wrapped value.\n\t     * var squares = wrapped.map(square);\n\t     *\n\t     * _.isArray(squares);\n\t     * // => false\n\t     *\n\t     * _.isArray(squares.value());\n\t     * // => true\n\t     */\n\t    function lodash(value) {\n\t      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n\t        if (value instanceof LodashWrapper) {\n\t          return value;\n\t        }\n\t        if (hasOwnProperty.call(value, '__wrapped__')) {\n\t          return wrapperClone(value);\n\t        }\n\t      }\n\t      return new LodashWrapper(value);\n\t    }\n\t\n\t    /**\n\t     * The function whose prototype all chaining wrappers inherit from.\n\t     *\n\t     * @private\n\t     */\n\t    function baseLodash() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * The base constructor for creating `lodash` wrapper objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n\t     */\n\t    function LodashWrapper(value, chainAll) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__chain__ = !!chainAll;\n\t      this.__index__ = 0;\n\t      this.__values__ = undefined;\n\t    }\n\t\n\t    /**\n\t     * By default, the template delimiters used by lodash are like those in\n\t     * embedded Ruby (ERB). Change the following template settings to use\n\t     * alternative delimiters.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Object\n\t     */\n\t    lodash.templateSettings = {\n\t\n\t      /**\n\t       * Used to detect `data` property values to be HTML-escaped.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'escape': reEscape,\n\t\n\t      /**\n\t       * Used to detect code to be evaluated.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'evaluate': reEvaluate,\n\t\n\t      /**\n\t       * Used to detect `data` property values to inject.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'interpolate': reInterpolate,\n\t\n\t      /**\n\t       * Used to reference the data object in the template text.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type string\n\t       */\n\t      'variable': '',\n\t\n\t      /**\n\t       * Used to import variables into the compiled template.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type Object\n\t       */\n\t      'imports': {\n\t\n\t        /**\n\t         * A reference to the `lodash` function.\n\t         *\n\t         * @memberOf _.templateSettings.imports\n\t         * @type Function\n\t         */\n\t        '_': lodash\n\t      }\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     */\n\t    function LazyWrapper(value) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__dir__ = 1;\n\t      this.__filtered__ = false;\n\t      this.__iteratees__ = [];\n\t      this.__takeCount__ = MAX_ARRAY_LENGTH;\n\t      this.__views__ = [];\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the lazy wrapper object.\n\t     *\n\t     * @private\n\t     * @name clone\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the cloned `LazyWrapper` object.\n\t     */\n\t    function lazyClone() {\n\t      var result = new LazyWrapper(this.__wrapped__);\n\t      result.__actions__ = copyArray(this.__actions__);\n\t      result.__dir__ = this.__dir__;\n\t      result.__filtered__ = this.__filtered__;\n\t      result.__iteratees__ = copyArray(this.__iteratees__);\n\t      result.__takeCount__ = this.__takeCount__;\n\t      result.__views__ = copyArray(this.__views__);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses the direction of lazy iteration.\n\t     *\n\t     * @private\n\t     * @name reverse\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n\t     */\n\t    function lazyReverse() {\n\t      if (this.__filtered__) {\n\t        var result = new LazyWrapper(this);\n\t        result.__dir__ = -1;\n\t        result.__filtered__ = true;\n\t      } else {\n\t        result = this.clone();\n\t        result.__dir__ *= -1;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Extracts the unwrapped value from its lazy wrapper.\n\t     *\n\t     * @private\n\t     * @name value\n\t     * @memberOf LazyWrapper\n\t     * @returns {*} Returns the unwrapped value.\n\t     */\n\t    function lazyValue() {\n\t      var array = this.__wrapped__.value(),\n\t          dir = this.__dir__,\n\t          isArr = isArray(array),\n\t          isRight = dir < 0,\n\t          arrLength = isArr ? array.length : 0,\n\t          view = getView(0, arrLength, this.__views__),\n\t          start = view.start,\n\t          end = view.end,\n\t          length = end - start,\n\t          index = isRight ? end : (start - 1),\n\t          iteratees = this.__iteratees__,\n\t          iterLength = iteratees.length,\n\t          resIndex = 0,\n\t          takeCount = nativeMin(length, this.__takeCount__);\n\t\n\t      if (!isArr || arrLength < LARGE_ARRAY_SIZE || (arrLength == length && takeCount == length)) {\n\t        return baseWrapperValue(array, this.__actions__);\n\t      }\n\t      var result = [];\n\t\n\t      outer:\n\t      while (length-- && resIndex < takeCount) {\n\t        index += dir;\n\t\n\t        var iterIndex = -1,\n\t            value = array[index];\n\t\n\t        while (++iterIndex < iterLength) {\n\t          var data = iteratees[iterIndex],\n\t              iteratee = data.iteratee,\n\t              type = data.type,\n\t              computed = iteratee(value);\n\t\n\t          if (type == LAZY_MAP_FLAG) {\n\t            value = computed;\n\t          } else if (!computed) {\n\t            if (type == LAZY_FILTER_FLAG) {\n\t              continue outer;\n\t            } else {\n\t              break outer;\n\t            }\n\t          }\n\t        }\n\t        result[resIndex++] = value;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an hash object.\n\t     *\n\t     * @private\n\t     * @returns {Object} Returns the new hash object.\n\t     */\n\t    function Hash() {}\n\t\n\t    /**\n\t     * Removes `key` and its value from the hash.\n\t     *\n\t     * @private\n\t     * @param {Object} hash The hash to modify.\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function hashDelete(hash, key) {\n\t      return hashHas(hash, key) && delete hash[key];\n\t    }\n\t\n\t    /**\n\t     * Gets the hash value for `key`.\n\t     *\n\t     * @private\n\t     * @param {Object} hash The hash to query.\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function hashGet(hash, key) {\n\t      if (nativeCreate) {\n\t        var result = hash[key];\n\t        return result === HASH_UNDEFINED ? undefined : result;\n\t      }\n\t      return hasOwnProperty.call(hash, key) ? hash[key] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if a hash value for `key` exists.\n\t     *\n\t     * @private\n\t     * @param {Object} hash The hash to query.\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function hashHas(hash, key) {\n\t      return nativeCreate ? hash[key] !== undefined : hasOwnProperty.call(hash, key);\n\t    }\n\t\n\t    /**\n\t     * Sets the hash `key` to `value`.\n\t     *\n\t     * @private\n\t     * @param {Object} hash The hash to modify.\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     */\n\t    function hashSet(hash, key, value) {\n\t      hash[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a map cache object to store key-value pairs.\n\t     *\n\t     * @private\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function MapCache(values) {\n\t      var index = -1,\n\t          length = values ? values.length : 0;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = values[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the map.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf MapCache\n\t     */\n\t    function mapClear() {\n\t      this.__data__ = { 'hash': new Hash, 'map': Map ? new Map : [], 'string': new Hash };\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the map.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function mapDelete(key) {\n\t      var data = this.__data__;\n\t      if (isKeyable(key)) {\n\t        return hashDelete(typeof key == 'string' ? data.string : data.hash, key);\n\t      }\n\t      return Map ? data.map['delete'](key) : assocDelete(data.map, key);\n\t    }\n\t\n\t    /**\n\t     * Gets the map value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function mapGet(key) {\n\t      var data = this.__data__;\n\t      if (isKeyable(key)) {\n\t        return hashGet(typeof key == 'string' ? data.string : data.hash, key);\n\t      }\n\t      return Map ? data.map.get(key) : assocGet(data.map, key);\n\t    }\n\t\n\t    /**\n\t     * Checks if a map value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function mapHas(key) {\n\t      var data = this.__data__;\n\t      if (isKeyable(key)) {\n\t        return hashHas(typeof key == 'string' ? data.string : data.hash, key);\n\t      }\n\t      return Map ? data.map.has(key) : assocHas(data.map, key);\n\t    }\n\t\n\t    /**\n\t     * Sets the map `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the map cache object.\n\t     */\n\t    function mapSet(key, value) {\n\t      var data = this.__data__;\n\t      if (isKeyable(key)) {\n\t        hashSet(typeof key == 'string' ? data.string : data.hash, key, value);\n\t      } else if (Map) {\n\t        data.map.set(key, value);\n\t      } else {\n\t        assocSet(data.map, key, value);\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     *\n\t     * Creates a set cache object to store unique values.\n\t     *\n\t     * @private\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function SetCache(values) {\n\t      var index = -1,\n\t          length = values ? values.length : 0;\n\t\n\t      this.__data__ = new MapCache;\n\t      while (++index < length) {\n\t        this.push(values[index]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is in `cache`.\n\t     *\n\t     * @private\n\t     * @param {Object} cache The set cache to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns `true` if `value` is found, else `false`.\n\t     */\n\t    function cacheHas(cache, value) {\n\t      var map = cache.__data__;\n\t      if (isKeyable(value)) {\n\t        var data = map.__data__,\n\t            hash = typeof value == 'string' ? data.string : data.hash;\n\t\n\t        return hash[value] === HASH_UNDEFINED;\n\t      }\n\t      return map.has(value);\n\t    }\n\t\n\t    /**\n\t     * Adds `value` to the set cache.\n\t     *\n\t     * @private\n\t     * @name push\n\t     * @memberOf SetCache\n\t     * @param {*} value The value to cache.\n\t     */\n\t    function cachePush(value) {\n\t      var map = this.__data__;\n\t      if (isKeyable(value)) {\n\t        var data = map.__data__,\n\t            hash = typeof value == 'string' ? data.string : data.hash;\n\t\n\t        hash[value] = HASH_UNDEFINED;\n\t      }\n\t      else {\n\t        map.set(value, HASH_UNDEFINED);\n\t      }\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a stack cache object to store key-value pairs.\n\t     *\n\t     * @private\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function Stack(values) {\n\t      var index = -1,\n\t          length = values ? values.length : 0;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = values[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the stack.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf Stack\n\t     */\n\t    function stackClear() {\n\t      this.__data__ = { 'array': [], 'map': null };\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the stack.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function stackDelete(key) {\n\t      var data = this.__data__,\n\t          array = data.array;\n\t\n\t      return array ? assocDelete(array, key) : data.map['delete'](key);\n\t    }\n\t\n\t    /**\n\t     * Gets the stack value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function stackGet(key) {\n\t      var data = this.__data__,\n\t          array = data.array;\n\t\n\t      return array ? assocGet(array, key) : data.map.get(key);\n\t    }\n\t\n\t    /**\n\t     * Checks if a stack value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function stackHas(key) {\n\t      var data = this.__data__,\n\t          array = data.array;\n\t\n\t      return array ? assocHas(array, key) : data.map.has(key);\n\t    }\n\t\n\t    /**\n\t     * Sets the stack `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the stack cache object.\n\t     */\n\t    function stackSet(key, value) {\n\t      var data = this.__data__,\n\t          array = data.array;\n\t\n\t      if (array) {\n\t        if (array.length < (LARGE_ARRAY_SIZE - 1)) {\n\t          assocSet(array, key, value);\n\t        } else {\n\t          data.array = null;\n\t          data.map = new MapCache(array);\n\t        }\n\t      }\n\t      var map = data.map;\n\t      if (map) {\n\t        map.set(key, value);\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Removes `key` and its value from the associative array.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function assocDelete(array, key) {\n\t      var index = assocIndexOf(array, key);\n\t      if (index < 0) {\n\t        return false;\n\t      }\n\t      var lastIndex = array.length - 1;\n\t      if (index == lastIndex) {\n\t        array.pop();\n\t      } else {\n\t        splice.call(array, index, 1);\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Gets the associative array value for `key`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function assocGet(array, key) {\n\t      var index = assocIndexOf(array, key);\n\t      return index < 0 ? undefined : array[index][1];\n\t    }\n\t\n\t    /**\n\t     * Checks if an associative array value for `key` exists.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function assocHas(array, key) {\n\t      return assocIndexOf(array, key) > -1;\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the first occurrence of `key` is found in `array`\n\t     * of key-value pairs.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to search.\n\t     * @param {*} key The key to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     */\n\t    function assocIndexOf(array, key) {\n\t      var length = array.length;\n\t      while (length--) {\n\t        if (eq(array[length][0], key)) {\n\t          return length;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Sets the associative array `key` to `value`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     */\n\t    function assocSet(array, key, value) {\n\t      var index = assocIndexOf(array, key);\n\t      if (index < 0) {\n\t        array.push([key, value]);\n\t      } else {\n\t        array[index][1] = value;\n\t      }\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Used by `_.defaults` to customize its `_.assignIn` use.\n\t     *\n\t     * @private\n\t     * @param {*} objValue The destination value.\n\t     * @param {*} srcValue The source value.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {Object} object The parent object of `objValue`.\n\t     * @returns {*} Returns the value to assign.\n\t     */\n\t    function assignInDefaults(objValue, srcValue, key, object) {\n\t      if (objValue === undefined ||\n\t          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n\t        return srcValue;\n\t      }\n\t      return objValue;\n\t    }\n\t\n\t    /**\n\t     * This function is like `assignValue` except that it doesn't assign `undefined` values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function assignMergeValue(object, key, value) {\n\t      if ((value !== undefined && !eq(object[key], value)) ||\n\t          (typeof key == 'number' && value === undefined && !(key in object))) {\n\t        object[key] = value;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function assignValue(object, key, value) {\n\t      var objValue = object[key];\n\t      if ((!eq(objValue, value) ||\n\t            (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) ||\n\t          (value === undefined && !(key in object))) {\n\t        object[key] = value;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Aggregates elements of `collection` on `accumulator` with keys transformed\n\t     * by `iteratee` and values set by `setter`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} setter The function to set `accumulator` values.\n\t     * @param {Function} iteratee The iteratee to transform keys.\n\t     * @param {Object} accumulator The initial aggregated object.\n\t     * @returns {Function} Returns `accumulator`.\n\t     */\n\t    function baseAggregator(collection, setter, iteratee, accumulator) {\n\t      baseEach(collection, function(value, key, collection) {\n\t        setter(accumulator, value, iteratee(value), collection);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.assign` without support for multiple sources\n\t     * or `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseAssign(object, source) {\n\t      return object && copyObject(source, keys(source), object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.at` without support for individual paths.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {string[]} paths The property paths of elements to pick.\n\t     * @returns {Array} Returns the new array of picked elements.\n\t     */\n\t    function baseAt(object, paths) {\n\t      var index = -1,\n\t          isNil = object == null,\n\t          length = paths.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = isNil ? undefined : get(object, paths[index]);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clamp` which doesn't coerce arguments to numbers.\n\t     *\n\t     * @private\n\t     * @param {number} number The number to clamp.\n\t     * @param {number} [lower] The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the clamped number.\n\t     */\n\t    function baseClamp(number, lower, upper) {\n\t      if (number === number) {\n\t        if (upper !== undefined) {\n\t          number = number <= upper ? number : upper;\n\t        }\n\t        if (lower !== undefined) {\n\t          number = number >= lower ? number : lower;\n\t        }\n\t      }\n\t      return number;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n\t     * traversed objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @param {string} [key] The key of `value`.\n\t     * @param {Object} [object] The parent object of `value`.\n\t     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n\t     * @returns {*} Returns the cloned value.\n\t     */\n\t    function baseClone(value, isDeep, customizer, key, object, stack) {\n\t      var result;\n\t      if (customizer) {\n\t        result = object ? customizer(value, key, object, stack) : customizer(value);\n\t      }\n\t      if (result !== undefined) {\n\t        return result;\n\t      }\n\t      if (!isObject(value)) {\n\t        return value;\n\t      }\n\t      var isArr = isArray(value);\n\t      if (isArr) {\n\t        result = initCloneArray(value);\n\t        if (!isDeep) {\n\t          return copyArray(value, result);\n\t        }\n\t      } else {\n\t        var tag = getTag(value),\n\t            isFunc = tag == funcTag || tag == genTag;\n\t\n\t        if (isBuffer(value)) {\n\t          return cloneBuffer(value, isDeep);\n\t        }\n\t        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n\t          if (isHostObject(value)) {\n\t            return object ? value : {};\n\t          }\n\t          result = initCloneObject(isFunc ? {} : value);\n\t          if (!isDeep) {\n\t            return copySymbols(value, baseAssign(result, value));\n\t          }\n\t        } else {\n\t          return cloneableTags[tag]\n\t            ? initCloneByTag(value, tag, isDeep)\n\t            : (object ? value : {});\n\t        }\n\t      }\n\t      // Check for circular references and return its corresponding clone.\n\t      stack || (stack = new Stack);\n\t      var stacked = stack.get(value);\n\t      if (stacked) {\n\t        return stacked;\n\t      }\n\t      stack.set(value, result);\n\t\n\t      // Recursively populate clone (susceptible to call stack limits).\n\t      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n\t        assignValue(result, key, baseClone(subValue, isDeep, customizer, key, value, stack));\n\t      });\n\t      return isArr ? result : copySymbols(value, result);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.conforms` which doesn't clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseConforms(source) {\n\t      var props = keys(source),\n\t          length = props.length;\n\t\n\t      return function(object) {\n\t        if (object == null) {\n\t          return !length;\n\t        }\n\t        var index = length;\n\t        while (index--) {\n\t          var key = props[index],\n\t              predicate = source[key],\n\t              value = object[key];\n\t\n\t          if ((value === undefined && !(key in Object(object))) || !predicate(value)) {\n\t            return false;\n\t          }\n\t        }\n\t        return true;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.create` without support for assigning\n\t     * properties to the created object.\n\t     *\n\t     * @private\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    var baseCreate = (function() {\n\t      function object() {}\n\t      return function(prototype) {\n\t        if (isObject(prototype)) {\n\t          object.prototype = prototype;\n\t          var result = new object;\n\t          object.prototype = undefined;\n\t        }\n\t        return result || {};\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * The base implementation of `_.delay` and `_.defer` which accepts an array\n\t     * of `func` arguments.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {Object} args The arguments to provide to `func`.\n\t     * @returns {number} Returns the timer id.\n\t     */\n\t    function baseDelay(func, wait, args) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return setTimeout(function() { func.apply(undefined, args); }, wait);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.difference` without support for\n\t     * excluding multiple arrays or iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Array} values The values to exclude.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     */\n\t    function baseDifference(array, values, iteratee, comparator) {\n\t      var index = -1,\n\t          includes = arrayIncludes,\n\t          isCommon = true,\n\t          length = array.length,\n\t          result = [],\n\t          valuesLength = values.length;\n\t\n\t      if (!length) {\n\t        return result;\n\t      }\n\t      if (iteratee) {\n\t        values = arrayMap(values, baseUnary(iteratee));\n\t      }\n\t      if (comparator) {\n\t        includes = arrayIncludesWith;\n\t        isCommon = false;\n\t      }\n\t      else if (values.length >= LARGE_ARRAY_SIZE) {\n\t        includes = cacheHas;\n\t        isCommon = false;\n\t        values = new SetCache(values);\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        if (isCommon && computed === computed) {\n\t          var valuesIndex = valuesLength;\n\t          while (valuesIndex--) {\n\t            if (values[valuesIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (!includes(values, computed, comparator)) {\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forEach` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     */\n\t    var baseEach = createBaseEach(baseForOwn);\n\t\n\t    /**\n\t     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     */\n\t    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\t\n\t    /**\n\t     * The base implementation of `_.every` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check, else `false`\n\t     */\n\t    function baseEvery(collection, predicate) {\n\t      var result = true;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = !!predicate(value, index, collection);\n\t        return result;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.fill` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseFill(array, value, start, end) {\n\t      var length = array.length;\n\t\n\t      start = toInteger(start);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : toInteger(end);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      end = start > end ? 0 : toLength(end);\n\t      while (start < end) {\n\t        array[start++] = value;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.filter` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function baseFilter(collection, predicate) {\n\t      var result = [];\n\t      baseEach(collection, function(value, index, collection) {\n\t        if (predicate(value, index, collection)) {\n\t          result.push(value);\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.flatten` with support for restricting flattening.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to flatten.\n\t     * @param {boolean} [isDeep] Specify a deep flatten.\n\t     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n\t     * @param {Array} [result=[]] The initial result value.\n\t     * @returns {Array} Returns the new flattened array.\n\t     */\n\t    function baseFlatten(array, isDeep, isStrict, result) {\n\t      result || (result = []);\n\t\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (isArrayLikeObject(value) &&\n\t            (isStrict || isArray(value) || isArguments(value))) {\n\t          if (isDeep) {\n\t            // Recursively flatten arrays (susceptible to call stack limits).\n\t            baseFlatten(value, isDeep, isStrict, result);\n\t          } else {\n\t            arrayPush(result, value);\n\t          }\n\t        } else if (!isStrict) {\n\t          result[result.length] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n\t     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n\t     * each property. Iteratee functions may exit iteration early by explicitly\n\t     * returning `false`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseFor = createBaseFor();\n\t\n\t    /**\n\t     * This function is like `baseFor` except that it iterates over properties\n\t     * in the opposite order.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseForRight = createBaseFor(true);\n\t\n\t    /**\n\t     * The base implementation of `_.forIn` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForIn(object, iteratee) {\n\t      return object == null ? object : baseFor(object, iteratee, keysIn);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwn(object, iteratee) {\n\t      return object && baseFor(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwnRight(object, iteratee) {\n\t      return object && baseForRight(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.functions` which creates an array of\n\t     * `object` function property names filtered from `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} props The property names to filter.\n\t     * @returns {Array} Returns the new array of filtered property names.\n\t     */\n\t    function baseFunctions(object, props) {\n\t      return arrayFilter(props, function(key) {\n\t        return isFunction(object[key]);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.get` without support for default values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseGet(object, path) {\n\t      path = isKey(path, object) ? [path + ''] : baseToPath(path);\n\t\n\t      var index = 0,\n\t          length = path.length;\n\t\n\t      while (object != null && index < length) {\n\t        object = object[path[index++]];\n\t      }\n\t      return (index && index == length) ? object : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.has` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t     */\n\t    function baseHas(object, key) {\n\t      // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,\n\t      // that are composed entirely of index properties, return `false` for\n\t      // `hasOwnProperty` checks of them.\n\t      return hasOwnProperty.call(object, key) ||\n\t        (typeof object == 'object' && key in object && getPrototypeOf(object) === null);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.hasIn` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t     */\n\t    function baseHasIn(object, key) {\n\t      return key in Object(object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.inRange` which doesn't coerce arguments to numbers.\n\t     *\n\t     * @private\n\t     * @param {number} number The number to check.\n\t     * @param {number} start The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n\t     */\n\t    function baseInRange(number, start, end) {\n\t      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.intersection`, without support\n\t     * for iteratee shorthands, that accepts an array of arrays to inspect.\n\t     *\n\t     * @private\n\t     * @param {Array} arrays The arrays to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     */\n\t    function baseIntersection(arrays, iteratee, comparator) {\n\t      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n\t          othLength = arrays.length,\n\t          othIndex = othLength,\n\t          caches = Array(othLength),\n\t          result = [];\n\t\n\t      while (othIndex--) {\n\t        var array = arrays[othIndex];\n\t        if (othIndex && iteratee) {\n\t          array = arrayMap(array, baseUnary(iteratee));\n\t        }\n\t        caches[othIndex] = !comparator && (iteratee || array.length >= 120)\n\t          ? new SetCache(othIndex && array)\n\t          : undefined;\n\t      }\n\t      array = arrays[0];\n\t\n\t      var index = -1,\n\t          length = array.length,\n\t          seen = caches[0];\n\t\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        if (!(seen ? cacheHas(seen, computed) : includes(result, computed, comparator))) {\n\t          var othIndex = othLength;\n\t          while (--othIndex) {\n\t            var cache = caches[othIndex];\n\t            if (!(cache ? cacheHas(cache, computed) : includes(arrays[othIndex], computed, comparator))) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (seen) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.invert` and `_.invertBy` which inverts\n\t     * `object` with values transformed by `iteratee` and set by `setter`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} setter The function to set `accumulator` values.\n\t     * @param {Function} iteratee The iteratee to transform values.\n\t     * @param {Object} accumulator The initial inverted object.\n\t     * @returns {Function} Returns `accumulator`.\n\t     */\n\t    function baseInverter(object, setter, iteratee, accumulator) {\n\t      baseForOwn(object, function(value, key, object) {\n\t        setter(accumulator, iteratee(value), key, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.invoke` without support for individual\n\t     * method arguments.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {Array} args The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     */\n\t    function baseInvoke(object, path, args) {\n\t      if (!isKey(path, object)) {\n\t        path = baseToPath(path);\n\t        object = parent(object, path);\n\t        path = last(path);\n\t      }\n\t      var func = object == null ? object : object[path];\n\t      return func == null ? undefined : apply(func, object, args);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isEqual` which supports partial comparisons\n\t     * and tracks traversed objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {boolean} [bitmask] The bitmask of comparison flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - Unordered comparison\n\t     *     2 - Partial comparison\n\t     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     */\n\t    function baseIsEqual(value, other, customizer, bitmask, stack) {\n\t      if (value === other) {\n\t        return true;\n\t      }\n\t      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n\t        return value !== value && other !== other;\n\t      }\n\t      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqual` for arrays and objects which performs\n\t     * deep comparisons and tracks traversed objects enabling objects with circular\n\t     * references to be compared.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n\t     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n\t      var objIsArr = isArray(object),\n\t          othIsArr = isArray(other),\n\t          objTag = arrayTag,\n\t          othTag = arrayTag;\n\t\n\t      if (!objIsArr) {\n\t        objTag = getTag(object);\n\t        if (objTag == argsTag) {\n\t          objTag = objectTag;\n\t        } else if (objTag != objectTag) {\n\t          objIsArr = isTypedArray(object);\n\t        }\n\t      }\n\t      if (!othIsArr) {\n\t        othTag = getTag(other);\n\t        if (othTag == argsTag) {\n\t          othTag = objectTag;\n\t        } else if (othTag != objectTag) {\n\t          othIsArr = isTypedArray(other);\n\t        }\n\t      }\n\t      var objIsObj = objTag == objectTag && !isHostObject(object),\n\t          othIsObj = othTag == objectTag && !isHostObject(other),\n\t          isSameTag = objTag == othTag;\n\t\n\t      if (isSameTag && !(objIsArr || objIsObj)) {\n\t        return equalByTag(object, other, objTag, equalFunc, customizer, bitmask);\n\t      }\n\t      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n\t      if (!isPartial) {\n\t        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n\t            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\t\n\t        if (objIsWrapped || othIsWrapped) {\n\t          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, bitmask, stack);\n\t        }\n\t      }\n\t      if (!isSameTag) {\n\t        return false;\n\t      }\n\t      stack || (stack = new Stack);\n\t      return (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, bitmask, stack);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Array} matchData The property names, values, and compare flags to match.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     */\n\t    function baseIsMatch(object, source, matchData, customizer) {\n\t      var index = matchData.length,\n\t          length = index,\n\t          noCustomizer = !customizer;\n\t\n\t      if (object == null) {\n\t        return !length;\n\t      }\n\t      object = Object(object);\n\t      while (index--) {\n\t        var data = matchData[index];\n\t        if ((noCustomizer && data[2])\n\t              ? data[1] !== object[data[0]]\n\t              : !(data[0] in object)\n\t            ) {\n\t          return false;\n\t        }\n\t      }\n\t      while (++index < length) {\n\t        data = matchData[index];\n\t        var key = data[0],\n\t            objValue = object[key],\n\t            srcValue = data[1];\n\t\n\t        if (noCustomizer && data[2]) {\n\t          if (objValue === undefined && !(key in object)) {\n\t            return false;\n\t          }\n\t        } else {\n\t          var stack = new Stack,\n\t              result = customizer ? customizer(objValue, srcValue, key, object, source, stack) : undefined;\n\t\n\t          if (!(result === undefined\n\t                ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n\t                : result\n\t              )) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.iteratee`.\n\t     *\n\t     * @private\n\t     * @param {*} [value=_.identity] The value to convert to an iteratee.\n\t     * @returns {Function} Returns the iteratee.\n\t     */\n\t    function baseIteratee(value) {\n\t      var type = typeof value;\n\t      if (type == 'function') {\n\t        return value;\n\t      }\n\t      if (value == null) {\n\t        return identity;\n\t      }\n\t      if (type == 'object') {\n\t        return isArray(value)\n\t          ? baseMatchesProperty(value[0], value[1])\n\t          : baseMatches(value);\n\t      }\n\t      return property(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.keys` which doesn't skip the constructor\n\t     * property of prototypes or treat sparse arrays as dense.\n\t     *\n\t     * @private\n\t     * @type Function\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function baseKeys(object) {\n\t      return nativeKeys(Object(object));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.keysIn` which doesn't skip the constructor\n\t     * property of prototypes or treat sparse arrays as dense.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function baseKeysIn(object) {\n\t      object = object == null ? object : Object(object);\n\t\n\t      var result = [];\n\t      for (var key in object) {\n\t        result.push(key);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    // Fallback for IE < 9 with es6-shim.\n\t    if (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {\n\t      baseKeysIn = function(object) {\n\t        return iteratorToArray(enumerate(object));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.map` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function baseMap(collection, iteratee) {\n\t      var index = -1,\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value, key, collection) {\n\t        result[++index] = iteratee(value, key, collection);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matches` which doesn't clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseMatches(source) {\n\t      var matchData = getMatchData(source);\n\t      if (matchData.length == 1 && matchData[0][2]) {\n\t        var key = matchData[0][0],\n\t            value = matchData[0][1];\n\t\n\t        return function(object) {\n\t          if (object == null) {\n\t            return false;\n\t          }\n\t          return object[key] === value &&\n\t            (value !== undefined || (key in Object(object)));\n\t        };\n\t      }\n\t      return function(object) {\n\t        return object === source || baseIsMatch(object, source, matchData);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n\t     *\n\t     * @private\n\t     * @param {string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseMatchesProperty(path, srcValue) {\n\t      return function(object) {\n\t        var objValue = get(object, path);\n\t        return (objValue === undefined && objValue === srcValue)\n\t          ? hasIn(object, path)\n\t          : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.merge` without support for multiple sources.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {number} srcIndex The index of `source`.\n\t     * @param {Function} [customizer] The function to customize merged values.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged counterparts.\n\t     */\n\t    function baseMerge(object, source, srcIndex, customizer, stack) {\n\t      if (object === source) {\n\t        return;\n\t      }\n\t      var props = (isArray(source) || isTypedArray(source)) ? undefined : keysIn(source);\n\t      arrayEach(props || source, function(srcValue, key) {\n\t        if (props) {\n\t          key = srcValue;\n\t          srcValue = source[key];\n\t        }\n\t        if (isObject(srcValue)) {\n\t          stack || (stack = new Stack);\n\t          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n\t        }\n\t        else {\n\t          var newValue = customizer ? customizer(object[key], srcValue, (key + ''), object, source, stack) : undefined;\n\t          if (newValue === undefined) {\n\t            newValue = srcValue;\n\t          }\n\t          assignMergeValue(object, key, newValue);\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseMerge` for arrays and objects which performs\n\t     * deep merges and tracks traversed objects enabling objects with circular\n\t     * references to be merged.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {string} key The key of the value to merge.\n\t     * @param {number} srcIndex The index of `source`.\n\t     * @param {Function} mergeFunc The function to merge values.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged counterparts.\n\t     */\n\t    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n\t      var objValue = object[key],\n\t          srcValue = source[key],\n\t          stacked = stack.get(srcValue);\n\t\n\t      if (stacked) {\n\t        assignMergeValue(object, key, stacked);\n\t        return;\n\t      }\n\t      var newValue = customizer ? customizer(objValue, srcValue, (key + ''), object, source, stack) : undefined,\n\t          isCommon = newValue === undefined;\n\t\n\t      if (isCommon) {\n\t        newValue = srcValue;\n\t        if (isArray(srcValue) || isTypedArray(srcValue)) {\n\t          if (isArray(objValue)) {\n\t            newValue = srcIndex ? copyArray(objValue) : objValue;\n\t          }\n\t          else if (isArrayLikeObject(objValue)) {\n\t            newValue = copyArray(objValue);\n\t          }\n\t          else {\n\t            isCommon = false;\n\t            newValue = baseClone(srcValue);\n\t          }\n\t        }\n\t        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n\t          if (isArguments(objValue)) {\n\t            newValue = toPlainObject(objValue);\n\t          }\n\t          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n\t            isCommon = false;\n\t            newValue = baseClone(srcValue);\n\t          }\n\t          else {\n\t            newValue = srcIndex ? baseClone(objValue) : objValue;\n\t          }\n\t        }\n\t        else {\n\t          isCommon = false;\n\t        }\n\t      }\n\t      stack.set(srcValue, newValue);\n\t\n\t      if (isCommon) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n\t      }\n\t      assignMergeValue(object, key, newValue);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.orderBy` without param guards.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {string[]} orders The sort orders of `iteratees`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     */\n\t    function baseOrderBy(collection, iteratees, orders) {\n\t      var index = -1,\n\t          toIteratee = getIteratee();\n\t\n\t      iteratees = arrayMap(iteratees.length ? iteratees : Array(1), function(iteratee) {\n\t        return toIteratee(iteratee);\n\t      });\n\t\n\t      var result = baseMap(collection, function(value, key, collection) {\n\t        var criteria = arrayMap(iteratees, function(iteratee) {\n\t          return iteratee(value);\n\t        });\n\t        return { 'criteria': criteria, 'index': ++index, 'value': value };\n\t      });\n\t\n\t      return baseSortBy(result, function(object, other) {\n\t        return compareMultiple(object, other, orders);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pick` without support for individual\n\t     * property names.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} props The property names to pick.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function basePick(object, props) {\n\t      object = Object(object);\n\t      return arrayReduce(props, function(result, key) {\n\t        if (key in object) {\n\t          result[key] = object[key];\n\t        }\n\t        return result;\n\t      }, {});\n\t    }\n\t\n\t    /**\n\t     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {Function} predicate The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function basePickBy(object, predicate) {\n\t      var result = {};\n\t      baseForIn(object, function(value, key) {\n\t        if (predicate(value, key)) {\n\t          result[key] = value;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.property` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {string} key The key of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseProperty(key) {\n\t      return function(object) {\n\t        return object == null ? undefined : object[key];\n\t      };\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseProperty` which supports deep paths.\n\t     *\n\t     * @private\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function basePropertyDeep(path) {\n\t      return function(object) {\n\t        return baseGet(object, path);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAll`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAll(array, values) {\n\t      return basePullAllBy(array, values);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAllBy` without support for iteratee\n\t     * shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAllBy(array, values, iteratee) {\n\t      var index = -1,\n\t          length = values.length,\n\t          seen = array;\n\t\n\t      if (iteratee) {\n\t        seen = arrayMap(array, function(value) { return iteratee(value); });\n\t      }\n\t      while (++index < length) {\n\t        var fromIndex = 0,\n\t            value = values[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        while ((fromIndex = baseIndexOf(seen, computed, fromIndex)) > -1) {\n\t          if (seen !== array) {\n\t            splice.call(seen, fromIndex, 1);\n\t          }\n\t          splice.call(array, fromIndex, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAt` without support for individual\n\t     * indexes or capturing the removed elements.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {number[]} indexes The indexes of elements to remove.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAt(array, indexes) {\n\t      var length = array ? indexes.length : 0,\n\t          lastIndex = length - 1;\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        if (lastIndex == length || index != previous) {\n\t          var previous = index;\n\t          if (isIndex(index)) {\n\t            splice.call(array, index, 1);\n\t          }\n\t          else if (!isKey(index, array)) {\n\t            var path = baseToPath(index),\n\t                object = parent(array, path);\n\t\n\t            if (object != null) {\n\t              delete object[last(path)];\n\t            }\n\t          }\n\t          else {\n\t            delete array[index];\n\t          }\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.random` without support for returning\n\t     * floating-point numbers.\n\t     *\n\t     * @private\n\t     * @param {number} lower The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the random number.\n\t     */\n\t    function baseRandom(lower, upper) {\n\t      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n\t     * coerce arguments to numbers.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} step The value to increment or decrement by.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the new array of numbers.\n\t     */\n\t    function baseRange(start, end, step, fromRight) {\n\t      var index = -1,\n\t          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n\t          result = Array(length);\n\t\n\t      while (length--) {\n\t        result[fromRight ? length : ++index] = start;\n\t        start += step;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.set`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @param {Function} [customizer] The function to customize path creation.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseSet(object, path, value, customizer) {\n\t      path = isKey(path, object) ? [path + ''] : baseToPath(path);\n\t\n\t      var index = -1,\n\t          length = path.length,\n\t          lastIndex = length - 1,\n\t          nested = object;\n\t\n\t      while (nested != null && ++index < length) {\n\t        var key = path[index];\n\t        if (isObject(nested)) {\n\t          var newValue = value;\n\t          if (index != lastIndex) {\n\t            var objValue = nested[key];\n\t            newValue = customizer ? customizer(objValue, key, nested) : undefined;\n\t            if (newValue === undefined) {\n\t              newValue = objValue == null ? (isIndex(path[index + 1]) ? [] : {}) : objValue;\n\t            }\n\t          }\n\t          assignValue(nested, key, newValue);\n\t        }\n\t        nested = nested[key];\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `setData` without support for hot loop detection.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var baseSetData = !metaMap ? identity : function(func, data) {\n\t      metaMap.set(func, data);\n\t      return func;\n\t    };\n\t\n\t    /**\n\t     * The base implementation of `_.slice` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseSlice(array, start, end) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = end > length ? length : end;\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : ((end - start) >>> 0);\n\t      start >>>= 0;\n\t\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = array[index + start];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.some` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.\n\t     */\n\t    function baseSome(collection, predicate) {\n\t      var result;\n\t\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = predicate(value, index, collection);\n\t        return !result;\n\t      });\n\t      return !!result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n\t     * performs a binary search of `array` to determine the index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function baseSortedIndex(array, value, retHighest) {\n\t      var low = 0,\n\t          high = array ? array.length : low;\n\t\n\t      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n\t        while (low < high) {\n\t          var mid = (low + high) >>> 1,\n\t              computed = array[mid];\n\t\n\t          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n\t            low = mid + 1;\n\t          } else {\n\t            high = mid;\n\t          }\n\t        }\n\t        return high;\n\t      }\n\t      return baseSortedIndexBy(array, value, identity, retHighest);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n\t     * which invokes `iteratee` for `value` and each element of `array` to compute\n\t     * their sort ranking. The iteratee is invoked with one argument; (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} iteratee The iteratee invoked per element.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n\t     */\n\t    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n\t      value = iteratee(value);\n\t\n\t      var low = 0,\n\t          high = array ? array.length : 0,\n\t          valIsNaN = value !== value,\n\t          valIsNull = value === null,\n\t          valIsUndef = value === undefined;\n\t\n\t      while (low < high) {\n\t        var mid = nativeFloor((low + high) / 2),\n\t            computed = iteratee(array[mid]),\n\t            isDef = computed !== undefined,\n\t            isReflexive = computed === computed;\n\t\n\t        if (valIsNaN) {\n\t          var setLow = isReflexive || retHighest;\n\t        } else if (valIsNull) {\n\t          setLow = isReflexive && isDef && (retHighest || computed != null);\n\t        } else if (valIsUndef) {\n\t          setLow = isReflexive && (retHighest || isDef);\n\t        } else if (computed == null) {\n\t          setLow = false;\n\t        } else {\n\t          setLow = retHighest ? (computed <= value) : (computed < value);\n\t        }\n\t        if (setLow) {\n\t          low = mid + 1;\n\t        } else {\n\t          high = mid;\n\t        }\n\t      }\n\t      return nativeMin(high, MAX_ARRAY_INDEX);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedUniq`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseSortedUniq(array) {\n\t      return baseSortedUniqBy(array);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedUniqBy` without support for iteratee\n\t     * shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseSortedUniqBy(array, iteratee) {\n\t      var index = 0,\n\t          length = array.length,\n\t          value = array[0],\n\t          computed = iteratee ? iteratee(value) : value,\n\t          seen = computed,\n\t          resIndex = 0,\n\t          result = [value];\n\t\n\t      while (++index < length) {\n\t        value = array[index],\n\t        computed = iteratee ? iteratee(value) : value;\n\t\n\t        if (!eq(computed, seen)) {\n\t          seen = computed;\n\t          result[++resIndex] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.toPath` which only converts `value` to a\n\t     * path if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Array} Returns the property path array.\n\t     */\n\t    function baseToPath(value) {\n\t      return isArray(value) ? value : stringToPath(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseUniq(array, iteratee, comparator) {\n\t      var index = -1,\n\t          includes = arrayIncludes,\n\t          length = array.length,\n\t          isCommon = true,\n\t          result = [],\n\t          seen = result;\n\t\n\t      if (comparator) {\n\t        isCommon = false;\n\t        includes = arrayIncludesWith;\n\t      }\n\t      else if (length >= LARGE_ARRAY_SIZE) {\n\t        var set = iteratee ? null : createSet(array);\n\t        if (set) {\n\t          return setToArray(set);\n\t        }\n\t        isCommon = false;\n\t        includes = cacheHas;\n\t        seen = new SetCache;\n\t      }\n\t      else {\n\t        seen = iteratee ? [] : result;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        if (isCommon && computed === computed) {\n\t          var seenIndex = seen.length;\n\t          while (seenIndex--) {\n\t            if (seen[seenIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (iteratee) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (!includes(seen, computed, comparator)) {\n\t          if (seen !== result) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.unset`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to unset.\n\t     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t     */\n\t    function baseUnset(object, path) {\n\t      path = isKey(path, object) ? [path + ''] : baseToPath(path);\n\t      object = parent(object, path);\n\t      var key = last(path);\n\t      return (object != null && has(object, key)) ? delete object[key] : true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n\t     * without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseWhile(array, predicate, isDrop, fromRight) {\n\t      var length = array.length,\n\t          index = fromRight ? length : -1;\n\t\n\t      while ((fromRight ? index-- : ++index < length) &&\n\t        predicate(array[index], index, array)) {}\n\t\n\t      return isDrop\n\t        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n\t        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `wrapperValue` which returns the result of\n\t     * performing a sequence of actions on the unwrapped `value`, where each\n\t     * successive action is supplied the return value of the previous.\n\t     *\n\t     * @private\n\t     * @param {*} value The unwrapped value.\n\t     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseWrapperValue(value, actions) {\n\t      var result = value;\n\t      if (result instanceof LazyWrapper) {\n\t        result = result.value();\n\t      }\n\t      return arrayReduce(actions, function(result, action) {\n\t        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n\t      }, result);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.xor`, without support for\n\t     * iteratee shorthands, that accepts an array of arrays to inspect.\n\t     *\n\t     * @private\n\t     * @param {Array} arrays The arrays to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of values.\n\t     */\n\t    function baseXor(arrays, iteratee, comparator) {\n\t      var index = -1,\n\t          length = arrays.length;\n\t\n\t      while (++index < length) {\n\t        var result = result\n\t          ? arrayPush(\n\t              baseDifference(result, arrays[index], iteratee, comparator),\n\t              baseDifference(arrays[index], result, iteratee, comparator)\n\t            )\n\t          : arrays[index];\n\t      }\n\t      return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];\n\t    }\n\t\n\t    /**\n\t     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array} props The property names.\n\t     * @param {Array} values The property values.\n\t     * @param {Function} assignFunc The function to assign values.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function baseZipObject(props, values, assignFunc) {\n\t      var index = -1,\n\t          length = props.length,\n\t          valsLength = values.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        assignFunc(result, props[index], index < valsLength ? values[index] : undefined);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of  `buffer`.\n\t     *\n\t     * @private\n\t     * @param {Buffer} buffer The buffer to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Buffer} Returns the cloned buffer.\n\t     */\n\t    function cloneBuffer(buffer, isDeep) {\n\t      if (isDeep) {\n\t        return buffer.slice();\n\t      }\n\t      var Ctor = buffer.constructor,\n\t          result = new Ctor(buffer.length);\n\t\n\t      buffer.copy(result);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `arrayBuffer`.\n\t     *\n\t     * @private\n\t     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n\t     * @returns {ArrayBuffer} Returns the cloned array buffer.\n\t     */\n\t    function cloneArrayBuffer(arrayBuffer) {\n\t      var Ctor = arrayBuffer.constructor,\n\t          result = new Ctor(arrayBuffer.byteLength),\n\t          view = new Uint8Array(result);\n\t\n\t      view.set(new Uint8Array(arrayBuffer));\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `map`.\n\t     *\n\t     * @private\n\t     * @param {Object} map The map to clone.\n\t     * @returns {Object} Returns the cloned map.\n\t     */\n\t    function cloneMap(map) {\n\t      var Ctor = map.constructor;\n\t      return arrayReduce(mapToArray(map), addMapEntry, new Ctor);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `regexp`.\n\t     *\n\t     * @private\n\t     * @param {Object} regexp The regexp to clone.\n\t     * @returns {Object} Returns the cloned regexp.\n\t     */\n\t    function cloneRegExp(regexp) {\n\t      var Ctor = regexp.constructor,\n\t          result = new Ctor(regexp.source, reFlags.exec(regexp));\n\t\n\t      result.lastIndex = regexp.lastIndex;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `set`.\n\t     *\n\t     * @private\n\t     * @param {Object} set The set to clone.\n\t     * @returns {Object} Returns the cloned set.\n\t     */\n\t    function cloneSet(set) {\n\t      var Ctor = set.constructor;\n\t      return arrayReduce(setToArray(set), addSetEntry, new Ctor);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the `symbol` object.\n\t     *\n\t     * @private\n\t     * @param {Object} symbol The symbol object to clone.\n\t     * @returns {Object} Returns the cloned symbol object.\n\t     */\n\t    function cloneSymbol(symbol) {\n\t      return Symbol ? Object(symbolValueOf.call(symbol)) : {};\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `typedArray`.\n\t     *\n\t     * @private\n\t     * @param {Object} typedArray The typed array to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned typed array.\n\t     */\n\t    function cloneTypedArray(typedArray, isDeep) {\n\t      var buffer = typedArray.buffer,\n\t          Ctor = typedArray.constructor;\n\t\n\t      return new Ctor(isDeep ? cloneArrayBuffer(buffer) : buffer, typedArray.byteOffset, typedArray.length);\n\t    }\n\t\n\t    /**\n\t     * Creates an array that is the composition of partially applied arguments,\n\t     * placeholders, and provided arguments into a single array of arguments.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} args The provided arguments.\n\t     * @param {Array} partials The arguments to prepend to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgs(args, partials, holders) {\n\t      var holdersLength = holders.length,\n\t          argsIndex = -1,\n\t          argsLength = nativeMax(args.length - holdersLength, 0),\n\t          leftIndex = -1,\n\t          leftLength = partials.length,\n\t          result = Array(leftLength + argsLength);\n\t\n\t      while (++leftIndex < leftLength) {\n\t        result[leftIndex] = partials[leftIndex];\n\t      }\n\t      while (++argsIndex < holdersLength) {\n\t        result[holders[argsIndex]] = args[argsIndex];\n\t      }\n\t      while (argsLength--) {\n\t        result[leftIndex++] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This function is like `composeArgs` except that the arguments composition\n\t     * is tailored for `_.partialRight`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} args The provided arguments.\n\t     * @param {Array} partials The arguments to append to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgsRight(args, partials, holders) {\n\t      var holdersIndex = -1,\n\t          holdersLength = holders.length,\n\t          argsIndex = -1,\n\t          argsLength = nativeMax(args.length - holdersLength, 0),\n\t          rightIndex = -1,\n\t          rightLength = partials.length,\n\t          result = Array(argsLength + rightLength);\n\t\n\t      while (++argsIndex < argsLength) {\n\t        result[argsIndex] = args[argsIndex];\n\t      }\n\t      var offset = argsIndex;\n\t      while (++rightIndex < rightLength) {\n\t        result[offset + rightIndex] = partials[rightIndex];\n\t      }\n\t      while (++holdersIndex < holdersLength) {\n\t        result[offset + holders[holdersIndex]] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Copies the values of `source` to `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} source The array to copy values from.\n\t     * @param {Array} [array=[]] The array to copy values to.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function copyArray(source, array) {\n\t      var index = -1,\n\t          length = source.length;\n\t\n\t      array || (array = Array(length));\n\t      while (++index < length) {\n\t        array[index] = source[index];\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Copies properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy properties from.\n\t     * @param {Array} props The property names to copy.\n\t     * @param {Object} [object={}] The object to copy properties to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copyObject(source, props, object) {\n\t      return copyObjectWith(source, props, object);\n\t    }\n\t\n\t    /**\n\t     * This function is like `copyObject` except that it accepts a function to\n\t     * customize copied values.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy properties from.\n\t     * @param {Array} props The property names to copy.\n\t     * @param {Object} [object={}] The object to copy properties to.\n\t     * @param {Function} [customizer] The function to customize copied values.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copyObjectWith(source, props, object, customizer) {\n\t      object || (object = {});\n\t\n\t      var index = -1,\n\t          length = props.length;\n\t\n\t      while (++index < length) {\n\t        var key = props[index],\n\t            newValue = customizer ? customizer(object[key], source[key], key, object, source) : source[key];\n\t\n\t        assignValue(object, key, newValue);\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Copies own symbol properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy symbols from.\n\t     * @param {Object} [object={}] The object to copy symbols to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copySymbols(source, object) {\n\t      return copyObject(source, getSymbols(source), object);\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.groupBy`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set accumulator values.\n\t     * @param {Function} [initializer] The accumulator object initializer.\n\t     * @returns {Function} Returns the new aggregator function.\n\t     */\n\t    function createAggregator(setter, initializer) {\n\t      return function(collection, iteratee) {\n\t        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n\t            accumulator = initializer ? initializer() : {};\n\t\n\t        return func(collection, setter, getIteratee(iteratee), accumulator);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.assign`.\n\t     *\n\t     * @private\n\t     * @param {Function} assigner The function to assign values.\n\t     * @returns {Function} Returns the new assigner function.\n\t     */\n\t    function createAssigner(assigner) {\n\t      return rest(function(object, sources) {\n\t        var index = -1,\n\t            length = sources.length,\n\t            customizer = length > 1 ? sources[length - 1] : undefined,\n\t            guard = length > 2 ? sources[2] : undefined;\n\t\n\t        customizer = typeof customizer == 'function' ? (length--, customizer) : undefined;\n\t        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n\t          customizer = length < 3 ? undefined : customizer;\n\t          length = 1;\n\t        }\n\t        object = Object(object);\n\t        while (++index < length) {\n\t          var source = sources[index];\n\t          if (source) {\n\t            assigner(object, source, index, customizer);\n\t          }\n\t        }\n\t        return object;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a `baseEach` or `baseEachRight` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseEach(eachFunc, fromRight) {\n\t      return function(collection, iteratee) {\n\t        if (collection == null) {\n\t          return collection;\n\t        }\n\t        if (!isArrayLike(collection)) {\n\t          return eachFunc(collection, iteratee);\n\t        }\n\t        var length = collection.length,\n\t            index = fromRight ? length : -1,\n\t            iterable = Object(collection);\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          if (iteratee(iterable[index], index, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return collection;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a base function for methods like `_.forIn`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseFor(fromRight) {\n\t      return function(object, iteratee, keysFunc) {\n\t        var index = -1,\n\t            iterable = Object(object),\n\t            props = keysFunc(object),\n\t            length = props.length;\n\t\n\t        while (length--) {\n\t          var key = props[fromRight ? length : ++index];\n\t          if (iteratee(iterable[key], key, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return object;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with the optional `this`\n\t     * binding of `thisArg`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createBaseWrapper(func, bitmask, thisArg) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(isBind ? thisArg : this, arguments);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.lowerFirst`.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `String` case method to use.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function createCaseFirst(methodName) {\n\t      return function(string) {\n\t        string = toString(string);\n\t\n\t        var strSymbols = reHasComplexSymbol.test(string) ? stringToArray(string) : undefined,\n\t            chr = strSymbols ? strSymbols[0] : string.charAt(0),\n\t            trailing = strSymbols ? strSymbols.slice(1).join('') : string.slice(1);\n\t\n\t        return chr[methodName]() + trailing;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.camelCase`.\n\t     *\n\t     * @private\n\t     * @param {Function} callback The function to combine each word.\n\t     * @returns {Function} Returns the new compounder function.\n\t     */\n\t    function createCompounder(callback) {\n\t      return function(string) {\n\t        return arrayReduce(words(deburr(string)), callback, '');\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that produces an instance of `Ctor` regardless of\n\t     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n\t     *\n\t     * @private\n\t     * @param {Function} Ctor The constructor to wrap.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCtorWrapper(Ctor) {\n\t      return function() {\n\t        // Use a `switch` statement to work with class constructors.\n\t        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n\t        // for more details.\n\t        var args = arguments;\n\t        switch (args.length) {\n\t          case 0: return new Ctor;\n\t          case 1: return new Ctor(args[0]);\n\t          case 2: return new Ctor(args[0], args[1]);\n\t          case 3: return new Ctor(args[0], args[1], args[2]);\n\t          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n\t          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n\t          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n\t        }\n\t        var thisBinding = baseCreate(Ctor.prototype),\n\t            result = Ctor.apply(thisBinding, args);\n\t\n\t        // Mimic the constructor's `return` behavior.\n\t        // See https://es5.github.io/#x13.2.2 for more details.\n\t        return isObject(result) ? result : thisBinding;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to enable currying.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n\t     * @param {number} arity The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCurryWrapper(func, bitmask, arity) {\n\t      var Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var length = arguments.length,\n\t            index = length,\n\t            args = Array(length),\n\t            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func,\n\t            placeholder = lodash.placeholder || wrapper.placeholder;\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n\t          ? []\n\t          : replaceHolders(args, placeholder);\n\t\n\t        length -= holders.length;\n\t        return length < arity\n\t          ? createRecurryWrapper(func, bitmask, createHybridWrapper, placeholder, undefined, args, holders, undefined, undefined, arity - length)\n\t          : apply(fn, this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.flow` or `_.flowRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new flow function.\n\t     */\n\t    function createFlow(fromRight) {\n\t      return rest(function(funcs) {\n\t        funcs = baseFlatten(funcs);\n\t\n\t        var length = funcs.length,\n\t            index = length,\n\t            prereq = LodashWrapper.prototype.thru;\n\t\n\t        if (fromRight) {\n\t          funcs.reverse();\n\t        }\n\t        while (index--) {\n\t          var func = funcs[index];\n\t          if (typeof func != 'function') {\n\t            throw new TypeError(FUNC_ERROR_TEXT);\n\t          }\n\t          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n\t            var wrapper = new LodashWrapper([], true);\n\t          }\n\t        }\n\t        index = wrapper ? index : length;\n\t        while (++index < length) {\n\t          func = funcs[index];\n\t\n\t          var funcName = getFuncName(func),\n\t              data = funcName == 'wrapper' ? getData(func) : undefined;\n\t\n\t          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n\t            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n\t          } else {\n\t            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n\t          }\n\t        }\n\t        return function() {\n\t          var args = arguments,\n\t              value = args[0];\n\t\n\t          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n\t            return wrapper.plant(value).value();\n\t          }\n\t          var index = 0,\n\t              result = length ? funcs[index].apply(this, args) : value;\n\t\n\t          while (++index < length) {\n\t            result = funcs[index].call(this, result);\n\t          }\n\t          return result;\n\t        };\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with optional `this`\n\t     * binding of `thisArg`, partial application, and currying.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n\t     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n\t      var isAry = bitmask & ARY_FLAG,\n\t          isBind = bitmask & BIND_FLAG,\n\t          isBindKey = bitmask & BIND_KEY_FLAG,\n\t          isCurry = bitmask & CURRY_FLAG,\n\t          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n\t          isFlip = bitmask & FLIP_FLAG,\n\t          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var length = arguments.length,\n\t            index = length,\n\t            args = Array(length);\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        if (partials) {\n\t          args = composeArgs(args, partials, holders);\n\t        }\n\t        if (partialsRight) {\n\t          args = composeArgsRight(args, partialsRight, holdersRight);\n\t        }\n\t        if (isCurry || isCurryRight) {\n\t          var placeholder = lodash.placeholder || wrapper.placeholder,\n\t              argsHolders = replaceHolders(args, placeholder);\n\t\n\t          length -= argsHolders.length;\n\t          if (length < arity) {\n\t            return createRecurryWrapper(func, bitmask, createHybridWrapper, placeholder, thisArg, args, argsHolders, argPos, ary, arity - length);\n\t          }\n\t        }\n\t        var thisBinding = isBind ? thisArg : this,\n\t            fn = isBindKey ? thisBinding[func] : func;\n\t\n\t        if (argPos) {\n\t          args = reorder(args, argPos);\n\t        } else if (isFlip && args.length > 1) {\n\t          args.reverse();\n\t        }\n\t        if (isAry && ary < args.length) {\n\t          args.length = ary;\n\t        }\n\t        if (this && this !== root && this instanceof wrapper) {\n\t          fn = Ctor || createCtorWrapper(fn);\n\t        }\n\t        return fn.apply(thisBinding, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.invertBy`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set accumulator values.\n\t     * @param {Function} toIteratee The function to resolve iteratees.\n\t     * @returns {Function} Returns the new inverter function.\n\t     */\n\t    function createInverter(setter, toIteratee) {\n\t      return function(object, iteratee) {\n\t        return baseInverter(object, setter, toIteratee(iteratee), {});\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.over`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over iteratees.\n\t     * @returns {Function} Returns the new invoker function.\n\t     */\n\t    function createOver(arrayFunc) {\n\t      return rest(function(iteratees) {\n\t        iteratees = arrayMap(baseFlatten(iteratees), getIteratee());\n\t        return rest(function(args) {\n\t          var thisArg = this;\n\t          return arrayFunc(iteratees, function(iteratee) {\n\t            return apply(iteratee, thisArg, args);\n\t          });\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates the padding for `string` based on `length`. The `chars` string\n\t     * is truncated if the number of characters exceeds `length`.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to create padding for.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padding for `string`.\n\t     */\n\t    function createPadding(string, length, chars) {\n\t      length = toInteger(length);\n\t\n\t      var strLength = stringSize(string);\n\t      if (!length || strLength >= length) {\n\t        return '';\n\t      }\n\t      var padLength = length - strLength;\n\t      chars = chars === undefined ? ' ' : (chars + '');\n\t\n\t      var result = repeat(chars, nativeCeil(padLength / stringSize(chars)));\n\t      return reHasComplexSymbol.test(chars)\n\t        ? stringToArray(result).slice(0, padLength).join('')\n\t        : result.slice(0, padLength);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with the optional `this`\n\t     * binding of `thisArg` and the `partials` prepended to those provided to\n\t     * the wrapper.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {Array} partials The arguments to prepend to those provided to the new function.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createPartialWrapper(func, bitmask, thisArg, partials) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var argsIndex = -1,\n\t            argsLength = arguments.length,\n\t            leftIndex = -1,\n\t            leftLength = partials.length,\n\t            args = Array(leftLength + argsLength),\n\t            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t\n\t        while (++leftIndex < leftLength) {\n\t          args[leftIndex] = partials[leftIndex];\n\t        }\n\t        while (argsLength--) {\n\t          args[leftIndex++] = arguments[++argsIndex];\n\t        }\n\t        return apply(fn, isBind ? thisArg : this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.range` or `_.rangeRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new range function.\n\t     */\n\t    function createRange(fromRight) {\n\t      return function(start, end, step) {\n\t        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n\t          end = step = undefined;\n\t        }\n\t        // Ensure the sign of `-0` is preserved.\n\t        start = toNumber(start);\n\t        start = start === start ? start : 0;\n\t        if (end === undefined) {\n\t          end = start;\n\t          start = 0;\n\t        } else {\n\t          end = toNumber(end) || 0;\n\t        }\n\t        step = step === undefined ? (start < end ? 1 : -1) : (toNumber(step) || 0);\n\t        return baseRange(start, end, step, fromRight);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to continue currying.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n\t     * @param {Function} wrapFunc The function to create the `func` wrapper.\n\t     * @param {*} placeholder The placeholder to replace.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createRecurryWrapper(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isCurry = bitmask & CURRY_FLAG,\n\t          newArgPos = argPos ? copyArray(argPos) : undefined,\n\t          newsHolders = isCurry ? holders : undefined,\n\t          newHoldersRight = isCurry ? undefined : holders,\n\t          newPartials = isCurry ? partials : undefined,\n\t          newPartialsRight = isCurry ? undefined : partials;\n\t\n\t      bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n\t      bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\t\n\t      if (!(bitmask & CURRY_BOUND_FLAG)) {\n\t        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n\t      }\n\t      var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, arity],\n\t          result = wrapFunc.apply(undefined, newData);\n\t\n\t      if (isLaziable(func)) {\n\t        setData(result, newData);\n\t      }\n\t      result.placeholder = placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.round`.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `Math` method to use when rounding.\n\t     * @returns {Function} Returns the new round function.\n\t     */\n\t    function createRound(methodName) {\n\t      var func = Math[methodName];\n\t      return function(number, precision) {\n\t        number = toNumber(number);\n\t        precision = toInteger(precision);\n\t        if (precision) {\n\t          // Shift with exponential notation to avoid floating-point issues.\n\t          // See [MDN](https://mdn.io/round#Examples) for more details.\n\t          var pair = (toString(number) + 'e').split('e'),\n\t              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\t\n\t          pair = (toString(value) + 'e').split('e');\n\t          return +(pair[0] + 'e' + (+pair[1] - precision));\n\t        }\n\t        return func(number);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a set of `values`.\n\t     *\n\t     * @private\n\t     * @param {Array} values The values to add to the set.\n\t     * @returns {Object} Returns the new set.\n\t     */\n\t    var createSet = !(Set && new Set([1, 2]).size === 2) ? noop : function(values) {\n\t      return new Set(values);\n\t    };\n\t\n\t    /**\n\t     * Creates a function that either curries or invokes `func` with optional\n\t     * `this` binding and partially applied arguments.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - `_.bind`\n\t     *     2 - `_.bindKey`\n\t     *     4 - `_.curry` or `_.curryRight` of a bound function\n\t     *     8 - `_.curry`\n\t     *    16 - `_.curryRight`\n\t     *    32 - `_.partial`\n\t     *    64 - `_.partialRight`\n\t     *   128 - `_.rearg`\n\t     *   256 - `_.ary`\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to be partially applied.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isBindKey = bitmask & BIND_KEY_FLAG;\n\t      if (!isBindKey && typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length = partials ? partials.length : 0;\n\t      if (!length) {\n\t        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n\t        partials = holders = undefined;\n\t      }\n\t      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n\t      arity = arity === undefined ? arity : toInteger(arity);\n\t      length -= holders ? holders.length : 0;\n\t\n\t      if (bitmask & PARTIAL_RIGHT_FLAG) {\n\t        var partialsRight = partials,\n\t            holdersRight = holders;\n\t\n\t        partials = holders = undefined;\n\t      }\n\t      var data = isBindKey ? undefined : getData(func),\n\t          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\t\n\t      if (data) {\n\t        mergeData(newData, data);\n\t      }\n\t      func = newData[0];\n\t      bitmask = newData[1];\n\t      thisArg = newData[2];\n\t      partials = newData[3];\n\t      holders = newData[4];\n\t      arity = newData[9] = newData[9] == null\n\t        ? (isBindKey ? 0 : func.length)\n\t        : nativeMax(newData[9] - length, 0);\n\t\n\t      if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {\n\t        bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);\n\t      }\n\t      if (!bitmask || bitmask == BIND_FLAG) {\n\t        var result = createBaseWrapper(func, bitmask, thisArg);\n\t      } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {\n\t        result = createCurryWrapper(func, bitmask, arity);\n\t      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {\n\t        result = createPartialWrapper(func, bitmask, thisArg, partials);\n\t      } else {\n\t        result = createHybridWrapper.apply(undefined, newData);\n\t      }\n\t      var setter = data ? baseSetData : setData;\n\t      return setter(result, newData);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for arrays with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to compare.\n\t     * @param {Array} other The other array to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n\t     * @param {Object} [stack] Tracks traversed `array` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n\t     */\n\t    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n\t      var index = -1,\n\t          isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n\t          isUnordered = bitmask & UNORDERED_COMPARE_FLAG,\n\t          arrLength = array.length,\n\t          othLength = other.length;\n\t\n\t      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n\t        return false;\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(array);\n\t      if (stacked) {\n\t        return stacked == other;\n\t      }\n\t      var result = true;\n\t      stack.set(array, other);\n\t\n\t      // Ignore non-index properties.\n\t      while (++index < arrLength) {\n\t        var arrValue = array[index],\n\t            othValue = other[index];\n\t\n\t        if (customizer) {\n\t          var compared = isPartial\n\t            ? customizer(othValue, arrValue, index, other, array, stack)\n\t            : customizer(arrValue, othValue, index, array, other, stack);\n\t        }\n\t        if (compared !== undefined) {\n\t          if (compared) {\n\t            continue;\n\t          }\n\t          result = false;\n\t          break;\n\t        }\n\t        // Recursively compare arrays (susceptible to call stack limits).\n\t        if (isUnordered) {\n\t          if (!arraySome(other, function(othValue) {\n\t                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack);\n\t              })) {\n\t            result = false;\n\t            break;\n\t          }\n\t        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n\t          result = false;\n\t          break;\n\t        }\n\t      }\n\t      stack['delete'](array);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for comparing objects of\n\t     * the same `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports comparing values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {string} tag The `toStringTag` of the objects to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalByTag(object, other, tag, equalFunc, customizer, bitmask) {\n\t      switch (tag) {\n\t        case arrayBufferTag:\n\t          if ((object.byteLength != other.byteLength) ||\n\t              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n\t            return false;\n\t          }\n\t          return true;\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n\t          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n\t          return +object == +other;\n\t\n\t        case errorTag:\n\t          return object.name == other.name && object.message == other.message;\n\t\n\t        case numberTag:\n\t          // Treat `NaN` vs. `NaN` as equal.\n\t          return (object != +object) ? other != +other : object == +other;\n\t\n\t        case regexpTag:\n\t        case stringTag:\n\t          // Coerce regexes to strings and treat strings primitives and string\n\t          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n\t          return object == (other + '');\n\t\n\t        case mapTag:\n\t          var convert = mapToArray;\n\t\n\t        case setTag:\n\t          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n\t          convert || (convert = setToArray);\n\t\n\t          // Recursively compare objects (susceptible to call stack limits).\n\t          return (isPartial || object.size == other.size) &&\n\t            equalFunc(convert(object), convert(other), customizer, bitmask | UNORDERED_COMPARE_FLAG);\n\t\n\t        case symbolTag:\n\t          return !!Symbol && (symbolValueOf.call(object) == symbolValueOf.call(other));\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for objects with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n\t     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n\t      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n\t          objProps = keys(object),\n\t          objLength = objProps.length,\n\t          othProps = keys(other),\n\t          othLength = othProps.length;\n\t\n\t      if (objLength != othLength && !isPartial) {\n\t        return false;\n\t      }\n\t      var index = objLength;\n\t      while (index--) {\n\t        var key = objProps[index];\n\t        if (!(isPartial ? key in other : baseHas(other, key))) {\n\t          return false;\n\t        }\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(object);\n\t      if (stacked) {\n\t        return stacked == other;\n\t      }\n\t      var result = true;\n\t      stack.set(object, other);\n\t\n\t      var skipCtor = isPartial;\n\t      while (++index < objLength) {\n\t        key = objProps[index];\n\t        var objValue = object[key],\n\t            othValue = other[key];\n\t\n\t        if (customizer) {\n\t          var compared = isPartial\n\t            ? customizer(othValue, objValue, key, other, object, stack)\n\t            : customizer(objValue, othValue, key, object, other, stack);\n\t        }\n\t        // Recursively compare objects (susceptible to call stack limits).\n\t        if (!(compared === undefined\n\t              ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n\t              : compared\n\t            )) {\n\t          result = false;\n\t          break;\n\t        }\n\t        skipCtor || (skipCtor = key == 'constructor');\n\t      }\n\t      if (result && !skipCtor) {\n\t        var objCtor = object.constructor,\n\t            othCtor = other.constructor;\n\t\n\t        // Non `Object` object instances with different constructors are not equal.\n\t        if (objCtor != othCtor &&\n\t            ('constructor' in object && 'constructor' in other) &&\n\t            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n\t              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n\t          result = false;\n\t        }\n\t      }\n\t      stack['delete'](object);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets metadata for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {*} Returns the metadata for `func`.\n\t     */\n\t    var getData = !metaMap ? noop : function(func) {\n\t      return metaMap.get(func);\n\t    };\n\t\n\t    /**\n\t     * Gets the name of `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {string} Returns the function name.\n\t     */\n\t    function getFuncName(func) {\n\t      var result = (func.name + ''),\n\t          array = realNames[result],\n\t          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\t\n\t      while (length--) {\n\t        var data = array[length],\n\t            otherFunc = data.func;\n\t        if (otherFunc == null || otherFunc == func) {\n\t          return data.name;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the appropriate \"iteratee\" function. If the `_.iteratee` method is\n\t     * customized this function returns the custom method, otherwise it returns\n\t     * `baseIteratee`. If arguments are provided the chosen function is invoked\n\t     * with them and its result is returned.\n\t     *\n\t     * @private\n\t     * @param {*} [value] The value to convert to an iteratee.\n\t     * @param {number} [arity] The arity of the created iteratee.\n\t     * @returns {Function} Returns the chosen function or its result.\n\t     */\n\t    function getIteratee() {\n\t      var result = lodash.iteratee || iteratee;\n\t      result = result === iteratee ? baseIteratee : result;\n\t      return arguments.length ? result(arguments[0], arguments[1]) : result;\n\t    }\n\t\n\t    /**\n\t     * Gets the \"length\" property value of `object`.\n\t     *\n\t     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n\t     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {*} Returns the \"length\" value.\n\t     */\n\t    var getLength = baseProperty('length');\n\t\n\t    /**\n\t     * Gets the property names, values, and compare flags of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the match data of `object`.\n\t     */\n\t    function getMatchData(object) {\n\t      var result = toPairs(object),\n\t          length = result.length;\n\t\n\t      while (length--) {\n\t        result[length][2] = isStrictComparable(result[length][1]);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the native function at `key` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {string} key The key of the method to get.\n\t     * @returns {*} Returns the function if it's native, else `undefined`.\n\t     */\n\t    function getNative(object, key) {\n\t      var value = object == null ? undefined : object[key];\n\t      return isNative(value) ? value : undefined;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own symbol properties of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of symbols.\n\t     */\n\t    var getSymbols = getOwnPropertySymbols || function() {\n\t      return [];\n\t    };\n\t\n\t    /**\n\t     * Gets the `toStringTag` of `value`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {string} Returns the `toStringTag`.\n\t     */\n\t    function getTag(value) {\n\t      return objectToString.call(value);\n\t    }\n\t\n\t    // Fallback for IE 11 providing `toStringTag` values for maps, sets, and weakmaps.\n\t    if ((Map && getTag(new Map) != mapTag) ||\n\t        (Set && getTag(new Set) != setTag) ||\n\t        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n\t      getTag = function(value) {\n\t        var result = objectToString.call(value),\n\t            Ctor = result == objectTag ? value.constructor : null,\n\t            ctorString = typeof Ctor == 'function' ? funcToString.call(Ctor) : '';\n\t\n\t        if (ctorString) {\n\t          switch (ctorString) {\n\t            case mapCtorString: return mapTag;\n\t            case setCtorString: return setTag;\n\t            case weakMapCtorString: return weakMapTag;\n\t          }\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the view.\n\t     * @param {number} end The end of the view.\n\t     * @param {Array} transforms The transformations to apply to the view.\n\t     * @returns {Object} Returns an object containing the `start` and `end`\n\t     *  positions of the view.\n\t     */\n\t    function getView(start, end, transforms) {\n\t      var index = -1,\n\t          length = transforms.length;\n\t\n\t      while (++index < length) {\n\t        var data = transforms[index],\n\t            size = data.size;\n\t\n\t        switch (data.type) {\n\t          case 'drop':      start += size; break;\n\t          case 'dropRight': end -= size; break;\n\t          case 'take':      end = nativeMin(end, start + size); break;\n\t          case 'takeRight': start = nativeMax(start, end - size); break;\n\t        }\n\t      }\n\t      return { 'start': start, 'end': end };\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` exists on `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @param {Function} hasFunc The function to check properties.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     */\n\t    function hasPath(object, path, hasFunc) {\n\t      if (object == null) {\n\t        return false;\n\t      }\n\t      var result = hasFunc(object, path);\n\t      if (!result && !isKey(path)) {\n\t        path = baseToPath(path);\n\t        object = parent(object, path);\n\t        if (object != null) {\n\t          path = last(path);\n\t          result = hasFunc(object, path);\n\t        }\n\t      }\n\t      var length = object ? object.length : undefined;\n\t      return result || (\n\t        !!length && isLength(length) && isIndex(path, length) &&\n\t        (isArray(object) || isString(object) || isArguments(object))\n\t      );\n\t    }\n\t\n\t    /**\n\t     * Initializes an array clone.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to clone.\n\t     * @returns {Array} Returns the initialized clone.\n\t     */\n\t    function initCloneArray(array) {\n\t      var length = array.length,\n\t          result = array.constructor(length);\n\t\n\t      // Add properties assigned by `RegExp#exec`.\n\t      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n\t        result.index = array.index;\n\t        result.input = array.input;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneObject(object) {\n\t      if (isPrototype(object)) {\n\t        return {};\n\t      }\n\t      var Ctor = object.constructor;\n\t      return baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone based on its `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports cloning values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @param {string} tag The `toStringTag` of the object to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneByTag(object, tag, isDeep) {\n\t      var Ctor = object.constructor;\n\t      switch (tag) {\n\t        case arrayBufferTag:\n\t          return cloneArrayBuffer(object);\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t          return new Ctor(+object);\n\t\n\t        case float32Tag: case float64Tag:\n\t        case int8Tag: case int16Tag: case int32Tag:\n\t        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n\t          return cloneTypedArray(object, isDeep);\n\t\n\t        case mapTag:\n\t          return cloneMap(object);\n\t\n\t        case numberTag:\n\t        case stringTag:\n\t          return new Ctor(object);\n\t\n\t        case regexpTag:\n\t          return cloneRegExp(object);\n\t\n\t        case setTag:\n\t          return cloneSet(object);\n\t\n\t        case symbolTag:\n\t          return cloneSymbol(object);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Creates an array of index keys for `object` values of arrays,\n\t     * `arguments` objects, and strings, otherwise `null` is returned.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array|null} Returns index keys, else `null`.\n\t     */\n\t    function indexKeys(object) {\n\t      var length = object ? object.length : undefined;\n\t      if (isLength(length) &&\n\t          (isArray(object) || isString(object) || isArguments(object))) {\n\t        return baseTimes(length, String);\n\t      }\n\t      return null;\n\t    }\n\t\n\t    /**\n\t     * Checks if the given arguments are from an iteratee call.\n\t     *\n\t     * @private\n\t     * @param {*} value The potential iteratee value argument.\n\t     * @param {*} index The potential iteratee index or key argument.\n\t     * @param {*} object The potential iteratee object argument.\n\t     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n\t     */\n\t    function isIterateeCall(value, index, object) {\n\t      if (!isObject(object)) {\n\t        return false;\n\t      }\n\t      var type = typeof index;\n\t      if (type == 'number'\n\t          ? (isArrayLike(object) && isIndex(index, object.length))\n\t          : (type == 'string' && index in object)) {\n\t        return eq(object[index], value);\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a property name and not a property path.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {Object} [object] The object to query keys on.\n\t     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n\t     */\n\t    function isKey(value, object) {\n\t      if (typeof value == 'number') {\n\t        return true;\n\t      }\n\t      return !isArray(value) &&\n\t        (reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n\t          (object != null && value in Object(object)));\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for use as unique object key.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n\t     */\n\t    function isKeyable(value) {\n\t      var type = typeof value;\n\t      return type == 'number' || type == 'boolean' ||\n\t        (type == 'string' && value !== '__proto__') || value == null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has a lazy counterpart.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n\t     */\n\t    function isLaziable(func) {\n\t      var funcName = getFuncName(func),\n\t          other = lodash[funcName];\n\t\n\t      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n\t        return false;\n\t      }\n\t      if (func === other) {\n\t        return true;\n\t      }\n\t      var data = getData(other);\n\t      return !!data && func === data[0];\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is likely a prototype object.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n\t     */\n\t    function isPrototype(value) {\n\t      var Ctor = value && value.constructor,\n\t          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\t\n\t      return value === proto;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` if suitable for strict\n\t     *  equality comparisons, else `false`.\n\t     */\n\t    function isStrictComparable(value) {\n\t      return value === value && !isObject(value);\n\t    }\n\t\n\t    /**\n\t     * Merges the function metadata of `source` into `data`.\n\t     *\n\t     * Merging metadata reduces the number of wrappers used to invoke a function.\n\t     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n\t     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n\t     * modify function arguments, making the order in which they are executed important,\n\t     * preventing the merging of metadata. However, we make an exception for a safe\n\t     * combined case where curried functions have `_.ary` and or `_.rearg` applied.\n\t     *\n\t     * @private\n\t     * @param {Array} data The destination metadata.\n\t     * @param {Array} source The source metadata.\n\t     * @returns {Array} Returns `data`.\n\t     */\n\t    function mergeData(data, source) {\n\t      var bitmask = data[1],\n\t          srcBitmask = source[1],\n\t          newBitmask = bitmask | srcBitmask,\n\t          isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);\n\t\n\t      var isCombo =\n\t        (srcBitmask == ARY_FLAG && (bitmask == CURRY_FLAG)) ||\n\t        (srcBitmask == ARY_FLAG && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||\n\t        (srcBitmask == (ARY_FLAG | REARG_FLAG) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));\n\t\n\t      // Exit early if metadata can't be merged.\n\t      if (!(isCommon || isCombo)) {\n\t        return data;\n\t      }\n\t      // Use source `thisArg` if available.\n\t      if (srcBitmask & BIND_FLAG) {\n\t        data[2] = source[2];\n\t        // Set when currying a bound function.\n\t        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n\t      }\n\t      // Compose partial arguments.\n\t      var value = source[3];\n\t      if (value) {\n\t        var partials = data[3];\n\t        data[3] = partials ? composeArgs(partials, value, source[4]) : copyArray(value);\n\t        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : copyArray(source[4]);\n\t      }\n\t      // Compose partial right arguments.\n\t      value = source[5];\n\t      if (value) {\n\t        partials = data[5];\n\t        data[5] = partials ? composeArgsRight(partials, value, source[6]) : copyArray(value);\n\t        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : copyArray(source[6]);\n\t      }\n\t      // Use source `argPos` if available.\n\t      value = source[7];\n\t      if (value) {\n\t        data[7] = copyArray(value);\n\t      }\n\t      // Use source `ary` if it's smaller.\n\t      if (srcBitmask & ARY_FLAG) {\n\t        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n\t      }\n\t      // Use source `arity` if one is not provided.\n\t      if (data[9] == null) {\n\t        data[9] = source[9];\n\t      }\n\t      // Use source `func` and merge bitmasks.\n\t      data[0] = source[0];\n\t      data[1] = newBitmask;\n\t\n\t      return data;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n\t     *\n\t     * @private\n\t     * @param {*} objValue The destination value.\n\t     * @param {*} srcValue The source value.\n\t     * @param {string} key The key of the property to merge.\n\t     * @param {Object} object The parent object of `objValue`.\n\t     * @param {Object} source The parent object of `srcValue`.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged counterparts.\n\t     * @returns {*} Returns the value to assign.\n\t     */\n\t    function mergeDefaults(objValue, srcValue, key, object, source, stack) {\n\t      if (isObject(objValue) && isObject(srcValue)) {\n\t        stack.set(srcValue, objValue);\n\t        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack);\n\t      }\n\t      return objValue;\n\t    }\n\t\n\t    /**\n\t     * Gets the parent value at `path` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} path The path to get the parent value of.\n\t     * @returns {*} Returns the parent value.\n\t     */\n\t    function parent(object, path) {\n\t      return path.length == 1 ? object : get(object, baseSlice(path, 0, -1));\n\t    }\n\t\n\t    /**\n\t     * Reorder `array` according to the specified indexes where the element at\n\t     * the first index is assigned as the first element, the element at\n\t     * the second index is assigned as the second element, and so on.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to reorder.\n\t     * @param {Array} indexes The arranged array indexes.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function reorder(array, indexes) {\n\t      var arrLength = array.length,\n\t          length = nativeMin(indexes.length, arrLength),\n\t          oldArray = copyArray(array);\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Sets metadata for `func`.\n\t     *\n\t     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n\t     * period of time, it will trip its breaker and transition to an identity function\n\t     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n\t     * for more details.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var setData = (function() {\n\t      var count = 0,\n\t          lastCalled = 0;\n\t\n\t      return function(key, value) {\n\t        var stamp = now(),\n\t            remaining = HOT_SPAN - (stamp - lastCalled);\n\t\n\t        lastCalled = stamp;\n\t        if (remaining > 0) {\n\t          if (++count >= HOT_COUNT) {\n\t            return key;\n\t          }\n\t        } else {\n\t          count = 0;\n\t        }\n\t        return baseSetData(key, value);\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * Converts `string` to a property path array.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to convert.\n\t     * @returns {Array} Returns the property path array.\n\t     */\n\t    function stringToPath(string) {\n\t      var result = [];\n\t      toString(string).replace(rePropName, function(match, number, quote, string) {\n\t        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an array-like object if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Array} Returns the array-like object.\n\t     */\n\t    function toArrayLikeObject(value) {\n\t      return isArrayLikeObject(value) ? value : [];\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a function if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Function} Returns the function.\n\t     */\n\t    function toFunction(value) {\n\t      return typeof value == 'function' ? value : identity;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `wrapper`.\n\t     *\n\t     * @private\n\t     * @param {Object} wrapper The wrapper to clone.\n\t     * @returns {Object} Returns the cloned wrapper.\n\t     */\n\t    function wrapperClone(wrapper) {\n\t      if (wrapper instanceof LazyWrapper) {\n\t        return wrapper.clone();\n\t      }\n\t      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n\t      result.__actions__ = copyArray(wrapper.__actions__);\n\t      result.__index__  = wrapper.__index__;\n\t      result.__values__ = wrapper.__values__;\n\t      return result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of elements split into groups the length of `size`.\n\t     * If `array` can't be split evenly, the final chunk will be the remaining\n\t     * elements.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to process.\n\t     * @param {number} [size=0] The length of each chunk.\n\t     * @returns {Array} Returns the new array containing chunks.\n\t     * @example\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 2);\n\t     * // => [['a', 'b'], ['c', 'd']]\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 3);\n\t     * // => [['a', 'b', 'c'], ['d']]\n\t     */\n\t    function chunk(array, size) {\n\t      size = nativeMax(toInteger(size), 0);\n\t\n\t      var length = array ? array.length : 0;\n\t      if (!length || size < 1) {\n\t        return [];\n\t      }\n\t      var index = 0,\n\t          resIndex = -1,\n\t          result = Array(nativeCeil(length / size));\n\t\n\t      while (index < length) {\n\t        result[++resIndex] = baseSlice(array, index, (index += size));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array with all falsey values removed. The values `false`, `null`,\n\t     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to compact.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.compact([0, 1, false, 2, '', 3]);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function compact(array) {\n\t      var index = -1,\n\t          length = array ? array.length : 0,\n\t          resIndex = -1,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (value) {\n\t          result[++resIndex] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a new array concatenating `array` with any additional arrays\n\t     * and/or values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to concatenate.\n\t     * @param {...*} [values] The values to concatenate.\n\t     * @returns {Array} Returns the new concatenated array.\n\t     * @example\n\t     *\n\t     * var array = [1];\n\t     * var other = _.concat(array, 2, [3], [[4]]);\n\t     *\n\t     * console.log(other);\n\t     * // => [1, 2, 3, [4]]\n\t     *\n\t     * console.log(array);\n\t     * // => [1]\n\t     */\n\t    var concat = rest(function(array, values) {\n\t      if (!isArray(array)) {\n\t        array = array == null ? [] : [Object(array)];\n\t      }\n\t      values = baseFlatten(values);\n\t      return arrayConcat(array, values);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of unique `array` values not included in the other\n\t     * given arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.difference([3, 2, 1], [4, 2]);\n\t     * // => [3, 1]\n\t     */\n\t    var difference = rest(function(array, values) {\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, false, true))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.difference` except that it accepts `iteratee` which\n\t     * is invoked for each element of `array` and `values` to generate the criterion\n\t     * by which uniqueness is computed. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.differenceBy([3.1, 2.2, 1.3], [4.4, 2.5], Math.floor);\n\t     * // => [3.1, 1.3]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    var differenceBy = rest(function(array, values) {\n\t      var iteratee = last(values);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, false, true), getIteratee(iteratee))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.difference` except that it accepts `comparator`\n\t     * which is invoked to compare elements of `array` to `values`. The comparator\n\t     * is invoked with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     *\n\t     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n\t     * // => [{ 'x': 2, 'y': 1 }]\n\t     */\n\t    var differenceWith = rest(function(array, values) {\n\t      var comparator = last(values);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, false, true), undefined, comparator)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.drop([1, 2, 3]);\n\t     * // => [2, 3]\n\t     *\n\t     * _.drop([1, 2, 3], 2);\n\t     * // => [3]\n\t     *\n\t     * _.drop([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.drop([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function drop(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      return baseSlice(array, n < 0 ? 0 : n, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRight([1, 2, 3]);\n\t     * // => [1, 2]\n\t     *\n\t     * _.dropRight([1, 2, 3], 2);\n\t     * // => [1]\n\t     *\n\t     * _.dropRight([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.dropRight([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function dropRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      n = length - n;\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the end.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.dropRightWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.dropRightWhile(users, ['active', false]);\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.dropRightWhile(users, 'active');\n\t     * // => objects for ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropRightWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the beginning.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.dropWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.dropWhile(users, ['active', false]);\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.dropWhile(users, 'active');\n\t     * // => objects for ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Fills elements of `array` with `value` from `start` up to, but not\n\t     * including, `end`.\n\t     *\n\t     * **Note:** This method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.fill(array, 'a');\n\t     * console.log(array);\n\t     * // => ['a', 'a', 'a']\n\t     *\n\t     * _.fill(Array(3), 2);\n\t     * // => [2, 2, 2]\n\t     *\n\t     * _.fill([4, 6, 8, 10], '*', 1, 3);\n\t     * // => [4, '*', '*', 10]\n\t     */\n\t    function fill(array, value, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseFill(array, value, start, end);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the index of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n\t     * // => 0\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findIndex(users, { 'user': 'fred', 'active': false });\n\t     * // => 1\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findIndex(users, ['active', false]);\n\t     * // => 0\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findIndex(users, 'active');\n\t     * // => 2\n\t     */\n\t    function findIndex(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseFindIndex(array, getIteratee(predicate, 3))\n\t        : -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.findIndex` except that it iterates over elements\n\t     * of `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n\t     * // => 2\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n\t     * // => 0\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findLastIndex(users, ['active', false]);\n\t     * // => 2\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findLastIndex(users, 'active');\n\t     * // => 0\n\t     */\n\t    function findLastIndex(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseFindIndex(array, getIteratee(predicate, 3), true)\n\t        : -1;\n\t    }\n\t\n\t    /**\n\t     * Flattens `array` a single level.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flatten([1, [2, 3, [4]]]);\n\t     * // => [1, 2, 3, [4]]\n\t     */\n\t    function flatten(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array) : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.flatten` except that it recursively flattens `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to recursively flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flattenDeep([1, [2, 3, [4]]]);\n\t     * // => [1, 2, 3, 4]\n\t     */\n\t    function flattenDeep(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array, true) : [];\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.toPairs`; this method returns an object composed\n\t     * from key-value `pairs`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} pairs The key-value pairs.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.fromPairs([['fred', 30], ['barney', 40]]);\n\t     * // => { 'fred': 30, 'barney': 40 }\n\t     */\n\t    function fromPairs(pairs) {\n\t      var index = -1,\n\t          length = pairs ? pairs.length : 0,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var pair = pairs[index];\n\t        result[pair[0]] = pair[1];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias first\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the first element of `array`.\n\t     * @example\n\t     *\n\t     * _.head([1, 2, 3]);\n\t     * // => 1\n\t     *\n\t     * _.head([]);\n\t     * // => undefined\n\t     */\n\t    function head(array) {\n\t      return array ? array[0] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the first occurrence of `value` is found in `array`\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. If `fromIndex` is negative, it's used as the offset\n\t     * from the end of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.indexOf([1, 2, 1, 2], 2);\n\t     * // => 1\n\t     *\n\t     * // Search from the `fromIndex`.\n\t     * _.indexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 3\n\t     */\n\t    function indexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      fromIndex = toInteger(fromIndex);\n\t      if (fromIndex < 0) {\n\t        fromIndex = nativeMax(length + fromIndex, 0);\n\t      }\n\t      return baseIndexOf(array, value, fromIndex);\n\t    }\n\t\n\t    /**\n\t     * Gets all but the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.initial([1, 2, 3]);\n\t     * // => [1, 2]\n\t     */\n\t    function initial(array) {\n\t      return dropRight(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values that are included in all given arrays\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     * @example\n\t     *\n\t     * _.intersection([2, 1], [4, 2], [1, 2]);\n\t     * // => [2]\n\t     */\n\t    var intersection = rest(function(arrays) {\n\t      var mapped = arrayMap(arrays, toArrayLikeObject);\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.intersection` except that it accepts `iteratee`\n\t     * which is invoked for each element of each `arrays` to generate the criterion\n\t     * by which uniqueness is computed. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     * @example\n\t     *\n\t     * _.intersectionBy([2.1, 1.2], [4.3, 2.4], Math.floor);\n\t     * // => [2.1]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }]\n\t     */\n\t    var intersectionBy = rest(function(arrays) {\n\t      var iteratee = last(arrays),\n\t          mapped = arrayMap(arrays, toArrayLikeObject);\n\t\n\t      if (iteratee === last(mapped)) {\n\t        iteratee = undefined;\n\t      } else {\n\t        mapped.pop();\n\t      }\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped, getIteratee(iteratee))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.intersection` except that it accepts `comparator`\n\t     * which is invoked to compare elements of `arrays`. The comparator is invoked\n\t     * with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.intersectionWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }]\n\t     */\n\t    var intersectionWith = rest(function(arrays) {\n\t      var comparator = last(arrays),\n\t          mapped = arrayMap(arrays, toArrayLikeObject);\n\t\n\t      if (comparator === last(mapped)) {\n\t        comparator = undefined;\n\t      } else {\n\t        mapped.pop();\n\t      }\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped, undefined, comparator)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Converts all elements in `array` into a string separated by `separator`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to convert.\n\t     * @param {string} [separator=','] The element separator.\n\t     * @returns {string} Returns the joined string.\n\t     * @example\n\t     *\n\t     * _.join(['a', 'b', 'c'], '~');\n\t     * // => 'a~b~c'\n\t     */\n\t    function join(array, separator) {\n\t      return array ? nativeJoin.call(array, separator) : '';\n\t    }\n\t\n\t    /**\n\t     * Gets the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the last element of `array`.\n\t     * @example\n\t     *\n\t     * _.last([1, 2, 3]);\n\t     * // => 3\n\t     */\n\t    function last(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? array[length - 1] : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it iterates over elements of\n\t     * `array` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=array.length-1] The index to search from.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.lastIndexOf([1, 2, 1, 2], 2);\n\t     * // => 3\n\t     *\n\t     * // Search from the `fromIndex`.\n\t     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 1\n\t     */\n\t    function lastIndexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length;\n\t      if (fromIndex !== undefined) {\n\t        index = toInteger(fromIndex);\n\t        index = (index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1)) + 1;\n\t      }\n\t      if (value !== value) {\n\t        return indexOfNaN(array, index, true);\n\t      }\n\t      while (index--) {\n\t        if (array[index] === value) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Removes all given values from `array` using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** Unlike `_.without`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...*} [values] The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 1, 2, 3];\n\t     *\n\t     * _.pull(array, 2, 3);\n\t     * console.log(array);\n\t     * // => [1, 1]\n\t     */\n\t    var pull = rest(pullAll);\n\t\n\t    /**\n\t     * This method is like `_.pull` except that it accepts an array of values to remove.\n\t     *\n\t     * **Note:** Unlike `_.difference`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 1, 2, 3];\n\t     *\n\t     * _.pullAll(array, [2, 3]);\n\t     * console.log(array);\n\t     * // => [1, 1]\n\t     */\n\t    function pullAll(array, values) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values)\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n\t     * invoked for each element of `array` and `values` to generate the criterion\n\t     * by which uniqueness is computed. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n\t     *\n\t     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n\t     * console.log(array);\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    function pullAllBy(array, values, iteratee) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAllBy(array, values, getIteratee(iteratee))\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * Removes elements from `array` corresponding to `indexes` and returns an\n\t     * array of removed elements.\n\t     *\n\t     * **Note:** Unlike `_.at`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n\t     *  specified individually or in arrays.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [5, 10, 15, 20];\n\t     * var evens = _.pullAt(array, 1, 3);\n\t     *\n\t     * console.log(array);\n\t     * // => [5, 15]\n\t     *\n\t     * console.log(evens);\n\t     * // => [10, 20]\n\t     */\n\t    var pullAt = rest(function(array, indexes) {\n\t      indexes = arrayMap(baseFlatten(indexes), String);\n\t\n\t      var result = baseAt(array, indexes);\n\t      basePullAt(array, indexes.sort(compareAscending));\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Removes all elements from `array` that `predicate` returns truthy for\n\t     * and returns an array of the removed elements. The predicate is invoked with\n\t     * three arguments: (value, index, array).\n\t     *\n\t     * **Note:** Unlike `_.filter`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 4];\n\t     * var evens = _.remove(array, function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 3]\n\t     *\n\t     * console.log(evens);\n\t     * // => [2, 4]\n\t     */\n\t    function remove(array, predicate) {\n\t      var result = [];\n\t      if (!(array && array.length)) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexes = [],\n\t          length = array.length;\n\t\n\t      predicate = getIteratee(predicate, 3);\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result.push(value);\n\t          indexes.push(index);\n\t        }\n\t      }\n\t      basePullAt(array, indexes);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses `array` so that the first element becomes the last, the second\n\t     * element becomes the second to last, and so on.\n\t     *\n\t     * **Note:** This method mutates `array` and is based on\n\t     * [`Array#reverse`](https://mdn.io/Array/reverse).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.reverse(array);\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function reverse(array) {\n\t      return array ? nativeReverse.call(array) : array;\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` from `start` up to, but not including, `end`.\n\t     *\n\t     * **Note:** This method is used instead of [`Array#slice`](https://mdn.io/Array/slice)\n\t     * to ensure dense arrays are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function slice(array, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      else {\n\t        start = start == null ? 0 : toInteger(start);\n\t        end = end === undefined ? length : toInteger(end);\n\t      }\n\t      return baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * Uses a binary search to determine the lowest index at which `value` should\n\t     * be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedIndex([30, 50], 40);\n\t     * // => 1\n\t     *\n\t     * _.sortedIndex([4, 5], 4);\n\t     * // => 0\n\t     */\n\t    function sortedIndex(array, value) {\n\t      return baseSortedIndex(array, value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n\t     * which is invoked for `value` and each element of `array` to compute their\n\t     * sort ranking. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n\t     * @example\n\t     *\n\t     * var dict = { 'thirty': 30, 'forty': 40, 'fifty': 50 };\n\t     *\n\t     * _.sortedIndexBy(['thirty', 'fifty'], 'forty', _.propertyOf(dict));\n\t     * // => 1\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sortedIndexBy([{ 'x': 4 }, { 'x': 5 }], { 'x': 4 }, 'x');\n\t     * // => 0\n\t     */\n\t    function sortedIndexBy(array, value, iteratee) {\n\t      return baseSortedIndexBy(array, value, getIteratee(iteratee));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it performs a binary\n\t     * search on a sorted `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.sortedIndexOf([1, 1, 2, 2], 2);\n\t     * // => 2\n\t     */\n\t    function sortedIndexOf(array, value) {\n\t      var length = array ? array.length : 0;\n\t      if (length) {\n\t        var index = baseSortedIndex(array, value);\n\t        if (index < length && eq(array[index], value)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it returns the highest\n\t     * index at which `value` should be inserted into `array` in order to\n\t     * maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndex([4, 5], 4);\n\t     * // => 1\n\t     */\n\t    function sortedLastIndex(array, value) {\n\t      return baseSortedIndex(array, value, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n\t     * which is invoked for `value` and each element of `array` to compute their\n\t     * sort ranking. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n\t     * @example\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sortedLastIndexBy([{ 'x': 4 }, { 'x': 5 }], { 'x': 4 }, 'x');\n\t     * // => 1\n\t     */\n\t    function sortedLastIndexBy(array, value, iteratee) {\n\t      return baseSortedIndexBy(array, value, getIteratee(iteratee), true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.lastIndexOf` except that it performs a binary\n\t     * search on a sorted `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndexOf([1, 1, 2, 2], 2);\n\t     * // => 3\n\t     */\n\t    function sortedLastIndexOf(array, value) {\n\t      var length = array ? array.length : 0;\n\t      if (length) {\n\t        var index = baseSortedIndex(array, value, true) - 1;\n\t        if (eq(array[index], value)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it's designed and optimized\n\t     * for sorted arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.sortedUniq([1, 1, 2]);\n\t     * // => [1, 2]\n\t     */\n\t    function sortedUniq(array) {\n\t      return (array && array.length)\n\t        ? baseSortedUniq(array)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniqBy` except that it's designed and optimized\n\t     * for sorted arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n\t     * // => [1.1, 2.3]\n\t     */\n\t    function sortedUniqBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseSortedUniqBy(array, getIteratee(iteratee))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Gets all but the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.tail([1, 2, 3]);\n\t     * // => [2, 3]\n\t     */\n\t    function tail(array) {\n\t      return drop(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.take([1, 2, 3]);\n\t     * // => [1]\n\t     *\n\t     * _.take([1, 2, 3], 2);\n\t     * // => [1, 2]\n\t     *\n\t     * _.take([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.take([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function take(array, n, guard) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRight([1, 2, 3]);\n\t     * // => [3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 2);\n\t     * // => [2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function takeRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      n = length - n;\n\t      return baseSlice(array, n < 0 ? 0 : n, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the end. Elements are\n\t     * taken until `predicate` returns falsey. The predicate is invoked with three\n\t     * arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.takeRightWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.takeRightWhile(users, ['active', false]);\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.takeRightWhile(users, 'active');\n\t     * // => []\n\t     */\n\t    function takeRightWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the beginning. Elements\n\t     * are taken until `predicate` returns falsey. The predicate is invoked with\n\t     * three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false},\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.takeWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.takeWhile(users, ['active', false]);\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.takeWhile(users, 'active');\n\t     * // => []\n\t     */\n\t    function takeWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values, in order, from all given arrays using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.union([2, 1], [4, 2], [1, 2]);\n\t     * // => [2, 1, 4]\n\t     */\n\t    var union = rest(function(arrays) {\n\t      return baseUniq(baseFlatten(arrays, false, true));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.union` except that it accepts `iteratee` which is\n\t     * invoked for each element of each `arrays` to generate the criterion by which\n\t     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.unionBy([2.1, 1.2], [4.3, 2.4], Math.floor);\n\t     * // => [2.1, 1.2, 4.3]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    var unionBy = rest(function(arrays) {\n\t      var iteratee = last(arrays);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return baseUniq(baseFlatten(arrays, false, true), getIteratee(iteratee));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.union` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `arrays`. The comparator is invoked\n\t     * with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.unionWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\t     */\n\t    var unionWith = rest(function(arrays) {\n\t      var comparator = last(arrays);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return baseUniq(baseFlatten(arrays, false, true), undefined, comparator);\n\t    });\n\t\n\t    /**\n\t     * Creates a duplicate-free version of an array, using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons, in which only the first occurrence of each element\n\t     * is kept.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.uniq([2, 1, 2]);\n\t     * // => [2, 1]\n\t     */\n\t    function uniq(array) {\n\t      return (array && array.length)\n\t        ? baseUniq(array)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n\t     * // => [2.1, 1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    function uniqBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseUniq(array, getIteratee(iteratee))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `array`. The comparator is invoked with\n\t     * two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 },  { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.uniqWith(objects, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n\t     */\n\t    function uniqWith(array, comparator) {\n\t      return (array && array.length)\n\t        ? baseUniq(array, undefined, comparator)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an array of grouped\n\t     * elements and creates an array regrouping the elements to their pre-zip\n\t     * configuration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     *\n\t     * _.unzip(zipped);\n\t     * // => [['fred', 'barney'], [30, 40], [true, false]]\n\t     */\n\t    function unzip(array) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var length = 0;\n\t      array = arrayFilter(array, function(group) {\n\t        if (isArrayLikeObject(group)) {\n\t          length = nativeMax(group.length, length);\n\t          return true;\n\t        }\n\t      });\n\t      return baseTimes(length, function(index) {\n\t        return arrayMap(array, baseProperty(index));\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n\t     * how regrouped values should be combined. The iteratee is invoked with the\n\t     * elements of each group: (...group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @param {Function} [iteratee=_.identity] The function to combine regrouped values.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n\t     * // => [[1, 10, 100], [2, 20, 200]]\n\t     *\n\t     * _.unzipWith(zipped, _.add);\n\t     * // => [3, 30, 300]\n\t     */\n\t    function unzipWith(array, iteratee) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var result = unzip(array);\n\t      if (iteratee == null) {\n\t        return result;\n\t      }\n\t      return arrayMap(result, function(group) {\n\t        return apply(iteratee, undefined, group);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates an array excluding all given values using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to filter.\n\t     * @param {...*} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.without([1, 2, 1, 3], 1, 2);\n\t     * // => [3]\n\t     */\n\t    var without = rest(function(array, values) {\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, values)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n\t     * of the given arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of values.\n\t     * @example\n\t     *\n\t     * _.xor([2, 1], [4, 2]);\n\t     * // => [1, 4]\n\t     */\n\t    var xor = rest(function(arrays) {\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.xor` except that it accepts `iteratee` which is\n\t     * invoked for each element of each `arrays` to generate the criterion by which\n\t     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of values.\n\t     * @example\n\t     *\n\t     * _.xorBy([2.1, 1.2], [4.3, 2.4], Math.floor);\n\t     * // => [1.2, 4.3]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    var xorBy = rest(function(arrays) {\n\t      var iteratee = last(arrays);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.xor` except that it accepts `comparator` which is\n\t     * invoked to compare elements of `arrays`. The comparator is invoked with\n\t     * two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.xorWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\t     */\n\t    var xorWith = rest(function(arrays) {\n\t      var comparator = last(arrays);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of grouped elements, the first of which contains the first\n\t     * elements of the given arrays, the second of which contains the second elements\n\t     * of the given arrays, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     */\n\t    var zip = rest(unzip);\n\t\n\t    /**\n\t     * This method is like `_.fromPairs` except that it accepts two arrays,\n\t     * one of property names and one of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} [props=[]] The property names.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObject(['a', 'b'], [1, 2]);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    function zipObject(props, values) {\n\t      return baseZipObject(props || [], values || [], assignValue);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zipObject` except that it supports property paths.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} [props=[]] The property names.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n\t     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n\t     */\n\t    function zipObjectDeep(props, values) {\n\t      return baseZipObject(props || [], values || [], baseSet);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts `iteratee` to specify\n\t     * how grouped values should be combined. The iteratee is invoked with the\n\t     * elements of each group: (...group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @param {Function} [iteratee=_.identity] The function to combine grouped values.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n\t     *   return a + b + c;\n\t     * });\n\t     * // => [111, 222]\n\t     */\n\t    var zipWith = rest(function(arrays) {\n\t      var length = arrays.length,\n\t          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\t\n\t      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n\t      return unzipWith(arrays, iteratee);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object that wraps `value` with explicit method chaining enabled.\n\t     * The result of such method chaining must be unwrapped with `_#value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @param {*} value The value to wrap.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36 },\n\t     *   { 'user': 'fred',    'age': 40 },\n\t     *   { 'user': 'pebbles', 'age': 1 }\n\t     * ];\n\t     *\n\t     * var youngest = _\n\t     *   .chain(users)\n\t     *   .sortBy('age')\n\t     *   .map(function(o) {\n\t     *     return o.user + ' is ' + o.age;\n\t     *   })\n\t     *   .head()\n\t     *   .value();\n\t     * // => 'pebbles is 1'\n\t     */\n\t    function chain(value) {\n\t      var result = lodash(value);\n\t      result.__chain__ = true;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method invokes `interceptor` and returns `value`. The interceptor\n\t     * is invoked with one argument; (value). The purpose of this method is to\n\t     * \"tap into\" a method chain in order to modify intermediate results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3])\n\t     *  .tap(function(array) {\n\t     *    // Mutate input array.\n\t     *    array.pop();\n\t     *  })\n\t     *  .reverse()\n\t     *  .value();\n\t     * // => [2, 1]\n\t     */\n\t    function tap(value, interceptor) {\n\t      interceptor(value);\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.tap` except that it returns the result of `interceptor`.\n\t     * The purpose of this method is to \"pass thru\" values replacing intermediate\n\t     * results in a method chain.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @returns {*} Returns the result of `interceptor`.\n\t     * @example\n\t     *\n\t     * _('  abc  ')\n\t     *  .chain()\n\t     *  .trim()\n\t     *  .thru(function(value) {\n\t     *    return [value];\n\t     *  })\n\t     *  .value();\n\t     * // => ['abc']\n\t     */\n\t    function thru(value, interceptor) {\n\t      return interceptor(value);\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.at`.\n\t     *\n\t     * @name at\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @param {...(string|string[])} [paths] The property paths of elements to pick,\n\t     *  specified individually or in arrays.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t     *\n\t     * _(object).at(['a[0].b.c', 'a[1]']).value();\n\t     * // => [3, 4]\n\t     *\n\t     * _(['a', 'b', 'c']).at(0, 2).value();\n\t     * // => ['a', 'c']\n\t     */\n\t    var wrapperAt = rest(function(paths) {\n\t      paths = baseFlatten(paths);\n\t      var length = paths.length,\n\t          start = length ? paths[0] : 0,\n\t          value = this.__wrapped__,\n\t          interceptor = function(object) { return baseAt(object, paths); };\n\t\n\t      if (length > 1 || this.__actions__.length || !(value instanceof LazyWrapper) || !isIndex(start)) {\n\t        return this.thru(interceptor);\n\t      }\n\t      value = value.slice(start, +start + (length ? 1 : 0));\n\t      value.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n\t      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n\t        if (length && !array.length) {\n\t          array.push(undefined);\n\t        }\n\t        return array;\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Enables explicit method chaining on the wrapper object.\n\t     *\n\t     * @name chain\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // A sequence without explicit chaining.\n\t     * _(users).head();\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // A sequence with explicit chaining.\n\t     * _(users)\n\t     *   .chain()\n\t     *   .head()\n\t     *   .pick('user')\n\t     *   .value();\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function wrapperChain() {\n\t      return chain(this);\n\t    }\n\t\n\t    /**\n\t     * Executes the chained sequence and returns the wrapped result.\n\t     *\n\t     * @name commit\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapped = _(array).push(3);\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2]\n\t     *\n\t     * wrapped = wrapped.commit();\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * wrapped.last();\n\t     * // => 3\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperCommit() {\n\t      return new LodashWrapper(this.value(), this.__chain__);\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.flatMap`.\n\t     *\n\t     * @name flatMap\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [n, n];\n\t     * }\n\t     *\n\t     * _([1, 2]).flatMap(duplicate).value();\n\t     * // => [1, 1, 2, 2]\n\t     */\n\t    function wrapperFlatMap(iteratee) {\n\t      return this.map(iteratee).flatten();\n\t    }\n\t\n\t    /**\n\t     * Gets the next value on a wrapped object following the\n\t     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n\t     *\n\t     * @name next\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @returns {Object} Returns the next iterator value.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2]);\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': false, 'value': 1 }\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': false, 'value': 2 }\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': true, 'value': undefined }\n\t     */\n\t    function wrapperNext() {\n\t      if (this.__values__ === undefined) {\n\t        this.__values__ = toArray(this.value());\n\t      }\n\t      var done = this.__index__ >= this.__values__.length,\n\t          value = done ? undefined : this.__values__[this.__index__++];\n\t\n\t      return { 'done': done, 'value': value };\n\t    }\n\t\n\t    /**\n\t     * Enables the wrapper to be iterable.\n\t     *\n\t     * @name Symbol.iterator\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @returns {Object} Returns the wrapper object.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2]);\n\t     *\n\t     * wrapped[Symbol.iterator]() === wrapped;\n\t     * // => true\n\t     *\n\t     * Array.from(wrapped);\n\t     * // => [1, 2]\n\t     */\n\t    function wrapperToIterator() {\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n\t     *\n\t     * @name plant\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @param {*} value The value to plant.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var wrapped = _([1, 2]).map(square);\n\t     * var other = wrapped.plant([3, 4]);\n\t     *\n\t     * other.value();\n\t     * // => [9, 16]\n\t     *\n\t     * wrapped.value();\n\t     * // => [1, 4]\n\t     */\n\t    function wrapperPlant(value) {\n\t      var result,\n\t          parent = this;\n\t\n\t      while (parent instanceof baseLodash) {\n\t        var clone = wrapperClone(parent);\n\t        clone.__index__ = 0;\n\t        clone.__values__ = undefined;\n\t        if (result) {\n\t          previous.__wrapped__ = clone;\n\t        } else {\n\t          result = clone;\n\t        }\n\t        var previous = clone;\n\t        parent = parent.__wrapped__;\n\t      }\n\t      previous.__wrapped__ = value;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.reverse`.\n\t     *\n\t     * **Note:** This method mutates the wrapped array.\n\t     *\n\t     * @name reverse\n\t     * @memberOf _\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _(array).reverse().value()\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function wrapperReverse() {\n\t      var value = this.__wrapped__;\n\t      if (value instanceof LazyWrapper) {\n\t        var wrapped = value;\n\t        if (this.__actions__.length) {\n\t          wrapped = new LazyWrapper(this);\n\t        }\n\t        wrapped = wrapped.reverse();\n\t        wrapped.__actions__.push({ 'func': thru, 'args': [reverse], 'thisArg': undefined });\n\t        return new LodashWrapper(wrapped, this.__chain__);\n\t      }\n\t      return this.thru(reverse);\n\t    }\n\t\n\t    /**\n\t     * Executes the chained sequence to extract the unwrapped value.\n\t     *\n\t     * @name value\n\t     * @memberOf _\n\t     * @alias toJSON, valueOf\n\t     * @category Seq\n\t     * @returns {*} Returns the resolved unwrapped value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).value();\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperValue() {\n\t      return baseWrapperValue(this.__wrapped__, this.__actions__);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is the number of times the key was returned by `iteratee`.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * _.countBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': 2, '5': 1 }\n\t     */\n\t    var countBy = createAggregator(function(result, value, key) {\n\t      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n\t    });\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n\t     * Iteration is stopped once `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check, else `false`.\n\t     * @example\n\t     *\n\t     * _.every([true, 1, null, 'yes'], Boolean);\n\t     * // => false\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': false },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.every(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.every(users, ['active', false]);\n\t     * // => true\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.every(users, 'active');\n\t     * // => false\n\t     */\n\t    function every(collection, predicate, guard) {\n\t      var func = isArray(collection) ? arrayEvery : baseEvery;\n\t      if (guard && isIterateeCall(collection, predicate, guard)) {\n\t        predicate = undefined;\n\t      }\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning an array of all elements\n\t     * `predicate` returns truthy for. The predicate is invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.filter(users, { 'age': 36, 'active': true });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.filter(users, ['active', false]);\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.filter(users, 'active');\n\t     * // => objects for ['barney']\n\t     */\n\t    function filter(collection, predicate) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning the first element\n\t     * `predicate` returns truthy for. The predicate is invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': true },\n\t     *   { 'user': 'fred',    'age': 40, 'active': false },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n\t     * ];\n\t     *\n\t     * _.find(users, function(o) { return o.age < 40; });\n\t     * // => object for 'barney'\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.find(users, { 'age': 1, 'active': true });\n\t     * // => object for 'pebbles'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.find(users, ['active', false]);\n\t     * // => object for 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.find(users, 'active');\n\t     * // => object for 'barney'\n\t     */\n\t    function find(collection, predicate) {\n\t      predicate = getIteratee(predicate, 3);\n\t      if (isArray(collection)) {\n\t        var index = baseFindIndex(collection, predicate);\n\t        return index > -1 ? collection[index] : undefined;\n\t      }\n\t      return baseFind(collection, predicate, baseEach);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.find` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * _.findLast([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 1;\n\t     * });\n\t     * // => 3\n\t     */\n\t    function findLast(collection, predicate) {\n\t      predicate = getIteratee(predicate, 3);\n\t      if (isArray(collection)) {\n\t        var index = baseFindIndex(collection, predicate, true);\n\t        return index > -1 ? collection[index] : undefined;\n\t      }\n\t      return baseFind(collection, predicate, baseEachRight);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of flattened values by running each element in `collection`\n\t     * through `iteratee` and concating its result to the other mapped values.\n\t     * The iteratee is invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [n, n];\n\t     * }\n\t     *\n\t     * _.flatMap([1, 2], duplicate);\n\t     * // => [1, 1, 2, 2]\n\t     */\n\t    function flatMap(collection, iteratee) {\n\t      return baseFlatten(map(collection, iteratee));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection` invoking `iteratee` for each element.\n\t     * The iteratee is invoked with three arguments: (value, index|key, collection).\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n\t     * are iterated like arrays. To avoid this behavior use `_.forIn` or `_.forOwn`\n\t     * for object iteration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias each\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     * @example\n\t     *\n\t     * _([1, 2]).forEach(function(value) {\n\t     *   console.log(value);\n\t     * });\n\t     * // => logs `1` then `2`\n\t     *\n\t     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'a' then 'b' (iteration order is not guaranteed)\n\t     */\n\t    function forEach(collection, iteratee) {\n\t      return (typeof iteratee == 'function' && isArray(collection))\n\t        ? arrayEach(collection, iteratee)\n\t        : baseEach(collection, toFunction(iteratee));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forEach` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias eachRight\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     * @example\n\t     *\n\t     * _.forEachRight([1, 2], function(value) {\n\t     *   console.log(value);\n\t     * });\n\t     * // => logs `2` then `1`\n\t     */\n\t    function forEachRight(collection, iteratee) {\n\t      return (typeof iteratee == 'function' && isArray(collection))\n\t        ? arrayEachRight(collection, iteratee)\n\t        : baseEachRight(collection, toFunction(iteratee));\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is an array of elements responsible for generating the key.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n\t     * // => { '4': [4.2], '6': [6.1, 6.3] }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.groupBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': ['one', 'two'], '5': ['three'] }\n\t     */\n\t    var groupBy = createAggregator(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, key)) {\n\t        result[key].push(value);\n\t      } else {\n\t        result[key] = [value];\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is in `collection`. If `collection` is a string it's checked\n\t     * for a substring of `value`, otherwise [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n\t     * the offset from the end of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.reduce`.\n\t     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n\t     * @example\n\t     *\n\t     * _.includes([1, 2, 3], 1);\n\t     * // => true\n\t     *\n\t     * _.includes([1, 2, 3], 1, 2);\n\t     * // => false\n\t     *\n\t     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n\t     * // => true\n\t     *\n\t     * _.includes('pebbles', 'eb');\n\t     * // => true\n\t     */\n\t    function includes(collection, value, fromIndex, guard) {\n\t      collection = isArrayLike(collection) ? collection : values(collection);\n\t      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\t\n\t      var length = collection.length;\n\t      if (fromIndex < 0) {\n\t        fromIndex = nativeMax(length + fromIndex, 0);\n\t      }\n\t      return isString(collection)\n\t        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n\t        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n\t    }\n\t\n\t    /**\n\t     * Invokes the method at `path` of each element in `collection`, returning\n\t     * an array of the results of each invoked method. Any additional arguments\n\t     * are provided to each invoked method. If `methodName` is a function it's\n\t     * invoked for, and `this` bound to, each element in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|string} path The path of the method to invoke or\n\t     *  the function invoked per iteration.\n\t     * @param {...*} [args] The arguments to invoke each method with.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n\t     * // => [[1, 5, 7], [1, 2, 3]]\n\t     *\n\t     * _.invokeMap([123, 456], String.prototype.split, '');\n\t     * // => [['1', '2', '3'], ['4', '5', '6']]\n\t     */\n\t    var invokeMap = rest(function(collection, path, args) {\n\t      var index = -1,\n\t          isFunc = typeof path == 'function',\n\t          isProp = isKey(path),\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value) {\n\t        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n\t        result[++index] = func ? apply(func, value, args) : baseInvoke(value, path, args);\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is the last element responsible for generating the key. The\n\t     * iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * var array = [\n\t     *   { 'dir': 'left', 'code': 97 },\n\t     *   { 'dir': 'right', 'code': 100 }\n\t     * ];\n\t     *\n\t     * _.keyBy(array, function(o) {\n\t     *   return String.fromCharCode(o.code);\n\t     * });\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.keyBy(array, 'dir');\n\t     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n\t     */\n\t    var keyBy = createAggregator(function(result, value, key) {\n\t      result[key] = value;\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values by running each element in `collection` through\n\t     * `iteratee`. The iteratee is invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n\t     *\n\t     * The guarded methods are:\n\t     * `ary`, `curry`, `curryRight`, `drop`, `dropRight`, `every`, `fill`,\n\t     * `invert`, `parseInt`, `random`, `range`, `rangeRight`, `slice`, `some`,\n\t     * `sortBy`, `take`, `takeRight`, `template`, `trim`, `trimEnd`, `trimStart`,\n\t     * and `words`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * _.map([4, 8], square);\n\t     * // => [16, 64]\n\t     *\n\t     * _.map({ 'a': 4, 'b': 8 }, square);\n\t     * // => [16, 64] (iteration order is not guaranteed)\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.map(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     */\n\t    function map(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayMap : baseMap;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortBy` except that it allows specifying the sort\n\t     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n\t     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n\t     * descending or \"asc\" for ascending sort order of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} [iteratees=[_.identity]] The iteratees to sort by.\n\t     * @param {string[]} [orders] The sort orders of `iteratees`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.reduce`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 34 },\n\t     *   { 'user': 'fred',   'age': 42 },\n\t     *   { 'user': 'barney', 'age': 36 }\n\t     * ];\n\t     *\n\t     * // Sort by `user` in ascending order and by `age` in descending order.\n\t     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n\t     */\n\t    function orderBy(collection, iteratees, orders, guard) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (!isArray(iteratees)) {\n\t        iteratees = iteratees == null ? [] : [iteratees];\n\t      }\n\t      orders = guard ? undefined : orders;\n\t      if (!isArray(orders)) {\n\t        orders = orders == null ? [] : [orders];\n\t      }\n\t      return baseOrderBy(collection, iteratees, orders);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements split into two groups, the first of which\n\t     * contains elements `predicate` returns truthy for, the second of which\n\t     * contains elements `predicate` returns falsey for. The predicate is\n\t     * invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the array of grouped elements.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': false },\n\t     *   { 'user': 'fred',    'age': 40, 'active': true },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n\t     * ];\n\t     *\n\t     * _.partition(users, function(o) { return o.active; });\n\t     * // => objects for [['fred'], ['barney', 'pebbles']]\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.partition(users, { 'age': 1, 'active': false });\n\t     * // => objects for [['pebbles'], ['barney', 'fred']]\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.partition(users, ['active', false]);\n\t     * // => objects for [['barney', 'pebbles'], ['fred']]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.partition(users, 'active');\n\t     * // => objects for [['fred'], ['barney', 'pebbles']]\n\t     */\n\t    var partition = createAggregator(function(result, value, key) {\n\t      result[key ? 0 : 1].push(value);\n\t    }, function() { return [[], []]; });\n\t\n\t    /**\n\t     * Reduces `collection` to a value which is the accumulated result of running\n\t     * each element in `collection` through `iteratee`, where each successive\n\t     * invocation is supplied the return value of the previous. If `accumulator`\n\t     * is not given the first element of `collection` is used as the initial\n\t     * value. The iteratee is invoked with four arguments:\n\t     * (accumulator, value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n\t     *\n\t     * The guarded methods are:\n\t     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n\t     * and `sortBy`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.reduce([1, 2], function(sum, n) {\n\t     *   return sum + n;\n\t     * }, 0);\n\t     * // => 3\n\t     *\n\t     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t     *   (result[value] || (result[value] = [])).push(key);\n\t     *   return result;\n\t     * }, {});\n\t     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n\t     */\n\t    function reduce(collection, iteratee, accumulator) {\n\t      var func = isArray(collection) ? arrayReduce : baseReduce,\n\t          initAccum = arguments.length < 3;\n\t\n\t      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.reduce` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * var array = [[0, 1], [2, 3], [4, 5]];\n\t     *\n\t     * _.reduceRight(array, function(flattened, other) {\n\t     *   return flattened.concat(other);\n\t     * }, []);\n\t     * // => [4, 5, 2, 3, 0, 1]\n\t     */\n\t    function reduceRight(collection, iteratee, accumulator) {\n\t      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n\t          initAccum = arguments.length < 3;\n\t\n\t      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.filter`; this method returns the elements of `collection`\n\t     * that `predicate` does **not** return truthy for.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true }\n\t     * ];\n\t     *\n\t     * _.reject(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.reject(users, { 'age': 40, 'active': true });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.reject(users, ['active', false]);\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.reject(users, 'active');\n\t     * // => objects for ['barney']\n\t     */\n\t    function reject(collection, predicate) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      predicate = getIteratee(predicate, 3);\n\t      return func(collection, function(value, index, collection) {\n\t        return !predicate(value, index, collection);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Gets a random element from `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @returns {*} Returns the random element.\n\t     * @example\n\t     *\n\t     * _.sample([1, 2, 3, 4]);\n\t     * // => 2\n\t     */\n\t    function sample(collection) {\n\t      var array = isArrayLike(collection) ? collection : values(collection),\n\t          length = array.length;\n\t\n\t      return length > 0 ? array[baseRandom(0, length - 1)] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets `n` random elements at unique keys from `collection` up to the\n\t     * size of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @param {number} [n=0] The number of elements to sample.\n\t     * @returns {Array} Returns the random elements.\n\t     * @example\n\t     *\n\t     * _.sampleSize([1, 2, 3], 2);\n\t     * // => [3, 1]\n\t     *\n\t     * _.sampleSize([1, 2, 3], 4);\n\t     * // => [2, 3, 1]\n\t     */\n\t    function sampleSize(collection, n) {\n\t      var index = -1,\n\t          result = toArray(collection),\n\t          length = result.length,\n\t          lastIndex = length - 1;\n\t\n\t      n = baseClamp(toInteger(n), 0, length);\n\t      while (++index < n) {\n\t        var rand = baseRandom(index, lastIndex),\n\t            value = result[rand];\n\t\n\t        result[rand] = result[index];\n\t        result[index] = value;\n\t      }\n\t      result.length = n;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of shuffled values, using a version of the\n\t     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     * @example\n\t     *\n\t     * _.shuffle([1, 2, 3, 4]);\n\t     * // => [4, 1, 3, 2]\n\t     */\n\t    function shuffle(collection) {\n\t      return sampleSize(collection, MAX_ARRAY_LENGTH);\n\t    }\n\t\n\t    /**\n\t     * Gets the size of `collection` by returning its length for array-like\n\t     * values or the number of own enumerable properties for objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to inspect.\n\t     * @returns {number} Returns the collection size.\n\t     * @example\n\t     *\n\t     * _.size([1, 2, 3]);\n\t     * // => 3\n\t     *\n\t     * _.size({ 'a': 1, 'b': 2 });\n\t     * // => 2\n\t     *\n\t     * _.size('pebbles');\n\t     * // => 7\n\t     */\n\t    function size(collection) {\n\t      if (collection == null) {\n\t        return 0;\n\t      }\n\t      if (isArrayLike(collection)) {\n\t        var result = collection.length;\n\t        return (result && isString(collection)) ? stringSize(collection) : result;\n\t      }\n\t      return keys(collection).length;\n\t    }\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **any** element of `collection`.\n\t     * Iteration is stopped once `predicate` returns truthy. The predicate is\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.\n\t     * @example\n\t     *\n\t     * _.some([null, 0, 'yes', false], Boolean);\n\t     * // => true\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': true },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.some(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.some(users, ['active', false]);\n\t     * // => true\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.some(users, 'active');\n\t     * // => true\n\t     */\n\t    function some(collection, predicate, guard) {\n\t      var func = isArray(collection) ? arraySome : baseSome;\n\t      if (guard && isIterateeCall(collection, predicate, guard)) {\n\t        predicate = undefined;\n\t      }\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements, sorted in ascending order by the results of\n\t     * running each element in a collection through each iteratee. This method\n\t     * performs a stable sort, that is, it preserves the original sort order of\n\t     * equal elements. The iteratees are invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {...(Function|Function[]|Object|Object[]|string|string[])} [iteratees=[_.identity]]\n\t     *  The iteratees to sort by, specified individually or in arrays.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 42 },\n\t     *   { 'user': 'barney', 'age': 34 }\n\t     * ];\n\t     *\n\t     * _.sortBy(users, function(o) { return o.user; });\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n\t     *\n\t     * _.sortBy(users, ['user', 'age']);\n\t     * // => objects for [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n\t     *\n\t     * _.sortBy(users, 'user', function(o) {\n\t     *   return Math.floor(o.age / 10);\n\t     * });\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n\t     */\n\t    var sortBy = rest(function(collection, iteratees) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      var length = iteratees.length;\n\t      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n\t        iteratees = [];\n\t      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n\t        iteratees.length = 1;\n\t      }\n\t      return baseOrderBy(collection, baseFlatten(iteratees), []);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Gets the timestamp of the number of milliseconds that have elapsed since\n\t     * the Unix epoch (1 January 1970 00:00:00 UTC).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Function\n\t     * @category Date\n\t     * @returns {number} Returns the timestamp.\n\t     * @example\n\t     *\n\t     * _.defer(function(stamp) {\n\t     *   console.log(_.now() - stamp);\n\t     * }, _.now());\n\t     * // => logs the number of milliseconds it took for the deferred function to be invoked\n\t     */\n\t    var now = Date.now;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The opposite of `_.before`; this method creates a function that invokes\n\t     * `func` once it's called `n` or more times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {number} n The number of calls before `func` is invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var saves = ['profile', 'settings'];\n\t     *\n\t     * var done = _.after(saves.length, function() {\n\t     *   console.log('done saving!');\n\t     * });\n\t     *\n\t     * _.forEach(saves, function(type) {\n\t     *   asyncSave({ 'type': type, 'complete': done });\n\t     * });\n\t     * // => logs 'done saving!' after the two async saves have completed\n\t     */\n\t    function after(n, func) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      n = toInteger(n);\n\t      return function() {\n\t        if (--n < 1) {\n\t          return func.apply(this, arguments);\n\t        }\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that accepts up to `n` arguments, ignoring any\n\t     * additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @param {number} [n=func.length] The arity cap.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function ary(func, n, guard) {\n\t      n = guard ? undefined : n;\n\t      n = (func && n == null) ? func.length : n;\n\t      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with the `this` binding and arguments\n\t     * of the created function, while it's called less than `n` times. Subsequent\n\t     * calls to the created function return the result of the last `func` invocation.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {number} n The number of calls at which `func` is no longer invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * jQuery(element).on('click', _.before(5, addContactToList));\n\t     * // => allows adding up to 4 contacts to the list\n\t     */\n\t    function before(n, func) {\n\t      var result;\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      n = toInteger(n);\n\t      return function() {\n\t        if (--n > 0) {\n\t          result = func.apply(this, arguments);\n\t        }\n\t        if (n <= 1) {\n\t          func = undefined;\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and prepends any additional `_.bind` arguments to those provided to the\n\t     * bound function.\n\t     *\n\t     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** Unlike native `Function#bind` this method doesn't set the \"length\"\n\t     * property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, punctuation) {\n\t     *   return greeting + ' ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * var bound = _.bind(greet, object, 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * // Bound with placeholders.\n\t     * var bound = _.bind(greet, object, _, '!');\n\t     * bound('hi');\n\t     * // => 'hi fred!'\n\t     */\n\t    var bind = rest(function(func, thisArg, partials) {\n\t      var bitmask = BIND_FLAG;\n\t      if (partials.length) {\n\t        var placeholder = lodash.placeholder || bind.placeholder,\n\t            holders = replaceHolders(partials, placeholder);\n\t\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(func, bitmask, thisArg, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `object[key]` and prepends\n\t     * any additional `_.bindKey` arguments to those provided to the bound function.\n\t     *\n\t     * This method differs from `_.bind` by allowing bound functions to reference\n\t     * methods that may be redefined or don't yet exist.\n\t     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n\t     * for more details.\n\t     *\n\t     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Object} object The object to invoke the method on.\n\t     * @param {string} key The key of the method.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'user': 'fred',\n\t     *   'greet': function(greeting, punctuation) {\n\t     *     return greeting + ' ' + this.user + punctuation;\n\t     *   }\n\t     * };\n\t     *\n\t     * var bound = _.bindKey(object, 'greet', 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * object.greet = function(greeting, punctuation) {\n\t     *   return greeting + 'ya ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * bound('!');\n\t     * // => 'hiya fred!'\n\t     *\n\t     * // Bound with placeholders.\n\t     * var bound = _.bindKey(object, 'greet', _, '!');\n\t     * bound('hi');\n\t     * // => 'hiya fred!'\n\t     */\n\t    var bindKey = rest(function(object, key, partials) {\n\t      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n\t      if (partials.length) {\n\t        var placeholder = lodash.placeholder || bindKey.placeholder,\n\t            holders = replaceHolders(partials, placeholder);\n\t\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(key, bitmask, object, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that accepts arguments of `func` and either invokes\n\t     * `func` returning its result, if at least `arity` number of arguments have\n\t     * been provided, or returns a function that accepts the remaining `func`\n\t     * arguments, and so on. The arity of `func` may be specified if `func.length`\n\t     * is not sufficient.\n\t     *\n\t     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curry(abc);\n\t     *\n\t     * curried(1)(2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // Curried with placeholders.\n\t     * curried(1)(_, 3)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curry(func, arity, guard) {\n\t      arity = guard ? undefined : arity;\n\t      var result = createWrapper(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n\t      result.placeholder = lodash.placeholder || curry.placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.curry` except that arguments are applied to `func`\n\t     * in the manner of `_.partialRight` instead of `_.partial`.\n\t     *\n\t     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curryRight(abc);\n\t     *\n\t     * curried(3)(2)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(2, 3)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // Curried with placeholders.\n\t     * curried(3)(1, _)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curryRight(func, arity, guard) {\n\t      arity = guard ? undefined : arity;\n\t      var result = createWrapper(func, CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n\t      result.placeholder = lodash.placeholder || curryRight.placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a debounced function that delays invoking `func` until after `wait`\n\t     * milliseconds have elapsed since the last time the debounced function was\n\t     * invoked. The debounced function comes with a `cancel` method to cancel\n\t     * delayed `func` invocations and a `flush` method to immediately invoke them.\n\t     * Provide an options object to indicate whether `func` should be invoked on\n\t     * the leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n\t     * with the last arguments provided to the debounced function. Subsequent calls\n\t     * to the debounced function return the result of the last `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t     * on the trailing edge of the timeout only if the debounced function is\n\t     * invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n\t     * for details over the differences between `_.debounce` and `_.throttle`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to debounce.\n\t     * @param {number} [wait=0] The number of milliseconds to delay.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.leading=false] Specify invoking on the leading\n\t     *  edge of the timeout.\n\t     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n\t     *  delayed before it's invoked.\n\t     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n\t     *  edge of the timeout.\n\t     * @returns {Function} Returns the new debounced function.\n\t     * @example\n\t     *\n\t     * // Avoid costly calculations while the window size is in flux.\n\t     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t     *\n\t     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n\t     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n\t     *   'leading': true,\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n\t     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n\t     * var source = new EventSource('/stream');\n\t     * jQuery(source).on('message', debounced);\n\t     *\n\t     * // Cancel the trailing debounced invocation.\n\t     * jQuery(window).on('popstate', debounced.cancel);\n\t     */\n\t    function debounce(func, wait, options) {\n\t      var args,\n\t          maxTimeoutId,\n\t          result,\n\t          stamp,\n\t          thisArg,\n\t          timeoutId,\n\t          trailingCall,\n\t          lastCalled = 0,\n\t          leading = false,\n\t          maxWait = false,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      wait = toNumber(wait) || 0;\n\t      if (isObject(options)) {\n\t        leading = !!options.leading;\n\t        maxWait = 'maxWait' in options && nativeMax(toNumber(options.maxWait) || 0, wait);\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t\n\t      function cancel() {\n\t        if (timeoutId) {\n\t          clearTimeout(timeoutId);\n\t        }\n\t        if (maxTimeoutId) {\n\t          clearTimeout(maxTimeoutId);\n\t        }\n\t        lastCalled = 0;\n\t        args = maxTimeoutId = thisArg = timeoutId = trailingCall = undefined;\n\t      }\n\t\n\t      function complete(isCalled, id) {\n\t        if (id) {\n\t          clearTimeout(id);\n\t        }\n\t        maxTimeoutId = timeoutId = trailingCall = undefined;\n\t        if (isCalled) {\n\t          lastCalled = now();\n\t          result = func.apply(thisArg, args);\n\t          if (!timeoutId && !maxTimeoutId) {\n\t            args = thisArg = undefined;\n\t          }\n\t        }\n\t      }\n\t\n\t      function delayed() {\n\t        var remaining = wait - (now() - stamp);\n\t        if (remaining <= 0 || remaining > wait) {\n\t          complete(trailingCall, maxTimeoutId);\n\t        } else {\n\t          timeoutId = setTimeout(delayed, remaining);\n\t        }\n\t      }\n\t\n\t      function flush() {\n\t        if ((timeoutId && trailingCall) || (maxTimeoutId && trailing)) {\n\t          result = func.apply(thisArg, args);\n\t        }\n\t        cancel();\n\t        return result;\n\t      }\n\t\n\t      function maxDelayed() {\n\t        complete(trailing, timeoutId);\n\t      }\n\t\n\t      function debounced() {\n\t        args = arguments;\n\t        stamp = now();\n\t        thisArg = this;\n\t        trailingCall = trailing && (timeoutId || !leading);\n\t\n\t        if (maxWait === false) {\n\t          var leadingCall = leading && !timeoutId;\n\t        } else {\n\t          if (!lastCalled && !maxTimeoutId && !leading) {\n\t            lastCalled = stamp;\n\t          }\n\t          var remaining = maxWait - (stamp - lastCalled),\n\t              isCalled = remaining <= 0 || remaining > maxWait;\n\t\n\t          if (isCalled) {\n\t            if (maxTimeoutId) {\n\t              maxTimeoutId = clearTimeout(maxTimeoutId);\n\t            }\n\t            lastCalled = stamp;\n\t            result = func.apply(thisArg, args);\n\t          }\n\t          else if (!maxTimeoutId) {\n\t            maxTimeoutId = setTimeout(maxDelayed, remaining);\n\t          }\n\t        }\n\t        if (isCalled && timeoutId) {\n\t          timeoutId = clearTimeout(timeoutId);\n\t        }\n\t        else if (!timeoutId && wait !== maxWait) {\n\t          timeoutId = setTimeout(delayed, wait);\n\t        }\n\t        if (leadingCall) {\n\t          isCalled = true;\n\t          result = func.apply(thisArg, args);\n\t        }\n\t        if (isCalled && !timeoutId && !maxTimeoutId) {\n\t          args = thisArg = undefined;\n\t        }\n\t        return result;\n\t      }\n\t      debounced.cancel = cancel;\n\t      debounced.flush = flush;\n\t      return debounced;\n\t    }\n\t\n\t    /**\n\t     * Defers invoking the `func` until the current call stack has cleared. Any\n\t     * additional arguments are provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to defer.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.defer(function(text) {\n\t     *   console.log(text);\n\t     * }, 'deferred');\n\t     * // => logs 'deferred' after one or more milliseconds\n\t     */\n\t    var defer = rest(function(func, args) {\n\t      return baseDelay(func, 1, args);\n\t    });\n\t\n\t    /**\n\t     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n\t     * provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.delay(function(text) {\n\t     *   console.log(text);\n\t     * }, 1000, 'later');\n\t     * // => logs 'later' after one second\n\t     */\n\t    var delay = rest(function(func, wait, args) {\n\t      return baseDelay(func, toNumber(wait) || 0, args);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments reversed.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to flip arguments for.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var flipped = _.flip(function() {\n\t     *   return _.toArray(arguments);\n\t     * });\n\t     *\n\t     * flipped('a', 'b', 'c', 'd');\n\t     * // => ['d', 'c', 'b', 'a']\n\t     */\n\t    function flip(func) {\n\t      return createWrapper(func, FLIP_FLAG);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that memoizes the result of `func`. If `resolver` is\n\t     * provided it determines the cache key for storing the result based on the\n\t     * arguments provided to the memoized function. By default, the first argument\n\t     * provided to the memoized function is used as the map cache key. The `func`\n\t     * is invoked with the `this` binding of the memoized function.\n\t     *\n\t     * **Note:** The cache is exposed as the `cache` property on the memoized\n\t     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n\t     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n\t     * method interface of `delete`, `get`, `has`, and `set`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to have its output memoized.\n\t     * @param {Function} [resolver] The function to resolve the cache key.\n\t     * @returns {Function} Returns the new memoizing function.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2 };\n\t     * var other = { 'c': 3, 'd': 4 };\n\t     *\n\t     * var values = _.memoize(_.values);\n\t     * values(object);\n\t     * // => [1, 2]\n\t     *\n\t     * values(other);\n\t     * // => [3, 4]\n\t     *\n\t     * object.a = 2;\n\t     * values(object);\n\t     * // => [1, 2]\n\t     *\n\t     * // Modify the result cache.\n\t     * values.cache.set(object, ['a', 'b']);\n\t     * values(object);\n\t     * // => ['a', 'b']\n\t     *\n\t     * // Replace `_.memoize.Cache`.\n\t     * _.memoize.Cache = WeakMap;\n\t     */\n\t    function memoize(func, resolver) {\n\t      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var memoized = function() {\n\t        var args = arguments,\n\t            key = resolver ? resolver.apply(this, args) : args[0],\n\t            cache = memoized.cache;\n\t\n\t        if (cache.has(key)) {\n\t          return cache.get(key);\n\t        }\n\t        var result = func.apply(this, args);\n\t        memoized.cache = cache.set(key, result);\n\t        return result;\n\t      };\n\t      memoized.cache = new memoize.Cache;\n\t      return memoized;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that negates the result of the predicate `func`. The\n\t     * `func` predicate is invoked with the `this` binding and arguments of the\n\t     * created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} predicate The predicate to negate.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function isEven(n) {\n\t     *   return n % 2 == 0;\n\t     * }\n\t     *\n\t     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n\t     * // => [1, 3, 5]\n\t     */\n\t    function negate(predicate) {\n\t      if (typeof predicate != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function() {\n\t        return !predicate.apply(this, arguments);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that is restricted to invoking `func` once. Repeat calls\n\t     * to the function return the value of the first invocation. The `func` is\n\t     * invoked with the `this` binding and arguments of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var initialize = _.once(createApplication);\n\t     * initialize();\n\t     * initialize();\n\t     * // `initialize` invokes `createApplication` once\n\t     */\n\t    function once(func) {\n\t      return before(2, func);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments transformed by\n\t     * corresponding `transforms`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to wrap.\n\t     * @param {...(Function|Function[])} [transforms] The functions to transform\n\t     * arguments, specified individually or in arrays.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function doubled(n) {\n\t     *   return n * 2;\n\t     * }\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var func = _.overArgs(function(x, y) {\n\t     *   return [x, y];\n\t     * }, square, doubled);\n\t     *\n\t     * func(9, 3);\n\t     * // => [81, 6]\n\t     *\n\t     * func(10, 5);\n\t     * // => [100, 10]\n\t     */\n\t    var overArgs = rest(function(func, transforms) {\n\t      transforms = arrayMap(baseFlatten(transforms), getIteratee());\n\t\n\t      var funcsLength = transforms.length;\n\t      return rest(function(args) {\n\t        var index = -1,\n\t            length = nativeMin(args.length, funcsLength);\n\t\n\t        while (++index < length) {\n\t          args[index] = transforms[index].call(this, args[index]);\n\t        }\n\t        return apply(func, this, args);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with `partial` arguments prepended\n\t     * to those provided to the new function. This method is like `_.bind` except\n\t     * it does **not** alter the `this` binding.\n\t     *\n\t     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var sayHelloTo = _.partial(greet, 'hello');\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     *\n\t     * // Partially applied with placeholders.\n\t     * var greetFred = _.partial(greet, _, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     */\n\t    var partial = rest(function(func, partials) {\n\t      var placeholder = lodash.placeholder || partial.placeholder,\n\t          holders = replaceHolders(partials, placeholder);\n\t\n\t      return createWrapper(func, PARTIAL_FLAG, undefined, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.partial` except that partially applied arguments\n\t     * are appended to those provided to the new function.\n\t     *\n\t     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var greetFred = _.partialRight(greet, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     *\n\t     * // Partially applied with placeholders.\n\t     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     */\n\t    var partialRight = rest(function(func, partials) {\n\t      var placeholder = lodash.placeholder || partialRight.placeholder,\n\t          holders = replaceHolders(partials, placeholder);\n\t\n\t      return createWrapper(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments arranged according\n\t     * to the specified indexes where the argument value at the first index is\n\t     * provided as the first argument, the argument value at the second index is\n\t     * provided as the second argument, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to rearrange arguments for.\n\t     * @param {...(number|number[])} indexes The arranged argument indexes,\n\t     *  specified individually or in arrays.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var rearged = _.rearg(function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * }, 2, 0, 1);\n\t     *\n\t     * rearged('b', 'c', 'a')\n\t     * // => ['a', 'b', 'c']\n\t     */\n\t    var rearg = rest(function(func, indexes) {\n\t      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * created function and arguments from `start` and beyond provided as an array.\n\t     *\n\t     * **Note:** This method is based on the [rest parameter](https://mdn.io/rest_parameters).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.rest(function(what, names) {\n\t     *   return what + ' ' + _.initial(names).join(', ') +\n\t     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n\t     * });\n\t     *\n\t     * say('hello', 'fred', 'barney', 'pebbles');\n\t     * // => 'hello fred, barney, & pebbles'\n\t     */\n\t    function rest(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = nativeMax(start === undefined ? (func.length - 1) : toInteger(start), 0);\n\t      return function() {\n\t        var args = arguments,\n\t            index = -1,\n\t            length = nativeMax(args.length - start, 0),\n\t            array = Array(length);\n\t\n\t        while (++index < length) {\n\t          array[index] = args[start + index];\n\t        }\n\t        switch (start) {\n\t          case 0: return func.call(this, array);\n\t          case 1: return func.call(this, args[0], array);\n\t          case 2: return func.call(this, args[0], args[1], array);\n\t        }\n\t        var otherArgs = Array(start + 1);\n\t        index = -1;\n\t        while (++index < start) {\n\t          otherArgs[index] = args[index];\n\t        }\n\t        otherArgs[start] = array;\n\t        return apply(func, this, otherArgs);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the created\n\t     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n\t     *\n\t     * **Note:** This method is based on the [spread operator](https://mdn.io/spread_operator).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to spread arguments over.\n\t     * @param {number} [start=0] The start position of the spread.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.spread(function(who, what) {\n\t     *   return who + ' says ' + what;\n\t     * });\n\t     *\n\t     * say(['fred', 'hello']);\n\t     * // => 'fred says hello'\n\t     *\n\t     * var numbers = Promise.all([\n\t     *   Promise.resolve(40),\n\t     *   Promise.resolve(36)\n\t     * ]);\n\t     *\n\t     * numbers.then(_.spread(function(x, y) {\n\t     *   return x + y;\n\t     * }));\n\t     * // => a Promise of 76\n\t     */\n\t    function spread(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n\t      return rest(function(args) {\n\t        var array = args[start],\n\t            otherArgs = args.slice(0, start);\n\t\n\t        if (array) {\n\t          arrayPush(otherArgs, array);\n\t        }\n\t        return apply(func, this, otherArgs);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a throttled function that only invokes `func` at most once per\n\t     * every `wait` milliseconds. The throttled function comes with a `cancel`\n\t     * method to cancel delayed `func` invocations and a `flush` method to\n\t     * immediately invoke them. Provide an options object to indicate whether\n\t     * `func` should be invoked on the leading and/or trailing edge of the `wait`\n\t     * timeout. The `func` is invoked with the last arguments provided to the\n\t     * throttled function. Subsequent calls to the throttled function return the\n\t     * result of the last `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t     * on the trailing edge of the timeout only if the throttled function is\n\t     * invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n\t     * for details over the differences between `_.throttle` and `_.debounce`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to throttle.\n\t     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.leading=true] Specify invoking on the leading\n\t     *  edge of the timeout.\n\t     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n\t     *  edge of the timeout.\n\t     * @returns {Function} Returns the new throttled function.\n\t     * @example\n\t     *\n\t     * // Avoid excessively updating the position while scrolling.\n\t     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n\t     *\n\t     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n\t     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n\t     * jQuery(element).on('click', throttled);\n\t     *\n\t     * // Cancel the trailing throttled invocation.\n\t     * jQuery(window).on('popstate', throttled.cancel);\n\t     */\n\t    function throttle(func, wait, options) {\n\t      var leading = true,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      if (isObject(options)) {\n\t        leading = 'leading' in options ? !!options.leading : leading;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t      return debounce(func, wait, { 'leading': leading, 'maxWait': wait, 'trailing': trailing });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that accepts up to one argument, ignoring any\n\t     * additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.unary(parseInt));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function unary(func) {\n\t      return ary(func, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that provides `value` to the wrapper function as its\n\t     * first argument. Any additional arguments provided to the function are\n\t     * appended to those provided to the wrapper function. The wrapper is invoked\n\t     * with the `this` binding of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {*} value The value to wrap.\n\t     * @param {Function} wrapper The wrapper function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var p = _.wrap(_.escape, function(func, text) {\n\t     *   return '<p>' + func(text) + '</p>';\n\t     * });\n\t     *\n\t     * p('fred, barney, & pebbles');\n\t     * // => '<p>fred, barney, &amp; pebbles</p>'\n\t     */\n\t    function wrap(value, wrapper) {\n\t      wrapper = wrapper == null ? identity : wrapper;\n\t      return partial(wrapper, value);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a shallow clone of `value`.\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n\t     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n\t     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n\t     * arrays. The own enumerable properties of `arguments` objects are cloned\n\t     * as plain objects. An empty object is returned for uncloneable values such\n\t     * as error objects, functions, DOM nodes, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @returns {*} Returns the cloned value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t     *\n\t     * var shallow = _.clone(objects);\n\t     * console.log(shallow[0] === objects[0]);\n\t     * // => true\n\t     */\n\t    function clone(value) {\n\t      return baseClone(value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.clone` except that it accepts `customizer` which\n\t     * is invoked to produce the cloned value. If `customizer` returns `undefined`\n\t     * cloning is handled by the method instead. The `customizer` is invoked with\n\t     * up to four arguments; (value [, index|key, object, stack]).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @returns {*} Returns the cloned value.\n\t     * @example\n\t     *\n\t     * function customizer(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(false);\n\t     *   }\n\t     * }\n\t     *\n\t     * var el = _.cloneWith(document.body, customizer);\n\t     *\n\t     * console.log(el === document.body);\n\t     * // => false\n\t     * console.log(el.nodeName);\n\t     * // => 'BODY'\n\t     * console.log(el.childNodes.length);\n\t     * // => 0\n\t     */\n\t    function cloneWith(value, customizer) {\n\t      return baseClone(value, false, customizer);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.clone` except that it recursively clones `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to recursively clone.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t     *\n\t     * var deep = _.cloneDeep(objects);\n\t     * console.log(deep[0] === objects[0]);\n\t     * // => false\n\t     */\n\t    function cloneDeep(value) {\n\t      return baseClone(value, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.cloneWith` except that it recursively clones `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to recursively clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @example\n\t     *\n\t     * function customizer(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(true);\n\t     *   }\n\t     * }\n\t     *\n\t     * var el = _.cloneDeepWith(document.body, customizer);\n\t     *\n\t     * console.log(el === document.body);\n\t     * // => false\n\t     * console.log(el.nodeName);\n\t     * // => 'BODY'\n\t     * console.log(el.childNodes.length);\n\t     * // => 20\n\t     */\n\t    function cloneDeepWith(value, customizer) {\n\t      return baseClone(value, true, customizer);\n\t    }\n\t\n\t    /**\n\t     * Performs a [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * comparison between two values to determine if they are equivalent.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'fred' };\n\t     *\n\t     * _.eq(object, object);\n\t     * // => true\n\t     *\n\t     * _.eq(object, other);\n\t     * // => false\n\t     *\n\t     * _.eq('a', 'a');\n\t     * // => true\n\t     *\n\t     * _.eq('a', Object('a'));\n\t     * // => false\n\t     *\n\t     * _.eq(NaN, NaN);\n\t     * // => true\n\t     */\n\t    function eq(value, other) {\n\t      return value === other || (value !== value && other !== other);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.gt(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.gt(1, 3);\n\t     * // => false\n\t     */\n\t    function gt(value, other) {\n\t      return value > other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.gte(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.gte(1, 3);\n\t     * // => false\n\t     */\n\t    function gte(value, other) {\n\t      return value >= other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is likely an `arguments` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArguments(function() { return arguments; }());\n\t     * // => true\n\t     *\n\t     * _.isArguments([1, 2, 3]);\n\t     * // => false\n\t     */\n\t    function isArguments(value) {\n\t      // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n\t      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n\t        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `Array` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Function\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArray([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArray(document.body.children);\n\t     * // => false\n\t     *\n\t     * _.isArray('abc');\n\t     * // => false\n\t     *\n\t     * _.isArray(_.noop);\n\t     * // => false\n\t     */\n\t    var isArray = Array.isArray;\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `ArrayBuffer` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Function\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayBuffer(new ArrayBuffer(2));\n\t     * // => true\n\t     *\n\t     * _.isArrayBuffer(new Array(2));\n\t     * // => false\n\t     */\n\t    function isArrayBuffer(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is array-like. A value is considered array-like if it's\n\t     * not a function and has a `value.length` that's an integer greater than or\n\t     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Function\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayLike([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArrayLike(document.body.children);\n\t     * // => true\n\t     *\n\t     * _.isArrayLike('abc');\n\t     * // => true\n\t     *\n\t     * _.isArrayLike(_.noop);\n\t     * // => false\n\t     */\n\t    function isArrayLike(value) {\n\t      return value != null &&\n\t        !(typeof value == 'function' && isFunction(value)) && isLength(getLength(value));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isArrayLike` except that it also checks if `value`\n\t     * is an object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Function\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array-like object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayLikeObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArrayLikeObject(document.body.children);\n\t     * // => true\n\t     *\n\t     * _.isArrayLikeObject('abc');\n\t     * // => false\n\t     *\n\t     * _.isArrayLikeObject(_.noop);\n\t     * // => false\n\t     */\n\t    function isArrayLikeObject(value) {\n\t      return isObjectLike(value) && isArrayLike(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a boolean primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBoolean(false);\n\t     * // => true\n\t     *\n\t     * _.isBoolean(null);\n\t     * // => false\n\t     */\n\t    function isBoolean(value) {\n\t      return value === true || value === false ||\n\t        (isObjectLike(value) && objectToString.call(value) == boolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a buffer.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBuffer(new Buffer(2));\n\t     * // => true\n\t     *\n\t     * _.isBuffer(new Uint8Array(2));\n\t     * // => false\n\t     */\n\t    var isBuffer = !Buffer ? constant(false) : function(value) {\n\t      return value instanceof Buffer;\n\t    };\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Date` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isDate(new Date);\n\t     * // => true\n\t     *\n\t     * _.isDate('Mon April 23 2012');\n\t     * // => false\n\t     */\n\t    function isDate(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == dateTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is likely a DOM element.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n\t     * @example\n\t     *\n\t     * _.isElement(document.body);\n\t     * // => true\n\t     *\n\t     * _.isElement('<body>');\n\t     * // => false\n\t     */\n\t    function isElement(value) {\n\t      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is empty. A value is considered empty unless it's an\n\t     * `arguments` object, array, string, or jQuery-like collection with a length\n\t     * greater than `0` or an object with own enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {Array|Object|string} value The value to inspect.\n\t     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n\t     * @example\n\t     *\n\t     * _.isEmpty(null);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(true);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(1);\n\t     * // => true\n\t     *\n\t     * _.isEmpty([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isEmpty({ 'a': 1 });\n\t     * // => false\n\t     */\n\t    function isEmpty(value) {\n\t      if (isArrayLike(value) &&\n\t          (isArray(value) || isString(value) || isFunction(value.splice) || isArguments(value))) {\n\t        return !value.length;\n\t      }\n\t      for (var key in value) {\n\t        if (hasOwnProperty.call(value, key)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between two values to determine if they are\n\t     * equivalent.\n\t     *\n\t     * **Note:** This method supports comparing arrays, array buffers, booleans,\n\t     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n\t     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n\t     * by their own, not inherited, enumerable properties. Functions and DOM\n\t     * nodes are **not** supported.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'fred' };\n\t     *\n\t     * _.isEqual(object, other);\n\t     * // => true\n\t     *\n\t     * object === other;\n\t     * // => false\n\t     */\n\t    function isEqual(value, other) {\n\t      return baseIsEqual(value, other);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isEqual` except that it accepts `customizer` which is\n\t     * invoked to compare values. If `customizer` returns `undefined` comparisons are\n\t     * handled by the method instead. The `customizer` is invoked with up to six arguments:\n\t     * (objValue, othValue [, index|key, object, other, stack]).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * function isGreeting(value) {\n\t     *   return /^h(?:i|ello)$/.test(value);\n\t     * }\n\t     *\n\t     * function customizer(objValue, othValue) {\n\t     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n\t     *     return true;\n\t     *   }\n\t     * }\n\t     *\n\t     * var array = ['hello', 'goodbye'];\n\t     * var other = ['hi', 'goodbye'];\n\t     *\n\t     * _.isEqualWith(array, other, customizer);\n\t     * // => true\n\t     */\n\t    function isEqualWith(value, other, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      var result = customizer ? customizer(value, other) : undefined;\n\t      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n\t     * `SyntaxError`, `TypeError`, or `URIError` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isError(new Error);\n\t     * // => true\n\t     *\n\t     * _.isError(Error);\n\t     * // => false\n\t     */\n\t    function isError(value) {\n\t      return isObjectLike(value) &&\n\t        typeof value.message == 'string' && objectToString.call(value) == errorTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a finite primitive number.\n\t     *\n\t     * **Note:** This method is based on [`Number.isFinite`](https://mdn.io/Number/isFinite).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFinite(3);\n\t     * // => true\n\t     *\n\t     * _.isFinite(Number.MAX_VALUE);\n\t     * // => true\n\t     *\n\t     * _.isFinite(3.14);\n\t     * // => true\n\t     *\n\t     * _.isFinite(Infinity);\n\t     * // => false\n\t     */\n\t    function isFinite(value) {\n\t      return typeof value == 'number' && nativeIsFinite(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Function` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFunction(_);\n\t     * // => true\n\t     *\n\t     * _.isFunction(/abc/);\n\t     * // => false\n\t     */\n\t    function isFunction(value) {\n\t      // The use of `Object#toString` avoids issues with the `typeof` operator\n\t      // in Safari 8 which returns 'object' for typed array constructors, and\n\t      // PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n\t      var tag = isObject(value) ? objectToString.call(value) : '';\n\t      return tag == funcTag || tag == genTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an integer.\n\t     *\n\t     * **Note:** This method is based on [`Number.isInteger`](https://mdn.io/Number/isInteger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isInteger(3);\n\t     * // => true\n\t     *\n\t     * _.isInteger(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isInteger(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isInteger('3');\n\t     * // => false\n\t     */\n\t    function isInteger(value) {\n\t      return typeof value == 'number' && value == toInteger(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like length.\n\t     *\n\t     * **Note:** This function is loosely based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n\t     * @example\n\t     *\n\t     * _.isLength(3);\n\t     * // => true\n\t     *\n\t     * _.isLength(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isLength(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isLength('3');\n\t     * // => false\n\t     */\n\t    function isLength(value) {\n\t      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n\t     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObject({});\n\t     * // => true\n\t     *\n\t     * _.isObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObject(_.noop);\n\t     * // => true\n\t     *\n\t     * _.isObject(null);\n\t     * // => false\n\t     */\n\t    function isObject(value) {\n\t      var type = typeof value;\n\t      return !!value && (type == 'object' || type == 'function');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is object-like. A value is object-like if it's not `null`\n\t     * and has a `typeof` result of \"object\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObjectLike({});\n\t     * // => true\n\t     *\n\t     * _.isObjectLike([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObjectLike(_.noop);\n\t     * // => false\n\t     *\n\t     * _.isObjectLike(null);\n\t     * // => false\n\t     */\n\t    function isObjectLike(value) {\n\t      return !!value && typeof value == 'object';\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Map` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isMap(new Map);\n\t     * // => true\n\t     *\n\t     * _.isMap(new WeakMap);\n\t     * // => false\n\t     */\n\t    function isMap(value) {\n\t      return isObjectLike(value) && getTag(value) == mapTag;\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between `object` and `source` to determine if\n\t     * `object` contains equivalent property values.\n\t     *\n\t     * **Note:** This method supports comparing the same values as `_.isEqual`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.isMatch(object, { 'age': 40 });\n\t     * // => true\n\t     *\n\t     * _.isMatch(object, { 'age': 36 });\n\t     * // => false\n\t     */\n\t    function isMatch(object, source) {\n\t      return object === source || baseIsMatch(object, source, getMatchData(source));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isMatch` except that it accepts `customizer` which\n\t     * is invoked to compare values. If `customizer` returns `undefined` comparisons\n\t     * are handled by the method instead. The `customizer` is invoked with five\n\t     * arguments: (objValue, srcValue, index|key, object, source).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * function isGreeting(value) {\n\t     *   return /^h(?:i|ello)$/.test(value);\n\t     * }\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n\t     *     return true;\n\t     *   }\n\t     * }\n\t     *\n\t     * var object = { 'greeting': 'hello' };\n\t     * var source = { 'greeting': 'hi' };\n\t     *\n\t     * _.isMatchWith(object, source, customizer);\n\t     * // => true\n\t     */\n\t    function isMatchWith(object, source, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return baseIsMatch(object, source, getMatchData(source), customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `NaN`.\n\t     *\n\t     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n\t     * which returns `true` for `undefined` and other non-numeric values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNaN(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNaN(new Number(NaN));\n\t     * // => true\n\t     *\n\t     * isNaN(undefined);\n\t     * // => true\n\t     *\n\t     * _.isNaN(undefined);\n\t     * // => false\n\t     */\n\t    function isNaN(value) {\n\t      // An `NaN` primitive is the only value that is not equal to itself.\n\t      // Perform the `toStringTag` check first to avoid errors with some ActiveX objects in IE.\n\t      return isNumber(value) && value != +value;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a native function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNative(Array.prototype.push);\n\t     * // => true\n\t     *\n\t     * _.isNative(_);\n\t     * // => false\n\t     */\n\t    function isNative(value) {\n\t      if (value == null) {\n\t        return false;\n\t      }\n\t      if (isFunction(value)) {\n\t        return reIsNative.test(funcToString.call(value));\n\t      }\n\t      return isObjectLike(value) &&\n\t        (isHostObject(value) ? reIsNative : reIsHostCtor).test(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNull(null);\n\t     * // => true\n\t     *\n\t     * _.isNull(void 0);\n\t     * // => false\n\t     */\n\t    function isNull(value) {\n\t      return value === null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null` or `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNil(null);\n\t     * // => true\n\t     *\n\t     * _.isNil(void 0);\n\t     * // => true\n\t     *\n\t     * _.isNil(NaN);\n\t     * // => false\n\t     */\n\t    function isNil(value) {\n\t      return value == null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Number` primitive or object.\n\t     *\n\t     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n\t     * as numbers, use the `_.isFinite` method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNumber(3);\n\t     * // => true\n\t     *\n\t     * _.isNumber(Number.MIN_VALUE);\n\t     * // => true\n\t     *\n\t     * _.isNumber(Infinity);\n\t     * // => true\n\t     *\n\t     * _.isNumber('3');\n\t     * // => false\n\t     */\n\t    function isNumber(value) {\n\t      return typeof value == 'number' ||\n\t        (isObjectLike(value) && objectToString.call(value) == numberTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a plain object, that is, an object created by the\n\t     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * _.isPlainObject(new Foo);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject({ 'x': 0, 'y': 0 });\n\t     * // => true\n\t     *\n\t     * _.isPlainObject(Object.create(null));\n\t     * // => true\n\t     */\n\t    function isPlainObject(value) {\n\t      if (!isObjectLike(value) || objectToString.call(value) != objectTag || isHostObject(value)) {\n\t        return false;\n\t      }\n\t      var proto = objectProto;\n\t      if (typeof value.constructor == 'function') {\n\t        proto = getPrototypeOf(value);\n\t      }\n\t      if (proto === null) {\n\t        return true;\n\t      }\n\t      var Ctor = proto.constructor;\n\t      return (typeof Ctor == 'function' &&\n\t        Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `RegExp` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isRegExp(/abc/);\n\t     * // => true\n\t     *\n\t     * _.isRegExp('/abc/');\n\t     * // => false\n\t     */\n\t    function isRegExp(value) {\n\t      return isObject(value) && objectToString.call(value) == regexpTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n\t     * double precision number which isn't the result of a rounded unsafe integer.\n\t     *\n\t     * **Note:** This method is based on [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSafeInteger(3);\n\t     * // => true\n\t     *\n\t     * _.isSafeInteger(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isSafeInteger(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isSafeInteger('3');\n\t     * // => false\n\t     */\n\t    function isSafeInteger(value) {\n\t      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Set` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSet(new Set);\n\t     * // => true\n\t     *\n\t     * _.isSet(new WeakSet);\n\t     * // => false\n\t     */\n\t    function isSet(value) {\n\t      return isObjectLike(value) && getTag(value) == setTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `String` primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isString('abc');\n\t     * // => true\n\t     *\n\t     * _.isString(1);\n\t     * // => false\n\t     */\n\t    function isString(value) {\n\t      return typeof value == 'string' ||\n\t        (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Symbol` primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSymbol(Symbol.iterator);\n\t     * // => true\n\t     *\n\t     * _.isSymbol('abc');\n\t     * // => false\n\t     */\n\t    function isSymbol(value) {\n\t      return typeof value == 'symbol' ||\n\t        (isObjectLike(value) && objectToString.call(value) == symbolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a typed array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isTypedArray(new Uint8Array);\n\t     * // => true\n\t     *\n\t     * _.isTypedArray([]);\n\t     * // => false\n\t     */\n\t    function isTypedArray(value) {\n\t      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isUndefined(void 0);\n\t     * // => true\n\t     *\n\t     * _.isUndefined(null);\n\t     * // => false\n\t     */\n\t    function isUndefined(value) {\n\t      return value === undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `WeakMap` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isWeakMap(new WeakMap);\n\t     * // => true\n\t     *\n\t     * _.isWeakMap(new Map);\n\t     * // => false\n\t     */\n\t    function isWeakMap(value) {\n\t      return isObjectLike(value) && getTag(value) == weakMapTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `WeakSet` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isWeakSet(new WeakSet);\n\t     * // => true\n\t     *\n\t     * _.isWeakSet(new Set);\n\t     * // => false\n\t     */\n\t    function isWeakSet(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == weakSetTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.lt(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.lt(3, 1);\n\t     * // => false\n\t     */\n\t    function lt(value, other) {\n\t      return value < other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.lte(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 1);\n\t     * // => false\n\t     */\n\t    function lte(value, other) {\n\t      return value <= other;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the converted array.\n\t     * @example\n\t     *\n\t     * _.toArray({ 'a': 1, 'b': 2 });\n\t     * // => [1, 2]\n\t     *\n\t     * _.toArray('abc');\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * _.toArray(1);\n\t     * // => []\n\t     *\n\t     * _.toArray(null);\n\t     * // => []\n\t     */\n\t    function toArray(value) {\n\t      if (!value) {\n\t        return [];\n\t      }\n\t      if (isArrayLike(value)) {\n\t        return isString(value) ? stringToArray(value) : copyArray(value);\n\t      }\n\t      if (iteratorSymbol && value[iteratorSymbol]) {\n\t        return iteratorToArray(value[iteratorSymbol]());\n\t      }\n\t      var tag = getTag(value),\n\t          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\t\n\t      return func(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an integer.\n\t     *\n\t     * **Note:** This function is loosely based on [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toInteger(3);\n\t     * // => 3\n\t     *\n\t     * _.toInteger(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toInteger(Infinity);\n\t     * // => 1.7976931348623157e+308\n\t     *\n\t     * _.toInteger('3');\n\t     * // => 3\n\t     */\n\t    function toInteger(value) {\n\t      if (!value) {\n\t        return value === 0 ? value : 0;\n\t      }\n\t      value = toNumber(value);\n\t      if (value === INFINITY || value === -INFINITY) {\n\t        var sign = (value < 0 ? -1 : 1);\n\t        return sign * MAX_INTEGER;\n\t      }\n\t      var remainder = value % 1;\n\t      return value === value ? (remainder ? value - remainder : value) : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an integer suitable for use as the length of an\n\t     * array-like object.\n\t     *\n\t     * **Note:** This method is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toLength(3);\n\t     * // => 3\n\t     *\n\t     * _.toLength(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toLength(Infinity);\n\t     * // => 4294967295\n\t     *\n\t     * _.toLength('3');\n\t     * // => 3\n\t     */\n\t    function toLength(value) {\n\t      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to process.\n\t     * @returns {number} Returns the number.\n\t     * @example\n\t     *\n\t     * _.toNumber(3);\n\t     * // => 3\n\t     *\n\t     * _.toNumber(Number.MIN_VALUE);\n\t     * // => 5e-324\n\t     *\n\t     * _.toNumber(Infinity);\n\t     * // => Infinity\n\t     *\n\t     * _.toNumber('3');\n\t     * // => 3\n\t     */\n\t    function toNumber(value) {\n\t      if (isObject(value)) {\n\t        var other = isFunction(value.valueOf) ? value.valueOf() : value;\n\t        value = isObject(other) ? (other + '') : other;\n\t      }\n\t      if (typeof value != 'string') {\n\t        return value === 0 ? value : +value;\n\t      }\n\t      value = value.replace(reTrim, '');\n\t      var isBinary = reIsBinary.test(value);\n\t      return (isBinary || reIsOctal.test(value))\n\t        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n\t        : (reIsBadHex.test(value) ? NAN : +value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a plain object flattening inherited enumerable\n\t     * properties of `value` to own properties of the plain object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Object} Returns the converted plain object.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     *\n\t     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n\t     * // => { 'a': 1, 'b': 2, 'c': 3 }\n\t     */\n\t    function toPlainObject(value) {\n\t      return copyObject(value, keysIn(value));\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a safe integer. A safe integer can be compared and\n\t     * represented correctly.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toSafeInteger(3);\n\t     * // => 3\n\t     *\n\t     * _.toSafeInteger(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toSafeInteger(Infinity);\n\t     * // => 9007199254740991\n\t     *\n\t     * _.toSafeInteger('3');\n\t     * // => 3\n\t     */\n\t    function toSafeInteger(value) {\n\t      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a string if it's not one. An empty string is returned\n\t     * for `null` and `undefined` values. The sign of `-0` is preserved.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to process.\n\t     * @returns {string} Returns the string.\n\t     * @example\n\t     *\n\t     * _.toString(null);\n\t     * // => ''\n\t     *\n\t     * _.toString(-0);\n\t     * // => '-0'\n\t     *\n\t     * _.toString([1, 2, 3]);\n\t     * // => '1,2,3'\n\t     */\n\t    function toString(value) {\n\t      // Exit early for strings to avoid a performance hit in some environments.\n\t      if (typeof value == 'string') {\n\t        return value;\n\t      }\n\t      if (value == null) {\n\t        return '';\n\t      }\n\t      if (isSymbol(value)) {\n\t        return Symbol ? symbolToString.call(value) : '';\n\t      }\n\t      var result = (value + '');\n\t      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Assigns own enumerable properties of source objects to the destination\n\t     * object. Source objects are applied from left to right. Subsequent sources\n\t     * overwrite property assignments of previous sources.\n\t     *\n\t     * **Note:** This method mutates `object` and is loosely based on\n\t     * [`Object.assign`](https://mdn.io/Object/assign).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.c = 3;\n\t     * }\n\t     *\n\t     * function Bar() {\n\t     *   this.e = 5;\n\t     * }\n\t     *\n\t     * Foo.prototype.d = 4;\n\t     * Bar.prototype.f = 6;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo, new Bar);\n\t     * // => { 'a': 1, 'c': 3, 'e': 5 }\n\t     */\n\t    var assign = createAssigner(function(object, source) {\n\t      copyObject(source, keys(source), object);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it iterates over own and\n\t     * inherited source properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias extend\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * function Bar() {\n\t     *   this.d = 4;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     * Bar.prototype.e = 5;\n\t     *\n\t     * _.assignIn({ 'a': 1 }, new Foo, new Bar);\n\t     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5 }\n\t     */\n\t    var assignIn = createAssigner(function(object, source) {\n\t      copyObject(source, keysIn(source), object);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assignIn` except that it accepts `customizer` which\n\t     * is invoked to produce the assigned values. If `customizer` returns `undefined`\n\t     * assignment is handled by the method instead. The `customizer` is invoked\n\t     * with five arguments: (objValue, srcValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias extendWith\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t     * }\n\t     *\n\t     * var defaults = _.partialRight(_.assignInWith, customizer);\n\t     *\n\t     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      copyObjectWith(source, keysIn(source), object, customizer);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it accepts `customizer` which\n\t     * is invoked to produce the assigned values. If `customizer` returns `undefined`\n\t     * assignment is handled by the method instead. The `customizer` is invoked\n\t     * with five arguments: (objValue, srcValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t     * }\n\t     *\n\t     * var defaults = _.partialRight(_.assignWith, customizer);\n\t     *\n\t     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      copyObjectWith(source, keys(source), object, customizer);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values corresponding to `paths` of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {...(string|string[])} [paths] The property paths of elements to pick,\n\t     *  specified individually or in arrays.\n\t     * @returns {Array} Returns the new array of picked elements.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t     *\n\t     * _.at(object, ['a[0].b.c', 'a[1]']);\n\t     * // => [3, 4]\n\t     *\n\t     * _.at(['a', 'b', 'c'], 0, 2);\n\t     * // => ['a', 'c']\n\t     */\n\t    var at = rest(function(object, paths) {\n\t      return baseAt(object, baseFlatten(paths));\n\t    });\n\t\n\t    /**\n\t     * Creates an object that inherits from the `prototype` object. If a `properties`\n\t     * object is given its own enumerable properties are assigned to the created object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @param {Object} [properties] The properties to assign to the object.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * function Shape() {\n\t     *   this.x = 0;\n\t     *   this.y = 0;\n\t     * }\n\t     *\n\t     * function Circle() {\n\t     *   Shape.call(this);\n\t     * }\n\t     *\n\t     * Circle.prototype = _.create(Shape.prototype, {\n\t     *   'constructor': Circle\n\t     * });\n\t     *\n\t     * var circle = new Circle;\n\t     * circle instanceof Circle;\n\t     * // => true\n\t     *\n\t     * circle instanceof Shape;\n\t     * // => true\n\t     */\n\t    function create(prototype, properties) {\n\t      var result = baseCreate(prototype);\n\t      return properties ? baseAssign(result, properties) : result;\n\t    }\n\t\n\t    /**\n\t     * Assigns own and inherited enumerable properties of source objects to the\n\t     * destination object for all destination properties that resolve to `undefined`.\n\t     * Source objects are applied from left to right. Once a property is set,\n\t     * additional values of the same property are ignored.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var defaults = rest(function(args) {\n\t      args.push(undefined, assignInDefaults);\n\t      return apply(assignInWith, undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.defaults` except that it recursively assigns\n\t     * default properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n\t     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n\t     *\n\t     */\n\t    var defaultsDeep = rest(function(args) {\n\t      args.push(undefined, mergeDefaults);\n\t      return apply(mergeWith, undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the key of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findKey(users, function(o) { return o.age < 40; });\n\t     * // => 'barney' (iteration order is not guaranteed)\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findKey(users, { 'age': 1, 'active': true });\n\t     * // => 'pebbles'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findKey(users, ['active', false]);\n\t     * // => 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findKey(users, 'active');\n\t     * // => 'barney'\n\t     */\n\t    function findKey(object, predicate) {\n\t      return baseFind(object, getIteratee(predicate, 3), baseForOwn, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.findKey` except that it iterates over elements of\n\t     * a collection in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findLastKey(users, function(o) { return o.age < 40; });\n\t     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findLastKey(users, { 'age': 36, 'active': true });\n\t     * // => 'barney'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findLastKey(users, ['active', false]);\n\t     * // => 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findLastKey(users, 'active');\n\t     * // => 'pebbles'\n\t     */\n\t    function findLastKey(object, predicate) {\n\t      return baseFind(object, getIteratee(predicate, 3), baseForOwnRight, true);\n\t    }\n\t\n\t    /**\n\t     * Iterates over own and inherited enumerable properties of an object invoking\n\t     * `iteratee` for each property. The iteratee is invoked with three arguments:\n\t     * (value, key, object). Iteratee functions may exit iteration early by explicitly\n\t     * returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forIn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'a', 'b', then 'c' (iteration order is not guaranteed)\n\t     */\n\t    function forIn(object, iteratee) {\n\t      return object == null ? object : baseFor(object, toFunction(iteratee), keysIn);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forIn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forInRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'\n\t     */\n\t    function forInRight(object, iteratee) {\n\t      return object == null ? object : baseForRight(object, toFunction(iteratee), keysIn);\n\t    }\n\t\n\t    /**\n\t     * Iterates over own enumerable properties of an object invoking `iteratee`\n\t     * for each property. The iteratee is invoked with three arguments:\n\t     * (value, key, object). Iteratee functions may exit iteration early by\n\t     * explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'a' then 'b' (iteration order is not guaranteed)\n\t     */\n\t    function forOwn(object, iteratee) {\n\t      return object && baseForOwn(object, toFunction(iteratee));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forOwn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwnRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'\n\t     */\n\t    function forOwnRight(object, iteratee) {\n\t      return object && baseForOwnRight(object, toFunction(iteratee));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of function property names from own enumerable properties\n\t     * of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the new array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = _.constant('a');\n\t     *   this.b = _.constant('b');\n\t     * }\n\t     *\n\t     * Foo.prototype.c = _.constant('c');\n\t     *\n\t     * _.functions(new Foo);\n\t     * // => ['a', 'b']\n\t     */\n\t    function functions(object) {\n\t      return object == null ? [] : baseFunctions(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of function property names from own and inherited\n\t     * enumerable properties of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the new array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = _.constant('a');\n\t     *   this.b = _.constant('b');\n\t     * }\n\t     *\n\t     * Foo.prototype.c = _.constant('c');\n\t     *\n\t     * _.functionsIn(new Foo);\n\t     * // => ['a', 'b', 'c']\n\t     */\n\t    function functionsIn(object) {\n\t      return object == null ? [] : baseFunctions(object, keysIn(object));\n\t    }\n\t\n\t    /**\n\t     * Gets the value at `path` of `object`. If the resolved value is\n\t     * `undefined` the `defaultValue` is used in its place.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.get(object, 'a[0].b.c');\n\t     * // => 3\n\t     *\n\t     * _.get(object, ['a', '0', 'b', 'c']);\n\t     * // => 3\n\t     *\n\t     * _.get(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     */\n\t    function get(object, path, defaultValue) {\n\t      var result = object == null ? undefined : baseGet(object, path);\n\t      return result === undefined ? defaultValue : result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct property of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': { 'b': { 'c': 3 } } };\n\t     * var other = _.create({ 'a': _.create({ 'b': _.create({ 'c': 3 }) }) });\n\t     *\n\t     * _.has(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.has(object, 'a.b.c');\n\t     * // => true\n\t     *\n\t     * _.has(object, ['a', 'b', 'c']);\n\t     * // => true\n\t     *\n\t     * _.has(other, 'a');\n\t     * // => false\n\t     */\n\t    function has(object, path) {\n\t      return hasPath(object, path, baseHas);\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct or inherited property of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     * @example\n\t     *\n\t     * var object = _.create({ 'a': _.create({ 'b': _.create({ 'c': 3 }) }) });\n\t     *\n\t     * _.hasIn(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, 'a.b.c');\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, ['a', 'b', 'c']);\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, 'b');\n\t     * // => false\n\t     */\n\t    function hasIn(object, path) {\n\t      return hasPath(object, path, baseHasIn);\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the inverted keys and values of `object`.\n\t     * If `object` contains duplicate values, subsequent values overwrite property\n\t     * assignments of previous values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invert(object);\n\t     * // => { '1': 'c', '2': 'b' }\n\t     */\n\t    var invert = createInverter(function(result, value, key) {\n\t      result[value] = key;\n\t    }, constant(identity));\n\t\n\t    /**\n\t     * This method is like `_.invert` except that the inverted object is generated\n\t     * from the results of running each element of `object` through `iteratee`.\n\t     * The corresponding inverted value of each inverted key is an array of keys\n\t     * responsible for generating the inverted value. The iteratee is invoked\n\t     * with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invertBy(object);\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     *\n\t     * _.invertBy(object, function(value) {\n\t     *   return 'group' + value;\n\t     * });\n\t     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n\t     */\n\t    var invertBy = createInverter(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, value)) {\n\t        result[value].push(key);\n\t      } else {\n\t        result[value] = [key];\n\t      }\n\t    }, getIteratee);\n\t\n\t    /**\n\t     * Invokes the method at `path` of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n\t     *\n\t     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n\t     * // => [2, 3]\n\t     */\n\t    var invoke = rest(baseInvoke);\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects. See the\n\t     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keys(new Foo);\n\t     * // => ['a', 'b'] (iteration order is not guaranteed)\n\t     *\n\t     * _.keys('hi');\n\t     * // => ['0', '1']\n\t     */\n\t    function keys(object) {\n\t      var isProto = isPrototype(object);\n\t      if (!(isProto || isArrayLike(object))) {\n\t        return baseKeys(object);\n\t      }\n\t      var indexes = indexKeys(object),\n\t          skipIndexes = !!indexes,\n\t          result = indexes || [],\n\t          length = result.length;\n\t\n\t      for (var key in object) {\n\t        if (baseHas(object, key) &&\n\t            !(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n\t            !(isProto && key == 'constructor')) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keysIn(new Foo);\n\t     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n\t     */\n\t    function keysIn(object) {\n\t      var index = -1,\n\t          isProto = isPrototype(object),\n\t          props = baseKeysIn(object),\n\t          propsLength = props.length,\n\t          indexes = indexKeys(object),\n\t          skipIndexes = !!indexes,\n\t          result = indexes || [],\n\t          length = result.length;\n\t\n\t      while (++index < propsLength) {\n\t        var key = props[index];\n\t        if (!(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n\t            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.mapValues`; this method creates an object with the\n\t     * same values as `object` and keys generated by running each own enumerable\n\t     * property of `object` through `iteratee`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @example\n\t     *\n\t     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   return key + value;\n\t     * });\n\t     * // => { 'a1': 1, 'b2': 2 }\n\t     */\n\t    function mapKeys(object, iteratee) {\n\t      var result = {};\n\t      iteratee = getIteratee(iteratee, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        result[iteratee(value, key, object)] = value;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an object with the same keys as `object` and values generated by\n\t     * running each own enumerable property of `object` through `iteratee`. The\n\t     * iteratee function is invoked with three arguments: (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'fred':    { 'user': 'fred',    'age': 40 },\n\t     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n\t     * };\n\t     *\n\t     * _.mapValues(users, function(o) { return o.age; });\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.mapValues(users, 'age');\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     */\n\t    function mapValues(object, iteratee) {\n\t      var result = {};\n\t      iteratee = getIteratee(iteratee, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        result[key] = iteratee(value, key, object);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Recursively merges own and inherited enumerable properties of source\n\t     * objects into the destination object, skipping source properties that resolve\n\t     * to `undefined`. Array and plain object properties are merged recursively.\n\t     * Other objects and value types are overridden by assignment. Source objects\n\t     * are applied from left to right. Subsequent sources overwrite property\n\t     * assignments of previous sources.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n\t     * };\n\t     *\n\t     * var ages = {\n\t     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n\t     * };\n\t     *\n\t     * _.merge(users, ages);\n\t     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n\t     */\n\t    var merge = createAssigner(function(object, source, srcIndex) {\n\t      baseMerge(object, source, srcIndex);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.merge` except that it accepts `customizer` which\n\t     * is invoked to produce the merged values of the destination and source\n\t     * properties. If `customizer` returns `undefined` merging is handled by the\n\t     * method instead. The `customizer` is invoked with seven arguments:\n\t     * (objValue, srcValue, key, object, source, stack).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} customizer The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   if (_.isArray(objValue)) {\n\t     *     return objValue.concat(srcValue);\n\t     *   }\n\t     * }\n\t     *\n\t     * var object = {\n\t     *   'fruits': ['apple'],\n\t     *   'vegetables': ['beet']\n\t     * };\n\t     *\n\t     * var other = {\n\t     *   'fruits': ['banana'],\n\t     *   'vegetables': ['carrot']\n\t     * };\n\t     *\n\t     * _.mergeWith(object, other, customizer);\n\t     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n\t     */\n\t    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      baseMerge(object, source, srcIndex, customizer);\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.pick`; this method creates an object composed of the\n\t     * own and inherited enumerable properties of `object` that are not omitted.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {...(string|string[])} [props] The property names to omit, specified\n\t     *  individually or in arrays..\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.omit(object, ['a', 'c']);\n\t     * // => { 'b': '2' }\n\t     */\n\t    var omit = rest(function(object, props) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      props = arrayMap(baseFlatten(props), String);\n\t      return basePick(object, baseDifference(keysIn(object), props));\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.pickBy`; this method creates an object composed of the\n\t     * own and inherited enumerable properties of `object` that `predicate`\n\t     * doesn't return truthy for.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.omitBy(object, _.isNumber);\n\t     * // => { 'b': '2' }\n\t     */\n\t    function omitBy(object, predicate) {\n\t      predicate = getIteratee(predicate, 2);\n\t      return basePickBy(object, function(value, key) {\n\t        return !predicate(value, key);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the picked `object` properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {...(string|string[])} [props] The property names to pick, specified\n\t     *  individually or in arrays.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.pick(object, ['a', 'c']);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    var pick = rest(function(object, props) {\n\t      return object == null ? {} : basePick(object, baseFlatten(props));\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of the `object` properties `predicate` returns\n\t     * truthy for. The predicate is invoked with two arguments: (value, key).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.pickBy(object, _.isNumber);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    function pickBy(object, predicate) {\n\t      return object == null ? {} : basePickBy(object, getIteratee(predicate, 2));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.get` except that if the resolved value is a function\n\t     * it's invoked with the `this` binding of its parent object and its result\n\t     * is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to resolve.\n\t     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n\t     *\n\t     * _.result(object, 'a[0].b.c1');\n\t     * // => 3\n\t     *\n\t     * _.result(object, 'a[0].b.c2');\n\t     * // => 4\n\t     *\n\t     * _.result(object, 'a[0].b.c3', 'default');\n\t     * // => 'default'\n\t     *\n\t     * _.result(object, 'a[0].b.c3', _.constant('default'));\n\t     * // => 'default'\n\t     */\n\t    function result(object, path, defaultValue) {\n\t      if (!isKey(path, object)) {\n\t        path = baseToPath(path);\n\t        var result = get(object, path);\n\t        object = parent(object, path);\n\t      } else {\n\t        result = object == null ? undefined : object[path];\n\t      }\n\t      if (result === undefined) {\n\t        result = defaultValue;\n\t      }\n\t      return isFunction(result) ? result.call(object) : result;\n\t    }\n\t\n\t    /**\n\t     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist\n\t     * it's created. Arrays are created for missing index properties while objects\n\t     * are created for all other missing properties. Use `_.setWith` to customize\n\t     * `path` creation.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.set(object, 'a[0].b.c', 4);\n\t     * console.log(object.a[0].b.c);\n\t     * // => 4\n\t     *\n\t     * _.set(object, 'x[0].y.z', 5);\n\t     * console.log(object.x[0].y.z);\n\t     * // => 5\n\t     */\n\t    function set(object, path, value) {\n\t      return object == null ? object : baseSet(object, path, value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.set` except that it accepts `customizer` which is\n\t     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n\t     * path creation is handled by the method instead. The `customizer` is invoked\n\t     * with three arguments: (nsValue, key, nsObject).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.setWith({ '0': { 'length': 2 } }, '[0][1][2]', 3, Object);\n\t     * // => { '0': { '1': { '2': 3 }, 'length': 2 } }\n\t     */\n\t    function setWith(object, path, value, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return object == null ? object : baseSet(object, path, value, customizer);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own enumerable key-value pairs for `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the new array of key-value pairs.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.toPairs(new Foo);\n\t     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n\t     */\n\t    function toPairs(object) {\n\t      return baseToPairs(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own and inherited enumerable key-value pairs for `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the new array of key-value pairs.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.toPairsIn(new Foo);\n\t     * // => [['a', 1], ['b', 2], ['c', 1]] (iteration order is not guaranteed)\n\t     */\n\t    function toPairsIn(object) {\n\t      return baseToPairs(object, keysIn(object));\n\t    }\n\t\n\t    /**\n\t     * An alternative to `_.reduce`; this method transforms `object` to a new\n\t     * `accumulator` object which is the result of running each of its own enumerable\n\t     * properties through `iteratee`, with each invocation potentially mutating\n\t     * the `accumulator` object. The iteratee is invoked with four arguments:\n\t     * (accumulator, value, key, object). Iteratee functions may exit iteration\n\t     * early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Array|Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The custom accumulator value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.transform([2, 3, 4], function(result, n) {\n\t     *   result.push(n *= n);\n\t     *   return n % 2 == 0;\n\t     * }, []);\n\t     * // => [4, 9]\n\t     *\n\t     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t     *   (result[value] || (result[value] = [])).push(key);\n\t     * }, {});\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     */\n\t    function transform(object, iteratee, accumulator) {\n\t      var isArr = isArray(object) || isTypedArray(object);\n\t      iteratee = getIteratee(iteratee, 4);\n\t\n\t      if (accumulator == null) {\n\t        if (isArr || isObject(object)) {\n\t          var Ctor = object.constructor;\n\t          if (isArr) {\n\t            accumulator = isArray(object) ? new Ctor : [];\n\t          } else {\n\t            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n\t          }\n\t        } else {\n\t          accumulator = {};\n\t        }\n\t      }\n\t      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n\t        return iteratee(accumulator, value, index, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * Removes the property at `path` of `object`.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to unset.\n\t     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n\t     * _.unset(object, 'a[0].b.c');\n\t     * // => true\n\t     *\n\t     * console.log(object);\n\t     * // => { 'a': [{ 'b': {} }] };\n\t     *\n\t     * _.unset(object, 'a[0].b.c');\n\t     * // => true\n\t     *\n\t     * console.log(object);\n\t     * // => { 'a': [{ 'b': {} }] };\n\t     */\n\t    function unset(object, path) {\n\t      return object == null ? true : baseUnset(object, path);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.values(new Foo);\n\t     * // => [1, 2] (iteration order is not guaranteed)\n\t     *\n\t     * _.values('hi');\n\t     * // => ['h', 'i']\n\t     */\n\t    function values(object) {\n\t      return object ? baseValues(object, keys(object)) : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.valuesIn(new Foo);\n\t     * // => [1, 2, 3] (iteration order is not guaranteed)\n\t     */\n\t    function valuesIn(object) {\n\t      return object == null ? baseValues(object, keysIn(object)) : [];\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Number\n\t     * @param {number} number The number to clamp.\n\t     * @param {number} [lower] The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the clamped number.\n\t     * @example\n\t     *\n\t     * _.clamp(-10, -5, 5);\n\t     * // => -5\n\t     *\n\t     * _.clamp(10, -5, 5);\n\t     * // => 5\n\t     */\n\t    function clamp(number, lower, upper) {\n\t      if (upper === undefined) {\n\t        upper = lower;\n\t        lower = undefined;\n\t      }\n\t      if (upper !== undefined) {\n\t        upper = toNumber(upper);\n\t        upper = upper === upper ? upper : 0;\n\t      }\n\t      if (lower !== undefined) {\n\t        lower = toNumber(lower);\n\t        lower = lower === lower ? lower : 0;\n\t      }\n\t      return baseClamp(toNumber(number), lower, upper);\n\t    }\n\t\n\t    /**\n\t     * Checks if `n` is between `start` and up to but not including, `end`. If\n\t     * `end` is not specified it's set to `start` with `start` then set to `0`.\n\t     * If `start` is greater than `end` the params are swapped to support\n\t     * negative ranges.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Number\n\t     * @param {number} number The number to check.\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n\t     * @example\n\t     *\n\t     * _.inRange(3, 2, 4);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 8);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(2, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(1.2, 2);\n\t     * // => true\n\t     *\n\t     * _.inRange(5.2, 4);\n\t     * // => false\n\t     *\n\t     * _.inRange(-3, -2, -6);\n\t     * // => true\n\t     */\n\t    function inRange(number, start, end) {\n\t      start = toNumber(start) || 0;\n\t      if (end === undefined) {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = toNumber(end) || 0;\n\t      }\n\t      number = toNumber(number);\n\t      return baseInRange(number, start, end);\n\t    }\n\t\n\t    /**\n\t     * Produces a random number between the inclusive `lower` and `upper` bounds.\n\t     * If only one argument is provided a number between `0` and the given number\n\t     * is returned. If `floating` is `true`, or either `lower` or `upper` are floats,\n\t     * a floating-point number is returned instead of an integer.\n\t     *\n\t     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t     * floating-point values which can produce unexpected results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Number\n\t     * @param {number} [lower=0] The lower bound.\n\t     * @param {number} [upper=1] The upper bound.\n\t     * @param {boolean} [floating] Specify returning a floating-point number.\n\t     * @returns {number} Returns the random number.\n\t     * @example\n\t     *\n\t     * _.random(0, 5);\n\t     * // => an integer between 0 and 5\n\t     *\n\t     * _.random(5);\n\t     * // => also an integer between 0 and 5\n\t     *\n\t     * _.random(5, true);\n\t     * // => a floating-point number between 0 and 5\n\t     *\n\t     * _.random(1.2, 5.2);\n\t     * // => a floating-point number between 1.2 and 5.2\n\t     */\n\t    function random(lower, upper, floating) {\n\t      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n\t        upper = floating = undefined;\n\t      }\n\t      if (floating === undefined) {\n\t        if (typeof upper == 'boolean') {\n\t          floating = upper;\n\t          upper = undefined;\n\t        }\n\t        else if (typeof lower == 'boolean') {\n\t          floating = lower;\n\t          lower = undefined;\n\t        }\n\t      }\n\t      if (lower === undefined && upper === undefined) {\n\t        lower = 0;\n\t        upper = 1;\n\t      }\n\t      else {\n\t        lower = toNumber(lower) || 0;\n\t        if (upper === undefined) {\n\t          upper = lower;\n\t          lower = 0;\n\t        } else {\n\t          upper = toNumber(upper) || 0;\n\t        }\n\t      }\n\t      if (lower > upper) {\n\t        var temp = lower;\n\t        lower = upper;\n\t        upper = temp;\n\t      }\n\t      if (floating || lower % 1 || upper % 1) {\n\t        var rand = nativeRandom();\n\t        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n\t      }\n\t      return baseRandom(lower, upper);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the camel cased string.\n\t     * @example\n\t     *\n\t     * _.camelCase('Foo Bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('--foo-bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('__foo_bar__');\n\t     * // => 'fooBar'\n\t     */\n\t    var camelCase = createCompounder(function(result, word, index) {\n\t      word = word.toLowerCase();\n\t      return result + (index ? capitalize(word) : word);\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to upper case and the remaining\n\t     * to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to capitalize.\n\t     * @returns {string} Returns the capitalized string.\n\t     * @example\n\t     *\n\t     * _.capitalize('FRED');\n\t     * // => 'Fred'\n\t     */\n\t    function capitalize(string) {\n\t      return upperFirst(toString(string).toLowerCase());\n\t    }\n\t\n\t    /**\n\t     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n\t     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to deburr.\n\t     * @returns {string} Returns the deburred string.\n\t     * @example\n\t     *\n\t     * _.deburr('déjà vu');\n\t     * // => 'deja vu'\n\t     */\n\t    function deburr(string) {\n\t      string = toString(string);\n\t      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n\t    }\n\t\n\t    /**\n\t     * Checks if `string` ends with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=string.length] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n\t     * @example\n\t     *\n\t     * _.endsWith('abc', 'c');\n\t     * // => true\n\t     *\n\t     * _.endsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.endsWith('abc', 'b', 2);\n\t     * // => true\n\t     */\n\t    function endsWith(string, target, position) {\n\t      string = toString(string);\n\t      target = typeof target == 'string' ? target : (target + '');\n\t\n\t      var length = string.length;\n\t      position = position === undefined\n\t        ? length\n\t        : baseClamp(toInteger(position), 0, length);\n\t\n\t      position -= target.length;\n\t      return position >= 0 && string.indexOf(target, position) == position;\n\t    }\n\t\n\t    /**\n\t     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\" in `string` to\n\t     * their corresponding HTML entities.\n\t     *\n\t     * **Note:** No other characters are escaped. To escape additional\n\t     * characters use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * Though the \">\" character is escaped for symmetry, characters like\n\t     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n\t     * unless they're part of a tag or unquoted attribute value.\n\t     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n\t     * (under \"semi-related fun fact\") for more details.\n\t     *\n\t     * Backticks are escaped because in IE < 9, they can break out of\n\t     * attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n\t     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n\t     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n\t     * for more details.\n\t     *\n\t     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n\t     * to reduce XSS vectors.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escape('fred, barney, & pebbles');\n\t     * // => 'fred, barney, &amp; pebbles'\n\t     */\n\t    function escape(string) {\n\t      string = toString(string);\n\t      return (string && reHasUnescapedHtml.test(string))\n\t        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n\t     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escapeRegExp('[lodash](https://lodash.com/)');\n\t     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n\t     */\n\t    function escapeRegExp(string) {\n\t      string = toString(string);\n\t      return (string && reHasRegExpChar.test(string))\n\t        ? string.replace(reRegExpChar, '\\\\$&')\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the kebab cased string.\n\t     * @example\n\t     *\n\t     * _.kebabCase('Foo Bar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('fooBar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('__foo_bar__');\n\t     * // => 'foo-bar'\n\t     */\n\t    var kebabCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '-' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts `string`, as space separated words, to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the lower cased string.\n\t     * @example\n\t     *\n\t     * _.lowerCase('--Foo-Bar');\n\t     * // => 'foo bar'\n\t     *\n\t     * _.lowerCase('fooBar');\n\t     * // => 'foo bar'\n\t     *\n\t     * _.lowerCase('__FOO_BAR__');\n\t     * // => 'foo bar'\n\t     */\n\t    var lowerCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.lowerFirst('Fred');\n\t     * // => 'fred'\n\t     *\n\t     * _.lowerFirst('FRED');\n\t     * // => 'fRED'\n\t     */\n\t    var lowerFirst = createCaseFirst('toLowerCase');\n\t\n\t    /**\n\t     * Converts the first character of `string` to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.upperFirst('fred');\n\t     * // => 'Fred'\n\t     *\n\t     * _.upperFirst('FRED');\n\t     * // => 'FRED'\n\t     */\n\t    var upperFirst = createCaseFirst('toUpperCase');\n\t\n\t    /**\n\t     * Pads `string` on the left and right sides if it's shorter than `length`.\n\t     * Padding characters are truncated if they can't be evenly divided by `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.pad('abc', 8);\n\t     * // => '  abc   '\n\t     *\n\t     * _.pad('abc', 8, '_-');\n\t     * // => '_-abc_-_'\n\t     *\n\t     * _.pad('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function pad(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = stringSize(string);\n\t      if (!length || strLength >= length) {\n\t        return string;\n\t      }\n\t      var mid = (length - strLength) / 2,\n\t          leftLength = nativeFloor(mid),\n\t          rightLength = nativeCeil(mid);\n\t\n\t      return createPadding('', leftLength, chars) + string + createPadding('', rightLength, chars);\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the right side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padEnd('abc', 6);\n\t     * // => 'abc   '\n\t     *\n\t     * _.padEnd('abc', 6, '_-');\n\t     * // => 'abc_-_'\n\t     *\n\t     * _.padEnd('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padEnd(string, length, chars) {\n\t      string = toString(string);\n\t      return string + createPadding(string, length, chars);\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the left side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padStart('abc', 6);\n\t     * // => '   abc'\n\t     *\n\t     * _.padStart('abc', 6, '_-');\n\t     * // => '_-_abc'\n\t     *\n\t     * _.padStart('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padStart(string, length, chars) {\n\t      string = toString(string);\n\t      return createPadding(string, length, chars) + string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to an integer of the specified radix. If `radix` is\n\t     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n\t     * in which case a `radix` of `16` is used.\n\t     *\n\t     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#x15.1.2.2)\n\t     * of `parseInt`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} string The string to convert.\n\t     * @param {number} [radix] The radix to interpret `value` by.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.parseInt('08');\n\t     * // => 8\n\t     *\n\t     * _.map(['6', '08', '10'], _.parseInt);\n\t     * // => [6, 8, 10]\n\t     */\n\t    function parseInt(string, radix, guard) {\n\t      // Chrome fails to trim leading <BOM> whitespace characters.\n\t      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n\t      if (guard || radix == null) {\n\t        radix = 0;\n\t      } else if (radix) {\n\t        radix = +radix;\n\t      }\n\t      string = toString(string).replace(reTrim, '');\n\t      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n\t    }\n\t\n\t    /**\n\t     * Repeats the given string `n` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to repeat.\n\t     * @param {number} [n=0] The number of times to repeat the string.\n\t     * @returns {string} Returns the repeated string.\n\t     * @example\n\t     *\n\t     * _.repeat('*', 3);\n\t     * // => '***'\n\t     *\n\t     * _.repeat('abc', 2);\n\t     * // => 'abcabc'\n\t     *\n\t     * _.repeat('abc', 0);\n\t     * // => ''\n\t     */\n\t    function repeat(string, n) {\n\t      string = toString(string);\n\t      n = toInteger(n);\n\t\n\t      var result = '';\n\t      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n\t        return result;\n\t      }\n\t      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n\t      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n\t      do {\n\t        if (n % 2) {\n\t          result += string;\n\t        }\n\t        n = nativeFloor(n / 2);\n\t        string += string;\n\t      } while (n);\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Replaces matches for `pattern` in `string` with `replacement`.\n\t     *\n\t     * **Note:** This method is based on [`String#replace`](https://mdn.io/String/replace).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to modify.\n\t     * @param {RegExp|string} pattern The pattern to replace.\n\t     * @param {Function|string} replacement The match replacement.\n\t     * @returns {string} Returns the modified string.\n\t     * @example\n\t     *\n\t     * _.replace('Hi Fred', 'Fred', 'Barney');\n\t     * // => 'Hi Barney'\n\t     */\n\t    function replace() {\n\t      var args = arguments,\n\t          string = toString(args[0]);\n\t\n\t      return args.length < 3 ? string : string.replace(args[1], args[2]);\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the snake cased string.\n\t     * @example\n\t     *\n\t     * _.snakeCase('Foo Bar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('fooBar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('--foo-bar');\n\t     * // => 'foo_bar'\n\t     */\n\t    var snakeCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '_' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Splits `string` by `separator`.\n\t     *\n\t     * **Note:** This method is based on [`String#split`](https://mdn.io/String/split).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to split.\n\t     * @param {RegExp|string} separator The separator pattern to split by.\n\t     * @param {number} [limit] The length to truncate results to.\n\t     * @returns {Array} Returns the new array of string segments.\n\t     * @example\n\t     *\n\t     * _.split('a-b-c', '-', 2);\n\t     * // => ['a', 'b']\n\t     */\n\t    function split(string, separator, limit) {\n\t      return toString(string).split(separator, limit);\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the start cased string.\n\t     * @example\n\t     *\n\t     * _.startCase('--foo-bar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('fooBar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('__foo_bar__');\n\t     * // => 'Foo Bar'\n\t     */\n\t    var startCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + capitalize(word);\n\t    });\n\t\n\t    /**\n\t     * Checks if `string` starts with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=0] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n\t     * @example\n\t     *\n\t     * _.startsWith('abc', 'a');\n\t     * // => true\n\t     *\n\t     * _.startsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.startsWith('abc', 'b', 1);\n\t     * // => true\n\t     */\n\t    function startsWith(string, target, position) {\n\t      string = toString(string);\n\t      position = baseClamp(toInteger(position), 0, string.length);\n\t      return string.lastIndexOf(target, position) == position;\n\t    }\n\t\n\t    /**\n\t     * Creates a compiled template function that can interpolate data properties\n\t     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n\t     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n\t     * properties may be accessed as free variables in the template. If a setting\n\t     * object is given it takes precedence over `_.templateSettings` values.\n\t     *\n\t     * **Note:** In the development build `_.template` utilizes\n\t     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n\t     * for easier debugging.\n\t     *\n\t     * For more information on precompiling templates see\n\t     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n\t     *\n\t     * For more information on Chrome extension sandboxes see\n\t     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The template string.\n\t     * @param {Object} [options] The options object.\n\t     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n\t     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n\t     * @param {Object} [options.imports] An object to import into the template as free variables.\n\t     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n\t     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n\t     * @param {string} [options.variable] The data object variable name.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Function} Returns the compiled template function.\n\t     * @example\n\t     *\n\t     * // Use the \"interpolate\" delimiter to create a compiled template.\n\t     * var compiled = _.template('hello <%= user %>!');\n\t     * compiled({ 'user': 'fred' });\n\t     * // => 'hello fred!'\n\t     *\n\t     * // Use the HTML \"escape\" delimiter to escape data property values.\n\t     * var compiled = _.template('<b><%- value %></b>');\n\t     * compiled({ 'value': '<script>' });\n\t     * // => '<b>&lt;script&gt;</b>'\n\t     *\n\t     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n\t     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // Use the internal `print` function in \"evaluate\" delimiters.\n\t     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n\t     * compiled({ 'user': 'barney' });\n\t     * // => 'hello barney!'\n\t     *\n\t     * // Use the ES delimiter as an alternative to the default \"interpolate\" delimiter.\n\t     * var compiled = _.template('hello ${ user }!');\n\t     * compiled({ 'user': 'pebbles' });\n\t     * // => 'hello pebbles!'\n\t     *\n\t     * // Use custom template delimiters.\n\t     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n\t     * var compiled = _.template('hello {{ user }}!');\n\t     * compiled({ 'user': 'mustache' });\n\t     * // => 'hello mustache!'\n\t     *\n\t     * // Use backslashes to treat delimiters as plain text.\n\t     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n\t     * compiled({ 'value': 'ignored' });\n\t     * // => '<%- value %>'\n\t     *\n\t     * // Use the `imports` option to import `jQuery` as `jq`.\n\t     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n\t     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n\t     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n\t     * compiled(data);\n\t     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n\t     *\n\t     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n\t     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n\t     * compiled.source;\n\t     * // => function(data) {\n\t     * //   var __t, __p = '';\n\t     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n\t     * //   return __p;\n\t     * // }\n\t     *\n\t     * // Use the `source` property to inline compiled templates for meaningful\n\t     * // line numbers in error messages and stack traces.\n\t     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n\t     *   var JST = {\\\n\t     *     \"main\": ' + _.template(mainText).source + '\\\n\t     *   };\\\n\t     * ');\n\t     */\n\t    function template(string, options, guard) {\n\t      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n\t      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n\t      var settings = lodash.templateSettings;\n\t\n\t      if (guard && isIterateeCall(string, options, guard)) {\n\t        options = undefined;\n\t      }\n\t      string = toString(string);\n\t      options = assignInWith({}, options, settings, assignInDefaults);\n\t\n\t      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),\n\t          importsKeys = keys(imports),\n\t          importsValues = baseValues(imports, importsKeys);\n\t\n\t      var isEscaping,\n\t          isEvaluating,\n\t          index = 0,\n\t          interpolate = options.interpolate || reNoMatch,\n\t          source = \"__p += '\";\n\t\n\t      // Compile the regexp to match each delimiter.\n\t      var reDelimiters = RegExp(\n\t        (options.escape || reNoMatch).source + '|' +\n\t        interpolate.source + '|' +\n\t        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n\t        (options.evaluate || reNoMatch).source + '|$'\n\t      , 'g');\n\t\n\t      // Use a sourceURL for easier debugging.\n\t      var sourceURL = '//# sourceURL=' +\n\t        ('sourceURL' in options\n\t          ? options.sourceURL\n\t          : ('lodash.templateSources[' + (++templateCounter) + ']')\n\t        ) + '\\n';\n\t\n\t      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n\t        interpolateValue || (interpolateValue = esTemplateValue);\n\t\n\t        // Escape characters that can't be included in string literals.\n\t        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\t\n\t        // Replace delimiters with snippets.\n\t        if (escapeValue) {\n\t          isEscaping = true;\n\t          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n\t        }\n\t        if (evaluateValue) {\n\t          isEvaluating = true;\n\t          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n\t        }\n\t        if (interpolateValue) {\n\t          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n\t        }\n\t        index = offset + match.length;\n\t\n\t        // The JS engine embedded in Adobe products needs `match` returned in\n\t        // order to produce the correct `offset` value.\n\t        return match;\n\t      });\n\t\n\t      source += \"';\\n\";\n\t\n\t      // If `variable` is not specified wrap a with-statement around the generated\n\t      // code to add the data object to the top of the scope chain.\n\t      var variable = options.variable;\n\t      if (!variable) {\n\t        source = 'with (obj) {\\n' + source + '\\n}\\n';\n\t      }\n\t      // Cleanup code by stripping empty strings.\n\t      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n\t        .replace(reEmptyStringMiddle, '$1')\n\t        .replace(reEmptyStringTrailing, '$1;');\n\t\n\t      // Frame code as the function body.\n\t      source = 'function(' + (variable || 'obj') + ') {\\n' +\n\t        (variable\n\t          ? ''\n\t          : 'obj || (obj = {});\\n'\n\t        ) +\n\t        \"var __t, __p = ''\" +\n\t        (isEscaping\n\t           ? ', __e = _.escape'\n\t           : ''\n\t        ) +\n\t        (isEvaluating\n\t          ? ', __j = Array.prototype.join;\\n' +\n\t            \"function print() { __p += __j.call(arguments, '') }\\n\"\n\t          : ';\\n'\n\t        ) +\n\t        source +\n\t        'return __p\\n}';\n\t\n\t      var result = attempt(function() {\n\t        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n\t      });\n\t\n\t      // Provide the compiled function's source by its `toString` method or\n\t      // the `source` property as a convenience for inlining compiled templates.\n\t      result.source = source;\n\t      if (isError(result)) {\n\t        throw result;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as a whole, to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the lower cased string.\n\t     * @example\n\t     *\n\t     * _.toLower('--Foo-Bar');\n\t     * // => '--foo-bar'\n\t     *\n\t     * _.toLower('fooBar');\n\t     * // => 'foobar'\n\t     *\n\t     * _.toLower('__FOO_BAR__');\n\t     * // => '__foo_bar__'\n\t     */\n\t    function toLower(value) {\n\t      return toString(value).toLowerCase();\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as a whole, to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the upper cased string.\n\t     * @example\n\t     *\n\t     * _.toUpper('--foo-bar');\n\t     * // => '--FOO-BAR'\n\t     *\n\t     * _.toUpper('fooBar');\n\t     * // => 'FOOBAR'\n\t     *\n\t     * _.toUpper('__foo_bar__');\n\t     * // => '__FOO_BAR__'\n\t     */\n\t    function toUpper(value) {\n\t      return toString(value).toUpperCase();\n\t    }\n\t\n\t    /**\n\t     * Removes leading and trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trim('  abc  ');\n\t     * // => 'abc'\n\t     *\n\t     * _.trim('-_-abc-_-', '_-');\n\t     * // => 'abc'\n\t     *\n\t     * _.map(['  foo  ', '  bar  '], _.trim);\n\t     * // => ['foo', 'bar']\n\t     */\n\t    function trim(string, chars, guard) {\n\t      string = toString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard || chars === undefined) {\n\t        return string.replace(reTrim, '');\n\t      }\n\t      chars = (chars + '');\n\t      if (!chars) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          chrSymbols = stringToArray(chars);\n\t\n\t      return strSymbols.slice(charsStartIndex(strSymbols, chrSymbols), charsEndIndex(strSymbols, chrSymbols) + 1).join('');\n\t    }\n\t\n\t    /**\n\t     * Removes trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimEnd('  abc  ');\n\t     * // => '  abc'\n\t     *\n\t     * _.trimEnd('-_-abc-_-', '_-');\n\t     * // => '-_-abc'\n\t     */\n\t    function trimEnd(string, chars, guard) {\n\t      string = toString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard || chars === undefined) {\n\t        return string.replace(reTrimEnd, '');\n\t      }\n\t      chars = (chars + '');\n\t      if (!chars) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string);\n\t      return strSymbols.slice(0, charsEndIndex(strSymbols, stringToArray(chars)) + 1).join('');\n\t    }\n\t\n\t    /**\n\t     * Removes leading whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimStart('  abc  ');\n\t     * // => 'abc  '\n\t     *\n\t     * _.trimStart('-_-abc-_-', '_-');\n\t     * // => 'abc-_-'\n\t     */\n\t    function trimStart(string, chars, guard) {\n\t      string = toString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard || chars === undefined) {\n\t        return string.replace(reTrimStart, '');\n\t      }\n\t      chars = (chars + '');\n\t      if (!chars) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string);\n\t      return strSymbols.slice(charsStartIndex(strSymbols, stringToArray(chars))).join('');\n\t    }\n\t\n\t    /**\n\t     * Truncates `string` if it's longer than the given maximum string length.\n\t     * The last characters of the truncated string are replaced with the omission\n\t     * string which defaults to \"...\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to truncate.\n\t     * @param {Object} [options] The options object.\n\t     * @param {number} [options.length=30] The maximum string length.\n\t     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n\t     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n\t     * @returns {string} Returns the truncated string.\n\t     * @example\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino');\n\t     * // => 'hi-diddly-ho there, neighbo...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': ' '\n\t     * });\n\t     * // => 'hi-diddly-ho there,...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': /,? +/\n\t     * });\n\t     * // => 'hi-diddly-ho there...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'omission': ' [...]'\n\t     * });\n\t     * // => 'hi-diddly-ho there, neig [...]'\n\t     */\n\t    function truncate(string, options) {\n\t      var length = DEFAULT_TRUNC_LENGTH,\n\t          omission = DEFAULT_TRUNC_OMISSION;\n\t\n\t      if (isObject(options)) {\n\t        var separator = 'separator' in options ? options.separator : separator;\n\t        length = 'length' in options ? toInteger(options.length) : length;\n\t        omission = 'omission' in options ? toString(options.omission) : omission;\n\t      }\n\t      string = toString(string);\n\t\n\t      var strLength = string.length;\n\t      if (reHasComplexSymbol.test(string)) {\n\t        var strSymbols = stringToArray(string);\n\t        strLength = strSymbols.length;\n\t      }\n\t      if (length >= strLength) {\n\t        return string;\n\t      }\n\t      var end = length - stringSize(omission);\n\t      if (end < 1) {\n\t        return omission;\n\t      }\n\t      var result = strSymbols\n\t        ? strSymbols.slice(0, end).join('')\n\t        : string.slice(0, end);\n\t\n\t      if (separator === undefined) {\n\t        return result + omission;\n\t      }\n\t      if (strSymbols) {\n\t        end += (result.length - end);\n\t      }\n\t      if (isRegExp(separator)) {\n\t        if (string.slice(end).search(separator)) {\n\t          var match,\n\t              substring = result;\n\t\n\t          if (!separator.global) {\n\t            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n\t          }\n\t          separator.lastIndex = 0;\n\t          while ((match = separator.exec(substring))) {\n\t            var newEnd = match.index;\n\t          }\n\t          result = result.slice(0, newEnd === undefined ? end : newEnd);\n\t        }\n\t      } else if (string.indexOf(separator, end) != end) {\n\t        var index = result.lastIndexOf(separator);\n\t        if (index > -1) {\n\t          result = result.slice(0, index);\n\t        }\n\t      }\n\t      return result + omission;\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.escape`; this method converts the HTML entities\n\t     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n\t     * corresponding characters.\n\t     *\n\t     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n\t     * entities use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to unescape.\n\t     * @returns {string} Returns the unescaped string.\n\t     * @example\n\t     *\n\t     * _.unescape('fred, barney, &amp; pebbles');\n\t     * // => 'fred, barney, & pebbles'\n\t     */\n\t    function unescape(string) {\n\t      string = toString(string);\n\t      return (string && reHasEscapedHtml.test(string))\n\t        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as space separated words, to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the upper cased string.\n\t     * @example\n\t     *\n\t     * _.upperCase('--foo-bar');\n\t     * // => 'FOO BAR'\n\t     *\n\t     * _.upperCase('fooBar');\n\t     * // => 'FOO BAR'\n\t     *\n\t     * _.upperCase('__foo_bar__');\n\t     * // => 'FOO BAR'\n\t     */\n\t    var upperCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + word.toUpperCase();\n\t    });\n\t\n\t    /**\n\t     * Splits `string` into an array of its words.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {RegExp|string} [pattern] The pattern to match words.\n\t     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n\t     * @returns {Array} Returns the words of `string`.\n\t     * @example\n\t     *\n\t     * _.words('fred, barney, & pebbles');\n\t     * // => ['fred', 'barney', 'pebbles']\n\t     *\n\t     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n\t     * // => ['fred', 'barney', '&', 'pebbles']\n\t     */\n\t    function words(string, pattern, guard) {\n\t      string = toString(string);\n\t      pattern = guard ? undefined : pattern;\n\t\n\t      if (pattern === undefined) {\n\t        pattern = reHasComplexWord.test(string) ? reComplexWord : reBasicWord;\n\t      }\n\t      return string.match(pattern) || [];\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Attempts to invoke `func`, returning either the result or the caught error\n\t     * object. Any additional arguments are provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Function} func The function to attempt.\n\t     * @returns {*} Returns the `func` result or error object.\n\t     * @example\n\t     *\n\t     * // Avoid throwing errors for invalid selectors.\n\t     * var elements = _.attempt(function(selector) {\n\t     *   return document.querySelectorAll(selector);\n\t     * }, '>_>');\n\t     *\n\t     * if (_.isError(elements)) {\n\t     *   elements = [];\n\t     * }\n\t     */\n\t    var attempt = rest(function(func, args) {\n\t      try {\n\t        return apply(func, undefined, args);\n\t      } catch (e) {\n\t        return isObject(e) ? e : new Error(e);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Binds methods of an object to the object itself, overwriting the existing\n\t     * method.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} object The object to bind and assign the bound methods to.\n\t     * @param {...(string|string[])} methodNames The object method names to bind,\n\t     *  specified individually or in arrays.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var view = {\n\t     *   'label': 'docs',\n\t     *   'onClick': function() {\n\t     *     console.log('clicked ' + this.label);\n\t     *   }\n\t     * };\n\t     *\n\t     * _.bindAll(view, 'onClick');\n\t     * jQuery(element).on('click', view.onClick);\n\t     * // => logs 'clicked docs' when clicked\n\t     */\n\t    var bindAll = rest(function(object, methodNames) {\n\t      arrayEach(baseFlatten(methodNames), function(key) {\n\t        object[key] = bind(object[key], object);\n\t      });\n\t      return object;\n\t    });\n\t\n\t    /**\n\t     * Creates a function that iterates over `pairs` invoking the corresponding\n\t     * function of the first predicate to return truthy. The predicate-function\n\t     * pairs are invoked with the `this` binding and arguments of the created\n\t     * function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Array} pairs The predicate-function pairs.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.cond([\n\t     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n\t     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n\t     *   [_.constant(true),                _.constant('no match')]\n\t     * ]);\n\t     *\n\t     * func({ 'a': 1, 'b': 2 });\n\t     * // => 'matches A'\n\t     *\n\t     * func({ 'a': 0, 'b': 1 });\n\t     * // => 'matches B'\n\t     *\n\t     * func({ 'a': '1', 'b': '2' });\n\t     * // => 'no match'\n\t     */\n\t    function cond(pairs) {\n\t      var length = pairs ? pairs.length : 0,\n\t          toIteratee = getIteratee();\n\t\n\t      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n\t        if (typeof pair[1] != 'function') {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t        return [toIteratee(pair[0]), pair[1]];\n\t      });\n\t\n\t      return rest(function(args) {\n\t        var index = -1;\n\t        while (++index < length) {\n\t          var pair = pairs[index];\n\t          if (apply(pair[0], this, args)) {\n\t            return apply(pair[1], this, args);\n\t          }\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the predicate properties of `source` with\n\t     * the corresponding property values of a given object, returning `true` if\n\t     * all predicates return truthy, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.filter(users, _.conforms({ 'age': _.partial(_.gt, _, 38) }));\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     */\n\t    function conforms(source) {\n\t      return baseConforms(baseClone(source, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} value The value to return from the new function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var getter = _.constant(object);\n\t     *\n\t     * getter() === object;\n\t     * // => true\n\t     */\n\t    function constant(value) {\n\t      return function() {\n\t        return value;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns the result of invoking the given functions\n\t     * with the `this` binding of the created function, where each successive\n\t     * invocation is supplied the return value of the previous.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flow(_.add, square);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flow = createFlow();\n\t\n\t    /**\n\t     * This method is like `_.flow` except that it creates a function that\n\t     * invokes the given functions from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flowRight(square, _.add);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flowRight = createFlow(true);\n\t\n\t    /**\n\t     * This method returns the first argument given to it.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} value Any value.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * _.identity(object) === object;\n\t     * // => true\n\t     */\n\t    function identity(value) {\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the arguments of the created\n\t     * function. If `func` is a property name the created callback returns the\n\t     * property value for a given element. If `func` is an object the created\n\t     * callback returns `true` for elements that contain the equivalent object properties, otherwise it returns `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @returns {Function} Returns the callback.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // Create custom iteratee shorthands.\n\t     * _.iteratee = _.wrap(_.iteratee, function(callback, func) {\n\t     *   var p = /^(\\S+)\\s*([<>])\\s*(\\S+)$/.exec(func);\n\t     *   return !p ? callback(func) : function(object) {\n\t     *     return (p[2] == '>' ? object[p[1]] > p[3] : object[p[1]] < p[3]);\n\t     *   };\n\t     * });\n\t     *\n\t     * _.filter(users, 'age > 36');\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     */\n\t    function iteratee(func) {\n\t      return baseIteratee(typeof func == 'function' ? func : baseClone(func, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a deep partial comparison between a given\n\t     * object and `source`, returning `true` if the given object has equivalent\n\t     * property values, else `false`.\n\t     *\n\t     * **Note:** This method supports comparing the same values as `_.isEqual`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n\t     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n\t     */\n\t    function matches(source) {\n\t      return baseMatches(baseClone(source, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a deep partial comparison between the\n\t     * value at `path` of a given object to `srcValue`, returning `true` if the\n\t     * object value is equivalent, else `false`.\n\t     *\n\t     * **Note:** This method supports comparing the same values as `_.isEqual`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * _.find(users, _.matchesProperty('user', 'fred'));\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    function matchesProperty(path, srcValue) {\n\t      return baseMatchesProperty(path, baseClone(srcValue, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `path` of a given object.\n\t     * Any additional arguments are provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n\t     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.method('a.b.c'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.invokeMap(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n\t     * // => [1, 2]\n\t     */\n\t    var method = rest(function(path, args) {\n\t      return function(object) {\n\t        return baseInvoke(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.method`; this method creates a function that invokes\n\t     * the method at a given path of `object`. Any additional arguments are\n\t     * provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} object The object to query.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var array = _.times(3, _.constant),\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    var methodOf = rest(function(object, args) {\n\t      return function(path) {\n\t        return baseInvoke(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * Adds all own enumerable function properties of a source object to the\n\t     * destination object. If `object` is a function then methods are added to\n\t     * its prototype as well.\n\t     *\n\t     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n\t     * avoid conflicts caused by modifying the original.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Function|Object} [object=lodash] The destination object.\n\t     * @param {Object} source The object of functions to add.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.chain=true] Specify whether the functions added\n\t     *  are chainable.\n\t     * @returns {Function|Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function vowels(string) {\n\t     *   return _.filter(string, function(v) {\n\t     *     return /[aeiou]/i.test(v);\n\t     *   });\n\t     * }\n\t     *\n\t     * _.mixin({ 'vowels': vowels });\n\t     * _.vowels('fred');\n\t     * // => ['e']\n\t     *\n\t     * _('fred').vowels().value();\n\t     * // => ['e']\n\t     *\n\t     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n\t     * _('fred').vowels();\n\t     * // => ['e']\n\t     */\n\t    function mixin(object, source, options) {\n\t      var props = keys(source),\n\t          methodNames = baseFunctions(source, props);\n\t\n\t      if (options == null &&\n\t          !(isObject(source) && (methodNames.length || !props.length))) {\n\t        options = source;\n\t        source = object;\n\t        object = this;\n\t        methodNames = baseFunctions(source, keys(source));\n\t      }\n\t      var chain = (isObject(options) && 'chain' in options) ? options.chain : true,\n\t          isFunc = isFunction(object);\n\t\n\t      arrayEach(methodNames, function(methodName) {\n\t        var func = source[methodName];\n\t        object[methodName] = func;\n\t        if (isFunc) {\n\t          object.prototype[methodName] = function() {\n\t            var chainAll = this.__chain__;\n\t            if (chain || chainAll) {\n\t              var result = object(this.__wrapped__),\n\t                  actions = result.__actions__ = copyArray(this.__actions__);\n\t\n\t              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n\t              result.__chain__ = chainAll;\n\t              return result;\n\t            }\n\t            return func.apply(object, arrayPush([this.value()], arguments));\n\t          };\n\t        }\n\t      });\n\t\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Reverts the `_` variable to its previous value and returns a reference to\n\t     * the `lodash` function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @returns {Function} Returns the `lodash` function.\n\t     * @example\n\t     *\n\t     * var lodash = _.noConflict();\n\t     */\n\t    function noConflict() {\n\t      if (root._ === this) {\n\t        root._ = oldDash;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * A no-operation function that returns `undefined` regardless of the\n\t     * arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * _.noop(object) === undefined;\n\t     * // => true\n\t     */\n\t    function noop() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns its nth argument.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} [n=0] The index of the argument to return.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.nthArg(1);\n\t     *\n\t     * func('a', 'b', 'c');\n\t     * // => 'b'\n\t     */\n\t    function nthArg(n) {\n\t      n = toInteger(n);\n\t      return function() {\n\t        return arguments[n];\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `iteratees` with the arguments provided\n\t     * to the created function and returns their results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} iteratees The iteratees to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.over(Math.max, Math.min);\n\t     *\n\t     * func(1, 2, 3, 4);\n\t     * // => [4, 1]\n\t     */\n\t    var over = createOver(arrayMap);\n\t\n\t    /**\n\t     * Creates a function that checks if **all** of the `predicates` return\n\t     * truthy when invoked with the arguments provided to the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} predicates The predicates to check.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.overEvery(Boolean, isFinite);\n\t     *\n\t     * func('1');\n\t     * // => true\n\t     *\n\t     * func(null);\n\t     * // => false\n\t     *\n\t     * func(NaN);\n\t     * // => false\n\t     */\n\t    var overEvery = createOver(arrayEvery);\n\t\n\t    /**\n\t     * Creates a function that checks if **any** of the `predicates` return\n\t     * truthy when invoked with the arguments provided to the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} predicates The predicates to check.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.overSome(Boolean, isFinite);\n\t     *\n\t     * func('1');\n\t     * // => true\n\t     *\n\t     * func(null);\n\t     * // => true\n\t     *\n\t     * func(NaN);\n\t     * // => false\n\t     */\n\t    var overSome = createOver(arraySome);\n\t\n\t    /**\n\t     * Creates a function that returns the value at `path` of a given object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': { 'c': 2 } } },\n\t     *   { 'a': { 'b': { 'c': 1 } } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.property('a.b.c'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.map(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n\t     * // => [1, 2]\n\t     */\n\t    function property(path) {\n\t      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.property`; this method creates a function that returns\n\t     * the value at a given path of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} object The object to query.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var array = [0, 1, 2],\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    function propertyOf(object) {\n\t      return function(path) {\n\t        return object == null ? undefined : baseGet(object, path);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates an array of numbers (positive and/or negative) progressing from\n\t     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n\t     * `start` is specified without an `end` or `step`. If `end` is not specified\n\t     * it's set to `start` with `start` then set to `0`.\n\t     *\n\t     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t     * floating-point values which can produce unexpected results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the new array of numbers.\n\t     * @example\n\t     *\n\t     * _.range(4);\n\t     * // => [0, 1, 2, 3]\n\t     *\n\t     * _.range(-4);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 5);\n\t     * // => [1, 2, 3, 4]\n\t     *\n\t     * _.range(0, 20, 5);\n\t     * // => [0, 5, 10, 15]\n\t     *\n\t     * _.range(0, -4, -1);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.range(0);\n\t     * // => []\n\t     */\n\t    var range = createRange();\n\t\n\t    /**\n\t     * This method is like `_.range` except that it populates values in\n\t     * descending order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the new array of numbers.\n\t     * @example\n\t     *\n\t     * _.rangeRight(4);\n\t     * // => [3, 2, 1, 0]\n\t     *\n\t     * _.rangeRight(-4);\n\t     * // => [-3, -2, -1, 0]\n\t     *\n\t     * _.rangeRight(1, 5);\n\t     * // => [4, 3, 2, 1]\n\t     *\n\t     * _.rangeRight(0, 20, 5);\n\t     * // => [15, 10, 5, 0]\n\t     *\n\t     * _.rangeRight(0, -4, -1);\n\t     * // => [-3, -2, -1, 0]\n\t     *\n\t     * _.rangeRight(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.rangeRight(0);\n\t     * // => []\n\t     */\n\t    var rangeRight = createRange(true);\n\t\n\t    /**\n\t     * Invokes the iteratee function `n` times, returning an array of the results\n\t     * of each invocation. The iteratee is invoked with one argument; (index).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} n The number of times to invoke `iteratee`.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.times(3, String);\n\t     * // => ['0', '1', '2']\n\t     *\n\t     *  _.times(4, _.constant(true));\n\t     * // => [true, true, true, true]\n\t     */\n\t    function times(n, iteratee) {\n\t      n = toInteger(n);\n\t      if (n < 1 || n > MAX_SAFE_INTEGER) {\n\t        return [];\n\t      }\n\t      var index = MAX_ARRAY_LENGTH,\n\t          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\t\n\t      iteratee = toFunction(iteratee);\n\t      n -= MAX_ARRAY_LENGTH;\n\t\n\t      var result = baseTimes(length, iteratee);\n\t      while (++index < n) {\n\t        iteratee(index);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a property path array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the new property path array.\n\t     * @example\n\t     *\n\t     * _.toPath('a.b.c');\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * _.toPath('a[0].b.c');\n\t     * // => ['a', '0', 'b', 'c']\n\t     *\n\t     * var path = ['a', 'b', 'c'],\n\t     *     newPath = _.toPath(path);\n\t     *\n\t     * console.log(newPath);\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * console.log(path === newPath);\n\t     * // => false\n\t     */\n\t    function toPath(value) {\n\t      return isArray(value) ? arrayMap(value, String) : stringToPath(value);\n\t    }\n\t\n\t    /**\n\t     * Generates a unique ID. If `prefix` is given the ID is appended to it.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {string} [prefix] The value to prefix the ID with.\n\t     * @returns {string} Returns the unique ID.\n\t     * @example\n\t     *\n\t     * _.uniqueId('contact_');\n\t     * // => 'contact_104'\n\t     *\n\t     * _.uniqueId();\n\t     * // => '105'\n\t     */\n\t    function uniqueId(prefix) {\n\t      var id = ++idCounter;\n\t      return toString(prefix) + id;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Adds two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} augend The first number in an addition.\n\t     * @param {number} addend The second number in an addition.\n\t     * @returns {number} Returns the total.\n\t     * @example\n\t     *\n\t     * _.add(6, 4);\n\t     * // => 10\n\t     */\n\t    function add(augend, addend) {\n\t      var result;\n\t      if (augend === undefined && addend === undefined) {\n\t        return 0;\n\t      }\n\t      if (augend !== undefined) {\n\t        result = augend;\n\t      }\n\t      if (addend !== undefined) {\n\t        result = result === undefined ? addend : (result + addend);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Computes `number` rounded up to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} number The number to round up.\n\t     * @param {number} [precision=0] The precision to round up to.\n\t     * @returns {number} Returns the rounded up number.\n\t     * @example\n\t     *\n\t     * _.ceil(4.006);\n\t     * // => 5\n\t     *\n\t     * _.ceil(6.004, 2);\n\t     * // => 6.01\n\t     *\n\t     * _.ceil(6040, -2);\n\t     * // => 6100\n\t     */\n\t    var ceil = createRound('ceil');\n\t\n\t    /**\n\t     * Computes `number` rounded down to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} number The number to round down.\n\t     * @param {number} [precision=0] The precision to round down to.\n\t     * @returns {number} Returns the rounded down number.\n\t     * @example\n\t     *\n\t     * _.floor(4.006);\n\t     * // => 4\n\t     *\n\t     * _.floor(0.046, 2);\n\t     * // => 0.04\n\t     *\n\t     * _.floor(4060, -2);\n\t     * // => 4000\n\t     */\n\t    var floor = createRound('floor');\n\t\n\t    /**\n\t     * Computes the maximum value of `array`. If `array` is empty or falsey\n\t     * `undefined` is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * _.max([4, 2, 8, 6]);\n\t     * // => 8\n\t     *\n\t     * _.max([]);\n\t     * // => undefined\n\t     */\n\t    function max(array) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, identity, gt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.max` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * the value is ranked. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n\t     *\n\t     * _.maxBy(objects, function(o) { return o.n; });\n\t     * // => { 'n': 2 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.maxBy(objects, 'n');\n\t     * // => { 'n': 2 }\n\t     */\n\t    function maxBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, getIteratee(iteratee), gt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * Computes the mean of the values in `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the mean.\n\t     * @example\n\t     *\n\t     * _.mean([4, 2, 8, 6]);\n\t     * // => 5\n\t     */\n\t    function mean(array) {\n\t      return sum(array) / (array ? array.length : 0);\n\t    }\n\t\n\t    /**\n\t     * Computes the minimum value of `array`. If `array` is empty or falsey\n\t     * `undefined` is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * _.min([4, 2, 8, 6]);\n\t     * // => 2\n\t     *\n\t     * _.min([]);\n\t     * // => undefined\n\t     */\n\t    function min(array) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, identity, lt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.min` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * the value is ranked. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n\t     *\n\t     * _.minBy(objects, function(o) { return o.n; });\n\t     * // => { 'n': 1 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.minBy(objects, 'n');\n\t     * // => { 'n': 1 }\n\t     */\n\t    function minBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, getIteratee(iteratee), lt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * Computes `number` rounded to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} number The number to round.\n\t     * @param {number} [precision=0] The precision to round to.\n\t     * @returns {number} Returns the rounded number.\n\t     * @example\n\t     *\n\t     * _.round(4.006);\n\t     * // => 4\n\t     *\n\t     * _.round(4.006, 2);\n\t     * // => 4.01\n\t     *\n\t     * _.round(4060, -2);\n\t     * // => 4100\n\t     */\n\t    var round = createRound('round');\n\t\n\t    /**\n\t     * Subtract two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} minuend The first number in a subtraction.\n\t     * @param {number} subtrahend The second number in a subtraction.\n\t     * @returns {number} Returns the difference.\n\t     * @example\n\t     *\n\t     * _.subtract(6, 4);\n\t     * // => 2\n\t     */\n\t    function subtract(minuend, subtrahend) {\n\t      var result;\n\t      if (minuend === undefined && subtrahend === undefined) {\n\t        return 0;\n\t      }\n\t      if (minuend !== undefined) {\n\t        result = minuend;\n\t      }\n\t      if (subtrahend !== undefined) {\n\t        result = result === undefined ? subtrahend : (result - subtrahend);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Computes the sum of the values in `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.sum([4, 2, 8, 6]);\n\t     * // => 20\n\t     */\n\t    function sum(array) {\n\t      return (array && array.length)\n\t        ? baseSum(array, identity)\n\t        : 0;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sum` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the value to be summed.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\t     *\n\t     * _.sumBy(objects, function(o) { return o.n; });\n\t     * // => 20\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sumBy(objects, 'n');\n\t     * // => 20\n\t     */\n\t    function sumBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseSum(array, getIteratee(iteratee))\n\t        : 0;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Ensure wrappers are instances of `baseLodash`.\n\t    lodash.prototype = baseLodash.prototype;\n\t\n\t    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LodashWrapper.prototype.constructor = LodashWrapper;\n\t\n\t    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LazyWrapper.prototype.constructor = LazyWrapper;\n\t\n\t    // Avoid inheriting from `Object.prototype` when possible.\n\t    Hash.prototype = nativeCreate ? nativeCreate(null) : objectProto;\n\t\n\t    // Add functions to the `MapCache`.\n\t    MapCache.prototype.clear = mapClear;\n\t    MapCache.prototype['delete'] = mapDelete;\n\t    MapCache.prototype.get = mapGet;\n\t    MapCache.prototype.has = mapHas;\n\t    MapCache.prototype.set = mapSet;\n\t\n\t    // Add functions to the `SetCache`.\n\t    SetCache.prototype.push = cachePush;\n\t\n\t    // Add functions to the `Stack` cache.\n\t    Stack.prototype.clear = stackClear;\n\t    Stack.prototype['delete'] = stackDelete;\n\t    Stack.prototype.get = stackGet;\n\t    Stack.prototype.has = stackHas;\n\t    Stack.prototype.set = stackSet;\n\t\n\t    // Assign cache to `_.memoize`.\n\t    memoize.Cache = MapCache;\n\t\n\t    // Add functions that return wrapped values when chaining.\n\t    lodash.after = after;\n\t    lodash.ary = ary;\n\t    lodash.assign = assign;\n\t    lodash.assignIn = assignIn;\n\t    lodash.assignInWith = assignInWith;\n\t    lodash.assignWith = assignWith;\n\t    lodash.at = at;\n\t    lodash.before = before;\n\t    lodash.bind = bind;\n\t    lodash.bindAll = bindAll;\n\t    lodash.bindKey = bindKey;\n\t    lodash.chain = chain;\n\t    lodash.chunk = chunk;\n\t    lodash.compact = compact;\n\t    lodash.concat = concat;\n\t    lodash.cond = cond;\n\t    lodash.conforms = conforms;\n\t    lodash.constant = constant;\n\t    lodash.countBy = countBy;\n\t    lodash.create = create;\n\t    lodash.curry = curry;\n\t    lodash.curryRight = curryRight;\n\t    lodash.debounce = debounce;\n\t    lodash.defaults = defaults;\n\t    lodash.defaultsDeep = defaultsDeep;\n\t    lodash.defer = defer;\n\t    lodash.delay = delay;\n\t    lodash.difference = difference;\n\t    lodash.differenceBy = differenceBy;\n\t    lodash.differenceWith = differenceWith;\n\t    lodash.drop = drop;\n\t    lodash.dropRight = dropRight;\n\t    lodash.dropRightWhile = dropRightWhile;\n\t    lodash.dropWhile = dropWhile;\n\t    lodash.fill = fill;\n\t    lodash.filter = filter;\n\t    lodash.flatMap = flatMap;\n\t    lodash.flatten = flatten;\n\t    lodash.flattenDeep = flattenDeep;\n\t    lodash.flip = flip;\n\t    lodash.flow = flow;\n\t    lodash.flowRight = flowRight;\n\t    lodash.fromPairs = fromPairs;\n\t    lodash.functions = functions;\n\t    lodash.functionsIn = functionsIn;\n\t    lodash.groupBy = groupBy;\n\t    lodash.initial = initial;\n\t    lodash.intersection = intersection;\n\t    lodash.intersectionBy = intersectionBy;\n\t    lodash.intersectionWith = intersectionWith;\n\t    lodash.invert = invert;\n\t    lodash.invertBy = invertBy;\n\t    lodash.invokeMap = invokeMap;\n\t    lodash.iteratee = iteratee;\n\t    lodash.keyBy = keyBy;\n\t    lodash.keys = keys;\n\t    lodash.keysIn = keysIn;\n\t    lodash.map = map;\n\t    lodash.mapKeys = mapKeys;\n\t    lodash.mapValues = mapValues;\n\t    lodash.matches = matches;\n\t    lodash.matchesProperty = matchesProperty;\n\t    lodash.memoize = memoize;\n\t    lodash.merge = merge;\n\t    lodash.mergeWith = mergeWith;\n\t    lodash.method = method;\n\t    lodash.methodOf = methodOf;\n\t    lodash.mixin = mixin;\n\t    lodash.negate = negate;\n\t    lodash.nthArg = nthArg;\n\t    lodash.omit = omit;\n\t    lodash.omitBy = omitBy;\n\t    lodash.once = once;\n\t    lodash.orderBy = orderBy;\n\t    lodash.over = over;\n\t    lodash.overArgs = overArgs;\n\t    lodash.overEvery = overEvery;\n\t    lodash.overSome = overSome;\n\t    lodash.partial = partial;\n\t    lodash.partialRight = partialRight;\n\t    lodash.partition = partition;\n\t    lodash.pick = pick;\n\t    lodash.pickBy = pickBy;\n\t    lodash.property = property;\n\t    lodash.propertyOf = propertyOf;\n\t    lodash.pull = pull;\n\t    lodash.pullAll = pullAll;\n\t    lodash.pullAllBy = pullAllBy;\n\t    lodash.pullAt = pullAt;\n\t    lodash.range = range;\n\t    lodash.rangeRight = rangeRight;\n\t    lodash.rearg = rearg;\n\t    lodash.reject = reject;\n\t    lodash.remove = remove;\n\t    lodash.rest = rest;\n\t    lodash.reverse = reverse;\n\t    lodash.sampleSize = sampleSize;\n\t    lodash.set = set;\n\t    lodash.setWith = setWith;\n\t    lodash.shuffle = shuffle;\n\t    lodash.slice = slice;\n\t    lodash.sortBy = sortBy;\n\t    lodash.sortedUniq = sortedUniq;\n\t    lodash.sortedUniqBy = sortedUniqBy;\n\t    lodash.split = split;\n\t    lodash.spread = spread;\n\t    lodash.tail = tail;\n\t    lodash.take = take;\n\t    lodash.takeRight = takeRight;\n\t    lodash.takeRightWhile = takeRightWhile;\n\t    lodash.takeWhile = takeWhile;\n\t    lodash.tap = tap;\n\t    lodash.throttle = throttle;\n\t    lodash.thru = thru;\n\t    lodash.toArray = toArray;\n\t    lodash.toPairs = toPairs;\n\t    lodash.toPairsIn = toPairsIn;\n\t    lodash.toPath = toPath;\n\t    lodash.toPlainObject = toPlainObject;\n\t    lodash.transform = transform;\n\t    lodash.unary = unary;\n\t    lodash.union = union;\n\t    lodash.unionBy = unionBy;\n\t    lodash.unionWith = unionWith;\n\t    lodash.uniq = uniq;\n\t    lodash.uniqBy = uniqBy;\n\t    lodash.uniqWith = uniqWith;\n\t    lodash.unset = unset;\n\t    lodash.unzip = unzip;\n\t    lodash.unzipWith = unzipWith;\n\t    lodash.values = values;\n\t    lodash.valuesIn = valuesIn;\n\t    lodash.without = without;\n\t    lodash.words = words;\n\t    lodash.wrap = wrap;\n\t    lodash.xor = xor;\n\t    lodash.xorBy = xorBy;\n\t    lodash.xorWith = xorWith;\n\t    lodash.zip = zip;\n\t    lodash.zipObject = zipObject;\n\t    lodash.zipObjectDeep = zipObjectDeep;\n\t    lodash.zipWith = zipWith;\n\t\n\t    // Add aliases.\n\t    lodash.extend = assignIn;\n\t    lodash.extendWith = assignInWith;\n\t\n\t    // Add functions to `lodash.prototype`.\n\t    mixin(lodash, lodash);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add functions that return unwrapped values when chaining.\n\t    lodash.add = add;\n\t    lodash.attempt = attempt;\n\t    lodash.camelCase = camelCase;\n\t    lodash.capitalize = capitalize;\n\t    lodash.ceil = ceil;\n\t    lodash.clamp = clamp;\n\t    lodash.clone = clone;\n\t    lodash.cloneDeep = cloneDeep;\n\t    lodash.cloneDeepWith = cloneDeepWith;\n\t    lodash.cloneWith = cloneWith;\n\t    lodash.deburr = deburr;\n\t    lodash.endsWith = endsWith;\n\t    lodash.eq = eq;\n\t    lodash.escape = escape;\n\t    lodash.escapeRegExp = escapeRegExp;\n\t    lodash.every = every;\n\t    lodash.find = find;\n\t    lodash.findIndex = findIndex;\n\t    lodash.findKey = findKey;\n\t    lodash.findLast = findLast;\n\t    lodash.findLastIndex = findLastIndex;\n\t    lodash.findLastKey = findLastKey;\n\t    lodash.floor = floor;\n\t    lodash.forEach = forEach;\n\t    lodash.forEachRight = forEachRight;\n\t    lodash.forIn = forIn;\n\t    lodash.forInRight = forInRight;\n\t    lodash.forOwn = forOwn;\n\t    lodash.forOwnRight = forOwnRight;\n\t    lodash.get = get;\n\t    lodash.gt = gt;\n\t    lodash.gte = gte;\n\t    lodash.has = has;\n\t    lodash.hasIn = hasIn;\n\t    lodash.head = head;\n\t    lodash.identity = identity;\n\t    lodash.includes = includes;\n\t    lodash.indexOf = indexOf;\n\t    lodash.inRange = inRange;\n\t    lodash.invoke = invoke;\n\t    lodash.isArguments = isArguments;\n\t    lodash.isArray = isArray;\n\t    lodash.isArrayBuffer = isArrayBuffer;\n\t    lodash.isArrayLike = isArrayLike;\n\t    lodash.isArrayLikeObject = isArrayLikeObject;\n\t    lodash.isBoolean = isBoolean;\n\t    lodash.isBuffer = isBuffer;\n\t    lodash.isDate = isDate;\n\t    lodash.isElement = isElement;\n\t    lodash.isEmpty = isEmpty;\n\t    lodash.isEqual = isEqual;\n\t    lodash.isEqualWith = isEqualWith;\n\t    lodash.isError = isError;\n\t    lodash.isFinite = isFinite;\n\t    lodash.isFunction = isFunction;\n\t    lodash.isInteger = isInteger;\n\t    lodash.isLength = isLength;\n\t    lodash.isMap = isMap;\n\t    lodash.isMatch = isMatch;\n\t    lodash.isMatchWith = isMatchWith;\n\t    lodash.isNaN = isNaN;\n\t    lodash.isNative = isNative;\n\t    lodash.isNil = isNil;\n\t    lodash.isNull = isNull;\n\t    lodash.isNumber = isNumber;\n\t    lodash.isObject = isObject;\n\t    lodash.isObjectLike = isObjectLike;\n\t    lodash.isPlainObject = isPlainObject;\n\t    lodash.isRegExp = isRegExp;\n\t    lodash.isSafeInteger = isSafeInteger;\n\t    lodash.isSet = isSet;\n\t    lodash.isString = isString;\n\t    lodash.isSymbol = isSymbol;\n\t    lodash.isTypedArray = isTypedArray;\n\t    lodash.isUndefined = isUndefined;\n\t    lodash.isWeakMap = isWeakMap;\n\t    lodash.isWeakSet = isWeakSet;\n\t    lodash.join = join;\n\t    lodash.kebabCase = kebabCase;\n\t    lodash.last = last;\n\t    lodash.lastIndexOf = lastIndexOf;\n\t    lodash.lowerCase = lowerCase;\n\t    lodash.lowerFirst = lowerFirst;\n\t    lodash.lt = lt;\n\t    lodash.lte = lte;\n\t    lodash.max = max;\n\t    lodash.maxBy = maxBy;\n\t    lodash.mean = mean;\n\t    lodash.min = min;\n\t    lodash.minBy = minBy;\n\t    lodash.noConflict = noConflict;\n\t    lodash.noop = noop;\n\t    lodash.now = now;\n\t    lodash.pad = pad;\n\t    lodash.padEnd = padEnd;\n\t    lodash.padStart = padStart;\n\t    lodash.parseInt = parseInt;\n\t    lodash.random = random;\n\t    lodash.reduce = reduce;\n\t    lodash.reduceRight = reduceRight;\n\t    lodash.repeat = repeat;\n\t    lodash.replace = replace;\n\t    lodash.result = result;\n\t    lodash.round = round;\n\t    lodash.runInContext = runInContext;\n\t    lodash.sample = sample;\n\t    lodash.size = size;\n\t    lodash.snakeCase = snakeCase;\n\t    lodash.some = some;\n\t    lodash.sortedIndex = sortedIndex;\n\t    lodash.sortedIndexBy = sortedIndexBy;\n\t    lodash.sortedIndexOf = sortedIndexOf;\n\t    lodash.sortedLastIndex = sortedLastIndex;\n\t    lodash.sortedLastIndexBy = sortedLastIndexBy;\n\t    lodash.sortedLastIndexOf = sortedLastIndexOf;\n\t    lodash.startCase = startCase;\n\t    lodash.startsWith = startsWith;\n\t    lodash.subtract = subtract;\n\t    lodash.sum = sum;\n\t    lodash.sumBy = sumBy;\n\t    lodash.template = template;\n\t    lodash.times = times;\n\t    lodash.toInteger = toInteger;\n\t    lodash.toLength = toLength;\n\t    lodash.toLower = toLower;\n\t    lodash.toNumber = toNumber;\n\t    lodash.toSafeInteger = toSafeInteger;\n\t    lodash.toString = toString;\n\t    lodash.toUpper = toUpper;\n\t    lodash.trim = trim;\n\t    lodash.trimEnd = trimEnd;\n\t    lodash.trimStart = trimStart;\n\t    lodash.truncate = truncate;\n\t    lodash.unescape = unescape;\n\t    lodash.uniqueId = uniqueId;\n\t    lodash.upperCase = upperCase;\n\t    lodash.upperFirst = upperFirst;\n\t\n\t    // Add aliases.\n\t    lodash.each = forEach;\n\t    lodash.eachRight = forEachRight;\n\t    lodash.first = head;\n\t\n\t    mixin(lodash, (function() {\n\t      var source = {};\n\t      baseForOwn(lodash, function(func, methodName) {\n\t        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n\t          source[methodName] = func;\n\t        }\n\t      });\n\t      return source;\n\t    }()), { 'chain': false });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The semantic version number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type string\n\t     */\n\t    lodash.VERSION = VERSION;\n\t\n\t    // Assign default placeholders.\n\t    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n\t      lodash[methodName].placeholder = lodash;\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n\t    arrayEach(['drop', 'take'], function(methodName, index) {\n\t      LazyWrapper.prototype[methodName] = function(n) {\n\t        var filtered = this.__filtered__;\n\t        if (filtered && !index) {\n\t          return new LazyWrapper(this);\n\t        }\n\t        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\t\n\t        var result = this.clone();\n\t        if (filtered) {\n\t          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n\t        } else {\n\t          result.__views__.push({ 'size': nativeMin(n, MAX_ARRAY_LENGTH), 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n\t        }\n\t        return result;\n\t      };\n\t\n\t      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n\t        return this.reverse()[methodName](n).reverse();\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods that accept an `iteratee` value.\n\t    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n\t      var type = index + 1,\n\t          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\t\n\t      LazyWrapper.prototype[methodName] = function(iteratee) {\n\t        var result = this.clone();\n\t        result.__iteratees__.push({ 'iteratee': getIteratee(iteratee, 3), 'type': type });\n\t        result.__filtered__ = result.__filtered__ || isFilter;\n\t        return result;\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n\t    arrayEach(['head', 'last'], function(methodName, index) {\n\t      var takeName = 'take' + (index ? 'Right' : '');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this[takeName](1).value()[0];\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n\t    arrayEach(['initial', 'tail'], function(methodName, index) {\n\t      var dropName = 'drop' + (index ? '' : 'Right');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n\t      };\n\t    });\n\t\n\t    LazyWrapper.prototype.compact = function() {\n\t      return this.filter(identity);\n\t    };\n\t\n\t    LazyWrapper.prototype.find = function(predicate) {\n\t      return this.filter(predicate).head();\n\t    };\n\t\n\t    LazyWrapper.prototype.findLast = function(predicate) {\n\t      return this.reverse().find(predicate);\n\t    };\n\t\n\t    LazyWrapper.prototype.invokeMap = rest(function(path, args) {\n\t      if (typeof path == 'function') {\n\t        return new LazyWrapper(this);\n\t      }\n\t      return this.map(function(value) {\n\t        return baseInvoke(value, path, args);\n\t      });\n\t    });\n\t\n\t    LazyWrapper.prototype.reject = function(predicate) {\n\t      predicate = getIteratee(predicate, 3);\n\t      return this.filter(function(value) {\n\t        return !predicate(value);\n\t      });\n\t    };\n\t\n\t    LazyWrapper.prototype.slice = function(start, end) {\n\t      start = toInteger(start);\n\t\n\t      var result = this;\n\t      if (result.__filtered__ && (start > 0 || end < 0)) {\n\t        return new LazyWrapper(result);\n\t      }\n\t      if (start < 0) {\n\t        result = result.takeRight(-start);\n\t      } else if (start) {\n\t        result = result.drop(start);\n\t      }\n\t      if (end !== undefined) {\n\t        end = toInteger(end);\n\t        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n\t      return this.reverse().takeWhile(predicate).reverse();\n\t    };\n\t\n\t    LazyWrapper.prototype.toArray = function() {\n\t      return this.take(MAX_ARRAY_LENGTH);\n\t    };\n\t\n\t    // Add `LazyWrapper` methods to `lodash.prototype`.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n\t          isTaker = /^(?:head|last)$/.test(methodName),\n\t          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n\t          retUnwrapped = isTaker || /^find/.test(methodName);\n\t\n\t      if (!lodashFunc) {\n\t        return;\n\t      }\n\t      lodash.prototype[methodName] = function() {\n\t        var value = this.__wrapped__,\n\t            args = isTaker ? [1] : arguments,\n\t            isLazy = value instanceof LazyWrapper,\n\t            iteratee = args[0],\n\t            useLazy = isLazy || isArray(value);\n\t\n\t        var interceptor = function(value) {\n\t          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n\t          return (isTaker && chainAll) ? result[0] : result;\n\t        };\n\t\n\t        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n\t          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n\t          isLazy = useLazy = false;\n\t        }\n\t        var chainAll = this.__chain__,\n\t            isHybrid = !!this.__actions__.length,\n\t            isUnwrapped = retUnwrapped && !chainAll,\n\t            onlyLazy = isLazy && !isHybrid;\n\t\n\t        if (!retUnwrapped && useLazy) {\n\t          value = onlyLazy ? value : new LazyWrapper(this);\n\t          var result = func.apply(value, args);\n\t          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n\t          return new LodashWrapper(result, chainAll);\n\t        }\n\t        if (isUnwrapped && onlyLazy) {\n\t          return func.apply(this, args);\n\t        }\n\t        result = this.thru(interceptor);\n\t        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n\t      };\n\t    });\n\t\n\t    // Add `Array` and `String` methods to `lodash.prototype`.\n\t    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n\t      var func = arrayProto[methodName],\n\t          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n\t          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\t\n\t      lodash.prototype[methodName] = function() {\n\t        var args = arguments;\n\t        if (retUnwrapped && !this.__chain__) {\n\t          return func.apply(this.value(), args);\n\t        }\n\t        return this[chainName](function(value) {\n\t          return func.apply(value, args);\n\t        });\n\t      };\n\t    });\n\t\n\t    // Map minified function names to their real names.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var lodashFunc = lodash[methodName];\n\t      if (lodashFunc) {\n\t        var key = (lodashFunc.name + ''),\n\t            names = realNames[key] || (realNames[key] = []);\n\t\n\t        names.push({ 'name': methodName, 'func': lodashFunc });\n\t      }\n\t    });\n\t\n\t    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': undefined }];\n\t\n\t    // Add functions to the lazy wrapper.\n\t    LazyWrapper.prototype.clone = lazyClone;\n\t    LazyWrapper.prototype.reverse = lazyReverse;\n\t    LazyWrapper.prototype.value = lazyValue;\n\t\n\t    // Add chaining functions to the `lodash` wrapper.\n\t    lodash.prototype.at = wrapperAt;\n\t    lodash.prototype.chain = wrapperChain;\n\t    lodash.prototype.commit = wrapperCommit;\n\t    lodash.prototype.flatMap = wrapperFlatMap;\n\t    lodash.prototype.next = wrapperNext;\n\t    lodash.prototype.plant = wrapperPlant;\n\t    lodash.prototype.reverse = wrapperReverse;\n\t    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\t\n\t    if (iteratorSymbol) {\n\t      lodash.prototype[iteratorSymbol] = wrapperToIterator;\n\t    }\n\t    return lodash;\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  // Export lodash.\n\t  var _ = runInContext();\n\t\n\t  // Expose lodash on the free variable `window` or `self` when available. This\n\t  // prevents errors in cases where lodash is loaded by a script tag in the presence\n\t  // of an AMD loader. See http://requirejs.org/docs/errors.html#mismatch for more details.\n\t  (freeWindow || freeSelf || {})._ = _;\n\t\n\t  // Some AMD build optimizers like r.js check for condition patterns like the following:\n\t  if (true) {\n\t    // Define as an anonymous module so, through path mapping, it can be\n\t    // referenced as the \"underscore\" module.\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return _;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n\t  else if (freeExports && freeModule) {\n\t    // Export for Node.js.\n\t    if (moduleExports) {\n\t      (freeModule.exports = _)._ = _;\n\t    }\n\t    // Export for CommonJS support.\n\t    freeExports._ = _;\n\t  }\n\t  else {\n\t    // Export to the global object.\n\t    root._ = _;\n\t  }\n\t}.call(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(166)(module), (function() { return this; }())))\n\n/***/ },\n/* 98 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(63);\n\n\n/***/ },\n/* 99 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule AutoFocusUtils\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactMount = __webpack_require__(5);\n\t\n\tvar findDOMNode = __webpack_require__(43);\n\tvar focusNode = __webpack_require__(87);\n\t\n\tvar Mixin = {\n\t  componentDidMount: function () {\n\t    if (this.props.autoFocus) {\n\t      focusNode(findDOMNode(this));\n\t    }\n\t  }\n\t};\n\t\n\tvar AutoFocusUtils = {\n\t  Mixin: Mixin,\n\t\n\t  focusDOMComponent: function () {\n\t    focusNode(ReactMount.getNode(this._rootNodeID));\n\t  }\n\t};\n\t\n\tmodule.exports = AutoFocusUtils;\n\n/***/ },\n/* 100 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015 Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule BeforeInputEventPlugin\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar EventConstants = __webpack_require__(10);\n\tvar EventPropagators = __webpack_require__(20);\n\tvar ExecutionEnvironment = __webpack_require__(4);\n\tvar FallbackCompositionState = __webpack_require__(108);\n\tvar SyntheticCompositionEvent = __webpack_require__(138);\n\tvar SyntheticInputEvent = __webpack_require__(141);\n\t\n\tvar keyOf = __webpack_require__(13);\n\t\n\tvar END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space\n\tvar START_KEYCODE = 229;\n\t\n\tvar canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;\n\t\n\tvar documentMode = null;\n\tif (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {\n\t  documentMode = document.documentMode;\n\t}\n\t\n\t// Webkit offers a very useful `textInput` event that can be used to\n\t// directly represent `beforeInput`. The IE `textinput` event is not as\n\t// useful, so we don't use it.\n\tvar canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();\n\t\n\t// In IE9+, we have access to composition events, but the data supplied\n\t// by the native compositionend event may be incorrect. Japanese ideographic\n\t// spaces, for instance (\\u3000) are not recorded correctly.\n\tvar useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);\n\t\n\t/**\n\t * Opera <= 12 includes TextEvent in window, but does not fire\n\t * text input events. Rely on keypress instead.\n\t */\n\tfunction isPresto() {\n\t  var opera = window.opera;\n\t  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;\n\t}\n\t\n\tvar SPACEBAR_CODE = 32;\n\tvar SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);\n\t\n\tvar topLevelTypes = EventConstants.topLevelTypes;\n\t\n\t// Events and their corresponding property names.\n\tvar eventTypes = {\n\t  beforeInput: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onBeforeInput: null }),\n\t      captured: keyOf({ onBeforeInputCapture: null })\n\t    },\n\t    dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]\n\t  },\n\t  compositionEnd: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onCompositionEnd: null }),\n\t      captured: keyOf({ onCompositionEndCapture: null })\n\t    },\n\t    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]\n\t  },\n\t  compositionStart: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onCompositionStart: null }),\n\t      captured: keyOf({ onCompositionStartCapture: null })\n\t    },\n\t    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]\n\t  },\n\t  compositionUpdate: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onCompositionUpdate: null }),\n\t      captured: keyOf({ onCompositionUpdateCapture: null })\n\t    },\n\t    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]\n\t  }\n\t};\n\t\n\t// Track whether we've ever handled a keypress on the space key.\n\tvar hasSpaceKeypress = false;\n\t\n\t/**\n\t * Return whether a native keypress event is assumed to be a command.\n\t * This is required because Firefox fires `keypress` events for key commands\n\t * (cut, copy, select-all, etc.) even though no character is inserted.\n\t */\n\tfunction isKeypressCommand(nativeEvent) {\n\t  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&\n\t  // ctrlKey && altKey is equivalent to AltGr, and is not a command.\n\t  !(nativeEvent.ctrlKey && nativeEvent.altKey);\n\t}\n\t\n\t/**\n\t * Translate native top level events into event types.\n\t *\n\t * @param {string} topLevelType\n\t * @return {object}\n\t */\n\tfunction getCompositionEventType(topLevelType) {\n\t  switch (topLevelType) {\n\t    case topLevelTypes.topCompositionStart:\n\t      return eventTypes.compositionStart;\n\t    case topLevelTypes.topCompositionEnd:\n\t      return eventTypes.compositionEnd;\n\t    case topLevelTypes.topCompositionUpdate:\n\t      return eventTypes.compositionUpdate;\n\t  }\n\t}\n\t\n\t/**\n\t * Does our fallback best-guess model think this event signifies that\n\t * composition has begun?\n\t *\n\t * @param {string} topLevelType\n\t * @param {object} nativeEvent\n\t * @return {boolean}\n\t */\n\tfunction isFallbackCompositionStart(topLevelType, nativeEvent) {\n\t  return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;\n\t}\n\t\n\t/**\n\t * Does our fallback mode think that this event is the end of composition?\n\t *\n\t * @param {string} topLevelType\n\t * @param {object} nativeEvent\n\t * @return {boolean}\n\t */\n\tfunction isFallbackCompositionEnd(topLevelType, nativeEvent) {\n\t  switch (topLevelType) {\n\t    case topLevelTypes.topKeyUp:\n\t      // Command keys insert or clear IME input.\n\t      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;\n\t    case topLevelTypes.topKeyDown:\n\t      // Expect IME keyCode on each keydown. If we get any other\n\t      // code we must have exited earlier.\n\t      return nativeEvent.keyCode !== START_KEYCODE;\n\t    case topLevelTypes.topKeyPress:\n\t    case topLevelTypes.topMouseDown:\n\t    case topLevelTypes.topBlur:\n\t      // Events are not possible without cancelling IME.\n\t      return true;\n\t    default:\n\t      return false;\n\t  }\n\t}\n\t\n\t/**\n\t * Google Input Tools provides composition data via a CustomEvent,\n\t * with the `data` property populated in the `detail` object. If this\n\t * is available on the event object, use it. If not, this is a plain\n\t * composition event and we have nothing special to extract.\n\t *\n\t * @param {object} nativeEvent\n\t * @return {?string}\n\t */\n\tfunction getDataFromCustomEvent(nativeEvent) {\n\t  var detail = nativeEvent.detail;\n\t  if (typeof detail === 'object' && 'data' in detail) {\n\t    return detail.data;\n\t  }\n\t  return null;\n\t}\n\t\n\t// Track the current IME composition fallback object, if any.\n\tvar currentComposition = null;\n\t\n\t/**\n\t * @param {string} topLevelType Record from `EventConstants`.\n\t * @param {DOMEventTarget} topLevelTarget The listening component root node.\n\t * @param {string} topLevelTargetID ID of `topLevelTarget`.\n\t * @param {object} nativeEvent Native browser event.\n\t * @return {?object} A SyntheticCompositionEvent.\n\t */\n\tfunction extractCompositionEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n\t  var eventType;\n\t  var fallbackData;\n\t\n\t  if (canUseCompositionEvent) {\n\t    eventType = getCompositionEventType(topLevelType);\n\t  } else if (!currentComposition) {\n\t    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {\n\t      eventType = eventTypes.compositionStart;\n\t    }\n\t  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n\t    eventType = eventTypes.compositionEnd;\n\t  }\n\t\n\t  if (!eventType) {\n\t    return null;\n\t  }\n\t\n\t  if (useFallbackCompositionData) {\n\t    // The current composition is stored statically and must not be\n\t    // overwritten while composition continues.\n\t    if (!currentComposition && eventType === eventTypes.compositionStart) {\n\t      currentComposition = FallbackCompositionState.getPooled(topLevelTarget);\n\t    } else if (eventType === eventTypes.compositionEnd) {\n\t      if (currentComposition) {\n\t        fallbackData = currentComposition.getData();\n\t      }\n\t    }\n\t  }\n\t\n\t  var event = SyntheticCompositionEvent.getPooled(eventType, topLevelTargetID, nativeEvent, nativeEventTarget);\n\t\n\t  if (fallbackData) {\n\t    // Inject data generated from fallback path into the synthetic event.\n\t    // This matches the property of native CompositionEventInterface.\n\t    event.data = fallbackData;\n\t  } else {\n\t    var customData = getDataFromCustomEvent(nativeEvent);\n\t    if (customData !== null) {\n\t      event.data = customData;\n\t    }\n\t  }\n\t\n\t  EventPropagators.accumulateTwoPhaseDispatches(event);\n\t  return event;\n\t}\n\t\n\t/**\n\t * @param {string} topLevelType Record from `EventConstants`.\n\t * @param {object} nativeEvent Native browser event.\n\t * @return {?string} The string corresponding to this `beforeInput` event.\n\t */\n\tfunction getNativeBeforeInputChars(topLevelType, nativeEvent) {\n\t  switch (topLevelType) {\n\t    case topLevelTypes.topCompositionEnd:\n\t      return getDataFromCustomEvent(nativeEvent);\n\t    case topLevelTypes.topKeyPress:\n\t      /**\n\t       * If native `textInput` events are available, our goal is to make\n\t       * use of them. However, there is a special case: the spacebar key.\n\t       * In Webkit, preventing default on a spacebar `textInput` event\n\t       * cancels character insertion, but it *also* causes the browser\n\t       * to fall back to its default spacebar behavior of scrolling the\n\t       * page.\n\t       *\n\t       * Tracking at:\n\t       * https://code.google.com/p/chromium/issues/detail?id=355103\n\t       *\n\t       * To avoid this issue, use the keypress event as if no `textInput`\n\t       * event is available.\n\t       */\n\t      var which = nativeEvent.which;\n\t      if (which !== SPACEBAR_CODE) {\n\t        return null;\n\t      }\n\t\n\t      hasSpaceKeypress = true;\n\t      return SPACEBAR_CHAR;\n\t\n\t    case topLevelTypes.topTextInput:\n\t      // Record the characters to be added to the DOM.\n\t      var chars = nativeEvent.data;\n\t\n\t      // If it's a spacebar character, assume that we have already handled\n\t      // it at the keypress level and bail immediately. Android Chrome\n\t      // doesn't give us keycodes, so we need to blacklist it.\n\t      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {\n\t        return null;\n\t      }\n\t\n\t      return chars;\n\t\n\t    default:\n\t      // For other native event types, do nothing.\n\t      return null;\n\t  }\n\t}\n\t\n\t/**\n\t * For browsers that do not provide the `textInput` event, extract the\n\t * appropriate string to use for SyntheticInputEvent.\n\t *\n\t * @param {string} topLevelType Record from `EventConstants`.\n\t * @param {object} nativeEvent Native browser event.\n\t * @return {?string} The fallback string for this `beforeInput` event.\n\t */\n\tfunction getFallbackBeforeInputChars(topLevelType, nativeEvent) {\n\t  // If we are currently composing (IME) and using a fallback to do so,\n\t  // try to extract the composed characters from the fallback object.\n\t  if (currentComposition) {\n\t    if (topLevelType === topLevelTypes.topCompositionEnd || isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n\t      var chars = currentComposition.getData();\n\t      FallbackCompositionState.release(currentComposition);\n\t      currentComposition = null;\n\t      return chars;\n\t    }\n\t    return null;\n\t  }\n\t\n\t  switch (topLevelType) {\n\t    case topLevelTypes.topPaste:\n\t      // If a paste event occurs after a keypress, throw out the input\n\t      // chars. Paste events should not lead to BeforeInput events.\n\t      return null;\n\t    case topLevelTypes.topKeyPress:\n\t      /**\n\t       * As of v27, Firefox may fire keypress events even when no character\n\t       * will be inserted. A few possibilities:\n\t       *\n\t       * - `which` is `0`. Arrow keys, Esc key, etc.\n\t       *\n\t       * - `which` is the pressed key code, but no char is available.\n\t       *   Ex: 'AltGr + d` in Polish. There is no modified character for\n\t       *   this key combination and no character is inserted into the\n\t       *   document, but FF fires the keypress for char code `100` anyway.\n\t       *   No `input` event will occur.\n\t       *\n\t       * - `which` is the pressed key code, but a command combination is\n\t       *   being used. Ex: `Cmd+C`. No character is inserted, and no\n\t       *   `input` event will occur.\n\t       */\n\t      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {\n\t        return String.fromCharCode(nativeEvent.which);\n\t      }\n\t      return null;\n\t    case topLevelTypes.topCompositionEnd:\n\t      return useFallbackCompositionData ? null : nativeEvent.data;\n\t    default:\n\t      return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Extract a SyntheticInputEvent for `beforeInput`, based on either native\n\t * `textInput` or fallback behavior.\n\t *\n\t * @param {string} topLevelType Record from `EventConstants`.\n\t * @param {DOMEventTarget} topLevelTarget The listening component root node.\n\t * @param {string} topLevelTargetID ID of `topLevelTarget`.\n\t * @param {object} nativeEvent Native browser event.\n\t * @return {?object} A SyntheticInputEvent.\n\t */\n\tfunction extractBeforeInputEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n\t  var chars;\n\t\n\t  if (canUseTextInputEvent) {\n\t    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);\n\t  } else {\n\t    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);\n\t  }\n\t\n\t  // If no characters are being inserted, no BeforeInput event should\n\t  // be fired.\n\t  if (!chars) {\n\t    return null;\n\t  }\n\t\n\t  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, topLevelTargetID, nativeEvent, nativeEventTarget);\n\t\n\t  event.data = chars;\n\t  EventPropagators.accumulateTwoPhaseDispatches(event);\n\t  return event;\n\t}\n\t\n\t/**\n\t * Create an `onBeforeInput` event to match\n\t * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.\n\t *\n\t * This event plugin is based on the native `textInput` event\n\t * available in Chrome, Safari, Opera, and IE. This event fires after\n\t * `onKeyPress` and `onCompositionEnd`, but before `onInput`.\n\t *\n\t * `beforeInput` is spec'd but not implemented in any browsers, and\n\t * the `input` event does not provide any useful information about what has\n\t * actually been added, contrary to the spec. Thus, `textInput` is the best\n\t * available event to identify the characters that have actually been inserted\n\t * into the target node.\n\t *\n\t * This plugin is also responsible for emitting `composition` events, thus\n\t * allowing us to share composition fallback code for both `beforeInput` and\n\t * `composition` event types.\n\t */\n\tvar BeforeInputEventPlugin = {\n\t\n\t  eventTypes: eventTypes,\n\t\n\t  /**\n\t   * @param {string} topLevelType Record from `EventConstants`.\n\t   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n\t   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n\t   * @param {object} nativeEvent Native browser event.\n\t   * @return {*} An accumulation of synthetic events.\n\t   * @see {EventPluginHub.extractEvents}\n\t   */\n\t  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n\t    return [extractCompositionEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget)];\n\t  }\n\t};\n\t\n\tmodule.exports = BeforeInputEventPlugin;\n\n/***/ },\n/* 101 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule CSSPropertyOperations\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar CSSProperty = __webpack_require__(57);\n\tvar ExecutionEnvironment = __webpack_require__(4);\n\tvar ReactPerf = __webpack_require__(7);\n\t\n\tvar camelizeStyleName = __webpack_require__(155);\n\tvar dangerousStyleValue = __webpack_require__(146);\n\tvar hyphenateStyleName = __webpack_require__(160);\n\tvar memoizeStringOnly = __webpack_require__(164);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar processStyleName = memoizeStringOnly(function (styleName) {\n\t  return hyphenateStyleName(styleName);\n\t});\n\t\n\tvar hasShorthandPropertyBug = false;\n\tvar styleFloatAccessor = 'cssFloat';\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  var tempStyle = document.createElement('div').style;\n\t  try {\n\t    // IE8 throws \"Invalid argument.\" if resetting shorthand style properties.\n\t    tempStyle.font = '';\n\t  } catch (e) {\n\t    hasShorthandPropertyBug = true;\n\t  }\n\t  // IE8 only supports accessing cssFloat (standard) as styleFloat\n\t  if (document.documentElement.style.cssFloat === undefined) {\n\t    styleFloatAccessor = 'styleFloat';\n\t  }\n\t}\n\t\n\tif (false) {\n\t  // 'msTransform' is correct, but the other prefixes should be capitalized\n\t  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\n\t\n\t  // style values shouldn't contain a semicolon\n\t  var badStyleValueWithSemicolonPattern = /;\\s*$/;\n\t\n\t  var warnedStyleNames = {};\n\t  var warnedStyleValues = {};\n\t\n\t  var warnHyphenatedStyleName = function (name) {\n\t    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n\t      return;\n\t    }\n\t\n\t    warnedStyleNames[name] = true;\n\t    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?', name, camelizeStyleName(name)) : undefined;\n\t  };\n\t\n\t  var warnBadVendoredStyleName = function (name) {\n\t    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n\t      return;\n\t    }\n\t\n\t    warnedStyleNames[name] = true;\n\t    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1)) : undefined;\n\t  };\n\t\n\t  var warnStyleValueWithSemicolon = function (name, value) {\n\t    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\n\t      return;\n\t    }\n\t\n\t    warnedStyleValues[value] = true;\n\t    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\\'t contain a semicolon. ' + 'Try \"%s: %s\" instead.', name, value.replace(badStyleValueWithSemicolonPattern, '')) : undefined;\n\t  };\n\t\n\t  /**\n\t   * @param {string} name\n\t   * @param {*} value\n\t   */\n\t  var warnValidStyle = function (name, value) {\n\t    if (name.indexOf('-') > -1) {\n\t      warnHyphenatedStyleName(name);\n\t    } else if (badVendoredStyleNamePattern.test(name)) {\n\t      warnBadVendoredStyleName(name);\n\t    } else if (badStyleValueWithSemicolonPattern.test(value)) {\n\t      warnStyleValueWithSemicolon(name, value);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Operations for dealing with CSS properties.\n\t */\n\tvar CSSPropertyOperations = {\n\t\n\t  /**\n\t   * Serializes a mapping of style properties for use as inline styles:\n\t   *\n\t   *   > createMarkupForStyles({width: '200px', height: 0})\n\t   *   \"width:200px;height:0;\"\n\t   *\n\t   * Undefined values are ignored so that declarative programming is easier.\n\t   * The result should be HTML-escaped before insertion into the DOM.\n\t   *\n\t   * @param {object} styles\n\t   * @return {?string}\n\t   */\n\t  createMarkupForStyles: function (styles) {\n\t    var serialized = '';\n\t    for (var styleName in styles) {\n\t      if (!styles.hasOwnProperty(styleName)) {\n\t        continue;\n\t      }\n\t      var styleValue = styles[styleName];\n\t      if (false) {\n\t        warnValidStyle(styleName, styleValue);\n\t      }\n\t      if (styleValue != null) {\n\t        serialized += processStyleName(styleName) + ':';\n\t        serialized += dangerousStyleValue(styleName, styleValue) + ';';\n\t      }\n\t    }\n\t    return serialized || null;\n\t  },\n\t\n\t  /**\n\t   * Sets the value for multiple styles on a node.  If a value is specified as\n\t   * '' (empty string), the corresponding style property will be unset.\n\t   *\n\t   * @param {DOMElement} node\n\t   * @param {object} styles\n\t   */\n\t  setValueForStyles: function (node, styles) {\n\t    var style = node.style;\n\t    for (var styleName in styles) {\n\t      if (!styles.hasOwnProperty(styleName)) {\n\t        continue;\n\t      }\n\t      if (false) {\n\t        warnValidStyle(styleName, styles[styleName]);\n\t      }\n\t      var styleValue = dangerousStyleValue(styleName, styles[styleName]);\n\t      if (styleName === 'float') {\n\t        styleName = styleFloatAccessor;\n\t      }\n\t      if (styleValue) {\n\t        style[styleName] = styleValue;\n\t      } else {\n\t        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];\n\t        if (expansion) {\n\t          // Shorthand property that IE8 won't like unsetting, so unset each\n\t          // component to placate it\n\t          for (var individualStyleName in expansion) {\n\t            style[individualStyleName] = '';\n\t          }\n\t        } else {\n\t          style[styleName] = '';\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t};\n\t\n\tReactPerf.measureMethods(CSSPropertyOperations, 'CSSPropertyOperations', {\n\t  setValueForStyles: 'setValueForStyles'\n\t});\n\t\n\tmodule.exports = CSSPropertyOperations;\n\n/***/ },\n/* 102 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ChangeEventPlugin\n\t */\n\t\n\t'use strict';\n\t\n\tvar EventConstants = __webpack_require__(10);\n\tvar EventPluginHub = __webpack_require__(19);\n\tvar EventPropagators = __webpack_require__(20);\n\tvar ExecutionEnvironment = __webpack_require__(4);\n\tvar ReactUpdates = __webpack_require__(8);\n\tvar SyntheticEvent = __webpack_require__(16);\n\t\n\tvar getEventTarget = __webpack_require__(46);\n\tvar isEventSupported = __webpack_require__(49);\n\tvar isTextInputElement = __webpack_require__(84);\n\tvar keyOf = __webpack_require__(13);\n\t\n\tvar topLevelTypes = EventConstants.topLevelTypes;\n\t\n\tvar eventTypes = {\n\t  change: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onChange: null }),\n\t      captured: keyOf({ onChangeCapture: null })\n\t    },\n\t    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]\n\t  }\n\t};\n\t\n\t/**\n\t * For IE shims\n\t */\n\tvar activeElement = null;\n\tvar activeElementID = null;\n\tvar activeElementValue = null;\n\tvar activeElementValueProp = null;\n\t\n\t/**\n\t * SECTION: handle `change` event\n\t */\n\tfunction shouldUseChangeEvent(elem) {\n\t  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();\n\t  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';\n\t}\n\t\n\tvar doesChangeEventBubble = false;\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  // See `handleChange` comment below\n\t  doesChangeEventBubble = isEventSupported('change') && (!('documentMode' in document) || document.documentMode > 8);\n\t}\n\t\n\tfunction manualDispatchChangeEvent(nativeEvent) {\n\t  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementID, nativeEvent, getEventTarget(nativeEvent));\n\t  EventPropagators.accumulateTwoPhaseDispatches(event);\n\t\n\t  // If change and propertychange bubbled, we'd just bind to it like all the\n\t  // other events and have it go through ReactBrowserEventEmitter. Since it\n\t  // doesn't, we manually listen for the events and so we have to enqueue and\n\t  // process the abstract event manually.\n\t  //\n\t  // Batching is necessary here in order to ensure that all event handlers run\n\t  // before the next rerender (including event handlers attached to ancestor\n\t  // elements instead of directly on the input). Without this, controlled\n\t  // components don't work properly in conjunction with event bubbling because\n\t  // the component is rerendered and the value reverted before all the event\n\t  // handlers can run. See https://github.com/facebook/react/issues/708.\n\t  ReactUpdates.batchedUpdates(runEventInBatch, event);\n\t}\n\t\n\tfunction runEventInBatch(event) {\n\t  EventPluginHub.enqueueEvents(event);\n\t  EventPluginHub.processEventQueue(false);\n\t}\n\t\n\tfunction startWatchingForChangeEventIE8(target, targetID) {\n\t  activeElement = target;\n\t  activeElementID = targetID;\n\t  activeElement.attachEvent('onchange', manualDispatchChangeEvent);\n\t}\n\t\n\tfunction stopWatchingForChangeEventIE8() {\n\t  if (!activeElement) {\n\t    return;\n\t  }\n\t  activeElement.detachEvent('onchange', manualDispatchChangeEvent);\n\t  activeElement = null;\n\t  activeElementID = null;\n\t}\n\t\n\tfunction getTargetIDForChangeEvent(topLevelType, topLevelTarget, topLevelTargetID) {\n\t  if (topLevelType === topLevelTypes.topChange) {\n\t    return topLevelTargetID;\n\t  }\n\t}\n\tfunction handleEventsForChangeEventIE8(topLevelType, topLevelTarget, topLevelTargetID) {\n\t  if (topLevelType === topLevelTypes.topFocus) {\n\t    // stopWatching() should be a noop here but we call it just in case we\n\t    // missed a blur event somehow.\n\t    stopWatchingForChangeEventIE8();\n\t    startWatchingForChangeEventIE8(topLevelTarget, topLevelTargetID);\n\t  } else if (topLevelType === topLevelTypes.topBlur) {\n\t    stopWatchingForChangeEventIE8();\n\t  }\n\t}\n\t\n\t/**\n\t * SECTION: handle `input` event\n\t */\n\tvar isInputEventSupported = false;\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  // IE9 claims to support the input event but fails to trigger it when\n\t  // deleting text, so we ignore its input events\n\t  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 9);\n\t}\n\t\n\t/**\n\t * (For old IE.) Replacement getter/setter for the `value` property that gets\n\t * set on the active element.\n\t */\n\tvar newValueProp = {\n\t  get: function () {\n\t    return activeElementValueProp.get.call(this);\n\t  },\n\t  set: function (val) {\n\t    // Cast to a string so we can do equality checks.\n\t    activeElementValue = '' + val;\n\t    activeElementValueProp.set.call(this, val);\n\t  }\n\t};\n\t\n\t/**\n\t * (For old IE.) Starts tracking propertychange events on the passed-in element\n\t * and override the value property so that we can distinguish user events from\n\t * value changes in JS.\n\t */\n\tfunction startWatchingForValueChange(target, targetID) {\n\t  activeElement = target;\n\t  activeElementID = targetID;\n\t  activeElementValue = target.value;\n\t  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');\n\t\n\t  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only\n\t  // on DOM elements\n\t  Object.defineProperty(activeElement, 'value', newValueProp);\n\t  activeElement.attachEvent('onpropertychange', handlePropertyChange);\n\t}\n\t\n\t/**\n\t * (For old IE.) Removes the event listeners from the currently-tracked element,\n\t * if any exists.\n\t */\n\tfunction stopWatchingForValueChange() {\n\t  if (!activeElement) {\n\t    return;\n\t  }\n\t\n\t  // delete restores the original property definition\n\t  delete activeElement.value;\n\t  activeElement.detachEvent('onpropertychange', handlePropertyChange);\n\t\n\t  activeElement = null;\n\t  activeElementID = null;\n\t  activeElementValue = null;\n\t  activeElementValueProp = null;\n\t}\n\t\n\t/**\n\t * (For old IE.) Handles a propertychange event, sending a `change` event if\n\t * the value of the active element has changed.\n\t */\n\tfunction handlePropertyChange(nativeEvent) {\n\t  if (nativeEvent.propertyName !== 'value') {\n\t    return;\n\t  }\n\t  var value = nativeEvent.srcElement.value;\n\t  if (value === activeElementValue) {\n\t    return;\n\t  }\n\t  activeElementValue = value;\n\t\n\t  manualDispatchChangeEvent(nativeEvent);\n\t}\n\t\n\t/**\n\t * If a `change` event should be fired, returns the target's ID.\n\t */\n\tfunction getTargetIDForInputEvent(topLevelType, topLevelTarget, topLevelTargetID) {\n\t  if (topLevelType === topLevelTypes.topInput) {\n\t    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly\n\t    // what we want so fall through here and trigger an abstract event\n\t    return topLevelTargetID;\n\t  }\n\t}\n\t\n\t// For IE8 and IE9.\n\tfunction handleEventsForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {\n\t  if (topLevelType === topLevelTypes.topFocus) {\n\t    // In IE8, we can capture almost all .value changes by adding a\n\t    // propertychange handler and looking for events with propertyName\n\t    // equal to 'value'\n\t    // In IE9, propertychange fires for most input events but is buggy and\n\t    // doesn't fire when text is deleted, but conveniently, selectionchange\n\t    // appears to fire in all of the remaining cases so we catch those and\n\t    // forward the event if the value has changed\n\t    // In either case, we don't want to call the event handler if the value\n\t    // is changed from JS so we redefine a setter for `.value` that updates\n\t    // our activeElementValue variable, allowing us to ignore those changes\n\t    //\n\t    // stopWatching() should be a noop here but we call it just in case we\n\t    // missed a blur event somehow.\n\t    stopWatchingForValueChange();\n\t    startWatchingForValueChange(topLevelTarget, topLevelTargetID);\n\t  } else if (topLevelType === topLevelTypes.topBlur) {\n\t    stopWatchingForValueChange();\n\t  }\n\t}\n\t\n\t// For IE8 and IE9.\n\tfunction getTargetIDForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {\n\t  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {\n\t    // On the selectionchange event, the target is just document which isn't\n\t    // helpful for us so just check activeElement instead.\n\t    //\n\t    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire\n\t    // propertychange on the first input event after setting `value` from a\n\t    // script and fires only keydown, keypress, keyup. Catching keyup usually\n\t    // gets it and catching keydown lets us fire an event for the first\n\t    // keystroke if user does a key repeat (it'll be a little delayed: right\n\t    // before the second keystroke). Other input methods (e.g., paste) seem to\n\t    // fire selectionchange normally.\n\t    if (activeElement && activeElement.value !== activeElementValue) {\n\t      activeElementValue = activeElement.value;\n\t      return activeElementID;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * SECTION: handle `click` event\n\t */\n\tfunction shouldUseClickEvent(elem) {\n\t  // Use the `click` event to detect changes to checkbox and radio inputs.\n\t  // This approach works across all browsers, whereas `change` does not fire\n\t  // until `blur` in IE8.\n\t  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');\n\t}\n\t\n\tfunction getTargetIDForClickEvent(topLevelType, topLevelTarget, topLevelTargetID) {\n\t  if (topLevelType === topLevelTypes.topClick) {\n\t    return topLevelTargetID;\n\t  }\n\t}\n\t\n\t/**\n\t * This plugin creates an `onChange` event that normalizes change events\n\t * across form elements. This event fires at a time when it's possible to\n\t * change the element's value without seeing a flicker.\n\t *\n\t * Supported elements are:\n\t * - input (see `isTextInputElement`)\n\t * - textarea\n\t * - select\n\t */\n\tvar ChangeEventPlugin = {\n\t\n\t  eventTypes: eventTypes,\n\t\n\t  /**\n\t   * @param {string} topLevelType Record from `EventConstants`.\n\t   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n\t   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n\t   * @param {object} nativeEvent Native browser event.\n\t   * @return {*} An accumulation of synthetic events.\n\t   * @see {EventPluginHub.extractEvents}\n\t   */\n\t  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n\t\n\t    var getTargetIDFunc, handleEventFunc;\n\t    if (shouldUseChangeEvent(topLevelTarget)) {\n\t      if (doesChangeEventBubble) {\n\t        getTargetIDFunc = getTargetIDForChangeEvent;\n\t      } else {\n\t        handleEventFunc = handleEventsForChangeEventIE8;\n\t      }\n\t    } else if (isTextInputElement(topLevelTarget)) {\n\t      if (isInputEventSupported) {\n\t        getTargetIDFunc = getTargetIDForInputEvent;\n\t      } else {\n\t        getTargetIDFunc = getTargetIDForInputEventIE;\n\t        handleEventFunc = handleEventsForInputEventIE;\n\t      }\n\t    } else if (shouldUseClickEvent(topLevelTarget)) {\n\t      getTargetIDFunc = getTargetIDForClickEvent;\n\t    }\n\t\n\t    if (getTargetIDFunc) {\n\t      var targetID = getTargetIDFunc(topLevelType, topLevelTarget, topLevelTargetID);\n\t      if (targetID) {\n\t        var event = SyntheticEvent.getPooled(eventTypes.change, targetID, nativeEvent, nativeEventTarget);\n\t        event.type = 'change';\n\t        EventPropagators.accumulateTwoPhaseDispatches(event);\n\t        return event;\n\t      }\n\t    }\n\t\n\t    if (handleEventFunc) {\n\t      handleEventFunc(topLevelType, topLevelTarget, topLevelTargetID);\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ChangeEventPlugin;\n\n/***/ },\n/* 103 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ClientReactRootIndex\n\t * @typechecks\n\t */\n\t\n\t'use strict';\n\t\n\tvar nextReactRootIndex = 0;\n\t\n\tvar ClientReactRootIndex = {\n\t  createReactRootIndex: function () {\n\t    return nextReactRootIndex++;\n\t  }\n\t};\n\t\n\tmodule.exports = ClientReactRootIndex;\n\n/***/ },\n/* 104 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule Danger\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(4);\n\t\n\tvar createNodesFromMarkup = __webpack_require__(157);\n\tvar emptyFunction = __webpack_require__(9);\n\tvar getMarkupWrap = __webpack_require__(89);\n\tvar invariant = __webpack_require__(1);\n\t\n\tvar OPEN_TAG_NAME_EXP = /^(<[^ \\/>]+)/;\n\tvar RESULT_INDEX_ATTR = 'data-danger-index';\n\t\n\t/**\n\t * Extracts the `nodeName` from a string of markup.\n\t *\n\t * NOTE: Extracting the `nodeName` does not require a regular expression match\n\t * because we make assumptions about React-generated markup (i.e. there are no\n\t * spaces surrounding the opening tag and there is at least one attribute).\n\t *\n\t * @param {string} markup String of markup.\n\t * @return {string} Node name of the supplied markup.\n\t * @see http://jsperf.com/extract-nodename\n\t */\n\tfunction getNodeName(markup) {\n\t  return markup.substring(1, markup.indexOf(' '));\n\t}\n\t\n\tvar Danger = {\n\t\n\t  /**\n\t   * Renders markup into an array of nodes. The markup is expected to render\n\t   * into a list of root nodes. Also, the length of `resultList` and\n\t   * `markupList` should be the same.\n\t   *\n\t   * @param {array<string>} markupList List of markup strings to render.\n\t   * @return {array<DOMElement>} List of rendered nodes.\n\t   * @internal\n\t   */\n\t  dangerouslyRenderMarkup: function (markupList) {\n\t    !ExecutionEnvironment.canUseDOM ?  false ? invariant(false, 'dangerouslyRenderMarkup(...): Cannot render markup in a worker ' + 'thread. Make sure `window` and `document` are available globally ' + 'before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString for server rendering.') : invariant(false) : undefined;\n\t    var nodeName;\n\t    var markupByNodeName = {};\n\t    // Group markup by `nodeName` if a wrap is necessary, else by '*'.\n\t    for (var i = 0; i < markupList.length; i++) {\n\t      !markupList[i] ?  false ? invariant(false, 'dangerouslyRenderMarkup(...): Missing markup.') : invariant(false) : undefined;\n\t      nodeName = getNodeName(markupList[i]);\n\t      nodeName = getMarkupWrap(nodeName) ? nodeName : '*';\n\t      markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];\n\t      markupByNodeName[nodeName][i] = markupList[i];\n\t    }\n\t    var resultList = [];\n\t    var resultListAssignmentCount = 0;\n\t    for (nodeName in markupByNodeName) {\n\t      if (!markupByNodeName.hasOwnProperty(nodeName)) {\n\t        continue;\n\t      }\n\t      var markupListByNodeName = markupByNodeName[nodeName];\n\t\n\t      // This for-in loop skips the holes of the sparse array. The order of\n\t      // iteration should follow the order of assignment, which happens to match\n\t      // numerical index order, but we don't rely on that.\n\t      var resultIndex;\n\t      for (resultIndex in markupListByNodeName) {\n\t        if (markupListByNodeName.hasOwnProperty(resultIndex)) {\n\t          var markup = markupListByNodeName[resultIndex];\n\t\n\t          // Push the requested markup with an additional RESULT_INDEX_ATTR\n\t          // attribute.  If the markup does not start with a < character, it\n\t          // will be discarded below (with an appropriate console.error).\n\t          markupListByNodeName[resultIndex] = markup.replace(OPEN_TAG_NAME_EXP,\n\t          // This index will be parsed back out below.\n\t          '$1 ' + RESULT_INDEX_ATTR + '=\"' + resultIndex + '\" ');\n\t        }\n\t      }\n\t\n\t      // Render each group of markup with similar wrapping `nodeName`.\n\t      var renderNodes = createNodesFromMarkup(markupListByNodeName.join(''), emptyFunction // Do nothing special with <script> tags.\n\t      );\n\t\n\t      for (var j = 0; j < renderNodes.length; ++j) {\n\t        var renderNode = renderNodes[j];\n\t        if (renderNode.hasAttribute && renderNode.hasAttribute(RESULT_INDEX_ATTR)) {\n\t\n\t          resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);\n\t          renderNode.removeAttribute(RESULT_INDEX_ATTR);\n\t\n\t          !!resultList.hasOwnProperty(resultIndex) ?  false ? invariant(false, 'Danger: Assigning to an already-occupied result index.') : invariant(false) : undefined;\n\t\n\t          resultList[resultIndex] = renderNode;\n\t\n\t          // This should match resultList.length and markupList.length when\n\t          // we're done.\n\t          resultListAssignmentCount += 1;\n\t        } else if (false) {\n\t          console.error('Danger: Discarding unexpected node:', renderNode);\n\t        }\n\t      }\n\t    }\n\t\n\t    // Although resultList was populated out of order, it should now be a dense\n\t    // array.\n\t    !(resultListAssignmentCount === resultList.length) ?  false ? invariant(false, 'Danger: Did not assign to every index of resultList.') : invariant(false) : undefined;\n\t\n\t    !(resultList.length === markupList.length) ?  false ? invariant(false, 'Danger: Expected markup to render %s nodes, but rendered %s.', markupList.length, resultList.length) : invariant(false) : undefined;\n\t\n\t    return resultList;\n\t  },\n\t\n\t  /**\n\t   * Replaces a node with a string of markup at its current position within its\n\t   * parent. The markup must render into a single root node.\n\t   *\n\t   * @param {DOMElement} oldChild Child node to replace.\n\t   * @param {string} markup Markup to render in place of the child node.\n\t   * @internal\n\t   */\n\t  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {\n\t    !ExecutionEnvironment.canUseDOM ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' + 'worker thread. Make sure `window` and `document` are available ' + 'globally before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString() for server rendering.') : invariant(false) : undefined;\n\t    !markup ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(false) : undefined;\n\t    !(oldChild.tagName.toLowerCase() !== 'html') ?  false ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' + '<html> node. This is because browser quirks make this unreliable ' + 'and/or slow. If you want to render to the root you must use ' + 'server rendering. See ReactDOMServer.renderToString().') : invariant(false) : undefined;\n\t\n\t    var newChild;\n\t    if (typeof markup === 'string') {\n\t      newChild = createNodesFromMarkup(markup, emptyFunction)[0];\n\t    } else {\n\t      newChild = markup;\n\t    }\n\t    oldChild.parentNode.replaceChild(newChild, oldChild);\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = Danger;\n\n/***/ },\n/* 105 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule DefaultEventPluginOrder\n\t */\n\t\n\t'use strict';\n\t\n\tvar keyOf = __webpack_require__(13);\n\t\n\t/**\n\t * Module that is injectable into `EventPluginHub`, that specifies a\n\t * deterministic ordering of `EventPlugin`s. A convenient way to reason about\n\t * plugins, without having to package every one of them. This is better than\n\t * having plugins be ordered in the same order that they are injected because\n\t * that ordering would be influenced by the packaging order.\n\t * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that\n\t * preventing default on events is convenient in `SimpleEventPlugin` handlers.\n\t */\n\tvar DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];\n\t\n\tmodule.exports = DefaultEventPluginOrder;\n\n/***/ },\n/* 106 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule EnterLeaveEventPlugin\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar EventConstants = __webpack_require__(10);\n\tvar EventPropagators = __webpack_require__(20);\n\tvar SyntheticMouseEvent = __webpack_require__(28);\n\t\n\tvar ReactMount = __webpack_require__(5);\n\tvar keyOf = __webpack_require__(13);\n\t\n\tvar topLevelTypes = EventConstants.topLevelTypes;\n\tvar getFirstReactDOM = ReactMount.getFirstReactDOM;\n\t\n\tvar eventTypes = {\n\t  mouseEnter: {\n\t    registrationName: keyOf({ onMouseEnter: null }),\n\t    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]\n\t  },\n\t  mouseLeave: {\n\t    registrationName: keyOf({ onMouseLeave: null }),\n\t    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]\n\t  }\n\t};\n\t\n\tvar extractedEvents = [null, null];\n\t\n\tvar EnterLeaveEventPlugin = {\n\t\n\t  eventTypes: eventTypes,\n\t\n\t  /**\n\t   * For almost every interaction we care about, there will be both a top-level\n\t   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\n\t   * we do not extract duplicate events. However, moving the mouse into the\n\t   * browser from outside will not fire a `mouseout` event. In this case, we use\n\t   * the `mouseover` top-level event.\n\t   *\n\t   * @param {string} topLevelType Record from `EventConstants`.\n\t   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n\t   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n\t   * @param {object} nativeEvent Native browser event.\n\t   * @return {*} An accumulation of synthetic events.\n\t   * @see {EventPluginHub.extractEvents}\n\t   */\n\t  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n\t    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {\n\t      return null;\n\t    }\n\t    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {\n\t      // Must not be a mouse in or mouse out - ignoring.\n\t      return null;\n\t    }\n\t\n\t    var win;\n\t    if (topLevelTarget.window === topLevelTarget) {\n\t      // `topLevelTarget` is probably a window object.\n\t      win = topLevelTarget;\n\t    } else {\n\t      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n\t      var doc = topLevelTarget.ownerDocument;\n\t      if (doc) {\n\t        win = doc.defaultView || doc.parentWindow;\n\t      } else {\n\t        win = window;\n\t      }\n\t    }\n\t\n\t    var from;\n\t    var to;\n\t    var fromID = '';\n\t    var toID = '';\n\t    if (topLevelType === topLevelTypes.topMouseOut) {\n\t      from = topLevelTarget;\n\t      fromID = topLevelTargetID;\n\t      to = getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement);\n\t      if (to) {\n\t        toID = ReactMount.getID(to);\n\t      } else {\n\t        to = win;\n\t      }\n\t      to = to || win;\n\t    } else {\n\t      from = win;\n\t      to = topLevelTarget;\n\t      toID = topLevelTargetID;\n\t    }\n\t\n\t    if (from === to) {\n\t      // Nothing pertains to our managed components.\n\t      return null;\n\t    }\n\t\n\t    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, fromID, nativeEvent, nativeEventTarget);\n\t    leave.type = 'mouseleave';\n\t    leave.target = from;\n\t    leave.relatedTarget = to;\n\t\n\t    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, toID, nativeEvent, nativeEventTarget);\n\t    enter.type = 'mouseenter';\n\t    enter.target = to;\n\t    enter.relatedTarget = from;\n\t\n\t    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);\n\t\n\t    extractedEvents[0] = leave;\n\t    extractedEvents[1] = enter;\n\t\n\t    return extractedEvents;\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = EnterLeaveEventPlugin;\n\n/***/ },\n/* 107 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule EventPluginUtils\n\t */\n\t\n\t'use strict';\n\t\n\tvar EventConstants = __webpack_require__(10);\n\tvar ReactErrorUtils = __webpack_require__(72);\n\t\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\t/**\n\t * Injected dependencies:\n\t */\n\t\n\t/**\n\t * - `Mount`: [required] Module that can convert between React dom IDs and\n\t *   actual node references.\n\t */\n\tvar injection = {\n\t  Mount: null,\n\t  injectMount: function (InjectedMount) {\n\t    injection.Mount = InjectedMount;\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(InjectedMount && InjectedMount.getNode && InjectedMount.getID, 'EventPluginUtils.injection.injectMount(...): Injected Mount ' + 'module is missing getNode or getID.') : undefined;\n\t    }\n\t  }\n\t};\n\t\n\tvar topLevelTypes = EventConstants.topLevelTypes;\n\t\n\tfunction isEndish(topLevelType) {\n\t  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;\n\t}\n\t\n\tfunction isMoveish(topLevelType) {\n\t  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;\n\t}\n\tfunction isStartish(topLevelType) {\n\t  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;\n\t}\n\t\n\tvar validateEventDispatches;\n\tif (false) {\n\t  validateEventDispatches = function (event) {\n\t    var dispatchListeners = event._dispatchListeners;\n\t    var dispatchIDs = event._dispatchIDs;\n\t\n\t    var listenersIsArr = Array.isArray(dispatchListeners);\n\t    var idsIsArr = Array.isArray(dispatchIDs);\n\t    var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;\n\t    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;\n\t\n\t    process.env.NODE_ENV !== 'production' ? warning(idsIsArr === listenersIsArr && IDsLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : undefined;\n\t  };\n\t}\n\t\n\t/**\n\t * Dispatch the event to the listener.\n\t * @param {SyntheticEvent} event SyntheticEvent to handle\n\t * @param {boolean} simulated If the event is simulated (changes exn behavior)\n\t * @param {function} listener Application-level callback\n\t * @param {string} domID DOM id to pass to the callback.\n\t */\n\tfunction executeDispatch(event, simulated, listener, domID) {\n\t  var type = event.type || 'unknown-event';\n\t  event.currentTarget = injection.Mount.getNode(domID);\n\t  if (simulated) {\n\t    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event, domID);\n\t  } else {\n\t    ReactErrorUtils.invokeGuardedCallback(type, listener, event, domID);\n\t  }\n\t  event.currentTarget = null;\n\t}\n\t\n\t/**\n\t * Standard/simple iteration through an event's collected dispatches.\n\t */\n\tfunction executeDispatchesInOrder(event, simulated) {\n\t  var dispatchListeners = event._dispatchListeners;\n\t  var dispatchIDs = event._dispatchIDs;\n\t  if (false) {\n\t    validateEventDispatches(event);\n\t  }\n\t  if (Array.isArray(dispatchListeners)) {\n\t    for (var i = 0; i < dispatchListeners.length; i++) {\n\t      if (event.isPropagationStopped()) {\n\t        break;\n\t      }\n\t      // Listeners and IDs are two parallel arrays that are always in sync.\n\t      executeDispatch(event, simulated, dispatchListeners[i], dispatchIDs[i]);\n\t    }\n\t  } else if (dispatchListeners) {\n\t    executeDispatch(event, simulated, dispatchListeners, dispatchIDs);\n\t  }\n\t  event._dispatchListeners = null;\n\t  event._dispatchIDs = null;\n\t}\n\t\n\t/**\n\t * Standard/simple iteration through an event's collected dispatches, but stops\n\t * at the first dispatch execution returning true, and returns that id.\n\t *\n\t * @return {?string} id of the first dispatch execution who's listener returns\n\t * true, or null if no listener returned true.\n\t */\n\tfunction executeDispatchesInOrderStopAtTrueImpl(event) {\n\t  var dispatchListeners = event._dispatchListeners;\n\t  var dispatchIDs = event._dispatchIDs;\n\t  if (false) {\n\t    validateEventDispatches(event);\n\t  }\n\t  if (Array.isArray(dispatchListeners)) {\n\t    for (var i = 0; i < dispatchListeners.length; i++) {\n\t      if (event.isPropagationStopped()) {\n\t        break;\n\t      }\n\t      // Listeners and IDs are two parallel arrays that are always in sync.\n\t      if (dispatchListeners[i](event, dispatchIDs[i])) {\n\t        return dispatchIDs[i];\n\t      }\n\t    }\n\t  } else if (dispatchListeners) {\n\t    if (dispatchListeners(event, dispatchIDs)) {\n\t      return dispatchIDs;\n\t    }\n\t  }\n\t  return null;\n\t}\n\t\n\t/**\n\t * @see executeDispatchesInOrderStopAtTrueImpl\n\t */\n\tfunction executeDispatchesInOrderStopAtTrue(event) {\n\t  var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n\t  event._dispatchIDs = null;\n\t  event._dispatchListeners = null;\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Execution of a \"direct\" dispatch - there must be at most one dispatch\n\t * accumulated on the event or it is considered an error. It doesn't really make\n\t * sense for an event with multiple dispatches (bubbled) to keep track of the\n\t * return values at each dispatch execution, but it does tend to make sense when\n\t * dealing with \"direct\" dispatches.\n\t *\n\t * @return {*} The return value of executing the single dispatch.\n\t */\n\tfunction executeDirectDispatch(event) {\n\t  if (false) {\n\t    validateEventDispatches(event);\n\t  }\n\t  var dispatchListener = event._dispatchListeners;\n\t  var dispatchID = event._dispatchIDs;\n\t  !!Array.isArray(dispatchListener) ?  false ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : invariant(false) : undefined;\n\t  var res = dispatchListener ? dispatchListener(event, dispatchID) : null;\n\t  event._dispatchListeners = null;\n\t  event._dispatchIDs = null;\n\t  return res;\n\t}\n\t\n\t/**\n\t * @param {SyntheticEvent} event\n\t * @return {boolean} True iff number of dispatches accumulated is greater than 0.\n\t */\n\tfunction hasDispatches(event) {\n\t  return !!event._dispatchListeners;\n\t}\n\t\n\t/**\n\t * General utilities that are useful in creating custom Event Plugins.\n\t */\n\tvar EventPluginUtils = {\n\t  isEndish: isEndish,\n\t  isMoveish: isMoveish,\n\t  isStartish: isStartish,\n\t\n\t  executeDirectDispatch: executeDirectDispatch,\n\t  executeDispatchesInOrder: executeDispatchesInOrder,\n\t  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,\n\t  hasDispatches: hasDispatches,\n\t\n\t  getNode: function (id) {\n\t    return injection.Mount.getNode(id);\n\t  },\n\t  getID: function (node) {\n\t    return injection.Mount.getID(node);\n\t  },\n\t\n\t  injection: injection\n\t};\n\t\n\tmodule.exports = EventPluginUtils;\n\n/***/ },\n/* 108 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule FallbackCompositionState\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar PooledClass = __webpack_require__(12);\n\t\n\tvar assign = __webpack_require__(2);\n\tvar getTextContentAccessor = __webpack_require__(83);\n\t\n\t/**\n\t * This helper class stores information about text content of a target node,\n\t * allowing comparison of content before and after a given event.\n\t *\n\t * Identify the node where selection currently begins, then observe\n\t * both its text content and its current position in the DOM. Since the\n\t * browser may natively replace the target node during composition, we can\n\t * use its position to find its replacement.\n\t *\n\t * @param {DOMEventTarget} root\n\t */\n\tfunction FallbackCompositionState(root) {\n\t  this._root = root;\n\t  this._startText = this.getText();\n\t  this._fallbackText = null;\n\t}\n\t\n\tassign(FallbackCompositionState.prototype, {\n\t  destructor: function () {\n\t    this._root = null;\n\t    this._startText = null;\n\t    this._fallbackText = null;\n\t  },\n\t\n\t  /**\n\t   * Get current text of input.\n\t   *\n\t   * @return {string}\n\t   */\n\t  getText: function () {\n\t    if ('value' in this._root) {\n\t      return this._root.value;\n\t    }\n\t    return this._root[getTextContentAccessor()];\n\t  },\n\t\n\t  /**\n\t   * Determine the differing substring between the initially stored\n\t   * text content and the current content.\n\t   *\n\t   * @return {string}\n\t   */\n\t  getData: function () {\n\t    if (this._fallbackText) {\n\t      return this._fallbackText;\n\t    }\n\t\n\t    var start;\n\t    var startValue = this._startText;\n\t    var startLength = startValue.length;\n\t    var end;\n\t    var endValue = this.getText();\n\t    var endLength = endValue.length;\n\t\n\t    for (start = 0; start < startLength; start++) {\n\t      if (startValue[start] !== endValue[start]) {\n\t        break;\n\t      }\n\t    }\n\t\n\t    var minEnd = startLength - start;\n\t    for (end = 1; end <= minEnd; end++) {\n\t      if (startValue[startLength - end] !== endValue[endLength - end]) {\n\t        break;\n\t      }\n\t    }\n\t\n\t    var sliceTail = end > 1 ? 1 - end : undefined;\n\t    this._fallbackText = endValue.slice(start, sliceTail);\n\t    return this._fallbackText;\n\t  }\n\t});\n\t\n\tPooledClass.addPoolingTo(FallbackCompositionState);\n\t\n\tmodule.exports = FallbackCompositionState;\n\n/***/ },\n/* 109 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule HTMLDOMPropertyConfig\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMProperty = __webpack_require__(17);\n\tvar ExecutionEnvironment = __webpack_require__(4);\n\t\n\tvar MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;\n\tvar MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;\n\tvar HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;\n\tvar HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;\n\tvar HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;\n\tvar HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;\n\tvar HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;\n\t\n\tvar hasSVG;\n\tif (ExecutionEnvironment.canUseDOM) {\n\t  var implementation = document.implementation;\n\t  hasSVG = implementation && implementation.hasFeature && implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1');\n\t}\n\t\n\tvar HTMLDOMPropertyConfig = {\n\t  isCustomAttribute: RegExp.prototype.test.bind(/^(data|aria)-[a-z_][a-z\\d_.\\-]*$/),\n\t  Properties: {\n\t    /**\n\t     * Standard Properties\n\t     */\n\t    accept: null,\n\t    acceptCharset: null,\n\t    accessKey: null,\n\t    action: null,\n\t    allowFullScreen: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n\t    allowTransparency: MUST_USE_ATTRIBUTE,\n\t    alt: null,\n\t    async: HAS_BOOLEAN_VALUE,\n\t    autoComplete: null,\n\t    // autoFocus is polyfilled/normalized by AutoFocusUtils\n\t    // autoFocus: HAS_BOOLEAN_VALUE,\n\t    autoPlay: HAS_BOOLEAN_VALUE,\n\t    capture: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n\t    cellPadding: null,\n\t    cellSpacing: null,\n\t    charSet: MUST_USE_ATTRIBUTE,\n\t    challenge: MUST_USE_ATTRIBUTE,\n\t    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t    classID: MUST_USE_ATTRIBUTE,\n\t    // To set className on SVG elements, it's necessary to use .setAttribute;\n\t    // this works on HTML elements too in all browsers except IE8. Conveniently,\n\t    // IE8 doesn't support SVG and so we can simply use the attribute in\n\t    // browsers that support SVG and the property in browsers that don't,\n\t    // regardless of whether the element is HTML or SVG.\n\t    className: hasSVG ? MUST_USE_ATTRIBUTE : MUST_USE_PROPERTY,\n\t    cols: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,\n\t    colSpan: null,\n\t    content: null,\n\t    contentEditable: null,\n\t    contextMenu: MUST_USE_ATTRIBUTE,\n\t    controls: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t    coords: null,\n\t    crossOrigin: null,\n\t    data: null, // For `<object />` acts as `src`.\n\t    dateTime: MUST_USE_ATTRIBUTE,\n\t    'default': HAS_BOOLEAN_VALUE,\n\t    defer: HAS_BOOLEAN_VALUE,\n\t    dir: null,\n\t    disabled: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n\t    download: HAS_OVERLOADED_BOOLEAN_VALUE,\n\t    draggable: null,\n\t    encType: null,\n\t    form: MUST_USE_ATTRIBUTE,\n\t    formAction: MUST_USE_ATTRIBUTE,\n\t    formEncType: MUST_USE_ATTRIBUTE,\n\t    formMethod: MUST_USE_ATTRIBUTE,\n\t    formNoValidate: HAS_BOOLEAN_VALUE,\n\t    formTarget: MUST_USE_ATTRIBUTE,\n\t    frameBorder: MUST_USE_ATTRIBUTE,\n\t    headers: null,\n\t    height: MUST_USE_ATTRIBUTE,\n\t    hidden: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n\t    high: null,\n\t    href: null,\n\t    hrefLang: null,\n\t    htmlFor: null,\n\t    httpEquiv: null,\n\t    icon: null,\n\t    id: MUST_USE_PROPERTY,\n\t    inputMode: MUST_USE_ATTRIBUTE,\n\t    integrity: null,\n\t    is: MUST_USE_ATTRIBUTE,\n\t    keyParams: MUST_USE_ATTRIBUTE,\n\t    keyType: MUST_USE_ATTRIBUTE,\n\t    kind: null,\n\t    label: null,\n\t    lang: null,\n\t    list: MUST_USE_ATTRIBUTE,\n\t    loop: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t    low: null,\n\t    manifest: MUST_USE_ATTRIBUTE,\n\t    marginHeight: null,\n\t    marginWidth: null,\n\t    max: null,\n\t    maxLength: MUST_USE_ATTRIBUTE,\n\t    media: MUST_USE_ATTRIBUTE,\n\t    mediaGroup: null,\n\t    method: null,\n\t    min: null,\n\t    minLength: MUST_USE_ATTRIBUTE,\n\t    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t    name: null,\n\t    nonce: MUST_USE_ATTRIBUTE,\n\t    noValidate: HAS_BOOLEAN_VALUE,\n\t    open: HAS_BOOLEAN_VALUE,\n\t    optimum: null,\n\t    pattern: null,\n\t    placeholder: null,\n\t    poster: null,\n\t    preload: null,\n\t    radioGroup: null,\n\t    readOnly: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t    rel: null,\n\t    required: HAS_BOOLEAN_VALUE,\n\t    reversed: HAS_BOOLEAN_VALUE,\n\t    role: MUST_USE_ATTRIBUTE,\n\t    rows: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,\n\t    rowSpan: null,\n\t    sandbox: null,\n\t    scope: null,\n\t    scoped: HAS_BOOLEAN_VALUE,\n\t    scrolling: null,\n\t    seamless: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n\t    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t    shape: null,\n\t    size: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,\n\t    sizes: MUST_USE_ATTRIBUTE,\n\t    span: HAS_POSITIVE_NUMERIC_VALUE,\n\t    spellCheck: null,\n\t    src: null,\n\t    srcDoc: MUST_USE_PROPERTY,\n\t    srcLang: null,\n\t    srcSet: MUST_USE_ATTRIBUTE,\n\t    start: HAS_NUMERIC_VALUE,\n\t    step: null,\n\t    style: null,\n\t    summary: null,\n\t    tabIndex: null,\n\t    target: null,\n\t    title: null,\n\t    type: null,\n\t    useMap: null,\n\t    value: MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,\n\t    width: MUST_USE_ATTRIBUTE,\n\t    wmode: MUST_USE_ATTRIBUTE,\n\t    wrap: null,\n\t\n\t    /**\n\t     * RDFa Properties\n\t     */\n\t    about: MUST_USE_ATTRIBUTE,\n\t    datatype: MUST_USE_ATTRIBUTE,\n\t    inlist: MUST_USE_ATTRIBUTE,\n\t    prefix: MUST_USE_ATTRIBUTE,\n\t    // property is also supported for OpenGraph in meta tags.\n\t    property: MUST_USE_ATTRIBUTE,\n\t    resource: MUST_USE_ATTRIBUTE,\n\t    'typeof': MUST_USE_ATTRIBUTE,\n\t    vocab: MUST_USE_ATTRIBUTE,\n\t\n\t    /**\n\t     * Non-standard Properties\n\t     */\n\t    // autoCapitalize and autoCorrect are supported in Mobile Safari for\n\t    // keyboard hints.\n\t    autoCapitalize: MUST_USE_ATTRIBUTE,\n\t    autoCorrect: MUST_USE_ATTRIBUTE,\n\t    // autoSave allows WebKit/Blink to persist values of input fields on page reloads\n\t    autoSave: null,\n\t    // color is for Safari mask-icon link\n\t    color: null,\n\t    // itemProp, itemScope, itemType are for\n\t    // Microdata support. See http://schema.org/docs/gs.html\n\t    itemProp: MUST_USE_ATTRIBUTE,\n\t    itemScope: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n\t    itemType: MUST_USE_ATTRIBUTE,\n\t    // itemID and itemRef are for Microdata support as well but\n\t    // only specified in the the WHATWG spec document. See\n\t    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api\n\t    itemID: MUST_USE_ATTRIBUTE,\n\t    itemRef: MUST_USE_ATTRIBUTE,\n\t    // results show looking glass icon and recent searches on input\n\t    // search fields in WebKit/Blink\n\t    results: null,\n\t    // IE-only attribute that specifies security restrictions on an iframe\n\t    // as an alternative to the sandbox attribute on IE<10\n\t    security: MUST_USE_ATTRIBUTE,\n\t    // IE-only attribute that controls focus behavior\n\t    unselectable: MUST_USE_ATTRIBUTE\n\t  },\n\t  DOMAttributeNames: {\n\t    acceptCharset: 'accept-charset',\n\t    className: 'class',\n\t    htmlFor: 'for',\n\t    httpEquiv: 'http-equiv'\n\t  },\n\t  DOMPropertyNames: {\n\t    autoComplete: 'autocomplete',\n\t    autoFocus: 'autofocus',\n\t    autoPlay: 'autoplay',\n\t    autoSave: 'autosave',\n\t    // `encoding` is equivalent to `enctype`, IE8 lacks an `enctype` setter.\n\t    // http://www.w3.org/TR/html5/forms.html#dom-fs-encoding\n\t    encType: 'encoding',\n\t    hrefLang: 'hreflang',\n\t    radioGroup: 'radiogroup',\n\t    spellCheck: 'spellcheck',\n\t    srcDoc: 'srcdoc',\n\t    srcSet: 'srcset'\n\t  }\n\t};\n\t\n\tmodule.exports = HTMLDOMPropertyConfig;\n\n/***/ },\n/* 110 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule React\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactDOM = __webpack_require__(63);\n\tvar ReactDOMServer = __webpack_require__(120);\n\tvar ReactIsomorphic = __webpack_require__(125);\n\t\n\tvar assign = __webpack_require__(2);\n\tvar deprecated = __webpack_require__(147);\n\t\n\t// `version` will be added here by ReactIsomorphic.\n\tvar React = {};\n\t\n\tassign(React, ReactIsomorphic);\n\t\n\tassign(React, {\n\t  // ReactDOM\n\t  findDOMNode: deprecated('findDOMNode', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.findDOMNode),\n\t  render: deprecated('render', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.render),\n\t  unmountComponentAtNode: deprecated('unmountComponentAtNode', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.unmountComponentAtNode),\n\t\n\t  // ReactDOMServer\n\t  renderToString: deprecated('renderToString', 'ReactDOMServer', 'react-dom/server', ReactDOMServer, ReactDOMServer.renderToString),\n\t  renderToStaticMarkup: deprecated('renderToStaticMarkup', 'ReactDOMServer', 'react-dom/server', ReactDOMServer, ReactDOMServer.renderToStaticMarkup)\n\t});\n\t\n\tReact.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOM;\n\tReact.__SECRET_DOM_SERVER_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOMServer;\n\t\n\tmodule.exports = React;\n\n/***/ },\n/* 111 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactBrowserComponentMixin\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactInstanceMap = __webpack_require__(21);\n\t\n\tvar findDOMNode = __webpack_require__(43);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar didWarnKey = '_getDOMNodeDidWarn';\n\t\n\tvar ReactBrowserComponentMixin = {\n\t  /**\n\t   * Returns the DOM node rendered by this component.\n\t   *\n\t   * @return {DOMElement} The root node of this component.\n\t   * @final\n\t   * @protected\n\t   */\n\t  getDOMNode: function () {\n\t     false ? warning(this.constructor[didWarnKey], '%s.getDOMNode(...) is deprecated. Please use ' + 'ReactDOM.findDOMNode(instance) instead.', ReactInstanceMap.get(this).getName() || this.tagName || 'Unknown') : undefined;\n\t    this.constructor[didWarnKey] = true;\n\t    return findDOMNode(this);\n\t  }\n\t};\n\t\n\tmodule.exports = ReactBrowserComponentMixin;\n\n/***/ },\n/* 112 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactChildReconciler\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactReconciler = __webpack_require__(15);\n\t\n\tvar instantiateReactComponent = __webpack_require__(48);\n\tvar shouldUpdateReactComponent = __webpack_require__(51);\n\tvar traverseAllChildren = __webpack_require__(52);\n\tvar warning = __webpack_require__(3);\n\t\n\tfunction instantiateChild(childInstances, child, name) {\n\t  // We found a component instance.\n\t  var keyUnique = childInstances[name] === undefined;\n\t  if (false) {\n\t    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : undefined;\n\t  }\n\t  if (child != null && keyUnique) {\n\t    childInstances[name] = instantiateReactComponent(child, null);\n\t  }\n\t}\n\t\n\t/**\n\t * ReactChildReconciler provides helpers for initializing or updating a set of\n\t * children. Its output is suitable for passing it onto ReactMultiChild which\n\t * does diffed reordering and insertion.\n\t */\n\tvar ReactChildReconciler = {\n\t  /**\n\t   * Generates a \"mount image\" for each of the supplied children. In the case\n\t   * of `ReactDOMComponent`, a mount image is a string of markup.\n\t   *\n\t   * @param {?object} nestedChildNodes Nested child maps.\n\t   * @return {?object} A set of child instances.\n\t   * @internal\n\t   */\n\t  instantiateChildren: function (nestedChildNodes, transaction, context) {\n\t    if (nestedChildNodes == null) {\n\t      return null;\n\t    }\n\t    var childInstances = {};\n\t    traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);\n\t    return childInstances;\n\t  },\n\t\n\t  /**\n\t   * Updates the rendered children and returns a new set of children.\n\t   *\n\t   * @param {?object} prevChildren Previously initialized set of children.\n\t   * @param {?object} nextChildren Flat child element maps.\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @param {object} context\n\t   * @return {?object} A new set of child instances.\n\t   * @internal\n\t   */\n\t  updateChildren: function (prevChildren, nextChildren, transaction, context) {\n\t    // We currently don't have a way to track moves here but if we use iterators\n\t    // instead of for..in we can zip the iterators and check if an item has\n\t    // moved.\n\t    // TODO: If nothing has changed, return the prevChildren object so that we\n\t    // can quickly bailout if nothing has changed.\n\t    if (!nextChildren && !prevChildren) {\n\t      return null;\n\t    }\n\t    var name;\n\t    for (name in nextChildren) {\n\t      if (!nextChildren.hasOwnProperty(name)) {\n\t        continue;\n\t      }\n\t      var prevChild = prevChildren && prevChildren[name];\n\t      var prevElement = prevChild && prevChild._currentElement;\n\t      var nextElement = nextChildren[name];\n\t      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {\n\t        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);\n\t        nextChildren[name] = prevChild;\n\t      } else {\n\t        if (prevChild) {\n\t          ReactReconciler.unmountComponent(prevChild, name);\n\t        }\n\t        // The child must be instantiated before it's mounted.\n\t        var nextChildInstance = instantiateReactComponent(nextElement, null);\n\t        nextChildren[name] = nextChildInstance;\n\t      }\n\t    }\n\t    // Unmount children that are no longer present.\n\t    for (name in prevChildren) {\n\t      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {\n\t        ReactReconciler.unmountComponent(prevChildren[name]);\n\t      }\n\t    }\n\t    return nextChildren;\n\t  },\n\t\n\t  /**\n\t   * Unmounts all rendered children. This should be used to clean up children\n\t   * when this component is unmounted.\n\t   *\n\t   * @param {?object} renderedChildren Previously initialized set of children.\n\t   * @internal\n\t   */\n\t  unmountChildren: function (renderedChildren) {\n\t    for (var name in renderedChildren) {\n\t      if (renderedChildren.hasOwnProperty(name)) {\n\t        var renderedChild = renderedChildren[name];\n\t        ReactReconciler.unmountComponent(renderedChild);\n\t      }\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactChildReconciler;\n\n/***/ },\n/* 113 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactCompositeComponent\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactComponentEnvironment = __webpack_require__(39);\n\tvar ReactCurrentOwner = __webpack_require__(11);\n\tvar ReactElement = __webpack_require__(6);\n\tvar ReactInstanceMap = __webpack_require__(21);\n\tvar ReactPerf = __webpack_require__(7);\n\tvar ReactPropTypeLocations = __webpack_require__(27);\n\tvar ReactPropTypeLocationNames = __webpack_require__(26);\n\tvar ReactReconciler = __webpack_require__(15);\n\tvar ReactUpdateQueue = __webpack_require__(41);\n\t\n\tvar assign = __webpack_require__(2);\n\tvar emptyObject = __webpack_require__(23);\n\tvar invariant = __webpack_require__(1);\n\tvar shouldUpdateReactComponent = __webpack_require__(51);\n\tvar warning = __webpack_require__(3);\n\t\n\tfunction getDeclarationErrorAddendum(component) {\n\t  var owner = component._currentElement._owner || null;\n\t  if (owner) {\n\t    var name = owner.getName();\n\t    if (name) {\n\t      return ' Check the render method of `' + name + '`.';\n\t    }\n\t  }\n\t  return '';\n\t}\n\t\n\tfunction StatelessComponent(Component) {}\n\tStatelessComponent.prototype.render = function () {\n\t  var Component = ReactInstanceMap.get(this)._currentElement.type;\n\t  return Component(this.props, this.context, this.updater);\n\t};\n\t\n\t/**\n\t * ------------------ The Life-Cycle of a Composite Component ------------------\n\t *\n\t * - constructor: Initialization of state. The instance is now retained.\n\t *   - componentWillMount\n\t *   - render\n\t *   - [children's constructors]\n\t *     - [children's componentWillMount and render]\n\t *     - [children's componentDidMount]\n\t *     - componentDidMount\n\t *\n\t *       Update Phases:\n\t *       - componentWillReceiveProps (only called if parent updated)\n\t *       - shouldComponentUpdate\n\t *         - componentWillUpdate\n\t *           - render\n\t *           - [children's constructors or receive props phases]\n\t *         - componentDidUpdate\n\t *\n\t *     - componentWillUnmount\n\t *     - [children's componentWillUnmount]\n\t *   - [children destroyed]\n\t * - (destroyed): The instance is now blank, released by React and ready for GC.\n\t *\n\t * -----------------------------------------------------------------------------\n\t */\n\t\n\t/**\n\t * An incrementing ID assigned to each component when it is mounted. This is\n\t * used to enforce the order in which `ReactUpdates` updates dirty components.\n\t *\n\t * @private\n\t */\n\tvar nextMountID = 1;\n\t\n\t/**\n\t * @lends {ReactCompositeComponent.prototype}\n\t */\n\tvar ReactCompositeComponentMixin = {\n\t\n\t  /**\n\t   * Base constructor for all composite component.\n\t   *\n\t   * @param {ReactElement} element\n\t   * @final\n\t   * @internal\n\t   */\n\t  construct: function (element) {\n\t    this._currentElement = element;\n\t    this._rootNodeID = null;\n\t    this._instance = null;\n\t\n\t    // See ReactUpdateQueue\n\t    this._pendingElement = null;\n\t    this._pendingStateQueue = null;\n\t    this._pendingReplaceState = false;\n\t    this._pendingForceUpdate = false;\n\t\n\t    this._renderedComponent = null;\n\t\n\t    this._context = null;\n\t    this._mountOrder = 0;\n\t    this._topLevelWrapper = null;\n\t\n\t    // See ReactUpdates and ReactUpdateQueue.\n\t    this._pendingCallbacks = null;\n\t  },\n\t\n\t  /**\n\t   * Initializes the component, renders markup, and registers event listeners.\n\t   *\n\t   * @param {string} rootID DOM ID of the root node.\n\t   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n\t   * @return {?string} Rendered markup to be inserted into the DOM.\n\t   * @final\n\t   * @internal\n\t   */\n\t  mountComponent: function (rootID, transaction, context) {\n\t    this._context = context;\n\t    this._mountOrder = nextMountID++;\n\t    this._rootNodeID = rootID;\n\t\n\t    var publicProps = this._processProps(this._currentElement.props);\n\t    var publicContext = this._processContext(context);\n\t\n\t    var Component = this._currentElement.type;\n\t\n\t    // Initialize the public class\n\t    var inst;\n\t    var renderedElement;\n\t\n\t    // This is a way to detect if Component is a stateless arrow function\n\t    // component, which is not newable. It might not be 100% reliable but is\n\t    // something we can do until we start detecting that Component extends\n\t    // React.Component. We already assume that typeof Component === 'function'.\n\t    var canInstantiate = ('prototype' in Component);\n\t\n\t    if (canInstantiate) {\n\t      if (false) {\n\t        ReactCurrentOwner.current = this;\n\t        try {\n\t          inst = new Component(publicProps, publicContext, ReactUpdateQueue);\n\t        } finally {\n\t          ReactCurrentOwner.current = null;\n\t        }\n\t      } else {\n\t        inst = new Component(publicProps, publicContext, ReactUpdateQueue);\n\t      }\n\t    }\n\t\n\t    if (!canInstantiate || inst === null || inst === false || ReactElement.isValidElement(inst)) {\n\t      renderedElement = inst;\n\t      inst = new StatelessComponent(Component);\n\t    }\n\t\n\t    if (false) {\n\t      // This will throw later in _renderValidatedComponent, but add an early\n\t      // warning now to help debugging\n\t      if (inst.render == null) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`, returned ' + 'null/false from a stateless component, or tried to render an ' + 'element whose type is a function that isn\\'t a React component.', Component.displayName || Component.name || 'Component') : undefined;\n\t      } else {\n\t        // We support ES6 inheriting from React.Component, the module pattern,\n\t        // and stateless components, but not ES6 classes that don't extend\n\t        process.env.NODE_ENV !== 'production' ? warning(Component.prototype && Component.prototype.isReactComponent || !canInstantiate || !(inst instanceof Component), '%s(...): React component classes must extend React.Component.', Component.displayName || Component.name || 'Component') : undefined;\n\t      }\n\t    }\n\t\n\t    // These should be set up in the constructor, but as a convenience for\n\t    // simpler class abstractions, we set them up after the fact.\n\t    inst.props = publicProps;\n\t    inst.context = publicContext;\n\t    inst.refs = emptyObject;\n\t    inst.updater = ReactUpdateQueue;\n\t\n\t    this._instance = inst;\n\t\n\t    // Store a reference from the instance back to the internal representation\n\t    ReactInstanceMap.set(inst, this);\n\t\n\t    if (false) {\n\t      // Since plain JS classes are defined without any special initialization\n\t      // logic, we can not catch common errors early. Therefore, we have to\n\t      // catch them here, at initialization time, instead.\n\t      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : undefined;\n\t      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : undefined;\n\t      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : undefined;\n\t      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : undefined;\n\t      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : undefined;\n\t      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : undefined;\n\t      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : undefined;\n\t    }\n\t\n\t    var initialState = inst.state;\n\t    if (initialState === undefined) {\n\t      inst.state = initialState = null;\n\t    }\n\t    !(typeof initialState === 'object' && !Array.isArray(initialState)) ?  false ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;\n\t\n\t    this._pendingStateQueue = null;\n\t    this._pendingReplaceState = false;\n\t    this._pendingForceUpdate = false;\n\t\n\t    if (inst.componentWillMount) {\n\t      inst.componentWillMount();\n\t      // When mounting, calls to `setState` by `componentWillMount` will set\n\t      // `this._pendingStateQueue` without triggering a re-render.\n\t      if (this._pendingStateQueue) {\n\t        inst.state = this._processPendingState(inst.props, inst.context);\n\t      }\n\t    }\n\t\n\t    // If not a stateless component, we now render\n\t    if (renderedElement === undefined) {\n\t      renderedElement = this._renderValidatedComponent();\n\t    }\n\t\n\t    this._renderedComponent = this._instantiateReactComponent(renderedElement);\n\t\n\t    var markup = ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, this._processChildContext(context));\n\t    if (inst.componentDidMount) {\n\t      transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);\n\t    }\n\t\n\t    return markup;\n\t  },\n\t\n\t  /**\n\t   * Releases any resources allocated by `mountComponent`.\n\t   *\n\t   * @final\n\t   * @internal\n\t   */\n\t  unmountComponent: function () {\n\t    var inst = this._instance;\n\t\n\t    if (inst.componentWillUnmount) {\n\t      inst.componentWillUnmount();\n\t    }\n\t\n\t    ReactReconciler.unmountComponent(this._renderedComponent);\n\t    this._renderedComponent = null;\n\t    this._instance = null;\n\t\n\t    // Reset pending fields\n\t    // Even if this component is scheduled for another update in ReactUpdates,\n\t    // it would still be ignored because these fields are reset.\n\t    this._pendingStateQueue = null;\n\t    this._pendingReplaceState = false;\n\t    this._pendingForceUpdate = false;\n\t    this._pendingCallbacks = null;\n\t    this._pendingElement = null;\n\t\n\t    // These fields do not really need to be reset since this object is no\n\t    // longer accessible.\n\t    this._context = null;\n\t    this._rootNodeID = null;\n\t    this._topLevelWrapper = null;\n\t\n\t    // Delete the reference from the instance to this internal representation\n\t    // which allow the internals to be properly cleaned up even if the user\n\t    // leaks a reference to the public instance.\n\t    ReactInstanceMap.remove(inst);\n\t\n\t    // Some existing components rely on inst.props even after they've been\n\t    // destroyed (in event handlers).\n\t    // TODO: inst.props = null;\n\t    // TODO: inst.state = null;\n\t    // TODO: inst.context = null;\n\t  },\n\t\n\t  /**\n\t   * Filters the context object to only contain keys specified in\n\t   * `contextTypes`\n\t   *\n\t   * @param {object} context\n\t   * @return {?object}\n\t   * @private\n\t   */\n\t  _maskContext: function (context) {\n\t    var maskedContext = null;\n\t    var Component = this._currentElement.type;\n\t    var contextTypes = Component.contextTypes;\n\t    if (!contextTypes) {\n\t      return emptyObject;\n\t    }\n\t    maskedContext = {};\n\t    for (var contextName in contextTypes) {\n\t      maskedContext[contextName] = context[contextName];\n\t    }\n\t    return maskedContext;\n\t  },\n\t\n\t  /**\n\t   * Filters the context object to only contain keys specified in\n\t   * `contextTypes`, and asserts that they are valid.\n\t   *\n\t   * @param {object} context\n\t   * @return {?object}\n\t   * @private\n\t   */\n\t  _processContext: function (context) {\n\t    var maskedContext = this._maskContext(context);\n\t    if (false) {\n\t      var Component = this._currentElement.type;\n\t      if (Component.contextTypes) {\n\t        this._checkPropTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);\n\t      }\n\t    }\n\t    return maskedContext;\n\t  },\n\t\n\t  /**\n\t   * @param {object} currentContext\n\t   * @return {object}\n\t   * @private\n\t   */\n\t  _processChildContext: function (currentContext) {\n\t    var Component = this._currentElement.type;\n\t    var inst = this._instance;\n\t    var childContext = inst.getChildContext && inst.getChildContext();\n\t    if (childContext) {\n\t      !(typeof Component.childContextTypes === 'object') ?  false ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;\n\t      if (false) {\n\t        this._checkPropTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);\n\t      }\n\t      for (var name in childContext) {\n\t        !(name in Component.childContextTypes) ?  false ? invariant(false, '%s.getChildContext(): key \"%s\" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : invariant(false) : undefined;\n\t      }\n\t      return assign({}, currentContext, childContext);\n\t    }\n\t    return currentContext;\n\t  },\n\t\n\t  /**\n\t   * Processes props by setting default values for unspecified props and\n\t   * asserting that the props are valid. Does not mutate its argument; returns\n\t   * a new props object with defaults merged in.\n\t   *\n\t   * @param {object} newProps\n\t   * @return {object}\n\t   * @private\n\t   */\n\t  _processProps: function (newProps) {\n\t    if (false) {\n\t      var Component = this._currentElement.type;\n\t      if (Component.propTypes) {\n\t        this._checkPropTypes(Component.propTypes, newProps, ReactPropTypeLocations.prop);\n\t      }\n\t    }\n\t    return newProps;\n\t  },\n\t\n\t  /**\n\t   * Assert that the props are valid\n\t   *\n\t   * @param {object} propTypes Map of prop name to a ReactPropType\n\t   * @param {object} props\n\t   * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n\t   * @private\n\t   */\n\t  _checkPropTypes: function (propTypes, props, location) {\n\t    // TODO: Stop validating prop types here and only use the element\n\t    // validation.\n\t    var componentName = this.getName();\n\t    for (var propName in propTypes) {\n\t      if (propTypes.hasOwnProperty(propName)) {\n\t        var error;\n\t        try {\n\t          // This is intentionally an invariant that gets caught. It's the same\n\t          // behavior as without this statement except with a better message.\n\t          !(typeof propTypes[propName] === 'function') ?  false ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually ' + 'from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : undefined;\n\t          error = propTypes[propName](props, propName, componentName, location);\n\t        } catch (ex) {\n\t          error = ex;\n\t        }\n\t        if (error instanceof Error) {\n\t          // We may want to extend this logic for similar errors in\n\t          // top-level render calls, so I'm abstracting it away into\n\t          // a function to minimize refactoring in the future\n\t          var addendum = getDeclarationErrorAddendum(this);\n\t\n\t          if (location === ReactPropTypeLocations.prop) {\n\t            // Preface gives us something to blacklist in warning module\n\t             false ? warning(false, 'Failed Composite propType: %s%s', error.message, addendum) : undefined;\n\t          } else {\n\t             false ? warning(false, 'Failed Context Types: %s%s', error.message, addendum) : undefined;\n\t          }\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  receiveComponent: function (nextElement, transaction, nextContext) {\n\t    var prevElement = this._currentElement;\n\t    var prevContext = this._context;\n\t\n\t    this._pendingElement = null;\n\t\n\t    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);\n\t  },\n\t\n\t  /**\n\t   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`\n\t   * is set, update the component.\n\t   *\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @internal\n\t   */\n\t  performUpdateIfNecessary: function (transaction) {\n\t    if (this._pendingElement != null) {\n\t      ReactReconciler.receiveComponent(this, this._pendingElement || this._currentElement, transaction, this._context);\n\t    }\n\t\n\t    if (this._pendingStateQueue !== null || this._pendingForceUpdate) {\n\t      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Perform an update to a mounted component. The componentWillReceiveProps and\n\t   * shouldComponentUpdate methods are called, then (assuming the update isn't\n\t   * skipped) the remaining update lifecycle methods are called and the DOM\n\t   * representation is updated.\n\t   *\n\t   * By default, this implements React's rendering and reconciliation algorithm.\n\t   * Sophisticated clients may wish to override this.\n\t   *\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @param {ReactElement} prevParentElement\n\t   * @param {ReactElement} nextParentElement\n\t   * @internal\n\t   * @overridable\n\t   */\n\t  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {\n\t    var inst = this._instance;\n\t\n\t    var nextContext = this._context === nextUnmaskedContext ? inst.context : this._processContext(nextUnmaskedContext);\n\t    var nextProps;\n\t\n\t    // Distinguish between a props update versus a simple state update\n\t    if (prevParentElement === nextParentElement) {\n\t      // Skip checking prop types again -- we don't read inst.props to avoid\n\t      // warning for DOM component props in this upgrade\n\t      nextProps = nextParentElement.props;\n\t    } else {\n\t      nextProps = this._processProps(nextParentElement.props);\n\t      // An update here will schedule an update but immediately set\n\t      // _pendingStateQueue which will ensure that any state updates gets\n\t      // immediately reconciled instead of waiting for the next batch.\n\t\n\t      if (inst.componentWillReceiveProps) {\n\t        inst.componentWillReceiveProps(nextProps, nextContext);\n\t      }\n\t    }\n\t\n\t    var nextState = this._processPendingState(nextProps, nextContext);\n\t\n\t    var shouldUpdate = this._pendingForceUpdate || !inst.shouldComponentUpdate || inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n\t\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(typeof shouldUpdate !== 'undefined', '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : undefined;\n\t    }\n\t\n\t    if (shouldUpdate) {\n\t      this._pendingForceUpdate = false;\n\t      // Will set `this.props`, `this.state` and `this.context`.\n\t      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);\n\t    } else {\n\t      // If it's determined that a component should not update, we still want\n\t      // to set props and state but we shortcut the rest of the update.\n\t      this._currentElement = nextParentElement;\n\t      this._context = nextUnmaskedContext;\n\t      inst.props = nextProps;\n\t      inst.state = nextState;\n\t      inst.context = nextContext;\n\t    }\n\t  },\n\t\n\t  _processPendingState: function (props, context) {\n\t    var inst = this._instance;\n\t    var queue = this._pendingStateQueue;\n\t    var replace = this._pendingReplaceState;\n\t    this._pendingReplaceState = false;\n\t    this._pendingStateQueue = null;\n\t\n\t    if (!queue) {\n\t      return inst.state;\n\t    }\n\t\n\t    if (replace && queue.length === 1) {\n\t      return queue[0];\n\t    }\n\t\n\t    var nextState = assign({}, replace ? queue[0] : inst.state);\n\t    for (var i = replace ? 1 : 0; i < queue.length; i++) {\n\t      var partial = queue[i];\n\t      assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);\n\t    }\n\t\n\t    return nextState;\n\t  },\n\t\n\t  /**\n\t   * Merges new props and state, notifies delegate methods of update and\n\t   * performs update.\n\t   *\n\t   * @param {ReactElement} nextElement Next element\n\t   * @param {object} nextProps Next public object to set as properties.\n\t   * @param {?object} nextState Next object to set as state.\n\t   * @param {?object} nextContext Next public object to set as context.\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @param {?object} unmaskedContext\n\t   * @private\n\t   */\n\t  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {\n\t    var inst = this._instance;\n\t\n\t    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);\n\t    var prevProps;\n\t    var prevState;\n\t    var prevContext;\n\t    if (hasComponentDidUpdate) {\n\t      prevProps = inst.props;\n\t      prevState = inst.state;\n\t      prevContext = inst.context;\n\t    }\n\t\n\t    if (inst.componentWillUpdate) {\n\t      inst.componentWillUpdate(nextProps, nextState, nextContext);\n\t    }\n\t\n\t    this._currentElement = nextElement;\n\t    this._context = unmaskedContext;\n\t    inst.props = nextProps;\n\t    inst.state = nextState;\n\t    inst.context = nextContext;\n\t\n\t    this._updateRenderedComponent(transaction, unmaskedContext);\n\t\n\t    if (hasComponentDidUpdate) {\n\t      transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Call the component's `render` method and update the DOM accordingly.\n\t   *\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @internal\n\t   */\n\t  _updateRenderedComponent: function (transaction, context) {\n\t    var prevComponentInstance = this._renderedComponent;\n\t    var prevRenderedElement = prevComponentInstance._currentElement;\n\t    var nextRenderedElement = this._renderValidatedComponent();\n\t    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {\n\t      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));\n\t    } else {\n\t      // These two IDs are actually the same! But nothing should rely on that.\n\t      var thisID = this._rootNodeID;\n\t      var prevComponentID = prevComponentInstance._rootNodeID;\n\t      ReactReconciler.unmountComponent(prevComponentInstance);\n\t\n\t      this._renderedComponent = this._instantiateReactComponent(nextRenderedElement);\n\t      var nextMarkup = ReactReconciler.mountComponent(this._renderedComponent, thisID, transaction, this._processChildContext(context));\n\t      this._replaceNodeWithMarkupByID(prevComponentID, nextMarkup);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * @protected\n\t   */\n\t  _replaceNodeWithMarkupByID: function (prevComponentID, nextMarkup) {\n\t    ReactComponentEnvironment.replaceNodeWithMarkupByID(prevComponentID, nextMarkup);\n\t  },\n\t\n\t  /**\n\t   * @protected\n\t   */\n\t  _renderValidatedComponentWithoutOwnerOrContext: function () {\n\t    var inst = this._instance;\n\t    var renderedComponent = inst.render();\n\t    if (false) {\n\t      // We allow auto-mocks to proceed as if they're returning null.\n\t      if (typeof renderedComponent === 'undefined' && inst.render._isMockFunction) {\n\t        // This is probably bad practice. Consider warning here and\n\t        // deprecating this convenience.\n\t        renderedComponent = null;\n\t      }\n\t    }\n\t\n\t    return renderedComponent;\n\t  },\n\t\n\t  /**\n\t   * @private\n\t   */\n\t  _renderValidatedComponent: function () {\n\t    var renderedComponent;\n\t    ReactCurrentOwner.current = this;\n\t    try {\n\t      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();\n\t    } finally {\n\t      ReactCurrentOwner.current = null;\n\t    }\n\t    !(\n\t    // TODO: An `isValidNode` function would probably be more appropriate\n\t    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ?  false ? invariant(false, '%s.render(): A valid ReactComponent must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;\n\t    return renderedComponent;\n\t  },\n\t\n\t  /**\n\t   * Lazily allocates the refs object and stores `component` as `ref`.\n\t   *\n\t   * @param {string} ref Reference name.\n\t   * @param {component} component Component to store as `ref`.\n\t   * @final\n\t   * @private\n\t   */\n\t  attachRef: function (ref, component) {\n\t    var inst = this.getPublicInstance();\n\t    !(inst != null) ?  false ? invariant(false, 'Stateless function components cannot have refs.') : invariant(false) : undefined;\n\t    var publicComponentInstance = component.getPublicInstance();\n\t    if (false) {\n\t      var componentName = component && component.getName ? component.getName() : 'a component';\n\t      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null, 'Stateless function components cannot be given refs ' + '(See ref \"%s\" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : undefined;\n\t    }\n\t    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;\n\t    refs[ref] = publicComponentInstance;\n\t  },\n\t\n\t  /**\n\t   * Detaches a reference name.\n\t   *\n\t   * @param {string} ref Name to dereference.\n\t   * @final\n\t   * @private\n\t   */\n\t  detachRef: function (ref) {\n\t    var refs = this.getPublicInstance().refs;\n\t    delete refs[ref];\n\t  },\n\t\n\t  /**\n\t   * Get a text description of the component that can be used to identify it\n\t   * in error messages.\n\t   * @return {string} The name or null.\n\t   * @internal\n\t   */\n\t  getName: function () {\n\t    var type = this._currentElement.type;\n\t    var constructor = this._instance && this._instance.constructor;\n\t    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;\n\t  },\n\t\n\t  /**\n\t   * Get the publicly accessible representation of this component - i.e. what\n\t   * is exposed by refs and returned by render. Can be null for stateless\n\t   * components.\n\t   *\n\t   * @return {ReactComponent} the public component instance.\n\t   * @internal\n\t   */\n\t  getPublicInstance: function () {\n\t    var inst = this._instance;\n\t    if (inst instanceof StatelessComponent) {\n\t      return null;\n\t    }\n\t    return inst;\n\t  },\n\t\n\t  // Stub\n\t  _instantiateReactComponent: null\n\t\n\t};\n\t\n\tReactPerf.measureMethods(ReactCompositeComponentMixin, 'ReactCompositeComponent', {\n\t  mountComponent: 'mountComponent',\n\t  updateComponent: 'updateComponent',\n\t  _renderValidatedComponent: '_renderValidatedComponent'\n\t});\n\t\n\tvar ReactCompositeComponent = {\n\t\n\t  Mixin: ReactCompositeComponentMixin\n\t\n\t};\n\t\n\tmodule.exports = ReactCompositeComponent;\n\n/***/ },\n/* 114 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMButton\n\t */\n\t\n\t'use strict';\n\t\n\tvar mouseListenerNames = {\n\t  onClick: true,\n\t  onDoubleClick: true,\n\t  onMouseDown: true,\n\t  onMouseMove: true,\n\t  onMouseUp: true,\n\t\n\t  onClickCapture: true,\n\t  onDoubleClickCapture: true,\n\t  onMouseDownCapture: true,\n\t  onMouseMoveCapture: true,\n\t  onMouseUpCapture: true\n\t};\n\t\n\t/**\n\t * Implements a <button> native component that does not receive mouse events\n\t * when `disabled` is set.\n\t */\n\tvar ReactDOMButton = {\n\t  getNativeProps: function (inst, props, context) {\n\t    if (!props.disabled) {\n\t      return props;\n\t    }\n\t\n\t    // Copy the props, except the mouse listeners\n\t    var nativeProps = {};\n\t    for (var key in props) {\n\t      if (props.hasOwnProperty(key) && !mouseListenerNames[key]) {\n\t        nativeProps[key] = props[key];\n\t      }\n\t    }\n\t\n\t    return nativeProps;\n\t  }\n\t};\n\t\n\tmodule.exports = ReactDOMButton;\n\n/***/ },\n/* 115 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMComponent\n\t * @typechecks static-only\n\t */\n\t\n\t/* global hasOwnProperty:true */\n\t\n\t'use strict';\n\t\n\tvar AutoFocusUtils = __webpack_require__(99);\n\tvar CSSPropertyOperations = __webpack_require__(101);\n\tvar DOMProperty = __webpack_require__(17);\n\tvar DOMPropertyOperations = __webpack_require__(36);\n\tvar EventConstants = __webpack_require__(10);\n\tvar ReactBrowserEventEmitter = __webpack_require__(25);\n\tvar ReactComponentBrowserEnvironment = __webpack_require__(38);\n\tvar ReactDOMButton = __webpack_require__(114);\n\tvar ReactDOMInput = __webpack_require__(117);\n\tvar ReactDOMOption = __webpack_require__(118);\n\tvar ReactDOMSelect = __webpack_require__(65);\n\tvar ReactDOMTextarea = __webpack_require__(121);\n\tvar ReactMount = __webpack_require__(5);\n\tvar ReactMultiChild = __webpack_require__(126);\n\tvar ReactPerf = __webpack_require__(7);\n\tvar ReactUpdateQueue = __webpack_require__(41);\n\t\n\tvar assign = __webpack_require__(2);\n\tvar canDefineProperty = __webpack_require__(30);\n\tvar escapeTextContentForBrowser = __webpack_require__(31);\n\tvar invariant = __webpack_require__(1);\n\tvar isEventSupported = __webpack_require__(49);\n\tvar keyOf = __webpack_require__(13);\n\tvar setInnerHTML = __webpack_require__(32);\n\tvar setTextContent = __webpack_require__(50);\n\tvar shallowEqual = __webpack_require__(90);\n\tvar validateDOMNesting = __webpack_require__(53);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar deleteListener = ReactBrowserEventEmitter.deleteListener;\n\tvar listenTo = ReactBrowserEventEmitter.listenTo;\n\tvar registrationNameModules = ReactBrowserEventEmitter.registrationNameModules;\n\t\n\t// For quickly matching children type, to test if can be treated as content.\n\tvar CONTENT_TYPES = { 'string': true, 'number': true };\n\t\n\tvar CHILDREN = keyOf({ children: null });\n\tvar STYLE = keyOf({ style: null });\n\tvar HTML = keyOf({ __html: null });\n\t\n\tvar ELEMENT_NODE_TYPE = 1;\n\t\n\tfunction getDeclarationErrorAddendum(internalInstance) {\n\t  if (internalInstance) {\n\t    var owner = internalInstance._currentElement._owner || null;\n\t    if (owner) {\n\t      var name = owner.getName();\n\t      if (name) {\n\t        return ' This DOM node was rendered by `' + name + '`.';\n\t      }\n\t    }\n\t  }\n\t  return '';\n\t}\n\t\n\tvar legacyPropsDescriptor;\n\tif (false) {\n\t  legacyPropsDescriptor = {\n\t    props: {\n\t      enumerable: false,\n\t      get: function () {\n\t        var component = this._reactInternalComponent;\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .props of a DOM node; instead, ' + 'recreate the props as `render` did originally or read the DOM ' + 'properties/attributes directly from this node (e.g., ' + 'this.refs.box.className).%s', getDeclarationErrorAddendum(component)) : undefined;\n\t        return component._currentElement.props;\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tfunction legacyGetDOMNode() {\n\t  if (false) {\n\t    var component = this._reactInternalComponent;\n\t    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .getDOMNode() of a DOM node; ' + 'instead, use the node directly.%s', getDeclarationErrorAddendum(component)) : undefined;\n\t  }\n\t  return this;\n\t}\n\t\n\tfunction legacyIsMounted() {\n\t  var component = this._reactInternalComponent;\n\t  if (false) {\n\t    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .isMounted() of a DOM node.%s', getDeclarationErrorAddendum(component)) : undefined;\n\t  }\n\t  return !!component;\n\t}\n\t\n\tfunction legacySetStateEtc() {\n\t  if (false) {\n\t    var component = this._reactInternalComponent;\n\t    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .setState(), .replaceState(), or ' + '.forceUpdate() of a DOM node. This is a no-op.%s', getDeclarationErrorAddendum(component)) : undefined;\n\t  }\n\t}\n\t\n\tfunction legacySetProps(partialProps, callback) {\n\t  var component = this._reactInternalComponent;\n\t  if (false) {\n\t    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .setProps() of a DOM node. ' + 'Instead, call ReactDOM.render again at the top level.%s', getDeclarationErrorAddendum(component)) : undefined;\n\t  }\n\t  if (!component) {\n\t    return;\n\t  }\n\t  ReactUpdateQueue.enqueueSetPropsInternal(component, partialProps);\n\t  if (callback) {\n\t    ReactUpdateQueue.enqueueCallbackInternal(component, callback);\n\t  }\n\t}\n\t\n\tfunction legacyReplaceProps(partialProps, callback) {\n\t  var component = this._reactInternalComponent;\n\t  if (false) {\n\t    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .replaceProps() of a DOM node. ' + 'Instead, call ReactDOM.render again at the top level.%s', getDeclarationErrorAddendum(component)) : undefined;\n\t  }\n\t  if (!component) {\n\t    return;\n\t  }\n\t  ReactUpdateQueue.enqueueReplacePropsInternal(component, partialProps);\n\t  if (callback) {\n\t    ReactUpdateQueue.enqueueCallbackInternal(component, callback);\n\t  }\n\t}\n\t\n\tfunction friendlyStringify(obj) {\n\t  if (typeof obj === 'object') {\n\t    if (Array.isArray(obj)) {\n\t      return '[' + obj.map(friendlyStringify).join(', ') + ']';\n\t    } else {\n\t      var pairs = [];\n\t      for (var key in obj) {\n\t        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n\t          var keyEscaped = /^[a-z$_][\\w$_]*$/i.test(key) ? key : JSON.stringify(key);\n\t          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));\n\t        }\n\t      }\n\t      return '{' + pairs.join(', ') + '}';\n\t    }\n\t  } else if (typeof obj === 'string') {\n\t    return JSON.stringify(obj);\n\t  } else if (typeof obj === 'function') {\n\t    return '[function object]';\n\t  }\n\t  // Differs from JSON.stringify in that undefined becauses undefined and that\n\t  // inf and nan don't become null\n\t  return String(obj);\n\t}\n\t\n\tvar styleMutationWarning = {};\n\t\n\tfunction checkAndWarnForMutatedStyle(style1, style2, component) {\n\t  if (style1 == null || style2 == null) {\n\t    return;\n\t  }\n\t  if (shallowEqual(style1, style2)) {\n\t    return;\n\t  }\n\t\n\t  var componentName = component._tag;\n\t  var owner = component._currentElement._owner;\n\t  var ownerName;\n\t  if (owner) {\n\t    ownerName = owner.getName();\n\t  }\n\t\n\t  var hash = ownerName + '|' + componentName;\n\t\n\t  if (styleMutationWarning.hasOwnProperty(hash)) {\n\t    return;\n\t  }\n\t\n\t  styleMutationWarning[hash] = true;\n\t\n\t   false ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : undefined;\n\t}\n\t\n\t/**\n\t * @param {object} component\n\t * @param {?object} props\n\t */\n\tfunction assertValidProps(component, props) {\n\t  if (!props) {\n\t    return;\n\t  }\n\t  // Note the use of `==` which checks for null or undefined.\n\t  if (false) {\n\t    if (voidElementTags[component._tag]) {\n\t      process.env.NODE_ENV !== 'production' ? warning(props.children == null && props.dangerouslySetInnerHTML == null, '%s is a void element tag and must not have `children` or ' + 'use `props.dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : undefined;\n\t    }\n\t  }\n\t  if (props.dangerouslySetInnerHTML != null) {\n\t    !(props.children == null) ?  false ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : invariant(false) : undefined;\n\t    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ?  false ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' + 'Please visit https://fb.me/react-invariant-dangerously-set-inner-html ' + 'for more information.') : invariant(false) : undefined;\n\t  }\n\t  if (false) {\n\t    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : undefined;\n\t    process.env.NODE_ENV !== 'production' ? warning(!props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : undefined;\n\t  }\n\t  !(props.style == null || typeof props.style === 'object') ?  false ? invariant(false, 'The `style` prop expects a mapping from style properties to values, ' + 'not a string. For example, style={{marginRight: spacing + \\'em\\'}} when ' + 'using JSX.%s', getDeclarationErrorAddendum(component)) : invariant(false) : undefined;\n\t}\n\t\n\tfunction enqueuePutListener(id, registrationName, listener, transaction) {\n\t  if (false) {\n\t    // IE8 has no API for event capturing and the `onScroll` event doesn't\n\t    // bubble.\n\t    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\\'t support the `onScroll` event') : undefined;\n\t  }\n\t  var container = ReactMount.findReactContainerForID(id);\n\t  if (container) {\n\t    var doc = container.nodeType === ELEMENT_NODE_TYPE ? container.ownerDocument : container;\n\t    listenTo(registrationName, doc);\n\t  }\n\t  transaction.getReactMountReady().enqueue(putListener, {\n\t    id: id,\n\t    registrationName: registrationName,\n\t    listener: listener\n\t  });\n\t}\n\t\n\tfunction putListener() {\n\t  var listenerToPut = this;\n\t  ReactBrowserEventEmitter.putListener(listenerToPut.id, listenerToPut.registrationName, listenerToPut.listener);\n\t}\n\t\n\t// There are so many media events, it makes sense to just\n\t// maintain a list rather than create a `trapBubbledEvent` for each\n\tvar mediaEvents = {\n\t  topAbort: 'abort',\n\t  topCanPlay: 'canplay',\n\t  topCanPlayThrough: 'canplaythrough',\n\t  topDurationChange: 'durationchange',\n\t  topEmptied: 'emptied',\n\t  topEncrypted: 'encrypted',\n\t  topEnded: 'ended',\n\t  topError: 'error',\n\t  topLoadedData: 'loadeddata',\n\t  topLoadedMetadata: 'loadedmetadata',\n\t  topLoadStart: 'loadstart',\n\t  topPause: 'pause',\n\t  topPlay: 'play',\n\t  topPlaying: 'playing',\n\t  topProgress: 'progress',\n\t  topRateChange: 'ratechange',\n\t  topSeeked: 'seeked',\n\t  topSeeking: 'seeking',\n\t  topStalled: 'stalled',\n\t  topSuspend: 'suspend',\n\t  topTimeUpdate: 'timeupdate',\n\t  topVolumeChange: 'volumechange',\n\t  topWaiting: 'waiting'\n\t};\n\t\n\tfunction trapBubbledEventsLocal() {\n\t  var inst = this;\n\t  // If a component renders to null or if another component fatals and causes\n\t  // the state of the tree to be corrupted, `node` here can be null.\n\t  !inst._rootNodeID ?  false ? invariant(false, 'Must be mounted to trap events') : invariant(false) : undefined;\n\t  var node = ReactMount.getNode(inst._rootNodeID);\n\t  !node ?  false ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : invariant(false) : undefined;\n\t\n\t  switch (inst._tag) {\n\t    case 'iframe':\n\t      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];\n\t      break;\n\t    case 'video':\n\t    case 'audio':\n\t\n\t      inst._wrapperState.listeners = [];\n\t      // create listener for each media event\n\t      for (var event in mediaEvents) {\n\t        if (mediaEvents.hasOwnProperty(event)) {\n\t          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));\n\t        }\n\t      }\n\t\n\t      break;\n\t    case 'img':\n\t      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];\n\t      break;\n\t    case 'form':\n\t      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];\n\t      break;\n\t  }\n\t}\n\t\n\tfunction mountReadyInputWrapper() {\n\t  ReactDOMInput.mountReadyWrapper(this);\n\t}\n\t\n\tfunction postUpdateSelectWrapper() {\n\t  ReactDOMSelect.postUpdateWrapper(this);\n\t}\n\t\n\t// For HTML, certain tags should omit their close tag. We keep a whitelist for\n\t// those special cased tags.\n\t\n\tvar omittedCloseTags = {\n\t  'area': true,\n\t  'base': true,\n\t  'br': true,\n\t  'col': true,\n\t  'embed': true,\n\t  'hr': true,\n\t  'img': true,\n\t  'input': true,\n\t  'keygen': true,\n\t  'link': true,\n\t  'meta': true,\n\t  'param': true,\n\t  'source': true,\n\t  'track': true,\n\t  'wbr': true\n\t};\n\t\n\t// NOTE: menuitem's close tag should be omitted, but that causes problems.\n\tvar newlineEatingTags = {\n\t  'listing': true,\n\t  'pre': true,\n\t  'textarea': true\n\t};\n\t\n\t// For HTML, certain tags cannot have children. This has the same purpose as\n\t// `omittedCloseTags` except that `menuitem` should still have its closing tag.\n\t\n\tvar voidElementTags = assign({\n\t  'menuitem': true\n\t}, omittedCloseTags);\n\t\n\t// We accept any tag to be rendered but since this gets injected into arbitrary\n\t// HTML, we want to make sure that it's a safe tag.\n\t// http://www.w3.org/TR/REC-xml/#NT-Name\n\t\n\tvar VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\\.\\-\\d]*$/; // Simplified subset\n\tvar validatedTagCache = {};\n\tvar hasOwnProperty = ({}).hasOwnProperty;\n\t\n\tfunction validateDangerousTag(tag) {\n\t  if (!hasOwnProperty.call(validatedTagCache, tag)) {\n\t    !VALID_TAG_REGEX.test(tag) ?  false ? invariant(false, 'Invalid tag: %s', tag) : invariant(false) : undefined;\n\t    validatedTagCache[tag] = true;\n\t  }\n\t}\n\t\n\tfunction processChildContextDev(context, inst) {\n\t  // Pass down our tag name to child components for validation purposes\n\t  context = assign({}, context);\n\t  var info = context[validateDOMNesting.ancestorInfoContextKey];\n\t  context[validateDOMNesting.ancestorInfoContextKey] = validateDOMNesting.updatedAncestorInfo(info, inst._tag, inst);\n\t  return context;\n\t}\n\t\n\tfunction isCustomComponent(tagName, props) {\n\t  return tagName.indexOf('-') >= 0 || props.is != null;\n\t}\n\t\n\t/**\n\t * Creates a new React class that is idempotent and capable of containing other\n\t * React components. It accepts event listeners and DOM properties that are\n\t * valid according to `DOMProperty`.\n\t *\n\t *  - Event listeners: `onClick`, `onMouseDown`, etc.\n\t *  - DOM properties: `className`, `name`, `title`, etc.\n\t *\n\t * The `style` property functions differently from the DOM API. It accepts an\n\t * object mapping of style properties to values.\n\t *\n\t * @constructor ReactDOMComponent\n\t * @extends ReactMultiChild\n\t */\n\tfunction ReactDOMComponent(tag) {\n\t  validateDangerousTag(tag);\n\t  this._tag = tag.toLowerCase();\n\t  this._renderedChildren = null;\n\t  this._previousStyle = null;\n\t  this._previousStyleCopy = null;\n\t  this._rootNodeID = null;\n\t  this._wrapperState = null;\n\t  this._topLevelWrapper = null;\n\t  this._nodeWithLegacyProperties = null;\n\t  if (false) {\n\t    this._unprocessedContextDev = null;\n\t    this._processedContextDev = null;\n\t  }\n\t}\n\t\n\tReactDOMComponent.displayName = 'ReactDOMComponent';\n\t\n\tReactDOMComponent.Mixin = {\n\t\n\t  construct: function (element) {\n\t    this._currentElement = element;\n\t  },\n\t\n\t  /**\n\t   * Generates root tag markup then recurses. This method has side effects and\n\t   * is not idempotent.\n\t   *\n\t   * @internal\n\t   * @param {string} rootID The root DOM ID for this node.\n\t   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n\t   * @param {object} context\n\t   * @return {string} The computed markup.\n\t   */\n\t  mountComponent: function (rootID, transaction, context) {\n\t    this._rootNodeID = rootID;\n\t\n\t    var props = this._currentElement.props;\n\t\n\t    switch (this._tag) {\n\t      case 'iframe':\n\t      case 'img':\n\t      case 'form':\n\t      case 'video':\n\t      case 'audio':\n\t        this._wrapperState = {\n\t          listeners: null\n\t        };\n\t        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n\t        break;\n\t      case 'button':\n\t        props = ReactDOMButton.getNativeProps(this, props, context);\n\t        break;\n\t      case 'input':\n\t        ReactDOMInput.mountWrapper(this, props, context);\n\t        props = ReactDOMInput.getNativeProps(this, props, context);\n\t        break;\n\t      case 'option':\n\t        ReactDOMOption.mountWrapper(this, props, context);\n\t        props = ReactDOMOption.getNativeProps(this, props, context);\n\t        break;\n\t      case 'select':\n\t        ReactDOMSelect.mountWrapper(this, props, context);\n\t        props = ReactDOMSelect.getNativeProps(this, props, context);\n\t        context = ReactDOMSelect.processChildContext(this, props, context);\n\t        break;\n\t      case 'textarea':\n\t        ReactDOMTextarea.mountWrapper(this, props, context);\n\t        props = ReactDOMTextarea.getNativeProps(this, props, context);\n\t        break;\n\t    }\n\t\n\t    assertValidProps(this, props);\n\t    if (false) {\n\t      if (context[validateDOMNesting.ancestorInfoContextKey]) {\n\t        validateDOMNesting(this._tag, this, context[validateDOMNesting.ancestorInfoContextKey]);\n\t      }\n\t    }\n\t\n\t    if (false) {\n\t      this._unprocessedContextDev = context;\n\t      this._processedContextDev = processChildContextDev(context, this);\n\t      context = this._processedContextDev;\n\t    }\n\t\n\t    var mountImage;\n\t    if (transaction.useCreateElement) {\n\t      var ownerDocument = context[ReactMount.ownerDocumentContextKey];\n\t      var el = ownerDocument.createElement(this._currentElement.type);\n\t      DOMPropertyOperations.setAttributeForID(el, this._rootNodeID);\n\t      // Populate node cache\n\t      ReactMount.getID(el);\n\t      this._updateDOMProperties({}, props, transaction, el);\n\t      this._createInitialChildren(transaction, props, context, el);\n\t      mountImage = el;\n\t    } else {\n\t      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);\n\t      var tagContent = this._createContentMarkup(transaction, props, context);\n\t      if (!tagContent && omittedCloseTags[this._tag]) {\n\t        mountImage = tagOpen + '/>';\n\t      } else {\n\t        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';\n\t      }\n\t    }\n\t\n\t    switch (this._tag) {\n\t      case 'input':\n\t        transaction.getReactMountReady().enqueue(mountReadyInputWrapper, this);\n\t      // falls through\n\t      case 'button':\n\t      case 'select':\n\t      case 'textarea':\n\t        if (props.autoFocus) {\n\t          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n\t        }\n\t        break;\n\t    }\n\t\n\t    return mountImage;\n\t  },\n\t\n\t  /**\n\t   * Creates markup for the open tag and all attributes.\n\t   *\n\t   * This method has side effects because events get registered.\n\t   *\n\t   * Iterating over object properties is faster than iterating over arrays.\n\t   * @see http://jsperf.com/obj-vs-arr-iteration\n\t   *\n\t   * @private\n\t   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n\t   * @param {object} props\n\t   * @return {string} Markup of opening tag.\n\t   */\n\t  _createOpenTagMarkupAndPutListeners: function (transaction, props) {\n\t    var ret = '<' + this._currentElement.type;\n\t\n\t    for (var propKey in props) {\n\t      if (!props.hasOwnProperty(propKey)) {\n\t        continue;\n\t      }\n\t      var propValue = props[propKey];\n\t      if (propValue == null) {\n\t        continue;\n\t      }\n\t      if (registrationNameModules.hasOwnProperty(propKey)) {\n\t        if (propValue) {\n\t          enqueuePutListener(this._rootNodeID, propKey, propValue, transaction);\n\t        }\n\t      } else {\n\t        if (propKey === STYLE) {\n\t          if (propValue) {\n\t            if (false) {\n\t              // See `_updateDOMProperties`. style block\n\t              this._previousStyle = propValue;\n\t            }\n\t            propValue = this._previousStyleCopy = assign({}, props.style);\n\t          }\n\t          propValue = CSSPropertyOperations.createMarkupForStyles(propValue);\n\t        }\n\t        var markup = null;\n\t        if (this._tag != null && isCustomComponent(this._tag, props)) {\n\t          if (propKey !== CHILDREN) {\n\t            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);\n\t          }\n\t        } else {\n\t          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);\n\t        }\n\t        if (markup) {\n\t          ret += ' ' + markup;\n\t        }\n\t      }\n\t    }\n\t\n\t    // For static pages, no need to put React ID and checksum. Saves lots of\n\t    // bytes.\n\t    if (transaction.renderToStaticMarkup) {\n\t      return ret;\n\t    }\n\t\n\t    var markupForID = DOMPropertyOperations.createMarkupForID(this._rootNodeID);\n\t    return ret + ' ' + markupForID;\n\t  },\n\t\n\t  /**\n\t   * Creates markup for the content between the tags.\n\t   *\n\t   * @private\n\t   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n\t   * @param {object} props\n\t   * @param {object} context\n\t   * @return {string} Content markup.\n\t   */\n\t  _createContentMarkup: function (transaction, props, context) {\n\t    var ret = '';\n\t\n\t    // Intentional use of != to avoid catching zero/false.\n\t    var innerHTML = props.dangerouslySetInnerHTML;\n\t    if (innerHTML != null) {\n\t      if (innerHTML.__html != null) {\n\t        ret = innerHTML.__html;\n\t      }\n\t    } else {\n\t      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;\n\t      var childrenToUse = contentToUse != null ? null : props.children;\n\t      if (contentToUse != null) {\n\t        // TODO: Validate that text is allowed as a child of this node\n\t        ret = escapeTextContentForBrowser(contentToUse);\n\t      } else if (childrenToUse != null) {\n\t        var mountImages = this.mountChildren(childrenToUse, transaction, context);\n\t        ret = mountImages.join('');\n\t      }\n\t    }\n\t    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\\n') {\n\t      // text/html ignores the first character in these tags if it's a newline\n\t      // Prefer to break application/xml over text/html (for now) by adding\n\t      // a newline specifically to get eaten by the parser. (Alternately for\n\t      // textareas, replacing \"^\\n\" with \"\\r\\n\" doesn't get eaten, and the first\n\t      // \\r is normalized out by HTMLTextAreaElement#value.)\n\t      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>\n\t      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>\n\t      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>\n\t      // See: Parsing of \"textarea\" \"listing\" and \"pre\" elements\n\t      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>\n\t      return '\\n' + ret;\n\t    } else {\n\t      return ret;\n\t    }\n\t  },\n\t\n\t  _createInitialChildren: function (transaction, props, context, el) {\n\t    // Intentional use of != to avoid catching zero/false.\n\t    var innerHTML = props.dangerouslySetInnerHTML;\n\t    if (innerHTML != null) {\n\t      if (innerHTML.__html != null) {\n\t        setInnerHTML(el, innerHTML.__html);\n\t      }\n\t    } else {\n\t      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;\n\t      var childrenToUse = contentToUse != null ? null : props.children;\n\t      if (contentToUse != null) {\n\t        // TODO: Validate that text is allowed as a child of this node\n\t        setTextContent(el, contentToUse);\n\t      } else if (childrenToUse != null) {\n\t        var mountImages = this.mountChildren(childrenToUse, transaction, context);\n\t        for (var i = 0; i < mountImages.length; i++) {\n\t          el.appendChild(mountImages[i]);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Receives a next element and updates the component.\n\t   *\n\t   * @internal\n\t   * @param {ReactElement} nextElement\n\t   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n\t   * @param {object} context\n\t   */\n\t  receiveComponent: function (nextElement, transaction, context) {\n\t    var prevElement = this._currentElement;\n\t    this._currentElement = nextElement;\n\t    this.updateComponent(transaction, prevElement, nextElement, context);\n\t  },\n\t\n\t  /**\n\t   * Updates a native DOM component after it has already been allocated and\n\t   * attached to the DOM. Reconciles the root DOM node, then recurses.\n\t   *\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @param {ReactElement} prevElement\n\t   * @param {ReactElement} nextElement\n\t   * @internal\n\t   * @overridable\n\t   */\n\t  updateComponent: function (transaction, prevElement, nextElement, context) {\n\t    var lastProps = prevElement.props;\n\t    var nextProps = this._currentElement.props;\n\t\n\t    switch (this._tag) {\n\t      case 'button':\n\t        lastProps = ReactDOMButton.getNativeProps(this, lastProps);\n\t        nextProps = ReactDOMButton.getNativeProps(this, nextProps);\n\t        break;\n\t      case 'input':\n\t        ReactDOMInput.updateWrapper(this);\n\t        lastProps = ReactDOMInput.getNativeProps(this, lastProps);\n\t        nextProps = ReactDOMInput.getNativeProps(this, nextProps);\n\t        break;\n\t      case 'option':\n\t        lastProps = ReactDOMOption.getNativeProps(this, lastProps);\n\t        nextProps = ReactDOMOption.getNativeProps(this, nextProps);\n\t        break;\n\t      case 'select':\n\t        lastProps = ReactDOMSelect.getNativeProps(this, lastProps);\n\t        nextProps = ReactDOMSelect.getNativeProps(this, nextProps);\n\t        break;\n\t      case 'textarea':\n\t        ReactDOMTextarea.updateWrapper(this);\n\t        lastProps = ReactDOMTextarea.getNativeProps(this, lastProps);\n\t        nextProps = ReactDOMTextarea.getNativeProps(this, nextProps);\n\t        break;\n\t    }\n\t\n\t    if (false) {\n\t      // If the context is reference-equal to the old one, pass down the same\n\t      // processed object so the update bailout in ReactReconciler behaves\n\t      // correctly (and identically in dev and prod). See #5005.\n\t      if (this._unprocessedContextDev !== context) {\n\t        this._unprocessedContextDev = context;\n\t        this._processedContextDev = processChildContextDev(context, this);\n\t      }\n\t      context = this._processedContextDev;\n\t    }\n\t\n\t    assertValidProps(this, nextProps);\n\t    this._updateDOMProperties(lastProps, nextProps, transaction, null);\n\t    this._updateDOMChildren(lastProps, nextProps, transaction, context);\n\t\n\t    if (!canDefineProperty && this._nodeWithLegacyProperties) {\n\t      this._nodeWithLegacyProperties.props = nextProps;\n\t    }\n\t\n\t    if (this._tag === 'select') {\n\t      // <select> value update needs to occur after <option> children\n\t      // reconciliation\n\t      transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Reconciles the properties by detecting differences in property values and\n\t   * updating the DOM as necessary. This function is probably the single most\n\t   * critical path for performance optimization.\n\t   *\n\t   * TODO: Benchmark whether checking for changed values in memory actually\n\t   *       improves performance (especially statically positioned elements).\n\t   * TODO: Benchmark the effects of putting this at the top since 99% of props\n\t   *       do not change for a given reconciliation.\n\t   * TODO: Benchmark areas that can be improved with caching.\n\t   *\n\t   * @private\n\t   * @param {object} lastProps\n\t   * @param {object} nextProps\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @param {?DOMElement} node\n\t   */\n\t  _updateDOMProperties: function (lastProps, nextProps, transaction, node) {\n\t    var propKey;\n\t    var styleName;\n\t    var styleUpdates;\n\t    for (propKey in lastProps) {\n\t      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey)) {\n\t        continue;\n\t      }\n\t      if (propKey === STYLE) {\n\t        var lastStyle = this._previousStyleCopy;\n\t        for (styleName in lastStyle) {\n\t          if (lastStyle.hasOwnProperty(styleName)) {\n\t            styleUpdates = styleUpdates || {};\n\t            styleUpdates[styleName] = '';\n\t          }\n\t        }\n\t        this._previousStyleCopy = null;\n\t      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n\t        if (lastProps[propKey]) {\n\t          // Only call deleteListener if there was a listener previously or\n\t          // else willDeleteListener gets called when there wasn't actually a\n\t          // listener (e.g., onClick={null})\n\t          deleteListener(this._rootNodeID, propKey);\n\t        }\n\t      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {\n\t        if (!node) {\n\t          node = ReactMount.getNode(this._rootNodeID);\n\t        }\n\t        DOMPropertyOperations.deleteValueForProperty(node, propKey);\n\t      }\n\t    }\n\t    for (propKey in nextProps) {\n\t      var nextProp = nextProps[propKey];\n\t      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps[propKey];\n\t      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp) {\n\t        continue;\n\t      }\n\t      if (propKey === STYLE) {\n\t        if (nextProp) {\n\t          if (false) {\n\t            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);\n\t            this._previousStyle = nextProp;\n\t          }\n\t          nextProp = this._previousStyleCopy = assign({}, nextProp);\n\t        } else {\n\t          this._previousStyleCopy = null;\n\t        }\n\t        if (lastProp) {\n\t          // Unset styles on `lastProp` but not on `nextProp`.\n\t          for (styleName in lastProp) {\n\t            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {\n\t              styleUpdates = styleUpdates || {};\n\t              styleUpdates[styleName] = '';\n\t            }\n\t          }\n\t          // Update styles that changed since `lastProp`.\n\t          for (styleName in nextProp) {\n\t            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {\n\t              styleUpdates = styleUpdates || {};\n\t              styleUpdates[styleName] = nextProp[styleName];\n\t            }\n\t          }\n\t        } else {\n\t          // Relies on `updateStylesByID` not mutating `styleUpdates`.\n\t          styleUpdates = nextProp;\n\t        }\n\t      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n\t        if (nextProp) {\n\t          enqueuePutListener(this._rootNodeID, propKey, nextProp, transaction);\n\t        } else if (lastProp) {\n\t          deleteListener(this._rootNodeID, propKey);\n\t        }\n\t      } else if (isCustomComponent(this._tag, nextProps)) {\n\t        if (!node) {\n\t          node = ReactMount.getNode(this._rootNodeID);\n\t        }\n\t        if (propKey === CHILDREN) {\n\t          nextProp = null;\n\t        }\n\t        DOMPropertyOperations.setValueForAttribute(node, propKey, nextProp);\n\t      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {\n\t        if (!node) {\n\t          node = ReactMount.getNode(this._rootNodeID);\n\t        }\n\t        // If we're updating to null or undefined, we should remove the property\n\t        // from the DOM node instead of inadvertantly setting to a string. This\n\t        // brings us in line with the same behavior we have on initial render.\n\t        if (nextProp != null) {\n\t          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);\n\t        } else {\n\t          DOMPropertyOperations.deleteValueForProperty(node, propKey);\n\t        }\n\t      }\n\t    }\n\t    if (styleUpdates) {\n\t      if (!node) {\n\t        node = ReactMount.getNode(this._rootNodeID);\n\t      }\n\t      CSSPropertyOperations.setValueForStyles(node, styleUpdates);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Reconciles the children with the various properties that affect the\n\t   * children content.\n\t   *\n\t   * @param {object} lastProps\n\t   * @param {object} nextProps\n\t   * @param {ReactReconcileTransaction} transaction\n\t   * @param {object} context\n\t   */\n\t  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {\n\t    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;\n\t    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;\n\t\n\t    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;\n\t    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;\n\t\n\t    // Note the use of `!=` which checks for null or undefined.\n\t    var lastChildren = lastContent != null ? null : lastProps.children;\n\t    var nextChildren = nextContent != null ? null : nextProps.children;\n\t\n\t    // If we're switching from children to content/html or vice versa, remove\n\t    // the old content\n\t    var lastHasContentOrHtml = lastContent != null || lastHtml != null;\n\t    var nextHasContentOrHtml = nextContent != null || nextHtml != null;\n\t    if (lastChildren != null && nextChildren == null) {\n\t      this.updateChildren(null, transaction, context);\n\t    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {\n\t      this.updateTextContent('');\n\t    }\n\t\n\t    if (nextContent != null) {\n\t      if (lastContent !== nextContent) {\n\t        this.updateTextContent('' + nextContent);\n\t      }\n\t    } else if (nextHtml != null) {\n\t      if (lastHtml !== nextHtml) {\n\t        this.updateMarkup('' + nextHtml);\n\t      }\n\t    } else if (nextChildren != null) {\n\t      this.updateChildren(nextChildren, transaction, context);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Destroys all event registrations for this instance. Does not remove from\n\t   * the DOM. That must be done by the parent.\n\t   *\n\t   * @internal\n\t   */\n\t  unmountComponent: function () {\n\t    switch (this._tag) {\n\t      case 'iframe':\n\t      case 'img':\n\t      case 'form':\n\t      case 'video':\n\t      case 'audio':\n\t        var listeners = this._wrapperState.listeners;\n\t        if (listeners) {\n\t          for (var i = 0; i < listeners.length; i++) {\n\t            listeners[i].remove();\n\t          }\n\t        }\n\t        break;\n\t      case 'input':\n\t        ReactDOMInput.unmountWrapper(this);\n\t        break;\n\t      case 'html':\n\t      case 'head':\n\t      case 'body':\n\t        /**\n\t         * Components like <html> <head> and <body> can't be removed or added\n\t         * easily in a cross-browser way, however it's valuable to be able to\n\t         * take advantage of React's reconciliation for styling and <title>\n\t         * management. So we just document it and throw in dangerous cases.\n\t         */\n\t         true ?  false ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is ' + 'impossible to unmount some top-level components (eg <html>, ' + '<head>, and <body>) reliably and efficiently. To fix this, have a ' + 'single top-level component that never unmounts render these ' + 'elements.', this._tag) : invariant(false) : undefined;\n\t        break;\n\t    }\n\t\n\t    this.unmountChildren();\n\t    ReactBrowserEventEmitter.deleteAllListeners(this._rootNodeID);\n\t    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);\n\t    this._rootNodeID = null;\n\t    this._wrapperState = null;\n\t    if (this._nodeWithLegacyProperties) {\n\t      var node = this._nodeWithLegacyProperties;\n\t      node._reactInternalComponent = null;\n\t      this._nodeWithLegacyProperties = null;\n\t    }\n\t  },\n\t\n\t  getPublicInstance: function () {\n\t    if (!this._nodeWithLegacyProperties) {\n\t      var node = ReactMount.getNode(this._rootNodeID);\n\t\n\t      node._reactInternalComponent = this;\n\t      node.getDOMNode = legacyGetDOMNode;\n\t      node.isMounted = legacyIsMounted;\n\t      node.setState = legacySetStateEtc;\n\t      node.replaceState = legacySetStateEtc;\n\t      node.forceUpdate = legacySetStateEtc;\n\t      node.setProps = legacySetProps;\n\t      node.replaceProps = legacyReplaceProps;\n\t\n\t      if (false) {\n\t        if (canDefineProperty) {\n\t          Object.defineProperties(node, legacyPropsDescriptor);\n\t        } else {\n\t          // updateComponent will update this property on subsequent renders\n\t          node.props = this._currentElement.props;\n\t        }\n\t      } else {\n\t        // updateComponent will update this property on subsequent renders\n\t        node.props = this._currentElement.props;\n\t      }\n\t\n\t      this._nodeWithLegacyProperties = node;\n\t    }\n\t    return this._nodeWithLegacyProperties;\n\t  }\n\t\n\t};\n\t\n\tReactPerf.measureMethods(ReactDOMComponent, 'ReactDOMComponent', {\n\t  mountComponent: 'mountComponent',\n\t  updateComponent: 'updateComponent'\n\t});\n\t\n\tassign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);\n\t\n\tmodule.exports = ReactDOMComponent;\n\n/***/ },\n/* 116 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMFactories\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactElement = __webpack_require__(6);\n\tvar ReactElementValidator = __webpack_require__(69);\n\t\n\tvar mapObject = __webpack_require__(163);\n\t\n\t/**\n\t * Create a factory that creates HTML tag elements.\n\t *\n\t * @param {string} tag Tag name (e.g. `div`).\n\t * @private\n\t */\n\tfunction createDOMFactory(tag) {\n\t  if (false) {\n\t    return ReactElementValidator.createFactory(tag);\n\t  }\n\t  return ReactElement.createFactory(tag);\n\t}\n\t\n\t/**\n\t * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.\n\t * This is also accessible via `React.DOM`.\n\t *\n\t * @public\n\t */\n\tvar ReactDOMFactories = mapObject({\n\t  a: 'a',\n\t  abbr: 'abbr',\n\t  address: 'address',\n\t  area: 'area',\n\t  article: 'article',\n\t  aside: 'aside',\n\t  audio: 'audio',\n\t  b: 'b',\n\t  base: 'base',\n\t  bdi: 'bdi',\n\t  bdo: 'bdo',\n\t  big: 'big',\n\t  blockquote: 'blockquote',\n\t  body: 'body',\n\t  br: 'br',\n\t  button: 'button',\n\t  canvas: 'canvas',\n\t  caption: 'caption',\n\t  cite: 'cite',\n\t  code: 'code',\n\t  col: 'col',\n\t  colgroup: 'colgroup',\n\t  data: 'data',\n\t  datalist: 'datalist',\n\t  dd: 'dd',\n\t  del: 'del',\n\t  details: 'details',\n\t  dfn: 'dfn',\n\t  dialog: 'dialog',\n\t  div: 'div',\n\t  dl: 'dl',\n\t  dt: 'dt',\n\t  em: 'em',\n\t  embed: 'embed',\n\t  fieldset: 'fieldset',\n\t  figcaption: 'figcaption',\n\t  figure: 'figure',\n\t  footer: 'footer',\n\t  form: 'form',\n\t  h1: 'h1',\n\t  h2: 'h2',\n\t  h3: 'h3',\n\t  h4: 'h4',\n\t  h5: 'h5',\n\t  h6: 'h6',\n\t  head: 'head',\n\t  header: 'header',\n\t  hgroup: 'hgroup',\n\t  hr: 'hr',\n\t  html: 'html',\n\t  i: 'i',\n\t  iframe: 'iframe',\n\t  img: 'img',\n\t  input: 'input',\n\t  ins: 'ins',\n\t  kbd: 'kbd',\n\t  keygen: 'keygen',\n\t  label: 'label',\n\t  legend: 'legend',\n\t  li: 'li',\n\t  link: 'link',\n\t  main: 'main',\n\t  map: 'map',\n\t  mark: 'mark',\n\t  menu: 'menu',\n\t  menuitem: 'menuitem',\n\t  meta: 'meta',\n\t  meter: 'meter',\n\t  nav: 'nav',\n\t  noscript: 'noscript',\n\t  object: 'object',\n\t  ol: 'ol',\n\t  optgroup: 'optgroup',\n\t  option: 'option',\n\t  output: 'output',\n\t  p: 'p',\n\t  param: 'param',\n\t  picture: 'picture',\n\t  pre: 'pre',\n\t  progress: 'progress',\n\t  q: 'q',\n\t  rp: 'rp',\n\t  rt: 'rt',\n\t  ruby: 'ruby',\n\t  s: 's',\n\t  samp: 'samp',\n\t  script: 'script',\n\t  section: 'section',\n\t  select: 'select',\n\t  small: 'small',\n\t  source: 'source',\n\t  span: 'span',\n\t  strong: 'strong',\n\t  style: 'style',\n\t  sub: 'sub',\n\t  summary: 'summary',\n\t  sup: 'sup',\n\t  table: 'table',\n\t  tbody: 'tbody',\n\t  td: 'td',\n\t  textarea: 'textarea',\n\t  tfoot: 'tfoot',\n\t  th: 'th',\n\t  thead: 'thead',\n\t  time: 'time',\n\t  title: 'title',\n\t  tr: 'tr',\n\t  track: 'track',\n\t  u: 'u',\n\t  ul: 'ul',\n\t  'var': 'var',\n\t  video: 'video',\n\t  wbr: 'wbr',\n\t\n\t  // SVG\n\t  circle: 'circle',\n\t  clipPath: 'clipPath',\n\t  defs: 'defs',\n\t  ellipse: 'ellipse',\n\t  g: 'g',\n\t  image: 'image',\n\t  line: 'line',\n\t  linearGradient: 'linearGradient',\n\t  mask: 'mask',\n\t  path: 'path',\n\t  pattern: 'pattern',\n\t  polygon: 'polygon',\n\t  polyline: 'polyline',\n\t  radialGradient: 'radialGradient',\n\t  rect: 'rect',\n\t  stop: 'stop',\n\t  svg: 'svg',\n\t  text: 'text',\n\t  tspan: 'tspan'\n\t\n\t}, createDOMFactory);\n\t\n\tmodule.exports = ReactDOMFactories;\n\n/***/ },\n/* 117 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMInput\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactDOMIDOperations = __webpack_require__(40);\n\tvar LinkedValueUtils = __webpack_require__(37);\n\tvar ReactMount = __webpack_require__(5);\n\tvar ReactUpdates = __webpack_require__(8);\n\t\n\tvar assign = __webpack_require__(2);\n\tvar invariant = __webpack_require__(1);\n\t\n\tvar instancesByReactID = {};\n\t\n\tfunction forceUpdateIfMounted() {\n\t  if (this._rootNodeID) {\n\t    // DOM component is still mounted; update\n\t    ReactDOMInput.updateWrapper(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Implements an <input> native component that allows setting these optional\n\t * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.\n\t *\n\t * If `checked` or `value` are not supplied (or null/undefined), user actions\n\t * that affect the checked state or value will trigger updates to the element.\n\t *\n\t * If they are supplied (and not null/undefined), the rendered element will not\n\t * trigger updates to the element. Instead, the props must change in order for\n\t * the rendered element to be updated.\n\t *\n\t * The rendered element will be initialized as unchecked (or `defaultChecked`)\n\t * with an empty value (or `defaultValue`).\n\t *\n\t * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html\n\t */\n\tvar ReactDOMInput = {\n\t  getNativeProps: function (inst, props, context) {\n\t    var value = LinkedValueUtils.getValue(props);\n\t    var checked = LinkedValueUtils.getChecked(props);\n\t\n\t    var nativeProps = assign({}, props, {\n\t      defaultChecked: undefined,\n\t      defaultValue: undefined,\n\t      value: value != null ? value : inst._wrapperState.initialValue,\n\t      checked: checked != null ? checked : inst._wrapperState.initialChecked,\n\t      onChange: inst._wrapperState.onChange\n\t    });\n\t\n\t    return nativeProps;\n\t  },\n\t\n\t  mountWrapper: function (inst, props) {\n\t    if (false) {\n\t      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);\n\t    }\n\t\n\t    var defaultValue = props.defaultValue;\n\t    inst._wrapperState = {\n\t      initialChecked: props.defaultChecked || false,\n\t      initialValue: defaultValue != null ? defaultValue : null,\n\t      onChange: _handleChange.bind(inst)\n\t    };\n\t  },\n\t\n\t  mountReadyWrapper: function (inst) {\n\t    // Can't be in mountWrapper or else server rendering leaks.\n\t    instancesByReactID[inst._rootNodeID] = inst;\n\t  },\n\t\n\t  unmountWrapper: function (inst) {\n\t    delete instancesByReactID[inst._rootNodeID];\n\t  },\n\t\n\t  updateWrapper: function (inst) {\n\t    var props = inst._currentElement.props;\n\t\n\t    // TODO: Shouldn't this be getChecked(props)?\n\t    var checked = props.checked;\n\t    if (checked != null) {\n\t      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'checked', checked || false);\n\t    }\n\t\n\t    var value = LinkedValueUtils.getValue(props);\n\t    if (value != null) {\n\t      // Cast `value` to a string to ensure the value is set correctly. While\n\t      // browsers typically do this as necessary, jsdom doesn't.\n\t      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'value', '' + value);\n\t    }\n\t  }\n\t};\n\t\n\tfunction _handleChange(event) {\n\t  var props = this._currentElement.props;\n\t\n\t  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\t\n\t  // Here we use asap to wait until all updates have propagated, which\n\t  // is important when using controlled components within layers:\n\t  // https://github.com/facebook/react/issues/1698\n\t  ReactUpdates.asap(forceUpdateIfMounted, this);\n\t\n\t  var name = props.name;\n\t  if (props.type === 'radio' && name != null) {\n\t    var rootNode = ReactMount.getNode(this._rootNodeID);\n\t    var queryRoot = rootNode;\n\t\n\t    while (queryRoot.parentNode) {\n\t      queryRoot = queryRoot.parentNode;\n\t    }\n\t\n\t    // If `rootNode.form` was non-null, then we could try `form.elements`,\n\t    // but that sometimes behaves strangely in IE8. We could also try using\n\t    // `form.getElementsByName`, but that will only return direct children\n\t    // and won't include inputs that use the HTML5 `form=` attribute. Since\n\t    // the input might not even be in a form, let's just use the global\n\t    // `querySelectorAll` to ensure we don't miss anything.\n\t    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type=\"radio\"]');\n\t\n\t    for (var i = 0; i < group.length; i++) {\n\t      var otherNode = group[i];\n\t      if (otherNode === rootNode || otherNode.form !== rootNode.form) {\n\t        continue;\n\t      }\n\t      // This will throw if radio buttons rendered by different copies of React\n\t      // and the same name are rendered into the same form (same as #1939).\n\t      // That's probably okay; we don't support it just as we don't support\n\t      // mixing React with non-React.\n\t      var otherID = ReactMount.getID(otherNode);\n\t      !otherID ?  false ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the ' + 'same `name` is not supported.') : invariant(false) : undefined;\n\t      var otherInstance = instancesByReactID[otherID];\n\t      !otherInstance ?  false ? invariant(false, 'ReactDOMInput: Unknown radio button ID %s.', otherID) : invariant(false) : undefined;\n\t      // If this is a controlled radio button group, forcing the input that\n\t      // was previously checked to update will cause it to be come re-checked\n\t      // as appropriate.\n\t      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);\n\t    }\n\t  }\n\t\n\t  return returnValue;\n\t}\n\t\n\tmodule.exports = ReactDOMInput;\n\n/***/ },\n/* 118 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMOption\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactChildren = __webpack_require__(60);\n\tvar ReactDOMSelect = __webpack_require__(65);\n\t\n\tvar assign = __webpack_require__(2);\n\tvar warning = __webpack_require__(3);\n\t\n\tvar valueContextKey = ReactDOMSelect.valueContextKey;\n\t\n\t/**\n\t * Implements an <option> native component that warns when `selected` is set.\n\t */\n\tvar ReactDOMOption = {\n\t  mountWrapper: function (inst, props, context) {\n\t    // TODO (yungsters): Remove support for `selected` in <option>.\n\t    if (false) {\n\t      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : undefined;\n\t    }\n\t\n\t    // Look up whether this option is 'selected' via context\n\t    var selectValue = context[valueContextKey];\n\t\n\t    // If context key is null (e.g., no specified value or after initial mount)\n\t    // or missing (e.g., for <datalist>), we don't change props.selected\n\t    var selected = null;\n\t    if (selectValue != null) {\n\t      selected = false;\n\t      if (Array.isArray(selectValue)) {\n\t        // multiple\n\t        for (var i = 0; i < selectValue.length; i++) {\n\t          if ('' + selectValue[i] === '' + props.value) {\n\t            selected = true;\n\t            break;\n\t          }\n\t        }\n\t      } else {\n\t        selected = '' + selectValue === '' + props.value;\n\t      }\n\t    }\n\t\n\t    inst._wrapperState = { selected: selected };\n\t  },\n\t\n\t  getNativeProps: function (inst, props, context) {\n\t    var nativeProps = assign({ selected: undefined, children: undefined }, props);\n\t\n\t    // Read state only from initial mount because <select> updates value\n\t    // manually; we need the initial state only for server rendering\n\t    if (inst._wrapperState.selected != null) {\n\t      nativeProps.selected = inst._wrapperState.selected;\n\t    }\n\t\n\t    var content = '';\n\t\n\t    // Flatten children and warn if they aren't strings or numbers;\n\t    // invalid types are ignored.\n\t    ReactChildren.forEach(props.children, function (child) {\n\t      if (child == null) {\n\t        return;\n\t      }\n\t      if (typeof child === 'string' || typeof child === 'number') {\n\t        content += child;\n\t      } else {\n\t         false ? warning(false, 'Only strings and numbers are supported as <option> children.') : undefined;\n\t      }\n\t    });\n\t\n\t    if (content) {\n\t      nativeProps.children = content;\n\t    }\n\t\n\t    return nativeProps;\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactDOMOption;\n\n/***/ },\n/* 119 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMSelection\n\t */\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(4);\n\t\n\tvar getNodeForCharacterOffset = __webpack_require__(150);\n\tvar getTextContentAccessor = __webpack_require__(83);\n\t\n\t/**\n\t * While `isCollapsed` is available on the Selection object and `collapsed`\n\t * is available on the Range object, IE11 sometimes gets them wrong.\n\t * If the anchor/focus nodes and offsets are the same, the range is collapsed.\n\t */\n\tfunction isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {\n\t  return anchorNode === focusNode && anchorOffset === focusOffset;\n\t}\n\t\n\t/**\n\t * Get the appropriate anchor and focus node/offset pairs for IE.\n\t *\n\t * The catch here is that IE's selection API doesn't provide information\n\t * about whether the selection is forward or backward, so we have to\n\t * behave as though it's always forward.\n\t *\n\t * IE text differs from modern selection in that it behaves as though\n\t * block elements end with a new line. This means character offsets will\n\t * differ between the two APIs.\n\t *\n\t * @param {DOMElement} node\n\t * @return {object}\n\t */\n\tfunction getIEOffsets(node) {\n\t  var selection = document.selection;\n\t  var selectedRange = selection.createRange();\n\t  var selectedLength = selectedRange.text.length;\n\t\n\t  // Duplicate selection so we can move range without breaking user selection.\n\t  var fromStart = selectedRange.duplicate();\n\t  fromStart.moveToElementText(node);\n\t  fromStart.setEndPoint('EndToStart', selectedRange);\n\t\n\t  var startOffset = fromStart.text.length;\n\t  var endOffset = startOffset + selectedLength;\n\t\n\t  return {\n\t    start: startOffset,\n\t    end: endOffset\n\t  };\n\t}\n\t\n\t/**\n\t * @param {DOMElement} node\n\t * @return {?object}\n\t */\n\tfunction getModernOffsets(node) {\n\t  var selection = window.getSelection && window.getSelection();\n\t\n\t  if (!selection || selection.rangeCount === 0) {\n\t    return null;\n\t  }\n\t\n\t  var anchorNode = selection.anchorNode;\n\t  var anchorOffset = selection.anchorOffset;\n\t  var focusNode = selection.focusNode;\n\t  var focusOffset = selection.focusOffset;\n\t\n\t  var currentRange = selection.getRangeAt(0);\n\t\n\t  // In Firefox, range.startContainer and range.endContainer can be \"anonymous\n\t  // divs\", e.g. the up/down buttons on an <input type=\"number\">. Anonymous\n\t  // divs do not seem to expose properties, triggering a \"Permission denied\n\t  // error\" if any of its properties are accessed. The only seemingly possible\n\t  // way to avoid erroring is to access a property that typically works for\n\t  // non-anonymous divs and catch any error that may otherwise arise. See\n\t  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n\t  try {\n\t    /* eslint-disable no-unused-expressions */\n\t    currentRange.startContainer.nodeType;\n\t    currentRange.endContainer.nodeType;\n\t    /* eslint-enable no-unused-expressions */\n\t  } catch (e) {\n\t    return null;\n\t  }\n\t\n\t  // If the node and offset values are the same, the selection is collapsed.\n\t  // `Selection.isCollapsed` is available natively, but IE sometimes gets\n\t  // this value wrong.\n\t  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);\n\t\n\t  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;\n\t\n\t  var tempRange = currentRange.cloneRange();\n\t  tempRange.selectNodeContents(node);\n\t  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);\n\t\n\t  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);\n\t\n\t  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;\n\t  var end = start + rangeLength;\n\t\n\t  // Detect whether the selection is backward.\n\t  var detectionRange = document.createRange();\n\t  detectionRange.setStart(anchorNode, anchorOffset);\n\t  detectionRange.setEnd(focusNode, focusOffset);\n\t  var isBackward = detectionRange.collapsed;\n\t\n\t  return {\n\t    start: isBackward ? end : start,\n\t    end: isBackward ? start : end\n\t  };\n\t}\n\t\n\t/**\n\t * @param {DOMElement|DOMTextNode} node\n\t * @param {object} offsets\n\t */\n\tfunction setIEOffsets(node, offsets) {\n\t  var range = document.selection.createRange().duplicate();\n\t  var start, end;\n\t\n\t  if (typeof offsets.end === 'undefined') {\n\t    start = offsets.start;\n\t    end = start;\n\t  } else if (offsets.start > offsets.end) {\n\t    start = offsets.end;\n\t    end = offsets.start;\n\t  } else {\n\t    start = offsets.start;\n\t    end = offsets.end;\n\t  }\n\t\n\t  range.moveToElementText(node);\n\t  range.moveStart('character', start);\n\t  range.setEndPoint('EndToStart', range);\n\t  range.moveEnd('character', end - start);\n\t  range.select();\n\t}\n\t\n\t/**\n\t * In modern non-IE browsers, we can support both forward and backward\n\t * selections.\n\t *\n\t * Note: IE10+ supports the Selection object, but it does not support\n\t * the `extend` method, which means that even in modern IE, it's not possible\n\t * to programatically create a backward selection. Thus, for all IE\n\t * versions, we use the old IE API to create our selections.\n\t *\n\t * @param {DOMElement|DOMTextNode} node\n\t * @param {object} offsets\n\t */\n\tfunction setModernOffsets(node, offsets) {\n\t  if (!window.getSelection) {\n\t    return;\n\t  }\n\t\n\t  var selection = window.getSelection();\n\t  var length = node[getTextContentAccessor()].length;\n\t  var start = Math.min(offsets.start, length);\n\t  var end = typeof offsets.end === 'undefined' ? start : Math.min(offsets.end, length);\n\t\n\t  // IE 11 uses modern selection, but doesn't support the extend method.\n\t  // Flip backward selections, so we can set with a single range.\n\t  if (!selection.extend && start > end) {\n\t    var temp = end;\n\t    end = start;\n\t    start = temp;\n\t  }\n\t\n\t  var startMarker = getNodeForCharacterOffset(node, start);\n\t  var endMarker = getNodeForCharacterOffset(node, end);\n\t\n\t  if (startMarker && endMarker) {\n\t    var range = document.createRange();\n\t    range.setStart(startMarker.node, startMarker.offset);\n\t    selection.removeAllRanges();\n\t\n\t    if (start > end) {\n\t      selection.addRange(range);\n\t      selection.extend(endMarker.node, endMarker.offset);\n\t    } else {\n\t      range.setEnd(endMarker.node, endMarker.offset);\n\t      selection.addRange(range);\n\t    }\n\t  }\n\t}\n\t\n\tvar useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);\n\t\n\tvar ReactDOMSelection = {\n\t  /**\n\t   * @param {DOMElement} node\n\t   */\n\t  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,\n\t\n\t  /**\n\t   * @param {DOMElement|DOMTextNode} node\n\t   * @param {object} offsets\n\t   */\n\t  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets\n\t};\n\t\n\tmodule.exports = ReactDOMSelection;\n\n/***/ },\n/* 120 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMServer\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactDefaultInjection = __webpack_require__(68);\n\tvar ReactServerRendering = __webpack_require__(131);\n\tvar ReactVersion = __webpack_require__(42);\n\t\n\tReactDefaultInjection.inject();\n\t\n\tvar ReactDOMServer = {\n\t  renderToString: ReactServerRendering.renderToString,\n\t  renderToStaticMarkup: ReactServerRendering.renderToStaticMarkup,\n\t  version: ReactVersion\n\t};\n\t\n\tmodule.exports = ReactDOMServer;\n\n/***/ },\n/* 121 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactDOMTextarea\n\t */\n\t\n\t'use strict';\n\t\n\tvar LinkedValueUtils = __webpack_require__(37);\n\tvar ReactDOMIDOperations = __webpack_require__(40);\n\tvar ReactUpdates = __webpack_require__(8);\n\t\n\tvar assign = __webpack_require__(2);\n\tvar invariant = __webpack_require__(1);\n\tvar warning = __webpack_require__(3);\n\t\n\tfunction forceUpdateIfMounted() {\n\t  if (this._rootNodeID) {\n\t    // DOM component is still mounted; update\n\t    ReactDOMTextarea.updateWrapper(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Implements a <textarea> native component that allows setting `value`, and\n\t * `defaultValue`. This differs from the traditional DOM API because value is\n\t * usually set as PCDATA children.\n\t *\n\t * If `value` is not supplied (or null/undefined), user actions that affect the\n\t * value will trigger updates to the element.\n\t *\n\t * If `value` is supplied (and not null/undefined), the rendered element will\n\t * not trigger updates to the element. Instead, the `value` prop must change in\n\t * order for the rendered element to be updated.\n\t *\n\t * The rendered element will be initialized with an empty value, the prop\n\t * `defaultValue` if specified, or the children content (deprecated).\n\t */\n\tvar ReactDOMTextarea = {\n\t  getNativeProps: function (inst, props, context) {\n\t    !(props.dangerouslySetInnerHTML == null) ?  false ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : invariant(false) : undefined;\n\t\n\t    // Always set children to the same thing. In IE9, the selection range will\n\t    // get reset if `textContent` is mutated.\n\t    var nativeProps = assign({}, props, {\n\t      defaultValue: undefined,\n\t      value: undefined,\n\t      children: inst._wrapperState.initialValue,\n\t      onChange: inst._wrapperState.onChange\n\t    });\n\t\n\t    return nativeProps;\n\t  },\n\t\n\t  mountWrapper: function (inst, props) {\n\t    if (false) {\n\t      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);\n\t    }\n\t\n\t    var defaultValue = props.defaultValue;\n\t    // TODO (yungsters): Remove support for children content in <textarea>.\n\t    var children = props.children;\n\t    if (children != null) {\n\t      if (false) {\n\t        process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : undefined;\n\t      }\n\t      !(defaultValue == null) ?  false ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : invariant(false) : undefined;\n\t      if (Array.isArray(children)) {\n\t        !(children.length <= 1) ?  false ? invariant(false, '<textarea> can only have at most one child.') : invariant(false) : undefined;\n\t        children = children[0];\n\t      }\n\t\n\t      defaultValue = '' + children;\n\t    }\n\t    if (defaultValue == null) {\n\t      defaultValue = '';\n\t    }\n\t    var value = LinkedValueUtils.getValue(props);\n\t\n\t    inst._wrapperState = {\n\t      // We save the initial value so that `ReactDOMComponent` doesn't update\n\t      // `textContent` (unnecessary since we update value).\n\t      // The initial value can be a boolean or object so that's why it's\n\t      // forced to be a string.\n\t      initialValue: '' + (value != null ? value : defaultValue),\n\t      onChange: _handleChange.bind(inst)\n\t    };\n\t  },\n\t\n\t  updateWrapper: function (inst) {\n\t    var props = inst._currentElement.props;\n\t    var value = LinkedValueUtils.getValue(props);\n\t    if (value != null) {\n\t      // Cast `value` to a string to ensure the value is set correctly. While\n\t      // browsers typically do this as necessary, jsdom doesn't.\n\t      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'value', '' + value);\n\t    }\n\t  }\n\t};\n\t\n\tfunction _handleChange(event) {\n\t  var props = this._currentElement.props;\n\t  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\t  ReactUpdates.asap(forceUpdateIfMounted, this);\n\t  return returnValue;\n\t}\n\t\n\tmodule.exports = ReactDOMTextarea;\n\n/***/ },\n/* 122 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactEventEmitterMixin\n\t */\n\t\n\t'use strict';\n\t\n\tvar EventPluginHub = __webpack_require__(19);\n\t\n\tfunction runEventQueueInBatch(events) {\n\t  EventPluginHub.enqueueEvents(events);\n\t  EventPluginHub.processEventQueue(false);\n\t}\n\t\n\tvar ReactEventEmitterMixin = {\n\t\n\t  /**\n\t   * Streams a fired top-level event to `EventPluginHub` where plugins have the\n\t   * opportunity to create `ReactEvent`s to be dispatched.\n\t   *\n\t   * @param {string} topLevelType Record from `EventConstants`.\n\t   * @param {object} topLevelTarget The listening component root node.\n\t   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n\t   * @param {object} nativeEvent Native environment event.\n\t   */\n\t  handleTopLevel: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n\t    var events = EventPluginHub.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);\n\t    runEventQueueInBatch(events);\n\t  }\n\t};\n\t\n\tmodule.exports = ReactEventEmitterMixin;\n\n/***/ },\n/* 123 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactEventListener\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar EventListener = __webpack_require__(85);\n\tvar ExecutionEnvironment = __webpack_require__(4);\n\tvar PooledClass = __webpack_require__(12);\n\tvar ReactInstanceHandles = __webpack_require__(18);\n\tvar ReactMount = __webpack_require__(5);\n\tvar ReactUpdates = __webpack_require__(8);\n\t\n\tvar assign = __webpack_require__(2);\n\tvar getEventTarget = __webpack_require__(46);\n\tvar getUnboundedScrollPosition = __webpack_require__(158);\n\t\n\tvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\t\n\t/**\n\t * Finds the parent React component of `node`.\n\t *\n\t * @param {*} node\n\t * @return {?DOMEventTarget} Parent container, or `null` if the specified node\n\t *                           is not nested.\n\t */\n\tfunction findParent(node) {\n\t  // TODO: It may be a good idea to cache this to prevent unnecessary DOM\n\t  // traversal, but caching is difficult to do correctly without using a\n\t  // mutation observer to listen for all DOM changes.\n\t  var nodeID = ReactMount.getID(node);\n\t  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);\n\t  var container = ReactMount.findReactContainerForID(rootID);\n\t  var parent = ReactMount.getFirstReactDOM(container);\n\t  return parent;\n\t}\n\t\n\t// Used to store ancestor hierarchy in top level callback\n\tfunction TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {\n\t  this.topLevelType = topLevelType;\n\t  this.nativeEvent = nativeEvent;\n\t  this.ancestors = [];\n\t}\n\tassign(TopLevelCallbackBookKeeping.prototype, {\n\t  destructor: function () {\n\t    this.topLevelType = null;\n\t    this.nativeEvent = null;\n\t    this.ancestors.length = 0;\n\t  }\n\t});\n\tPooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);\n\t\n\tfunction handleTopLevelImpl(bookKeeping) {\n\t  // TODO: Re-enable event.path handling\n\t  //\n\t  // if (bookKeeping.nativeEvent.path && bookKeeping.nativeEvent.path.length > 1) {\n\t  //   // New browsers have a path attribute on native events\n\t  //   handleTopLevelWithPath(bookKeeping);\n\t  // } else {\n\t  //   // Legacy browsers don't have a path attribute on native events\n\t  //   handleTopLevelWithoutPath(bookKeeping);\n\t  // }\n\t\n\t  void handleTopLevelWithPath; // temporarily unused\n\t  handleTopLevelWithoutPath(bookKeeping);\n\t}\n\t\n\t// Legacy browsers don't have a path attribute on native events\n\tfunction handleTopLevelWithoutPath(bookKeeping) {\n\t  var topLevelTarget = ReactMount.getFirstReactDOM(getEventTarget(bookKeeping.nativeEvent)) || window;\n\t\n\t  // Loop through the hierarchy, in case there's any nested components.\n\t  // It's important that we build the array of ancestors before calling any\n\t  // event handlers, because event handlers can modify the DOM, leading to\n\t  // inconsistencies with ReactMount's node cache. See #1105.\n\t  var ancestor = topLevelTarget;\n\t  while (ancestor) {\n\t    bookKeeping.ancestors.push(ancestor);\n\t    ancestor = findParent(ancestor);\n\t  }\n\t\n\t  for (var i = 0; i < bookKeeping.ancestors.length; i++) {\n\t    topLevelTarget = bookKeeping.ancestors[i];\n\t    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';\n\t    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, topLevelTarget, topLevelTargetID, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\n\t  }\n\t}\n\t\n\t// New browsers have a path attribute on native events\n\tfunction handleTopLevelWithPath(bookKeeping) {\n\t  var path = bookKeeping.nativeEvent.path;\n\t  var currentNativeTarget = path[0];\n\t  var eventsFired = 0;\n\t  for (var i = 0; i < path.length; i++) {\n\t    var currentPathElement = path[i];\n\t    if (currentPathElement.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE) {\n\t      currentNativeTarget = path[i + 1];\n\t    }\n\t    // TODO: slow\n\t    var reactParent = ReactMount.getFirstReactDOM(currentPathElement);\n\t    if (reactParent === currentPathElement) {\n\t      var currentPathElementID = ReactMount.getID(currentPathElement);\n\t      var newRootID = ReactInstanceHandles.getReactRootIDFromNodeID(currentPathElementID);\n\t      bookKeeping.ancestors.push(currentPathElement);\n\t\n\t      var topLevelTargetID = ReactMount.getID(currentPathElement) || '';\n\t      eventsFired++;\n\t      ReactEventListener._handleTopLevel(bookKeeping.topLevelType, currentPathElement, topLevelTargetID, bookKeeping.nativeEvent, currentNativeTarget);\n\t\n\t      // Jump to the root of this React render tree\n\t      while (currentPathElementID !== newRootID) {\n\t        i++;\n\t        currentPathElement = path[i];\n\t        currentPathElementID = ReactMount.getID(currentPathElement);\n\t      }\n\t    }\n\t  }\n\t  if (eventsFired === 0) {\n\t    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, window, '', bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\n\t  }\n\t}\n\t\n\tfunction scrollValueMonitor(cb) {\n\t  var scrollPosition = getUnboundedScrollPosition(window);\n\t  cb(scrollPosition);\n\t}\n\t\n\tvar ReactEventListener = {\n\t  _enabled: true,\n\t  _handleTopLevel: null,\n\t\n\t  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,\n\t\n\t  setHandleTopLevel: function (handleTopLevel) {\n\t    ReactEventListener._handleTopLevel = handleTopLevel;\n\t  },\n\t\n\t  setEnabled: function (enabled) {\n\t    ReactEventListener._enabled = !!enabled;\n\t  },\n\t\n\t  isEnabled: function () {\n\t    return ReactEventListener._enabled;\n\t  },\n\t\n\t  /**\n\t   * Traps top-level events by using event bubbling.\n\t   *\n\t   * @param {string} topLevelType Record from `EventConstants`.\n\t   * @param {string} handlerBaseName Event name (e.g. \"click\").\n\t   * @param {object} handle Element on which to attach listener.\n\t   * @return {?object} An object with a remove function which will forcefully\n\t   *                  remove the listener.\n\t   * @internal\n\t   */\n\t  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {\n\t    var element = handle;\n\t    if (!element) {\n\t      return null;\n\t    }\n\t    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n\t  },\n\t\n\t  /**\n\t   * Traps a top-level event by using event capturing.\n\t   *\n\t   * @param {string} topLevelType Record from `EventConstants`.\n\t   * @param {string} handlerBaseName Event name (e.g. \"click\").\n\t   * @param {object} handle Element on which to attach listener.\n\t   * @return {?object} An object with a remove function which will forcefully\n\t   *                  remove the listener.\n\t   * @internal\n\t   */\n\t  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {\n\t    var element = handle;\n\t    if (!element) {\n\t      return null;\n\t    }\n\t    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n\t  },\n\t\n\t  monitorScrollValue: function (refresh) {\n\t    var callback = scrollValueMonitor.bind(null, refresh);\n\t    EventListener.listen(window, 'scroll', callback);\n\t  },\n\t\n\t  dispatchEvent: function (topLevelType, nativeEvent) {\n\t    if (!ReactEventListener._enabled) {\n\t      return;\n\t    }\n\t\n\t    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);\n\t    try {\n\t      // Event queue being processed in the same cycle allows\n\t      // `preventDefault`.\n\t      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);\n\t    } finally {\n\t      TopLevelCallbackBookKeeping.release(bookKeeping);\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = ReactEventListener;\n\n/***/ },\n/* 124 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactInjection\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMProperty = __webpack_require__(17);\n\tvar EventPluginHub = __webpack_require__(19);\n\tvar ReactComponentEnvironment = __webpack_require__(39);\n\tvar ReactClass = __webpack_require__(61);\n\tvar ReactEmptyComponent = __webpack_require__(70);\n\tvar ReactBrowserEventEmitter = __webpack_require__(25);\n\tvar ReactNativeComponent = __webpack_require__(76);\n\tvar ReactPerf = __webpack_require__(7);\n\tvar ReactRootIndex = __webpack_require__(79);\n\tvar ReactUpdates = __webpack_require__(8);\n\t\n\tvar ReactInjection = {\n\t  Component: ReactComponentEnvironment.injection,\n\t  Class: ReactClass.injection,\n\t  DOMProperty: DOMProperty.injection,\n\t  EmptyComponent: ReactEmptyComponent.injection,\n\t  EventPluginHub: EventPluginHub.injection,\n\t  EventEmitter: ReactBrowserEventEmitter.injection,\n\t  NativeComponent: ReactNativeComponent.injection,\n\t  Perf: ReactPerf.injection,\n\t  RootIndex: ReactRootIndex.injection,\n\t  Updates: ReactUpdates.injection\n\t};\n\t\n\tmodule.exports = ReactInjection;\n\n/***/ },\n/* 125 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactIsomorphic\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactChildren = __webpack_require__(60);\n\tvar ReactComponent = __webpack_require__(62);\n\tvar ReactClass = __webpack_require__(61);\n\tvar ReactDOMFactories = __webpack_require__(116);\n\tvar ReactElement = __webpack_require__(6);\n\tvar ReactElementValidator = __webpack_require__(69);\n\tvar ReactPropTypes = __webpack_require__(78);\n\tvar ReactVersion = __webpack_require__(42);\n\t\n\tvar assign = __webpack_require__(2);\n\tvar onlyChild = __webpack_require__(151);\n\t\n\tvar createElement = ReactElement.createElement;\n\tvar createFactory = ReactElement.createFactory;\n\tvar cloneElement = ReactElement.cloneElement;\n\t\n\tif (false) {\n\t  createElement = ReactElementValidator.createElement;\n\t  createFactory = ReactElementValidator.createFactory;\n\t  cloneElement = ReactElementValidator.cloneElement;\n\t}\n\t\n\tvar React = {\n\t\n\t  // Modern\n\t\n\t  Children: {\n\t    map: ReactChildren.map,\n\t    forEach: ReactChildren.forEach,\n\t    count: ReactChildren.count,\n\t    toArray: ReactChildren.toArray,\n\t    only: onlyChild\n\t  },\n\t\n\t  Component: ReactComponent,\n\t\n\t  createElement: createElement,\n\t  cloneElement: cloneElement,\n\t  isValidElement: ReactElement.isValidElement,\n\t\n\t  // Classic\n\t\n\t  PropTypes: ReactPropTypes,\n\t  createClass: ReactClass.createClass,\n\t  createFactory: createFactory,\n\t  createMixin: function (mixin) {\n\t    // Currently a noop. Will be used to validate and trace mixins.\n\t    return mixin;\n\t  },\n\t\n\t  // This looks DOM specific but these are actually isomorphic helpers\n\t  // since they are just generating DOM strings.\n\t  DOM: ReactDOMFactories,\n\t\n\t  version: ReactVersion,\n\t\n\t  // Hook for JSX spread, don't use this for anything else.\n\t  __spread: assign\n\t};\n\t\n\tmodule.exports = React;\n\n/***/ },\n/* 126 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactMultiChild\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactComponentEnvironment = __webpack_require__(39);\n\tvar ReactMultiChildUpdateTypes = __webpack_require__(75);\n\t\n\tvar ReactCurrentOwner = __webpack_require__(11);\n\tvar ReactReconciler = __webpack_require__(15);\n\tvar ReactChildReconciler = __webpack_require__(112);\n\t\n\tvar flattenChildren = __webpack_require__(148);\n\t\n\t/**\n\t * Updating children of a component may trigger recursive updates. The depth is\n\t * used to batch recursive updates to render markup more efficiently.\n\t *\n\t * @type {number}\n\t * @private\n\t */\n\tvar updateDepth = 0;\n\t\n\t/**\n\t * Queue of update configuration objects.\n\t *\n\t * Each object has a `type` property that is in `ReactMultiChildUpdateTypes`.\n\t *\n\t * @type {array<object>}\n\t * @private\n\t */\n\tvar updateQueue = [];\n\t\n\t/**\n\t * Queue of markup to be rendered.\n\t *\n\t * @type {array<string>}\n\t * @private\n\t */\n\tvar markupQueue = [];\n\t\n\t/**\n\t * Enqueues markup to be rendered and inserted at a supplied index.\n\t *\n\t * @param {string} parentID ID of the parent component.\n\t * @param {string} markup Markup that renders into an element.\n\t * @param {number} toIndex Destination index.\n\t * @private\n\t */\n\tfunction enqueueInsertMarkup(parentID, markup, toIndex) {\n\t  // NOTE: Null values reduce hidden classes.\n\t  updateQueue.push({\n\t    parentID: parentID,\n\t    parentNode: null,\n\t    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,\n\t    markupIndex: markupQueue.push(markup) - 1,\n\t    content: null,\n\t    fromIndex: null,\n\t    toIndex: toIndex\n\t  });\n\t}\n\t\n\t/**\n\t * Enqueues moving an existing element to another index.\n\t *\n\t * @param {string} parentID ID of the parent component.\n\t * @param {number} fromIndex Source index of the existing element.\n\t * @param {number} toIndex Destination index of the element.\n\t * @private\n\t */\n\tfunction enqueueMove(parentID, fromIndex, toIndex) {\n\t  // NOTE: Null values reduce hidden classes.\n\t  updateQueue.push({\n\t    parentID: parentID,\n\t    parentNode: null,\n\t    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,\n\t    markupIndex: null,\n\t    content: null,\n\t    fromIndex: fromIndex,\n\t    toIndex: toIndex\n\t  });\n\t}\n\t\n\t/**\n\t * Enqueues removing an element at an index.\n\t *\n\t * @param {string} parentID ID of the parent component.\n\t * @param {number} fromIndex Index of the element to remove.\n\t * @private\n\t */\n\tfunction enqueueRemove(parentID, fromIndex) {\n\t  // NOTE: Null values reduce hidden classes.\n\t  updateQueue.push({\n\t    parentID: parentID,\n\t    parentNode: null,\n\t    type: ReactMultiChildUpdateTypes.REMOVE_NODE,\n\t    markupIndex: null,\n\t    content: null,\n\t    fromIndex: fromIndex,\n\t    toIndex: null\n\t  });\n\t}\n\t\n\t/**\n\t * Enqueues setting the markup of a node.\n\t *\n\t * @param {string} parentID ID of the parent component.\n\t * @param {string} markup Markup that renders into an element.\n\t * @private\n\t */\n\tfunction enqueueSetMarkup(parentID, markup) {\n\t  // NOTE: Null values reduce hidden classes.\n\t  updateQueue.push({\n\t    parentID: parentID,\n\t    parentNode: null,\n\t    type: ReactMultiChildUpdateTypes.SET_MARKUP,\n\t    markupIndex: null,\n\t    content: markup,\n\t    fromIndex: null,\n\t    toIndex: null\n\t  });\n\t}\n\t\n\t/**\n\t * Enqueues setting the text content.\n\t *\n\t * @param {string} parentID ID of the parent component.\n\t * @param {string} textContent Text content to set.\n\t * @private\n\t */\n\tfunction enqueueTextContent(parentID, textContent) {\n\t  // NOTE: Null values reduce hidden classes.\n\t  updateQueue.push({\n\t    parentID: parentID,\n\t    parentNode: null,\n\t    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,\n\t    markupIndex: null,\n\t    content: textContent,\n\t    fromIndex: null,\n\t    toIndex: null\n\t  });\n\t}\n\t\n\t/**\n\t * Processes any enqueued updates.\n\t *\n\t * @private\n\t */\n\tfunction processQueue() {\n\t  if (updateQueue.length) {\n\t    ReactComponentEnvironment.processChildrenUpdates(updateQueue, markupQueue);\n\t    clearQueue();\n\t  }\n\t}\n\t\n\t/**\n\t * Clears any enqueued updates.\n\t *\n\t * @private\n\t */\n\tfunction clearQueue() {\n\t  updateQueue.length = 0;\n\t  markupQueue.length = 0;\n\t}\n\t\n\t/**\n\t * ReactMultiChild are capable of reconciling multiple children.\n\t *\n\t * @class ReactMultiChild\n\t * @internal\n\t */\n\tvar ReactMultiChild = {\n\t\n\t  /**\n\t   * Provides common functionality for components that must reconcile multiple\n\t   * children. This is used by `ReactDOMComponent` to mount, update, and\n\t   * unmount child components.\n\t   *\n\t   * @lends {ReactMultiChild.prototype}\n\t   */\n\t  Mixin: {\n\t\n\t    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {\n\t      if (false) {\n\t        if (this._currentElement) {\n\t          try {\n\t            ReactCurrentOwner.current = this._currentElement._owner;\n\t            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);\n\t          } finally {\n\t            ReactCurrentOwner.current = null;\n\t          }\n\t        }\n\t      }\n\t      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);\n\t    },\n\t\n\t    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, transaction, context) {\n\t      var nextChildren;\n\t      if (false) {\n\t        if (this._currentElement) {\n\t          try {\n\t            ReactCurrentOwner.current = this._currentElement._owner;\n\t            nextChildren = flattenChildren(nextNestedChildrenElements);\n\t          } finally {\n\t            ReactCurrentOwner.current = null;\n\t          }\n\t          return ReactChildReconciler.updateChildren(prevChildren, nextChildren, transaction, context);\n\t        }\n\t      }\n\t      nextChildren = flattenChildren(nextNestedChildrenElements);\n\t      return ReactChildReconciler.updateChildren(prevChildren, nextChildren, transaction, context);\n\t    },\n\t\n\t    /**\n\t     * Generates a \"mount image\" for each of the supplied children. In the case\n\t     * of `ReactDOMComponent`, a mount image is a string of markup.\n\t     *\n\t     * @param {?object} nestedChildren Nested child maps.\n\t     * @return {array} An array of mounted representations.\n\t     * @internal\n\t     */\n\t    mountChildren: function (nestedChildren, transaction, context) {\n\t      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);\n\t      this._renderedChildren = children;\n\t      var mountImages = [];\n\t      var index = 0;\n\t      for (var name in children) {\n\t        if (children.hasOwnProperty(name)) {\n\t          var child = children[name];\n\t          // Inlined for performance, see `ReactInstanceHandles.createReactID`.\n\t          var rootID = this._rootNodeID + name;\n\t          var mountImage = ReactReconciler.mountComponent(child, rootID, transaction, context);\n\t          child._mountIndex = index++;\n\t          mountImages.push(mountImage);\n\t        }\n\t      }\n\t      return mountImages;\n\t    },\n\t\n\t    /**\n\t     * Replaces any rendered children with a text content string.\n\t     *\n\t     * @param {string} nextContent String of content.\n\t     * @internal\n\t     */\n\t    updateTextContent: function (nextContent) {\n\t      updateDepth++;\n\t      var errorThrown = true;\n\t      try {\n\t        var prevChildren = this._renderedChildren;\n\t        // Remove any rendered children.\n\t        ReactChildReconciler.unmountChildren(prevChildren);\n\t        // TODO: The setTextContent operation should be enough\n\t        for (var name in prevChildren) {\n\t          if (prevChildren.hasOwnProperty(name)) {\n\t            this._unmountChild(prevChildren[name]);\n\t          }\n\t        }\n\t        // Set new text content.\n\t        this.setTextContent(nextContent);\n\t        errorThrown = false;\n\t      } finally {\n\t        updateDepth--;\n\t        if (!updateDepth) {\n\t          if (errorThrown) {\n\t            clearQueue();\n\t          } else {\n\t            processQueue();\n\t          }\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Replaces any rendered children with a markup string.\n\t     *\n\t     * @param {string} nextMarkup String of markup.\n\t     * @internal\n\t     */\n\t    updateMarkup: function (nextMarkup) {\n\t      updateDepth++;\n\t      var errorThrown = true;\n\t      try {\n\t        var prevChildren = this._renderedChildren;\n\t        // Remove any rendered children.\n\t        ReactChildReconciler.unmountChildren(prevChildren);\n\t        for (var name in prevChildren) {\n\t          if (prevChildren.hasOwnProperty(name)) {\n\t            this._unmountChildByName(prevChildren[name], name);\n\t          }\n\t        }\n\t        this.setMarkup(nextMarkup);\n\t        errorThrown = false;\n\t      } finally {\n\t        updateDepth--;\n\t        if (!updateDepth) {\n\t          if (errorThrown) {\n\t            clearQueue();\n\t          } else {\n\t            processQueue();\n\t          }\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Updates the rendered children with new children.\n\t     *\n\t     * @param {?object} nextNestedChildrenElements Nested child element maps.\n\t     * @param {ReactReconcileTransaction} transaction\n\t     * @internal\n\t     */\n\t    updateChildren: function (nextNestedChildrenElements, transaction, context) {\n\t      updateDepth++;\n\t      var errorThrown = true;\n\t      try {\n\t        this._updateChildren(nextNestedChildrenElements, transaction, context);\n\t        errorThrown = false;\n\t      } finally {\n\t        updateDepth--;\n\t        if (!updateDepth) {\n\t          if (errorThrown) {\n\t            clearQueue();\n\t          } else {\n\t            processQueue();\n\t          }\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Improve performance by isolating this hot code path from the try/catch\n\t     * block in `updateChildren`.\n\t     *\n\t     * @param {?object} nextNestedChildrenElements Nested child element maps.\n\t     * @param {ReactReconcileTransaction} transaction\n\t     * @final\n\t     * @protected\n\t     */\n\t    _updateChildren: function (nextNestedChildrenElements, transaction, context) {\n\t      var prevChildren = this._renderedChildren;\n\t      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, transaction, context);\n\t      this._renderedChildren = nextChildren;\n\t      if (!nextChildren && !prevChildren) {\n\t        return;\n\t      }\n\t      var name;\n\t      // `nextIndex` will increment for each child in `nextChildren`, but\n\t      // `lastIndex` will be the last index visited in `prevChildren`.\n\t      var lastIndex = 0;\n\t      var nextIndex = 0;\n\t      for (name in nextChildren) {\n\t        if (!nextChildren.hasOwnProperty(name)) {\n\t          continue;\n\t        }\n\t        var prevChild = prevChildren && prevChildren[name];\n\t        var nextChild = nextChildren[name];\n\t        if (prevChild === nextChild) {\n\t          this.moveChild(prevChild, nextIndex, lastIndex);\n\t          lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n\t          prevChild._mountIndex = nextIndex;\n\t        } else {\n\t          if (prevChild) {\n\t            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.\n\t            lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n\t            this._unmountChild(prevChild);\n\t          }\n\t          // The child must be instantiated before it's mounted.\n\t          this._mountChildByNameAtIndex(nextChild, name, nextIndex, transaction, context);\n\t        }\n\t        nextIndex++;\n\t      }\n\t      // Remove children that are no longer present.\n\t      for (name in prevChildren) {\n\t        if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {\n\t          this._unmountChild(prevChildren[name]);\n\t        }\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Unmounts all rendered children. This should be used to clean up children\n\t     * when this component is unmounted.\n\t     *\n\t     * @internal\n\t     */\n\t    unmountChildren: function () {\n\t      var renderedChildren = this._renderedChildren;\n\t      ReactChildReconciler.unmountChildren(renderedChildren);\n\t      this._renderedChildren = null;\n\t    },\n\t\n\t    /**\n\t     * Moves a child component to the supplied index.\n\t     *\n\t     * @param {ReactComponent} child Component to move.\n\t     * @param {number} toIndex Destination index of the element.\n\t     * @param {number} lastIndex Last index visited of the siblings of `child`.\n\t     * @protected\n\t     */\n\t    moveChild: function (child, toIndex, lastIndex) {\n\t      // If the index of `child` is less than `lastIndex`, then it needs to\n\t      // be moved. Otherwise, we do not need to move it because a child will be\n\t      // inserted or moved before `child`.\n\t      if (child._mountIndex < lastIndex) {\n\t        enqueueMove(this._rootNodeID, child._mountIndex, toIndex);\n\t      }\n\t    },\n\t\n\t    /**\n\t     * Creates a child component.\n\t     *\n\t     * @param {ReactComponent} child Component to create.\n\t     * @param {string} mountImage Markup to insert.\n\t     * @protected\n\t     */\n\t    createChild: function (child, mountImage) {\n\t      enqueueInsertMarkup(this._rootNodeID, mountImage, child._mountIndex);\n\t    },\n\t\n\t    /**\n\t     * Removes a child component.\n\t     *\n\t     * @param {ReactComponent} child Child to remove.\n\t     * @protected\n\t     */\n\t    removeChild: function (child) {\n\t      enqueueRemove(this._rootNodeID, child._mountIndex);\n\t    },\n\t\n\t    /**\n\t     * Sets this text content string.\n\t     *\n\t     * @param {string} textContent Text content to set.\n\t     * @protected\n\t     */\n\t    setTextContent: function (textContent) {\n\t      enqueueTextContent(this._rootNodeID, textContent);\n\t    },\n\t\n\t    /**\n\t     * Sets this markup string.\n\t     *\n\t     * @param {string} markup Markup to set.\n\t     * @protected\n\t     */\n\t    setMarkup: function (markup) {\n\t      enqueueSetMarkup(this._rootNodeID, markup);\n\t    },\n\t\n\t    /**\n\t     * Mounts a child with the supplied name.\n\t     *\n\t     * NOTE: This is part of `updateChildren` and is here for readability.\n\t     *\n\t     * @param {ReactComponent} child Component to mount.\n\t     * @param {string} name Name of the child.\n\t     * @param {number} index Index at which to insert the child.\n\t     * @param {ReactReconcileTransaction} transaction\n\t     * @private\n\t     */\n\t    _mountChildByNameAtIndex: function (child, name, index, transaction, context) {\n\t      // Inlined for performance, see `ReactInstanceHandles.createReactID`.\n\t      var rootID = this._rootNodeID + name;\n\t      var mountImage = ReactReconciler.mountComponent(child, rootID, transaction, context);\n\t      child._mountIndex = index;\n\t      this.createChild(child, mountImage);\n\t    },\n\t\n\t    /**\n\t     * Unmounts a rendered child.\n\t     *\n\t     * NOTE: This is part of `updateChildren` and is here for readability.\n\t     *\n\t     * @param {ReactComponent} child Component to unmount.\n\t     * @private\n\t     */\n\t    _unmountChild: function (child) {\n\t      this.removeChild(child);\n\t      child._mountIndex = null;\n\t    }\n\t\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactMultiChild;\n\n/***/ },\n/* 127 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactOwner\n\t */\n\t\n\t'use strict';\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * ReactOwners are capable of storing references to owned components.\n\t *\n\t * All components are capable of //being// referenced by owner components, but\n\t * only ReactOwner components are capable of //referencing// owned components.\n\t * The named reference is known as a \"ref\".\n\t *\n\t * Refs are available when mounted and updated during reconciliation.\n\t *\n\t *   var MyComponent = React.createClass({\n\t *     render: function() {\n\t *       return (\n\t *         <div onClick={this.handleClick}>\n\t *           <CustomComponent ref=\"custom\" />\n\t *         </div>\n\t *       );\n\t *     },\n\t *     handleClick: function() {\n\t *       this.refs.custom.handleClick();\n\t *     },\n\t *     componentDidMount: function() {\n\t *       this.refs.custom.initialize();\n\t *     }\n\t *   });\n\t *\n\t * Refs should rarely be used. When refs are used, they should only be done to\n\t * control data that is not handled by React's data flow.\n\t *\n\t * @class ReactOwner\n\t */\n\tvar ReactOwner = {\n\t\n\t  /**\n\t   * @param {?object} object\n\t   * @return {boolean} True if `object` is a valid owner.\n\t   * @final\n\t   */\n\t  isValidOwner: function (object) {\n\t    return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');\n\t  },\n\t\n\t  /**\n\t   * Adds a component by ref to an owner component.\n\t   *\n\t   * @param {ReactComponent} component Component to reference.\n\t   * @param {string} ref Name by which to refer to the component.\n\t   * @param {ReactOwner} owner Component on which to record the ref.\n\t   * @final\n\t   * @internal\n\t   */\n\t  addComponentAsRefTo: function (component, ref, owner) {\n\t    !ReactOwner.isValidOwner(owner) ?  false ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might ' + 'be adding a ref to a component that was not created inside a component\\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : undefined;\n\t    owner.attachRef(ref, component);\n\t  },\n\t\n\t  /**\n\t   * Removes a component by ref from an owner component.\n\t   *\n\t   * @param {ReactComponent} component Component to dereference.\n\t   * @param {string} ref Name of the ref to remove.\n\t   * @param {ReactOwner} owner Component on which the ref is recorded.\n\t   * @final\n\t   * @internal\n\t   */\n\t  removeComponentAsRefFrom: function (component, ref, owner) {\n\t    !ReactOwner.isValidOwner(owner) ?  false ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might ' + 'be removing a ref to a component that was not created inside a component\\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : undefined;\n\t    // Check that `component` is still the current ref because we do not want to\n\t    // detach the ref if another component stole it.\n\t    if (owner.getPublicInstance().refs[ref] === component.getPublicInstance()) {\n\t      owner.detachRef(ref);\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = ReactOwner;\n\n/***/ },\n/* 128 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactReconcileTransaction\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar CallbackQueue = __webpack_require__(35);\n\tvar PooledClass = __webpack_require__(12);\n\tvar ReactBrowserEventEmitter = __webpack_require__(25);\n\tvar ReactDOMFeatureFlags = __webpack_require__(64);\n\tvar ReactInputSelection = __webpack_require__(73);\n\tvar Transaction = __webpack_require__(29);\n\t\n\tvar assign = __webpack_require__(2);\n\t\n\t/**\n\t * Ensures that, when possible, the selection range (currently selected text\n\t * input) is not disturbed by performing the transaction.\n\t */\n\tvar SELECTION_RESTORATION = {\n\t  /**\n\t   * @return {Selection} Selection information.\n\t   */\n\t  initialize: ReactInputSelection.getSelectionInformation,\n\t  /**\n\t   * @param {Selection} sel Selection information returned from `initialize`.\n\t   */\n\t  close: ReactInputSelection.restoreSelection\n\t};\n\t\n\t/**\n\t * Suppresses events (blur/focus) that could be inadvertently dispatched due to\n\t * high level DOM manipulations (like temporarily removing a text input from the\n\t * DOM).\n\t */\n\tvar EVENT_SUPPRESSION = {\n\t  /**\n\t   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before\n\t   * the reconciliation.\n\t   */\n\t  initialize: function () {\n\t    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();\n\t    ReactBrowserEventEmitter.setEnabled(false);\n\t    return currentlyEnabled;\n\t  },\n\t\n\t  /**\n\t   * @param {boolean} previouslyEnabled Enabled status of\n\t   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`\n\t   *   restores the previous value.\n\t   */\n\t  close: function (previouslyEnabled) {\n\t    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);\n\t  }\n\t};\n\t\n\t/**\n\t * Provides a queue for collecting `componentDidMount` and\n\t * `componentDidUpdate` callbacks during the the transaction.\n\t */\n\tvar ON_DOM_READY_QUEUEING = {\n\t  /**\n\t   * Initializes the internal `onDOMReady` queue.\n\t   */\n\t  initialize: function () {\n\t    this.reactMountReady.reset();\n\t  },\n\t\n\t  /**\n\t   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.\n\t   */\n\t  close: function () {\n\t    this.reactMountReady.notifyAll();\n\t  }\n\t};\n\t\n\t/**\n\t * Executed within the scope of the `Transaction` instance. Consider these as\n\t * being member methods, but with an implied ordering while being isolated from\n\t * each other.\n\t */\n\tvar TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];\n\t\n\t/**\n\t * Currently:\n\t * - The order that these are listed in the transaction is critical:\n\t * - Suppresses events.\n\t * - Restores selection range.\n\t *\n\t * Future:\n\t * - Restore document/overflow scroll positions that were unintentionally\n\t *   modified via DOM insertions above the top viewport boundary.\n\t * - Implement/integrate with customized constraint based layout system and keep\n\t *   track of which dimensions must be remeasured.\n\t *\n\t * @class ReactReconcileTransaction\n\t */\n\tfunction ReactReconcileTransaction(forceHTML) {\n\t  this.reinitializeTransaction();\n\t  // Only server-side rendering really needs this option (see\n\t  // `ReactServerRendering`), but server-side uses\n\t  // `ReactServerRenderingTransaction` instead. This option is here so that it's\n\t  // accessible and defaults to false when `ReactDOMComponent` and\n\t  // `ReactTextComponent` checks it in `mountComponent`.`\n\t  this.renderToStaticMarkup = false;\n\t  this.reactMountReady = CallbackQueue.getPooled(null);\n\t  this.useCreateElement = !forceHTML && ReactDOMFeatureFlags.useCreateElement;\n\t}\n\t\n\tvar Mixin = {\n\t  /**\n\t   * @see Transaction\n\t   * @abstract\n\t   * @final\n\t   * @return {array<object>} List of operation wrap procedures.\n\t   *   TODO: convert to array<TransactionWrapper>\n\t   */\n\t  getTransactionWrappers: function () {\n\t    return TRANSACTION_WRAPPERS;\n\t  },\n\t\n\t  /**\n\t   * @return {object} The queue to collect `onDOMReady` callbacks with.\n\t   */\n\t  getReactMountReady: function () {\n\t    return this.reactMountReady;\n\t  },\n\t\n\t  /**\n\t   * `PooledClass` looks for this, and will invoke this before allowing this\n\t   * instance to be reused.\n\t   */\n\t  destructor: function () {\n\t    CallbackQueue.release(this.reactMountReady);\n\t    this.reactMountReady = null;\n\t  }\n\t};\n\t\n\tassign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);\n\t\n\tPooledClass.addPoolingTo(ReactReconcileTransaction);\n\t\n\tmodule.exports = ReactReconcileTransaction;\n\n/***/ },\n/* 129 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactRef\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactOwner = __webpack_require__(127);\n\t\n\tvar ReactRef = {};\n\t\n\tfunction attachRef(ref, component, owner) {\n\t  if (typeof ref === 'function') {\n\t    ref(component.getPublicInstance());\n\t  } else {\n\t    // Legacy ref\n\t    ReactOwner.addComponentAsRefTo(component, ref, owner);\n\t  }\n\t}\n\t\n\tfunction detachRef(ref, component, owner) {\n\t  if (typeof ref === 'function') {\n\t    ref(null);\n\t  } else {\n\t    // Legacy ref\n\t    ReactOwner.removeComponentAsRefFrom(component, ref, owner);\n\t  }\n\t}\n\t\n\tReactRef.attachRefs = function (instance, element) {\n\t  if (element === null || element === false) {\n\t    return;\n\t  }\n\t  var ref = element.ref;\n\t  if (ref != null) {\n\t    attachRef(ref, instance, element._owner);\n\t  }\n\t};\n\t\n\tReactRef.shouldUpdateRefs = function (prevElement, nextElement) {\n\t  // If either the owner or a `ref` has changed, make sure the newest owner\n\t  // has stored a reference to `this`, and the previous owner (if different)\n\t  // has forgotten the reference to `this`. We use the element instead\n\t  // of the public this.props because the post processing cannot determine\n\t  // a ref. The ref conceptually lives on the element.\n\t\n\t  // TODO: Should this even be possible? The owner cannot change because\n\t  // it's forbidden by shouldUpdateReactComponent. The ref can change\n\t  // if you swap the keys of but not the refs. Reconsider where this check\n\t  // is made. It probably belongs where the key checking and\n\t  // instantiateReactComponent is done.\n\t\n\t  var prevEmpty = prevElement === null || prevElement === false;\n\t  var nextEmpty = nextElement === null || nextElement === false;\n\t\n\t  return(\n\t    // This has a few false positives w/r/t empty components.\n\t    prevEmpty || nextEmpty || nextElement._owner !== prevElement._owner || nextElement.ref !== prevElement.ref\n\t  );\n\t};\n\t\n\tReactRef.detachRefs = function (instance, element) {\n\t  if (element === null || element === false) {\n\t    return;\n\t  }\n\t  var ref = element.ref;\n\t  if (ref != null) {\n\t    detachRef(ref, instance, element._owner);\n\t  }\n\t};\n\t\n\tmodule.exports = ReactRef;\n\n/***/ },\n/* 130 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2014-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactServerBatchingStrategy\n\t * @typechecks\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactServerBatchingStrategy = {\n\t  isBatchingUpdates: false,\n\t  batchedUpdates: function (callback) {\n\t    // Don't do anything here. During the server rendering we don't want to\n\t    // schedule any updates. We will simply ignore them.\n\t  }\n\t};\n\t\n\tmodule.exports = ReactServerBatchingStrategy;\n\n/***/ },\n/* 131 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @typechecks static-only\n\t * @providesModule ReactServerRendering\n\t */\n\t'use strict';\n\t\n\tvar ReactDefaultBatchingStrategy = __webpack_require__(67);\n\tvar ReactElement = __webpack_require__(6);\n\tvar ReactInstanceHandles = __webpack_require__(18);\n\tvar ReactMarkupChecksum = __webpack_require__(74);\n\tvar ReactServerBatchingStrategy = __webpack_require__(130);\n\tvar ReactServerRenderingTransaction = __webpack_require__(132);\n\tvar ReactUpdates = __webpack_require__(8);\n\t\n\tvar emptyObject = __webpack_require__(23);\n\tvar instantiateReactComponent = __webpack_require__(48);\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * @param {ReactElement} element\n\t * @return {string} the HTML markup\n\t */\n\tfunction renderToString(element) {\n\t  !ReactElement.isValidElement(element) ?  false ? invariant(false, 'renderToString(): You must pass a valid ReactElement.') : invariant(false) : undefined;\n\t\n\t  var transaction;\n\t  try {\n\t    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);\n\t\n\t    var id = ReactInstanceHandles.createReactRootID();\n\t    transaction = ReactServerRenderingTransaction.getPooled(false);\n\t\n\t    return transaction.perform(function () {\n\t      var componentInstance = instantiateReactComponent(element, null);\n\t      var markup = componentInstance.mountComponent(id, transaction, emptyObject);\n\t      return ReactMarkupChecksum.addChecksumToMarkup(markup);\n\t    }, null);\n\t  } finally {\n\t    ReactServerRenderingTransaction.release(transaction);\n\t    // Revert to the DOM batching strategy since these two renderers\n\t    // currently share these stateful modules.\n\t    ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);\n\t  }\n\t}\n\t\n\t/**\n\t * @param {ReactElement} element\n\t * @return {string} the HTML markup, without the extra React ID and checksum\n\t * (for generating static pages)\n\t */\n\tfunction renderToStaticMarkup(element) {\n\t  !ReactElement.isValidElement(element) ?  false ? invariant(false, 'renderToStaticMarkup(): You must pass a valid ReactElement.') : invariant(false) : undefined;\n\t\n\t  var transaction;\n\t  try {\n\t    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);\n\t\n\t    var id = ReactInstanceHandles.createReactRootID();\n\t    transaction = ReactServerRenderingTransaction.getPooled(true);\n\t\n\t    return transaction.perform(function () {\n\t      var componentInstance = instantiateReactComponent(element, null);\n\t      return componentInstance.mountComponent(id, transaction, emptyObject);\n\t    }, null);\n\t  } finally {\n\t    ReactServerRenderingTransaction.release(transaction);\n\t    // Revert to the DOM batching strategy since these two renderers\n\t    // currently share these stateful modules.\n\t    ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);\n\t  }\n\t}\n\t\n\tmodule.exports = {\n\t  renderToString: renderToString,\n\t  renderToStaticMarkup: renderToStaticMarkup\n\t};\n\n/***/ },\n/* 132 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2014-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ReactServerRenderingTransaction\n\t * @typechecks\n\t */\n\t\n\t'use strict';\n\t\n\tvar PooledClass = __webpack_require__(12);\n\tvar CallbackQueue = __webpack_require__(35);\n\tvar Transaction = __webpack_require__(29);\n\t\n\tvar assign = __webpack_require__(2);\n\tvar emptyFunction = __webpack_require__(9);\n\t\n\t/**\n\t * Provides a `CallbackQueue` queue for collecting `onDOMReady` callbacks\n\t * during the performing of the transaction.\n\t */\n\tvar ON_DOM_READY_QUEUEING = {\n\t  /**\n\t   * Initializes the internal `onDOMReady` queue.\n\t   */\n\t  initialize: function () {\n\t    this.reactMountReady.reset();\n\t  },\n\t\n\t  close: emptyFunction\n\t};\n\t\n\t/**\n\t * Executed within the scope of the `Transaction` instance. Consider these as\n\t * being member methods, but with an implied ordering while being isolated from\n\t * each other.\n\t */\n\tvar TRANSACTION_WRAPPERS = [ON_DOM_READY_QUEUEING];\n\t\n\t/**\n\t * @class ReactServerRenderingTransaction\n\t * @param {boolean} renderToStaticMarkup\n\t */\n\tfunction ReactServerRenderingTransaction(renderToStaticMarkup) {\n\t  this.reinitializeTransaction();\n\t  this.renderToStaticMarkup = renderToStaticMarkup;\n\t  this.reactMountReady = CallbackQueue.getPooled(null);\n\t  this.useCreateElement = false;\n\t}\n\t\n\tvar Mixin = {\n\t  /**\n\t   * @see Transaction\n\t   * @abstract\n\t   * @final\n\t   * @return {array} Empty list of operation wrap procedures.\n\t   */\n\t  getTransactionWrappers: function () {\n\t    return TRANSACTION_WRAPPERS;\n\t  },\n\t\n\t  /**\n\t   * @return {object} The queue to collect `onDOMReady` callbacks with.\n\t   */\n\t  getReactMountReady: function () {\n\t    return this.reactMountReady;\n\t  },\n\t\n\t  /**\n\t   * `PooledClass` looks for this, and will invoke this before allowing this\n\t   * instance to be reused.\n\t   */\n\t  destructor: function () {\n\t    CallbackQueue.release(this.reactMountReady);\n\t    this.reactMountReady = null;\n\t  }\n\t};\n\t\n\tassign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);\n\t\n\tPooledClass.addPoolingTo(ReactServerRenderingTransaction);\n\t\n\tmodule.exports = ReactServerRenderingTransaction;\n\n/***/ },\n/* 133 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SVGDOMPropertyConfig\n\t */\n\t\n\t'use strict';\n\t\n\tvar DOMProperty = __webpack_require__(17);\n\t\n\tvar MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;\n\t\n\tvar NS = {\n\t  xlink: 'http://www.w3.org/1999/xlink',\n\t  xml: 'http://www.w3.org/XML/1998/namespace'\n\t};\n\t\n\tvar SVGDOMPropertyConfig = {\n\t  Properties: {\n\t    clipPath: MUST_USE_ATTRIBUTE,\n\t    cx: MUST_USE_ATTRIBUTE,\n\t    cy: MUST_USE_ATTRIBUTE,\n\t    d: MUST_USE_ATTRIBUTE,\n\t    dx: MUST_USE_ATTRIBUTE,\n\t    dy: MUST_USE_ATTRIBUTE,\n\t    fill: MUST_USE_ATTRIBUTE,\n\t    fillOpacity: MUST_USE_ATTRIBUTE,\n\t    fontFamily: MUST_USE_ATTRIBUTE,\n\t    fontSize: MUST_USE_ATTRIBUTE,\n\t    fx: MUST_USE_ATTRIBUTE,\n\t    fy: MUST_USE_ATTRIBUTE,\n\t    gradientTransform: MUST_USE_ATTRIBUTE,\n\t    gradientUnits: MUST_USE_ATTRIBUTE,\n\t    markerEnd: MUST_USE_ATTRIBUTE,\n\t    markerMid: MUST_USE_ATTRIBUTE,\n\t    markerStart: MUST_USE_ATTRIBUTE,\n\t    offset: MUST_USE_ATTRIBUTE,\n\t    opacity: MUST_USE_ATTRIBUTE,\n\t    patternContentUnits: MUST_USE_ATTRIBUTE,\n\t    patternUnits: MUST_USE_ATTRIBUTE,\n\t    points: MUST_USE_ATTRIBUTE,\n\t    preserveAspectRatio: MUST_USE_ATTRIBUTE,\n\t    r: MUST_USE_ATTRIBUTE,\n\t    rx: MUST_USE_ATTRIBUTE,\n\t    ry: MUST_USE_ATTRIBUTE,\n\t    spreadMethod: MUST_USE_ATTRIBUTE,\n\t    stopColor: MUST_USE_ATTRIBUTE,\n\t    stopOpacity: MUST_USE_ATTRIBUTE,\n\t    stroke: MUST_USE_ATTRIBUTE,\n\t    strokeDasharray: MUST_USE_ATTRIBUTE,\n\t    strokeLinecap: MUST_USE_ATTRIBUTE,\n\t    strokeOpacity: MUST_USE_ATTRIBUTE,\n\t    strokeWidth: MUST_USE_ATTRIBUTE,\n\t    textAnchor: MUST_USE_ATTRIBUTE,\n\t    transform: MUST_USE_ATTRIBUTE,\n\t    version: MUST_USE_ATTRIBUTE,\n\t    viewBox: MUST_USE_ATTRIBUTE,\n\t    x1: MUST_USE_ATTRIBUTE,\n\t    x2: MUST_USE_ATTRIBUTE,\n\t    x: MUST_USE_ATTRIBUTE,\n\t    xlinkActuate: MUST_USE_ATTRIBUTE,\n\t    xlinkArcrole: MUST_USE_ATTRIBUTE,\n\t    xlinkHref: MUST_USE_ATTRIBUTE,\n\t    xlinkRole: MUST_USE_ATTRIBUTE,\n\t    xlinkShow: MUST_USE_ATTRIBUTE,\n\t    xlinkTitle: MUST_USE_ATTRIBUTE,\n\t    xlinkType: MUST_USE_ATTRIBUTE,\n\t    xmlBase: MUST_USE_ATTRIBUTE,\n\t    xmlLang: MUST_USE_ATTRIBUTE,\n\t    xmlSpace: MUST_USE_ATTRIBUTE,\n\t    y1: MUST_USE_ATTRIBUTE,\n\t    y2: MUST_USE_ATTRIBUTE,\n\t    y: MUST_USE_ATTRIBUTE\n\t  },\n\t  DOMAttributeNamespaces: {\n\t    xlinkActuate: NS.xlink,\n\t    xlinkArcrole: NS.xlink,\n\t    xlinkHref: NS.xlink,\n\t    xlinkRole: NS.xlink,\n\t    xlinkShow: NS.xlink,\n\t    xlinkTitle: NS.xlink,\n\t    xlinkType: NS.xlink,\n\t    xmlBase: NS.xml,\n\t    xmlLang: NS.xml,\n\t    xmlSpace: NS.xml\n\t  },\n\t  DOMAttributeNames: {\n\t    clipPath: 'clip-path',\n\t    fillOpacity: 'fill-opacity',\n\t    fontFamily: 'font-family',\n\t    fontSize: 'font-size',\n\t    gradientTransform: 'gradientTransform',\n\t    gradientUnits: 'gradientUnits',\n\t    markerEnd: 'marker-end',\n\t    markerMid: 'marker-mid',\n\t    markerStart: 'marker-start',\n\t    patternContentUnits: 'patternContentUnits',\n\t    patternUnits: 'patternUnits',\n\t    preserveAspectRatio: 'preserveAspectRatio',\n\t    spreadMethod: 'spreadMethod',\n\t    stopColor: 'stop-color',\n\t    stopOpacity: 'stop-opacity',\n\t    strokeDasharray: 'stroke-dasharray',\n\t    strokeLinecap: 'stroke-linecap',\n\t    strokeOpacity: 'stroke-opacity',\n\t    strokeWidth: 'stroke-width',\n\t    textAnchor: 'text-anchor',\n\t    viewBox: 'viewBox',\n\t    xlinkActuate: 'xlink:actuate',\n\t    xlinkArcrole: 'xlink:arcrole',\n\t    xlinkHref: 'xlink:href',\n\t    xlinkRole: 'xlink:role',\n\t    xlinkShow: 'xlink:show',\n\t    xlinkTitle: 'xlink:title',\n\t    xlinkType: 'xlink:type',\n\t    xmlBase: 'xml:base',\n\t    xmlLang: 'xml:lang',\n\t    xmlSpace: 'xml:space'\n\t  }\n\t};\n\t\n\tmodule.exports = SVGDOMPropertyConfig;\n\n/***/ },\n/* 134 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SelectEventPlugin\n\t */\n\t\n\t'use strict';\n\t\n\tvar EventConstants = __webpack_require__(10);\n\tvar EventPropagators = __webpack_require__(20);\n\tvar ExecutionEnvironment = __webpack_require__(4);\n\tvar ReactInputSelection = __webpack_require__(73);\n\tvar SyntheticEvent = __webpack_require__(16);\n\t\n\tvar getActiveElement = __webpack_require__(88);\n\tvar isTextInputElement = __webpack_require__(84);\n\tvar keyOf = __webpack_require__(13);\n\tvar shallowEqual = __webpack_require__(90);\n\t\n\tvar topLevelTypes = EventConstants.topLevelTypes;\n\t\n\tvar skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;\n\t\n\tvar eventTypes = {\n\t  select: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onSelect: null }),\n\t      captured: keyOf({ onSelectCapture: null })\n\t    },\n\t    dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]\n\t  }\n\t};\n\t\n\tvar activeElement = null;\n\tvar activeElementID = null;\n\tvar lastSelection = null;\n\tvar mouseDown = false;\n\t\n\t// Track whether a listener exists for this plugin. If none exist, we do\n\t// not extract events.\n\tvar hasListener = false;\n\tvar ON_SELECT_KEY = keyOf({ onSelect: null });\n\t\n\t/**\n\t * Get an object which is a unique representation of the current selection.\n\t *\n\t * The return value will not be consistent across nodes or browsers, but\n\t * two identical selections on the same node will return identical objects.\n\t *\n\t * @param {DOMElement} node\n\t * @return {object}\n\t */\n\tfunction getSelection(node) {\n\t  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {\n\t    return {\n\t      start: node.selectionStart,\n\t      end: node.selectionEnd\n\t    };\n\t  } else if (window.getSelection) {\n\t    var selection = window.getSelection();\n\t    return {\n\t      anchorNode: selection.anchorNode,\n\t      anchorOffset: selection.anchorOffset,\n\t      focusNode: selection.focusNode,\n\t      focusOffset: selection.focusOffset\n\t    };\n\t  } else if (document.selection) {\n\t    var range = document.selection.createRange();\n\t    return {\n\t      parentElement: range.parentElement(),\n\t      text: range.text,\n\t      top: range.boundingTop,\n\t      left: range.boundingLeft\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Poll selection to see whether it's changed.\n\t *\n\t * @param {object} nativeEvent\n\t * @return {?SyntheticEvent}\n\t */\n\tfunction constructSelectEvent(nativeEvent, nativeEventTarget) {\n\t  // Ensure we have the right element, and that the user is not dragging a\n\t  // selection (this matches native `select` event behavior). In HTML5, select\n\t  // fires only on input and textarea thus if there's no focused element we\n\t  // won't dispatch.\n\t  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {\n\t    return null;\n\t  }\n\t\n\t  // Only fire when selection has actually changed.\n\t  var currentSelection = getSelection(activeElement);\n\t  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {\n\t    lastSelection = currentSelection;\n\t\n\t    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementID, nativeEvent, nativeEventTarget);\n\t\n\t    syntheticEvent.type = 'select';\n\t    syntheticEvent.target = activeElement;\n\t\n\t    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);\n\t\n\t    return syntheticEvent;\n\t  }\n\t\n\t  return null;\n\t}\n\t\n\t/**\n\t * This plugin creates an `onSelect` event that normalizes select events\n\t * across form elements.\n\t *\n\t * Supported elements are:\n\t * - input (see `isTextInputElement`)\n\t * - textarea\n\t * - contentEditable\n\t *\n\t * This differs from native browser implementations in the following ways:\n\t * - Fires on contentEditable fields as well as inputs.\n\t * - Fires for collapsed selection.\n\t * - Fires after user input.\n\t */\n\tvar SelectEventPlugin = {\n\t\n\t  eventTypes: eventTypes,\n\t\n\t  /**\n\t   * @param {string} topLevelType Record from `EventConstants`.\n\t   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n\t   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n\t   * @param {object} nativeEvent Native browser event.\n\t   * @return {*} An accumulation of synthetic events.\n\t   * @see {EventPluginHub.extractEvents}\n\t   */\n\t  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n\t    if (!hasListener) {\n\t      return null;\n\t    }\n\t\n\t    switch (topLevelType) {\n\t      // Track the input node that has focus.\n\t      case topLevelTypes.topFocus:\n\t        if (isTextInputElement(topLevelTarget) || topLevelTarget.contentEditable === 'true') {\n\t          activeElement = topLevelTarget;\n\t          activeElementID = topLevelTargetID;\n\t          lastSelection = null;\n\t        }\n\t        break;\n\t      case topLevelTypes.topBlur:\n\t        activeElement = null;\n\t        activeElementID = null;\n\t        lastSelection = null;\n\t        break;\n\t\n\t      // Don't fire the event while the user is dragging. This matches the\n\t      // semantics of the native select event.\n\t      case topLevelTypes.topMouseDown:\n\t        mouseDown = true;\n\t        break;\n\t      case topLevelTypes.topContextMenu:\n\t      case topLevelTypes.topMouseUp:\n\t        mouseDown = false;\n\t        return constructSelectEvent(nativeEvent, nativeEventTarget);\n\t\n\t      // Chrome and IE fire non-standard event when selection is changed (and\n\t      // sometimes when it hasn't). IE's event fires out of order with respect\n\t      // to key and input events on deletion, so we discard it.\n\t      //\n\t      // Firefox doesn't support selectionchange, so check selection status\n\t      // after each key entry. The selection changes after keydown and before\n\t      // keyup, but we check on keydown as well in the case of holding down a\n\t      // key, when multiple keydown events are fired but only one keyup is.\n\t      // This is also our approach for IE handling, for the reason above.\n\t      case topLevelTypes.topSelectionChange:\n\t        if (skipSelectionChangeEvent) {\n\t          break;\n\t        }\n\t      // falls through\n\t      case topLevelTypes.topKeyDown:\n\t      case topLevelTypes.topKeyUp:\n\t        return constructSelectEvent(nativeEvent, nativeEventTarget);\n\t    }\n\t\n\t    return null;\n\t  },\n\t\n\t  didPutListener: function (id, registrationName, listener) {\n\t    if (registrationName === ON_SELECT_KEY) {\n\t      hasListener = true;\n\t    }\n\t  }\n\t};\n\t\n\tmodule.exports = SelectEventPlugin;\n\n/***/ },\n/* 135 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule ServerReactRootIndex\n\t * @typechecks\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Size of the reactRoot ID space. We generate random numbers for React root\n\t * IDs and if there's a collision the events and DOM update system will\n\t * get confused. In the future we need a way to generate GUIDs but for\n\t * now this will work on a smaller scale.\n\t */\n\tvar GLOBAL_MOUNT_POINT_MAX = Math.pow(2, 53);\n\t\n\tvar ServerReactRootIndex = {\n\t  createReactRootIndex: function () {\n\t    return Math.ceil(Math.random() * GLOBAL_MOUNT_POINT_MAX);\n\t  }\n\t};\n\t\n\tmodule.exports = ServerReactRootIndex;\n\n/***/ },\n/* 136 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SimpleEventPlugin\n\t */\n\t\n\t'use strict';\n\t\n\tvar EventConstants = __webpack_require__(10);\n\tvar EventListener = __webpack_require__(85);\n\tvar EventPropagators = __webpack_require__(20);\n\tvar ReactMount = __webpack_require__(5);\n\tvar SyntheticClipboardEvent = __webpack_require__(137);\n\tvar SyntheticEvent = __webpack_require__(16);\n\tvar SyntheticFocusEvent = __webpack_require__(140);\n\tvar SyntheticKeyboardEvent = __webpack_require__(142);\n\tvar SyntheticMouseEvent = __webpack_require__(28);\n\tvar SyntheticDragEvent = __webpack_require__(139);\n\tvar SyntheticTouchEvent = __webpack_require__(143);\n\tvar SyntheticUIEvent = __webpack_require__(22);\n\tvar SyntheticWheelEvent = __webpack_require__(144);\n\t\n\tvar emptyFunction = __webpack_require__(9);\n\tvar getEventCharCode = __webpack_require__(44);\n\tvar invariant = __webpack_require__(1);\n\tvar keyOf = __webpack_require__(13);\n\t\n\tvar topLevelTypes = EventConstants.topLevelTypes;\n\t\n\tvar eventTypes = {\n\t  abort: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onAbort: true }),\n\t      captured: keyOf({ onAbortCapture: true })\n\t    }\n\t  },\n\t  blur: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onBlur: true }),\n\t      captured: keyOf({ onBlurCapture: true })\n\t    }\n\t  },\n\t  canPlay: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onCanPlay: true }),\n\t      captured: keyOf({ onCanPlayCapture: true })\n\t    }\n\t  },\n\t  canPlayThrough: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onCanPlayThrough: true }),\n\t      captured: keyOf({ onCanPlayThroughCapture: true })\n\t    }\n\t  },\n\t  click: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onClick: true }),\n\t      captured: keyOf({ onClickCapture: true })\n\t    }\n\t  },\n\t  contextMenu: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onContextMenu: true }),\n\t      captured: keyOf({ onContextMenuCapture: true })\n\t    }\n\t  },\n\t  copy: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onCopy: true }),\n\t      captured: keyOf({ onCopyCapture: true })\n\t    }\n\t  },\n\t  cut: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onCut: true }),\n\t      captured: keyOf({ onCutCapture: true })\n\t    }\n\t  },\n\t  doubleClick: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onDoubleClick: true }),\n\t      captured: keyOf({ onDoubleClickCapture: true })\n\t    }\n\t  },\n\t  drag: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onDrag: true }),\n\t      captured: keyOf({ onDragCapture: true })\n\t    }\n\t  },\n\t  dragEnd: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onDragEnd: true }),\n\t      captured: keyOf({ onDragEndCapture: true })\n\t    }\n\t  },\n\t  dragEnter: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onDragEnter: true }),\n\t      captured: keyOf({ onDragEnterCapture: true })\n\t    }\n\t  },\n\t  dragExit: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onDragExit: true }),\n\t      captured: keyOf({ onDragExitCapture: true })\n\t    }\n\t  },\n\t  dragLeave: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onDragLeave: true }),\n\t      captured: keyOf({ onDragLeaveCapture: true })\n\t    }\n\t  },\n\t  dragOver: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onDragOver: true }),\n\t      captured: keyOf({ onDragOverCapture: true })\n\t    }\n\t  },\n\t  dragStart: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onDragStart: true }),\n\t      captured: keyOf({ onDragStartCapture: true })\n\t    }\n\t  },\n\t  drop: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onDrop: true }),\n\t      captured: keyOf({ onDropCapture: true })\n\t    }\n\t  },\n\t  durationChange: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onDurationChange: true }),\n\t      captured: keyOf({ onDurationChangeCapture: true })\n\t    }\n\t  },\n\t  emptied: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onEmptied: true }),\n\t      captured: keyOf({ onEmptiedCapture: true })\n\t    }\n\t  },\n\t  encrypted: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onEncrypted: true }),\n\t      captured: keyOf({ onEncryptedCapture: true })\n\t    }\n\t  },\n\t  ended: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onEnded: true }),\n\t      captured: keyOf({ onEndedCapture: true })\n\t    }\n\t  },\n\t  error: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onError: true }),\n\t      captured: keyOf({ onErrorCapture: true })\n\t    }\n\t  },\n\t  focus: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onFocus: true }),\n\t      captured: keyOf({ onFocusCapture: true })\n\t    }\n\t  },\n\t  input: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onInput: true }),\n\t      captured: keyOf({ onInputCapture: true })\n\t    }\n\t  },\n\t  keyDown: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onKeyDown: true }),\n\t      captured: keyOf({ onKeyDownCapture: true })\n\t    }\n\t  },\n\t  keyPress: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onKeyPress: true }),\n\t      captured: keyOf({ onKeyPressCapture: true })\n\t    }\n\t  },\n\t  keyUp: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onKeyUp: true }),\n\t      captured: keyOf({ onKeyUpCapture: true })\n\t    }\n\t  },\n\t  load: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onLoad: true }),\n\t      captured: keyOf({ onLoadCapture: true })\n\t    }\n\t  },\n\t  loadedData: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onLoadedData: true }),\n\t      captured: keyOf({ onLoadedDataCapture: true })\n\t    }\n\t  },\n\t  loadedMetadata: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onLoadedMetadata: true }),\n\t      captured: keyOf({ onLoadedMetadataCapture: true })\n\t    }\n\t  },\n\t  loadStart: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onLoadStart: true }),\n\t      captured: keyOf({ onLoadStartCapture: true })\n\t    }\n\t  },\n\t  // Note: We do not allow listening to mouseOver events. Instead, use the\n\t  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.\n\t  mouseDown: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onMouseDown: true }),\n\t      captured: keyOf({ onMouseDownCapture: true })\n\t    }\n\t  },\n\t  mouseMove: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onMouseMove: true }),\n\t      captured: keyOf({ onMouseMoveCapture: true })\n\t    }\n\t  },\n\t  mouseOut: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onMouseOut: true }),\n\t      captured: keyOf({ onMouseOutCapture: true })\n\t    }\n\t  },\n\t  mouseOver: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onMouseOver: true }),\n\t      captured: keyOf({ onMouseOverCapture: true })\n\t    }\n\t  },\n\t  mouseUp: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onMouseUp: true }),\n\t      captured: keyOf({ onMouseUpCapture: true })\n\t    }\n\t  },\n\t  paste: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onPaste: true }),\n\t      captured: keyOf({ onPasteCapture: true })\n\t    }\n\t  },\n\t  pause: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onPause: true }),\n\t      captured: keyOf({ onPauseCapture: true })\n\t    }\n\t  },\n\t  play: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onPlay: true }),\n\t      captured: keyOf({ onPlayCapture: true })\n\t    }\n\t  },\n\t  playing: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onPlaying: true }),\n\t      captured: keyOf({ onPlayingCapture: true })\n\t    }\n\t  },\n\t  progress: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onProgress: true }),\n\t      captured: keyOf({ onProgressCapture: true })\n\t    }\n\t  },\n\t  rateChange: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onRateChange: true }),\n\t      captured: keyOf({ onRateChangeCapture: true })\n\t    }\n\t  },\n\t  reset: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onReset: true }),\n\t      captured: keyOf({ onResetCapture: true })\n\t    }\n\t  },\n\t  scroll: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onScroll: true }),\n\t      captured: keyOf({ onScrollCapture: true })\n\t    }\n\t  },\n\t  seeked: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onSeeked: true }),\n\t      captured: keyOf({ onSeekedCapture: true })\n\t    }\n\t  },\n\t  seeking: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onSeeking: true }),\n\t      captured: keyOf({ onSeekingCapture: true })\n\t    }\n\t  },\n\t  stalled: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onStalled: true }),\n\t      captured: keyOf({ onStalledCapture: true })\n\t    }\n\t  },\n\t  submit: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onSubmit: true }),\n\t      captured: keyOf({ onSubmitCapture: true })\n\t    }\n\t  },\n\t  suspend: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onSuspend: true }),\n\t      captured: keyOf({ onSuspendCapture: true })\n\t    }\n\t  },\n\t  timeUpdate: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onTimeUpdate: true }),\n\t      captured: keyOf({ onTimeUpdateCapture: true })\n\t    }\n\t  },\n\t  touchCancel: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onTouchCancel: true }),\n\t      captured: keyOf({ onTouchCancelCapture: true })\n\t    }\n\t  },\n\t  touchEnd: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onTouchEnd: true }),\n\t      captured: keyOf({ onTouchEndCapture: true })\n\t    }\n\t  },\n\t  touchMove: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onTouchMove: true }),\n\t      captured: keyOf({ onTouchMoveCapture: true })\n\t    }\n\t  },\n\t  touchStart: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onTouchStart: true }),\n\t      captured: keyOf({ onTouchStartCapture: true })\n\t    }\n\t  },\n\t  volumeChange: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onVolumeChange: true }),\n\t      captured: keyOf({ onVolumeChangeCapture: true })\n\t    }\n\t  },\n\t  waiting: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onWaiting: true }),\n\t      captured: keyOf({ onWaitingCapture: true })\n\t    }\n\t  },\n\t  wheel: {\n\t    phasedRegistrationNames: {\n\t      bubbled: keyOf({ onWheel: true }),\n\t      captured: keyOf({ onWheelCapture: true })\n\t    }\n\t  }\n\t};\n\t\n\tvar topLevelEventsToDispatchConfig = {\n\t  topAbort: eventTypes.abort,\n\t  topBlur: eventTypes.blur,\n\t  topCanPlay: eventTypes.canPlay,\n\t  topCanPlayThrough: eventTypes.canPlayThrough,\n\t  topClick: eventTypes.click,\n\t  topContextMenu: eventTypes.contextMenu,\n\t  topCopy: eventTypes.copy,\n\t  topCut: eventTypes.cut,\n\t  topDoubleClick: eventTypes.doubleClick,\n\t  topDrag: eventTypes.drag,\n\t  topDragEnd: eventTypes.dragEnd,\n\t  topDragEnter: eventTypes.dragEnter,\n\t  topDragExit: eventTypes.dragExit,\n\t  topDragLeave: eventTypes.dragLeave,\n\t  topDragOver: eventTypes.dragOver,\n\t  topDragStart: eventTypes.dragStart,\n\t  topDrop: eventTypes.drop,\n\t  topDurationChange: eventTypes.durationChange,\n\t  topEmptied: eventTypes.emptied,\n\t  topEncrypted: eventTypes.encrypted,\n\t  topEnded: eventTypes.ended,\n\t  topError: eventTypes.error,\n\t  topFocus: eventTypes.focus,\n\t  topInput: eventTypes.input,\n\t  topKeyDown: eventTypes.keyDown,\n\t  topKeyPress: eventTypes.keyPress,\n\t  topKeyUp: eventTypes.keyUp,\n\t  topLoad: eventTypes.load,\n\t  topLoadedData: eventTypes.loadedData,\n\t  topLoadedMetadata: eventTypes.loadedMetadata,\n\t  topLoadStart: eventTypes.loadStart,\n\t  topMouseDown: eventTypes.mouseDown,\n\t  topMouseMove: eventTypes.mouseMove,\n\t  topMouseOut: eventTypes.mouseOut,\n\t  topMouseOver: eventTypes.mouseOver,\n\t  topMouseUp: eventTypes.mouseUp,\n\t  topPaste: eventTypes.paste,\n\t  topPause: eventTypes.pause,\n\t  topPlay: eventTypes.play,\n\t  topPlaying: eventTypes.playing,\n\t  topProgress: eventTypes.progress,\n\t  topRateChange: eventTypes.rateChange,\n\t  topReset: eventTypes.reset,\n\t  topScroll: eventTypes.scroll,\n\t  topSeeked: eventTypes.seeked,\n\t  topSeeking: eventTypes.seeking,\n\t  topStalled: eventTypes.stalled,\n\t  topSubmit: eventTypes.submit,\n\t  topSuspend: eventTypes.suspend,\n\t  topTimeUpdate: eventTypes.timeUpdate,\n\t  topTouchCancel: eventTypes.touchCancel,\n\t  topTouchEnd: eventTypes.touchEnd,\n\t  topTouchMove: eventTypes.touchMove,\n\t  topTouchStart: eventTypes.touchStart,\n\t  topVolumeChange: eventTypes.volumeChange,\n\t  topWaiting: eventTypes.waiting,\n\t  topWheel: eventTypes.wheel\n\t};\n\t\n\tfor (var type in topLevelEventsToDispatchConfig) {\n\t  topLevelEventsToDispatchConfig[type].dependencies = [type];\n\t}\n\t\n\tvar ON_CLICK_KEY = keyOf({ onClick: null });\n\tvar onClickListeners = {};\n\t\n\tvar SimpleEventPlugin = {\n\t\n\t  eventTypes: eventTypes,\n\t\n\t  /**\n\t   * @param {string} topLevelType Record from `EventConstants`.\n\t   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n\t   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n\t   * @param {object} nativeEvent Native browser event.\n\t   * @return {*} An accumulation of synthetic events.\n\t   * @see {EventPluginHub.extractEvents}\n\t   */\n\t  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n\t    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];\n\t    if (!dispatchConfig) {\n\t      return null;\n\t    }\n\t    var EventConstructor;\n\t    switch (topLevelType) {\n\t      case topLevelTypes.topAbort:\n\t      case topLevelTypes.topCanPlay:\n\t      case topLevelTypes.topCanPlayThrough:\n\t      case topLevelTypes.topDurationChange:\n\t      case topLevelTypes.topEmptied:\n\t      case topLevelTypes.topEncrypted:\n\t      case topLevelTypes.topEnded:\n\t      case topLevelTypes.topError:\n\t      case topLevelTypes.topInput:\n\t      case topLevelTypes.topLoad:\n\t      case topLevelTypes.topLoadedData:\n\t      case topLevelTypes.topLoadedMetadata:\n\t      case topLevelTypes.topLoadStart:\n\t      case topLevelTypes.topPause:\n\t      case topLevelTypes.topPlay:\n\t      case topLevelTypes.topPlaying:\n\t      case topLevelTypes.topProgress:\n\t      case topLevelTypes.topRateChange:\n\t      case topLevelTypes.topReset:\n\t      case topLevelTypes.topSeeked:\n\t      case topLevelTypes.topSeeking:\n\t      case topLevelTypes.topStalled:\n\t      case topLevelTypes.topSubmit:\n\t      case topLevelTypes.topSuspend:\n\t      case topLevelTypes.topTimeUpdate:\n\t      case topLevelTypes.topVolumeChange:\n\t      case topLevelTypes.topWaiting:\n\t        // HTML Events\n\t        // @see http://www.w3.org/TR/html5/index.html#events-0\n\t        EventConstructor = SyntheticEvent;\n\t        break;\n\t      case topLevelTypes.topKeyPress:\n\t        // FireFox creates a keypress event for function keys too. This removes\n\t        // the unwanted keypress events. Enter is however both printable and\n\t        // non-printable. One would expect Tab to be as well (but it isn't).\n\t        if (getEventCharCode(nativeEvent) === 0) {\n\t          return null;\n\t        }\n\t      /* falls through */\n\t      case topLevelTypes.topKeyDown:\n\t      case topLevelTypes.topKeyUp:\n\t        EventConstructor = SyntheticKeyboardEvent;\n\t        break;\n\t      case topLevelTypes.topBlur:\n\t      case topLevelTypes.topFocus:\n\t        EventConstructor = SyntheticFocusEvent;\n\t        break;\n\t      case topLevelTypes.topClick:\n\t        // Firefox creates a click event on right mouse clicks. This removes the\n\t        // unwanted click events.\n\t        if (nativeEvent.button === 2) {\n\t          return null;\n\t        }\n\t      /* falls through */\n\t      case topLevelTypes.topContextMenu:\n\t      case topLevelTypes.topDoubleClick:\n\t      case topLevelTypes.topMouseDown:\n\t      case topLevelTypes.topMouseMove:\n\t      case topLevelTypes.topMouseOut:\n\t      case topLevelTypes.topMouseOver:\n\t      case topLevelTypes.topMouseUp:\n\t        EventConstructor = SyntheticMouseEvent;\n\t        break;\n\t      case topLevelTypes.topDrag:\n\t      case topLevelTypes.topDragEnd:\n\t      case topLevelTypes.topDragEnter:\n\t      case topLevelTypes.topDragExit:\n\t      case topLevelTypes.topDragLeave:\n\t      case topLevelTypes.topDragOver:\n\t      case topLevelTypes.topDragStart:\n\t      case topLevelTypes.topDrop:\n\t        EventConstructor = SyntheticDragEvent;\n\t        break;\n\t      case topLevelTypes.topTouchCancel:\n\t      case topLevelTypes.topTouchEnd:\n\t      case topLevelTypes.topTouchMove:\n\t      case topLevelTypes.topTouchStart:\n\t        EventConstructor = SyntheticTouchEvent;\n\t        break;\n\t      case topLevelTypes.topScroll:\n\t        EventConstructor = SyntheticUIEvent;\n\t        break;\n\t      case topLevelTypes.topWheel:\n\t        EventConstructor = SyntheticWheelEvent;\n\t        break;\n\t      case topLevelTypes.topCopy:\n\t      case topLevelTypes.topCut:\n\t      case topLevelTypes.topPaste:\n\t        EventConstructor = SyntheticClipboardEvent;\n\t        break;\n\t    }\n\t    !EventConstructor ?  false ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : invariant(false) : undefined;\n\t    var event = EventConstructor.getPooled(dispatchConfig, topLevelTargetID, nativeEvent, nativeEventTarget);\n\t    EventPropagators.accumulateTwoPhaseDispatches(event);\n\t    return event;\n\t  },\n\t\n\t  didPutListener: function (id, registrationName, listener) {\n\t    // Mobile Safari does not fire properly bubble click events on\n\t    // non-interactive elements, which means delegated click listeners do not\n\t    // fire. The workaround for this bug involves attaching an empty click\n\t    // listener on the target node.\n\t    if (registrationName === ON_CLICK_KEY) {\n\t      var node = ReactMount.getNode(id);\n\t      if (!onClickListeners[id]) {\n\t        onClickListeners[id] = EventListener.listen(node, 'click', emptyFunction);\n\t      }\n\t    }\n\t  },\n\t\n\t  willDeleteListener: function (id, registrationName) {\n\t    if (registrationName === ON_CLICK_KEY) {\n\t      onClickListeners[id].remove();\n\t      delete onClickListeners[id];\n\t    }\n\t  }\n\t\n\t};\n\t\n\tmodule.exports = SimpleEventPlugin;\n\n/***/ },\n/* 137 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticClipboardEvent\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticEvent = __webpack_require__(16);\n\t\n\t/**\n\t * @interface Event\n\t * @see http://www.w3.org/TR/clipboard-apis/\n\t */\n\tvar ClipboardEventInterface = {\n\t  clipboardData: function (event) {\n\t    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;\n\t  }\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);\n\t\n\tmodule.exports = SyntheticClipboardEvent;\n\n/***/ },\n/* 138 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticCompositionEvent\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticEvent = __webpack_require__(16);\n\t\n\t/**\n\t * @interface Event\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents\n\t */\n\tvar CompositionEventInterface = {\n\t  data: null\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);\n\t\n\tmodule.exports = SyntheticCompositionEvent;\n\n/***/ },\n/* 139 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticDragEvent\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticMouseEvent = __webpack_require__(28);\n\t\n\t/**\n\t * @interface DragEvent\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/\n\t */\n\tvar DragEventInterface = {\n\t  dataTransfer: null\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);\n\t\n\tmodule.exports = SyntheticDragEvent;\n\n/***/ },\n/* 140 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticFocusEvent\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticUIEvent = __webpack_require__(22);\n\t\n\t/**\n\t * @interface FocusEvent\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/\n\t */\n\tvar FocusEventInterface = {\n\t  relatedTarget: null\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);\n\t\n\tmodule.exports = SyntheticFocusEvent;\n\n/***/ },\n/* 141 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticInputEvent\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticEvent = __webpack_require__(16);\n\t\n\t/**\n\t * @interface Event\n\t * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105\n\t *      /#events-inputevents\n\t */\n\tvar InputEventInterface = {\n\t  data: null\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);\n\t\n\tmodule.exports = SyntheticInputEvent;\n\n/***/ },\n/* 142 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticKeyboardEvent\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticUIEvent = __webpack_require__(22);\n\t\n\tvar getEventCharCode = __webpack_require__(44);\n\tvar getEventKey = __webpack_require__(149);\n\tvar getEventModifierState = __webpack_require__(45);\n\t\n\t/**\n\t * @interface KeyboardEvent\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/\n\t */\n\tvar KeyboardEventInterface = {\n\t  key: getEventKey,\n\t  location: null,\n\t  ctrlKey: null,\n\t  shiftKey: null,\n\t  altKey: null,\n\t  metaKey: null,\n\t  repeat: null,\n\t  locale: null,\n\t  getModifierState: getEventModifierState,\n\t  // Legacy Interface\n\t  charCode: function (event) {\n\t    // `charCode` is the result of a KeyPress event and represents the value of\n\t    // the actual printable character.\n\t\n\t    // KeyPress is deprecated, but its replacement is not yet final and not\n\t    // implemented in any major browser. Only KeyPress has charCode.\n\t    if (event.type === 'keypress') {\n\t      return getEventCharCode(event);\n\t    }\n\t    return 0;\n\t  },\n\t  keyCode: function (event) {\n\t    // `keyCode` is the result of a KeyDown/Up event and represents the value of\n\t    // physical keyboard key.\n\t\n\t    // The actual meaning of the value depends on the users' keyboard layout\n\t    // which cannot be detected. Assuming that it is a US keyboard layout\n\t    // provides a surprisingly accurate mapping for US and European users.\n\t    // Due to this, it is left to the user to implement at this time.\n\t    if (event.type === 'keydown' || event.type === 'keyup') {\n\t      return event.keyCode;\n\t    }\n\t    return 0;\n\t  },\n\t  which: function (event) {\n\t    // `which` is an alias for either `keyCode` or `charCode` depending on the\n\t    // type of the event.\n\t    if (event.type === 'keypress') {\n\t      return getEventCharCode(event);\n\t    }\n\t    if (event.type === 'keydown' || event.type === 'keyup') {\n\t      return event.keyCode;\n\t    }\n\t    return 0;\n\t  }\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);\n\t\n\tmodule.exports = SyntheticKeyboardEvent;\n\n/***/ },\n/* 143 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticTouchEvent\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticUIEvent = __webpack_require__(22);\n\t\n\tvar getEventModifierState = __webpack_require__(45);\n\t\n\t/**\n\t * @interface TouchEvent\n\t * @see http://www.w3.org/TR/touch-events/\n\t */\n\tvar TouchEventInterface = {\n\t  touches: null,\n\t  targetTouches: null,\n\t  changedTouches: null,\n\t  altKey: null,\n\t  metaKey: null,\n\t  ctrlKey: null,\n\t  shiftKey: null,\n\t  getModifierState: getEventModifierState\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticUIEvent}\n\t */\n\tfunction SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);\n\t\n\tmodule.exports = SyntheticTouchEvent;\n\n/***/ },\n/* 144 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule SyntheticWheelEvent\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar SyntheticMouseEvent = __webpack_require__(28);\n\t\n\t/**\n\t * @interface WheelEvent\n\t * @see http://www.w3.org/TR/DOM-Level-3-Events/\n\t */\n\tvar WheelEventInterface = {\n\t  deltaX: function (event) {\n\t    return 'deltaX' in event ? event.deltaX :\n\t    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).\n\t    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;\n\t  },\n\t  deltaY: function (event) {\n\t    return 'deltaY' in event ? event.deltaY :\n\t    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).\n\t    'wheelDeltaY' in event ? -event.wheelDeltaY :\n\t    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).\n\t    'wheelDelta' in event ? -event.wheelDelta : 0;\n\t  },\n\t  deltaZ: null,\n\t\n\t  // Browsers without \"deltaMode\" is reporting in raw wheel delta where one\n\t  // notch on the scroll is always +/- 120, roughly equivalent to pixels.\n\t  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or\n\t  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.\n\t  deltaMode: null\n\t};\n\t\n\t/**\n\t * @param {object} dispatchConfig Configuration used to dispatch this event.\n\t * @param {string} dispatchMarker Marker identifying the event target.\n\t * @param {object} nativeEvent Native browser event.\n\t * @extends {SyntheticMouseEvent}\n\t */\n\tfunction SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n\t  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n\t}\n\t\n\tSyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);\n\t\n\tmodule.exports = SyntheticWheelEvent;\n\n/***/ },\n/* 145 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule adler32\n\t */\n\t\n\t'use strict';\n\t\n\tvar MOD = 65521;\n\t\n\t// adler32 is not cryptographically strong, and is only used to sanity check that\n\t// markup generated on the server matches the markup generated on the client.\n\t// This implementation (a modified version of the SheetJS version) has been optimized\n\t// for our use case, at the expense of conforming to the adler32 specification\n\t// for non-ascii inputs.\n\tfunction adler32(data) {\n\t  var a = 1;\n\t  var b = 0;\n\t  var i = 0;\n\t  var l = data.length;\n\t  var m = l & ~0x3;\n\t  while (i < m) {\n\t    for (; i < Math.min(i + 4096, m); i += 4) {\n\t      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));\n\t    }\n\t    a %= MOD;\n\t    b %= MOD;\n\t  }\n\t  for (; i < l; i++) {\n\t    b += a += data.charCodeAt(i);\n\t  }\n\t  a %= MOD;\n\t  b %= MOD;\n\t  return a | b << 16;\n\t}\n\t\n\tmodule.exports = adler32;\n\n/***/ },\n/* 146 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule dangerousStyleValue\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar CSSProperty = __webpack_require__(57);\n\t\n\tvar isUnitlessNumber = CSSProperty.isUnitlessNumber;\n\t\n\t/**\n\t * Convert a value into the proper css writable value. The style name `name`\n\t * should be logical (no hyphens), as specified\n\t * in `CSSProperty.isUnitlessNumber`.\n\t *\n\t * @param {string} name CSS property name such as `topMargin`.\n\t * @param {*} value CSS property value such as `10px`.\n\t * @return {string} Normalized style value with dimensions applied.\n\t */\n\tfunction dangerousStyleValue(name, value) {\n\t  // Note that we've removed escapeTextForBrowser() calls here since the\n\t  // whole string will be escaped when the attribute is injected into\n\t  // the markup. If you provide unsafe user data here they can inject\n\t  // arbitrary CSS which may be problematic (I couldn't repro this):\n\t  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n\t  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\n\t  // This is not an XSS hole but instead a potential CSS injection issue\n\t  // which has lead to a greater discussion about how we're going to\n\t  // trust URLs moving forward. See #2115901\n\t\n\t  var isEmpty = value == null || typeof value === 'boolean' || value === '';\n\t  if (isEmpty) {\n\t    return '';\n\t  }\n\t\n\t  var isNonNumeric = isNaN(value);\n\t  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {\n\t    return '' + value; // cast to string\n\t  }\n\t\n\t  if (typeof value === 'string') {\n\t    value = value.trim();\n\t  }\n\t  return value + 'px';\n\t}\n\t\n\tmodule.exports = dangerousStyleValue;\n\n/***/ },\n/* 147 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule deprecated\n\t */\n\t\n\t'use strict';\n\t\n\tvar assign = __webpack_require__(2);\n\tvar warning = __webpack_require__(3);\n\t\n\t/**\n\t * This will log a single deprecation notice per function and forward the call\n\t * on to the new API.\n\t *\n\t * @param {string} fnName The name of the function\n\t * @param {string} newModule The module that fn will exist in\n\t * @param {string} newPackage The module that fn will exist in\n\t * @param {*} ctx The context this forwarded call should run in\n\t * @param {function} fn The function to forward on to\n\t * @return {function} The function that will warn once and then call fn\n\t */\n\tfunction deprecated(fnName, newModule, newPackage, ctx, fn) {\n\t  var warned = false;\n\t  if (false) {\n\t    var newFn = function () {\n\t      process.env.NODE_ENV !== 'production' ? warning(warned,\n\t      // Require examples in this string must be split to prevent React's\n\t      // build tools from mistaking them for real requires.\n\t      // Otherwise the build tools will attempt to build a '%s' module.\n\t      'React.%s is deprecated. Please use %s.%s from require' + '(\\'%s\\') ' + 'instead.', fnName, newModule, fnName, newPackage) : undefined;\n\t      warned = true;\n\t      return fn.apply(ctx, arguments);\n\t    };\n\t    // We need to make sure all properties of the original fn are copied over.\n\t    // In particular, this is needed to support PropTypes\n\t    return assign(newFn, fn);\n\t  }\n\t\n\t  return fn;\n\t}\n\t\n\tmodule.exports = deprecated;\n\n/***/ },\n/* 148 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule flattenChildren\n\t */\n\t\n\t'use strict';\n\t\n\tvar traverseAllChildren = __webpack_require__(52);\n\tvar warning = __webpack_require__(3);\n\t\n\t/**\n\t * @param {function} traverseContext Context passed through traversal.\n\t * @param {?ReactComponent} child React child component.\n\t * @param {!string} name String name of key path to child.\n\t */\n\tfunction flattenSingleChildIntoContext(traverseContext, child, name) {\n\t  // We found a component instance.\n\t  var result = traverseContext;\n\t  var keyUnique = result[name] === undefined;\n\t  if (false) {\n\t    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : undefined;\n\t  }\n\t  if (keyUnique && child != null) {\n\t    result[name] = child;\n\t  }\n\t}\n\t\n\t/**\n\t * Flattens children that are typically specified as `props.children`. Any null\n\t * children will not be included in the resulting object.\n\t * @return {!object} flattened children keyed by name.\n\t */\n\tfunction flattenChildren(children) {\n\t  if (children == null) {\n\t    return children;\n\t  }\n\t  var result = {};\n\t  traverseAllChildren(children, flattenSingleChildIntoContext, result);\n\t  return result;\n\t}\n\t\n\tmodule.exports = flattenChildren;\n\n/***/ },\n/* 149 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule getEventKey\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\tvar getEventCharCode = __webpack_require__(44);\n\t\n\t/**\n\t * Normalization of deprecated HTML5 `key` values\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n\t */\n\tvar normalizeKey = {\n\t  'Esc': 'Escape',\n\t  'Spacebar': ' ',\n\t  'Left': 'ArrowLeft',\n\t  'Up': 'ArrowUp',\n\t  'Right': 'ArrowRight',\n\t  'Down': 'ArrowDown',\n\t  'Del': 'Delete',\n\t  'Win': 'OS',\n\t  'Menu': 'ContextMenu',\n\t  'Apps': 'ContextMenu',\n\t  'Scroll': 'ScrollLock',\n\t  'MozPrintableKey': 'Unidentified'\n\t};\n\t\n\t/**\n\t * Translation from legacy `keyCode` to HTML5 `key`\n\t * Only special keys supported, all others depend on keyboard layout or browser\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n\t */\n\tvar translateToKey = {\n\t  8: 'Backspace',\n\t  9: 'Tab',\n\t  12: 'Clear',\n\t  13: 'Enter',\n\t  16: 'Shift',\n\t  17: 'Control',\n\t  18: 'Alt',\n\t  19: 'Pause',\n\t  20: 'CapsLock',\n\t  27: 'Escape',\n\t  32: ' ',\n\t  33: 'PageUp',\n\t  34: 'PageDown',\n\t  35: 'End',\n\t  36: 'Home',\n\t  37: 'ArrowLeft',\n\t  38: 'ArrowUp',\n\t  39: 'ArrowRight',\n\t  40: 'ArrowDown',\n\t  45: 'Insert',\n\t  46: 'Delete',\n\t  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',\n\t  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',\n\t  144: 'NumLock',\n\t  145: 'ScrollLock',\n\t  224: 'Meta'\n\t};\n\t\n\t/**\n\t * @param {object} nativeEvent Native browser event.\n\t * @return {string} Normalized `key` property.\n\t */\n\tfunction getEventKey(nativeEvent) {\n\t  if (nativeEvent.key) {\n\t    // Normalize inconsistent values reported by browsers due to\n\t    // implementations of a working draft specification.\n\t\n\t    // FireFox implements `key` but returns `MozPrintableKey` for all\n\t    // printable characters (normalized to `Unidentified`), ignore it.\n\t    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n\t    if (key !== 'Unidentified') {\n\t      return key;\n\t    }\n\t  }\n\t\n\t  // Browser does not implement `key`, polyfill as much of it as we can.\n\t  if (nativeEvent.type === 'keypress') {\n\t    var charCode = getEventCharCode(nativeEvent);\n\t\n\t    // The enter-key is technically both printable and non-printable and can\n\t    // thus be captured by `keypress`, no other non-printable key should.\n\t    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);\n\t  }\n\t  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {\n\t    // While user keyboard layout determines the actual meaning of each\n\t    // `keyCode` value, almost all function keys have a universal value.\n\t    return translateToKey[nativeEvent.keyCode] || 'Unidentified';\n\t  }\n\t  return '';\n\t}\n\t\n\tmodule.exports = getEventKey;\n\n/***/ },\n/* 150 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule getNodeForCharacterOffset\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Given any node return the first leaf node without children.\n\t *\n\t * @param {DOMElement|DOMTextNode} node\n\t * @return {DOMElement|DOMTextNode}\n\t */\n\tfunction getLeafNode(node) {\n\t  while (node && node.firstChild) {\n\t    node = node.firstChild;\n\t  }\n\t  return node;\n\t}\n\t\n\t/**\n\t * Get the next sibling within a container. This will walk up the\n\t * DOM if a node's siblings have been exhausted.\n\t *\n\t * @param {DOMElement|DOMTextNode} node\n\t * @return {?DOMElement|DOMTextNode}\n\t */\n\tfunction getSiblingNode(node) {\n\t  while (node) {\n\t    if (node.nextSibling) {\n\t      return node.nextSibling;\n\t    }\n\t    node = node.parentNode;\n\t  }\n\t}\n\t\n\t/**\n\t * Get object describing the nodes which contain characters at offset.\n\t *\n\t * @param {DOMElement|DOMTextNode} root\n\t * @param {number} offset\n\t * @return {?object}\n\t */\n\tfunction getNodeForCharacterOffset(root, offset) {\n\t  var node = getLeafNode(root);\n\t  var nodeStart = 0;\n\t  var nodeEnd = 0;\n\t\n\t  while (node) {\n\t    if (node.nodeType === 3) {\n\t      nodeEnd = nodeStart + node.textContent.length;\n\t\n\t      if (nodeStart <= offset && nodeEnd >= offset) {\n\t        return {\n\t          node: node,\n\t          offset: offset - nodeStart\n\t        };\n\t      }\n\t\n\t      nodeStart = nodeEnd;\n\t    }\n\t\n\t    node = getLeafNode(getSiblingNode(node));\n\t  }\n\t}\n\t\n\tmodule.exports = getNodeForCharacterOffset;\n\n/***/ },\n/* 151 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule onlyChild\n\t */\n\t'use strict';\n\t\n\tvar ReactElement = __webpack_require__(6);\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Returns the first child in a collection of children and verifies that there\n\t * is only one child in the collection. The current implementation of this\n\t * function assumes that a single child gets passed without a wrapper, but the\n\t * purpose of this helper function is to abstract away the particular structure\n\t * of children.\n\t *\n\t * @param {?object} children Child collection structure.\n\t * @return {ReactComponent} The first and only `ReactComponent` contained in the\n\t * structure.\n\t */\n\tfunction onlyChild(children) {\n\t  !ReactElement.isValidElement(children) ?  false ? invariant(false, 'onlyChild must be passed a children with exactly one child.') : invariant(false) : undefined;\n\t  return children;\n\t}\n\t\n\tmodule.exports = onlyChild;\n\n/***/ },\n/* 152 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule quoteAttributeValueForBrowser\n\t */\n\t\n\t'use strict';\n\t\n\tvar escapeTextContentForBrowser = __webpack_require__(31);\n\t\n\t/**\n\t * Escapes attribute value to prevent scripting attacks.\n\t *\n\t * @param {*} value Value to escape.\n\t * @return {string} An escaped string.\n\t */\n\tfunction quoteAttributeValueForBrowser(value) {\n\t  return '\"' + escapeTextContentForBrowser(value) + '\"';\n\t}\n\t\n\tmodule.exports = quoteAttributeValueForBrowser;\n\n/***/ },\n/* 153 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t* @providesModule renderSubtreeIntoContainer\n\t*/\n\t\n\t'use strict';\n\t\n\tvar ReactMount = __webpack_require__(5);\n\t\n\tmodule.exports = ReactMount.renderSubtreeIntoContainer;\n\n/***/ },\n/* 154 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule camelize\n\t * @typechecks\n\t */\n\t\n\t\"use strict\";\n\t\n\tvar _hyphenPattern = /-(.)/g;\n\t\n\t/**\n\t * Camelcases a hyphenated string, for example:\n\t *\n\t *   > camelize('background-color')\n\t *   < \"backgroundColor\"\n\t *\n\t * @param {string} string\n\t * @return {string}\n\t */\n\tfunction camelize(string) {\n\t  return string.replace(_hyphenPattern, function (_, character) {\n\t    return character.toUpperCase();\n\t  });\n\t}\n\t\n\tmodule.exports = camelize;\n\n/***/ },\n/* 155 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule camelizeStyleName\n\t * @typechecks\n\t */\n\t\n\t'use strict';\n\t\n\tvar camelize = __webpack_require__(154);\n\t\n\tvar msPattern = /^-ms-/;\n\t\n\t/**\n\t * Camelcases a hyphenated CSS property name, for example:\n\t *\n\t *   > camelizeStyleName('background-color')\n\t *   < \"backgroundColor\"\n\t *   > camelizeStyleName('-moz-transition')\n\t *   < \"MozTransition\"\n\t *   > camelizeStyleName('-ms-transition')\n\t *   < \"msTransition\"\n\t *\n\t * As Andi Smith suggests\n\t * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix\n\t * is converted to lowercase `ms`.\n\t *\n\t * @param {string} string\n\t * @return {string}\n\t */\n\tfunction camelizeStyleName(string) {\n\t  return camelize(string.replace(msPattern, 'ms-'));\n\t}\n\t\n\tmodule.exports = camelizeStyleName;\n\n/***/ },\n/* 156 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule createArrayFromMixed\n\t * @typechecks\n\t */\n\t\n\t'use strict';\n\t\n\tvar toArray = __webpack_require__(165);\n\t\n\t/**\n\t * Perform a heuristic test to determine if an object is \"array-like\".\n\t *\n\t *   A monk asked Joshu, a Zen master, \"Has a dog Buddha nature?\"\n\t *   Joshu replied: \"Mu.\"\n\t *\n\t * This function determines if its argument has \"array nature\": it returns\n\t * true if the argument is an actual array, an `arguments' object, or an\n\t * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).\n\t *\n\t * It will return false for other array-like objects like Filelist.\n\t *\n\t * @param {*} obj\n\t * @return {boolean}\n\t */\n\tfunction hasArrayNature(obj) {\n\t  return(\n\t    // not null/false\n\t    !!obj && (\n\t    // arrays are objects, NodeLists are functions in Safari\n\t    typeof obj == 'object' || typeof obj == 'function') &&\n\t    // quacks like an array\n\t    'length' in obj &&\n\t    // not window\n\t    !('setInterval' in obj) &&\n\t    // no DOM node should be considered an array-like\n\t    // a 'select' element has 'length' and 'item' properties on IE8\n\t    typeof obj.nodeType != 'number' && (\n\t    // a real array\n\t    Array.isArray(obj) ||\n\t    // arguments\n\t    'callee' in obj ||\n\t    // HTMLCollection/NodeList\n\t    'item' in obj)\n\t  );\n\t}\n\t\n\t/**\n\t * Ensure that the argument is an array by wrapping it in an array if it is not.\n\t * Creates a copy of the argument if it is already an array.\n\t *\n\t * This is mostly useful idiomatically:\n\t *\n\t *   var createArrayFromMixed = require('createArrayFromMixed');\n\t *\n\t *   function takesOneOrMoreThings(things) {\n\t *     things = createArrayFromMixed(things);\n\t *     ...\n\t *   }\n\t *\n\t * This allows you to treat `things' as an array, but accept scalars in the API.\n\t *\n\t * If you need to convert an array-like object, like `arguments`, into an array\n\t * use toArray instead.\n\t *\n\t * @param {*} obj\n\t * @return {array}\n\t */\n\tfunction createArrayFromMixed(obj) {\n\t  if (!hasArrayNature(obj)) {\n\t    return [obj];\n\t  } else if (Array.isArray(obj)) {\n\t    return obj.slice();\n\t  } else {\n\t    return toArray(obj);\n\t  }\n\t}\n\t\n\tmodule.exports = createArrayFromMixed;\n\n/***/ },\n/* 157 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule createNodesFromMarkup\n\t * @typechecks\n\t */\n\t\n\t/*eslint-disable fb-www/unsafe-html*/\n\t\n\t'use strict';\n\t\n\tvar ExecutionEnvironment = __webpack_require__(4);\n\t\n\tvar createArrayFromMixed = __webpack_require__(156);\n\tvar getMarkupWrap = __webpack_require__(89);\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Dummy container used to render all markup.\n\t */\n\tvar dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\t\n\t/**\n\t * Pattern used by `getNodeName`.\n\t */\n\tvar nodeNamePattern = /^\\s*<(\\w+)/;\n\t\n\t/**\n\t * Extracts the `nodeName` of the first element in a string of markup.\n\t *\n\t * @param {string} markup String of markup.\n\t * @return {?string} Node name of the supplied markup.\n\t */\n\tfunction getNodeName(markup) {\n\t  var nodeNameMatch = markup.match(nodeNamePattern);\n\t  return nodeNameMatch && nodeNameMatch[1].toLowerCase();\n\t}\n\t\n\t/**\n\t * Creates an array containing the nodes rendered from the supplied markup. The\n\t * optionally supplied `handleScript` function will be invoked once for each\n\t * <script> element that is rendered. If no `handleScript` function is supplied,\n\t * an exception is thrown if any <script> elements are rendered.\n\t *\n\t * @param {string} markup A string of valid HTML markup.\n\t * @param {?function} handleScript Invoked once for each rendered <script>.\n\t * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.\n\t */\n\tfunction createNodesFromMarkup(markup, handleScript) {\n\t  var node = dummyNode;\n\t  !!!dummyNode ?  false ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : undefined;\n\t  var nodeName = getNodeName(markup);\n\t\n\t  var wrap = nodeName && getMarkupWrap(nodeName);\n\t  if (wrap) {\n\t    node.innerHTML = wrap[1] + markup + wrap[2];\n\t\n\t    var wrapDepth = wrap[0];\n\t    while (wrapDepth--) {\n\t      node = node.lastChild;\n\t    }\n\t  } else {\n\t    node.innerHTML = markup;\n\t  }\n\t\n\t  var scripts = node.getElementsByTagName('script');\n\t  if (scripts.length) {\n\t    !handleScript ?  false ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : undefined;\n\t    createArrayFromMixed(scripts).forEach(handleScript);\n\t  }\n\t\n\t  var nodes = createArrayFromMixed(node.childNodes);\n\t  while (node.lastChild) {\n\t    node.removeChild(node.lastChild);\n\t  }\n\t  return nodes;\n\t}\n\t\n\tmodule.exports = createNodesFromMarkup;\n\n/***/ },\n/* 158 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule getUnboundedScrollPosition\n\t * @typechecks\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Gets the scroll position of the supplied element or window.\n\t *\n\t * The return values are unbounded, unlike `getScrollPosition`. This means they\n\t * may be negative or exceed the element boundaries (which is possible using\n\t * inertial scrolling).\n\t *\n\t * @param {DOMWindow|DOMElement} scrollable\n\t * @return {object} Map with `x` and `y` keys.\n\t */\n\tfunction getUnboundedScrollPosition(scrollable) {\n\t  if (scrollable === window) {\n\t    return {\n\t      x: window.pageXOffset || document.documentElement.scrollLeft,\n\t      y: window.pageYOffset || document.documentElement.scrollTop\n\t    };\n\t  }\n\t  return {\n\t    x: scrollable.scrollLeft,\n\t    y: scrollable.scrollTop\n\t  };\n\t}\n\t\n\tmodule.exports = getUnboundedScrollPosition;\n\n/***/ },\n/* 159 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule hyphenate\n\t * @typechecks\n\t */\n\t\n\t'use strict';\n\t\n\tvar _uppercasePattern = /([A-Z])/g;\n\t\n\t/**\n\t * Hyphenates a camelcased string, for example:\n\t *\n\t *   > hyphenate('backgroundColor')\n\t *   < \"background-color\"\n\t *\n\t * For CSS style names, use `hyphenateStyleName` instead which works properly\n\t * with all vendor prefixes, including `ms`.\n\t *\n\t * @param {string} string\n\t * @return {string}\n\t */\n\tfunction hyphenate(string) {\n\t  return string.replace(_uppercasePattern, '-$1').toLowerCase();\n\t}\n\t\n\tmodule.exports = hyphenate;\n\n/***/ },\n/* 160 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule hyphenateStyleName\n\t * @typechecks\n\t */\n\t\n\t'use strict';\n\t\n\tvar hyphenate = __webpack_require__(159);\n\t\n\tvar msPattern = /^ms-/;\n\t\n\t/**\n\t * Hyphenates a camelcased CSS property name, for example:\n\t *\n\t *   > hyphenateStyleName('backgroundColor')\n\t *   < \"background-color\"\n\t *   > hyphenateStyleName('MozTransition')\n\t *   < \"-moz-transition\"\n\t *   > hyphenateStyleName('msTransition')\n\t *   < \"-ms-transition\"\n\t *\n\t * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n\t * is converted to `-ms-`.\n\t *\n\t * @param {string} string\n\t * @return {string}\n\t */\n\tfunction hyphenateStyleName(string) {\n\t  return hyphenate(string).replace(msPattern, '-ms-');\n\t}\n\t\n\tmodule.exports = hyphenateStyleName;\n\n/***/ },\n/* 161 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule isNode\n\t * @typechecks\n\t */\n\t\n\t/**\n\t * @param {*} object The object to check.\n\t * @return {boolean} Whether or not the object is a DOM node.\n\t */\n\t'use strict';\n\t\n\tfunction isNode(object) {\n\t  return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n\t}\n\t\n\tmodule.exports = isNode;\n\n/***/ },\n/* 162 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule isTextNode\n\t * @typechecks\n\t */\n\t\n\t'use strict';\n\t\n\tvar isNode = __webpack_require__(161);\n\t\n\t/**\n\t * @param {*} object The object to check.\n\t * @return {boolean} Whether or not the object is a DOM text node.\n\t */\n\tfunction isTextNode(object) {\n\t  return isNode(object) && object.nodeType == 3;\n\t}\n\t\n\tmodule.exports = isTextNode;\n\n/***/ },\n/* 163 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule mapObject\n\t */\n\t\n\t'use strict';\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\t/**\n\t * Executes the provided `callback` once for each enumerable own property in the\n\t * object and constructs a new object from the results. The `callback` is\n\t * invoked with three arguments:\n\t *\n\t *  - the property value\n\t *  - the property name\n\t *  - the object being traversed\n\t *\n\t * Properties that are added after the call to `mapObject` will not be visited\n\t * by `callback`. If the values of existing properties are changed, the value\n\t * passed to `callback` will be the value at the time `mapObject` visits them.\n\t * Properties that are deleted before being visited are not visited.\n\t *\n\t * @grep function objectMap()\n\t * @grep function objMap()\n\t *\n\t * @param {?object} object\n\t * @param {function} callback\n\t * @param {*} context\n\t * @return {?object}\n\t */\n\tfunction mapObject(object, callback, context) {\n\t  if (!object) {\n\t    return null;\n\t  }\n\t  var result = {};\n\t  for (var name in object) {\n\t    if (hasOwnProperty.call(object, name)) {\n\t      result[name] = callback.call(context, object[name], name, object);\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = mapObject;\n\n/***/ },\n/* 164 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule memoizeStringOnly\n\t * @typechecks static-only\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Memoizes the return value of a function that accepts one string argument.\n\t *\n\t * @param {function} callback\n\t * @return {function}\n\t */\n\tfunction memoizeStringOnly(callback) {\n\t  var cache = {};\n\t  return function (string) {\n\t    if (!cache.hasOwnProperty(string)) {\n\t      cache[string] = callback.call(this, string);\n\t    }\n\t    return cache[string];\n\t  };\n\t}\n\t\n\tmodule.exports = memoizeStringOnly;\n\n/***/ },\n/* 165 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright 2013-2015, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * LICENSE file in the root directory of this source tree. An additional grant\n\t * of patent rights can be found in the PATENTS file in the same directory.\n\t *\n\t * @providesModule toArray\n\t * @typechecks\n\t */\n\t\n\t'use strict';\n\t\n\tvar invariant = __webpack_require__(1);\n\t\n\t/**\n\t * Convert array-like objects to arrays.\n\t *\n\t * This API assumes the caller knows the contents of the data type. For less\n\t * well defined inputs use createArrayFromMixed.\n\t *\n\t * @param {object|function|filelist} obj\n\t * @return {array}\n\t */\n\tfunction toArray(obj) {\n\t  var length = obj.length;\n\t\n\t  // Some browse builtin objects can report typeof 'function' (e.g. NodeList in\n\t  // old versions of Safari).\n\t  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ?  false ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : undefined;\n\t\n\t  !(typeof length === 'number') ?  false ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : undefined;\n\t\n\t  !(length === 0 || length - 1 in obj) ?  false ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : undefined;\n\t\n\t  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs\n\t  // without method will throw during the slice call and skip straight to the\n\t  // fallback.\n\t  if (obj.hasOwnProperty) {\n\t    try {\n\t      return Array.prototype.slice.call(obj);\n\t    } catch (e) {\n\t      // IE < 9 does not support Array#slice on collections objects\n\t    }\n\t  }\n\t\n\t  // Fall back to copying key by key. This assumes all keys have a value,\n\t  // so will not preserve sparsely populated inputs.\n\t  var ret = Array(length);\n\t  for (var ii = 0; ii < length; ii++) {\n\t    ret[ii] = obj[ii];\n\t  }\n\t  return ret;\n\t}\n\t\n\tmodule.exports = toArray;\n\n/***/ },\n/* 166 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** yun-ui-kit.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap e534ca49fe25e7e5d28f\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule invariant\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/invariant.js\n ** module id = 1\n ** module chunks = 0\n **/","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Object.assign\n */\n\n// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign\n\n'use strict';\n\nfunction assign(target, sources) {\n  if (target == null) {\n    throw new TypeError('Object.assign target cannot be null or undefined');\n  }\n\n  var to = Object(target);\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {\n    var nextSource = arguments[nextIndex];\n    if (nextSource == null) {\n      continue;\n    }\n\n    var from = Object(nextSource);\n\n    // We don't currently support accessors nor proxies. Therefore this\n    // copy cannot throw. If we ever supported this then we must handle\n    // exceptions and side-effects. We don't support symbols so they won't\n    // be transferred.\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n  }\n\n  return to;\n}\n\nmodule.exports = assign;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/Object.assign.js\n ** module id = 2\n ** module chunks = 0\n **/","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule warning\n */\n\n'use strict';\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\n\nif (process.env.NODE_ENV !== 'production') {\n  warning = function (condition, format) {\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n\n    if (format.indexOf('Failed Composite propType: ') === 0) {\n      return; // Ignore CompositeComponent proptype check.\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' + format.replace(/%s/g, function () {\n        return args[argIndex++];\n      });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // --- Welcome to debugging React ---\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch (x) {}\n    }\n  };\n}\n\nmodule.exports = warning;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/warning.js\n ** module id = 3\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ExecutionEnvironment\n */\n\n'use strict';\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/ExecutionEnvironment.js\n ** module id = 4\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMount\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactDOMFeatureFlags = require('./ReactDOMFeatureFlags');\nvar ReactElement = require('./ReactElement');\nvar ReactEmptyComponentRegistry = require('./ReactEmptyComponentRegistry');\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactMarkupChecksum = require('./ReactMarkupChecksum');\nvar ReactPerf = require('./ReactPerf');\nvar ReactReconciler = require('./ReactReconciler');\nvar ReactUpdateQueue = require('./ReactUpdateQueue');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar assign = require('./Object.assign');\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar containsNode = require('fbjs/lib/containsNode');\nvar instantiateReactComponent = require('./instantiateReactComponent');\nvar invariant = require('fbjs/lib/invariant');\nvar setInnerHTML = require('./setInnerHTML');\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\nvar validateDOMNesting = require('./validateDOMNesting');\nvar warning = require('fbjs/lib/warning');\n\nvar ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;\nvar nodeCache = {};\n\nvar ELEMENT_NODE_TYPE = 1;\nvar DOC_NODE_TYPE = 9;\nvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\nvar ownerDocumentContextKey = '__ReactMount_ownerDocument$' + Math.random().toString(36).slice(2);\n\n/** Mapping from reactRootID to React component instance. */\nvar instancesByReactRootID = {};\n\n/** Mapping from reactRootID to `container` nodes. */\nvar containersByReactRootID = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  /** __DEV__-only mapping from reactRootID to root elements. */\n  var rootElementsByReactRootID = {};\n}\n\n// Used to store breadth-first search state in findComponentRoot.\nvar findComponentRootReusableArray = [];\n\n/**\n * Finds the index of the first character\n * that's not common between the two given strings.\n *\n * @return {number} the index of the character where the strings diverge\n */\nfunction firstDifferenceIndex(string1, string2) {\n  var minLen = Math.min(string1.length, string2.length);\n  for (var i = 0; i < minLen; i++) {\n    if (string1.charAt(i) !== string2.charAt(i)) {\n      return i;\n    }\n  }\n  return string1.length === string2.length ? -1 : minLen;\n}\n\n/**\n * @param {DOMElement|DOMDocument} container DOM element that may contain\n * a React component\n * @return {?*} DOM element that may have the reactRoot ID, or null.\n */\nfunction getReactRootElementInContainer(container) {\n  if (!container) {\n    return null;\n  }\n\n  if (container.nodeType === DOC_NODE_TYPE) {\n    return container.documentElement;\n  } else {\n    return container.firstChild;\n  }\n}\n\n/**\n * @param {DOMElement} container DOM element that may contain a React component.\n * @return {?string} A \"reactRoot\" ID, if a React component is rendered.\n */\nfunction getReactRootID(container) {\n  var rootElement = getReactRootElementInContainer(container);\n  return rootElement && ReactMount.getID(rootElement);\n}\n\n/**\n * Accessing node[ATTR_NAME] or calling getAttribute(ATTR_NAME) on a form\n * element can return its control whose name or ID equals ATTR_NAME. All\n * DOM nodes support `getAttributeNode` but this can also get called on\n * other objects so just return '' if we're given something other than a\n * DOM node (such as window).\n *\n * @param {?DOMElement|DOMWindow|DOMDocument|DOMTextNode} node DOM node.\n * @return {string} ID of the supplied `domNode`.\n */\nfunction getID(node) {\n  var id = internalGetID(node);\n  if (id) {\n    if (nodeCache.hasOwnProperty(id)) {\n      var cached = nodeCache[id];\n      if (cached !== node) {\n        !!isValid(cached, id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactMount: Two valid but unequal nodes with the same `%s`: %s', ATTR_NAME, id) : invariant(false) : undefined;\n\n        nodeCache[id] = node;\n      }\n    } else {\n      nodeCache[id] = node;\n    }\n  }\n\n  return id;\n}\n\nfunction internalGetID(node) {\n  // If node is something like a window, document, or text node, none of\n  // which support attributes or a .getAttribute method, gracefully return\n  // the empty string, as if the attribute were missing.\n  return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';\n}\n\n/**\n * Sets the React-specific ID of the given node.\n *\n * @param {DOMElement} node The DOM node whose ID will be set.\n * @param {string} id The value of the ID attribute.\n */\nfunction setID(node, id) {\n  var oldID = internalGetID(node);\n  if (oldID !== id) {\n    delete nodeCache[oldID];\n  }\n  node.setAttribute(ATTR_NAME, id);\n  nodeCache[id] = node;\n}\n\n/**\n * Finds the node with the supplied React-generated DOM ID.\n *\n * @param {string} id A React-generated DOM ID.\n * @return {DOMElement} DOM node with the suppled `id`.\n * @internal\n */\nfunction getNode(id) {\n  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {\n    nodeCache[id] = ReactMount.findReactNodeByID(id);\n  }\n  return nodeCache[id];\n}\n\n/**\n * Finds the node with the supplied public React instance.\n *\n * @param {*} instance A public React instance.\n * @return {?DOMElement} DOM node with the suppled `id`.\n * @internal\n */\nfunction getNodeFromInstance(instance) {\n  var id = ReactInstanceMap.get(instance)._rootNodeID;\n  if (ReactEmptyComponentRegistry.isNullComponentID(id)) {\n    return null;\n  }\n  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {\n    nodeCache[id] = ReactMount.findReactNodeByID(id);\n  }\n  return nodeCache[id];\n}\n\n/**\n * A node is \"valid\" if it is contained by a currently mounted container.\n *\n * This means that the node does not have to be contained by a document in\n * order to be considered valid.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @param {string} id The expected ID of the node.\n * @return {boolean} Whether the node is contained by a mounted container.\n */\nfunction isValid(node, id) {\n  if (node) {\n    !(internalGetID(node) === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactMount: Unexpected modification of `%s`', ATTR_NAME) : invariant(false) : undefined;\n\n    var container = ReactMount.findReactContainerForID(id);\n    if (container && containsNode(container, node)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Causes the cache to forget about one React-specific ID.\n *\n * @param {string} id The ID to forget.\n */\nfunction purgeID(id) {\n  delete nodeCache[id];\n}\n\nvar deepestNodeSoFar = null;\nfunction findDeepestCachedAncestorImpl(ancestorID) {\n  var ancestor = nodeCache[ancestorID];\n  if (ancestor && isValid(ancestor, ancestorID)) {\n    deepestNodeSoFar = ancestor;\n  } else {\n    // This node isn't populated in the cache, so presumably none of its\n    // descendants are. Break out of the loop.\n    return false;\n  }\n}\n\n/**\n * Return the deepest cached node whose ID is a prefix of `targetID`.\n */\nfunction findDeepestCachedAncestor(targetID) {\n  deepestNodeSoFar = null;\n  ReactInstanceHandles.traverseAncestors(targetID, findDeepestCachedAncestorImpl);\n\n  var foundNode = deepestNodeSoFar;\n  deepestNodeSoFar = null;\n  return foundNode;\n}\n\n/**\n * Mounts this component and inserts it into the DOM.\n *\n * @param {ReactComponent} componentInstance The instance to mount.\n * @param {string} rootID DOM ID of the root node.\n * @param {DOMElement} container DOM element to mount into.\n * @param {ReactReconcileTransaction} transaction\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\n */\nfunction mountComponentIntoNode(componentInstance, rootID, container, transaction, shouldReuseMarkup, context) {\n  if (ReactDOMFeatureFlags.useCreateElement) {\n    context = assign({}, context);\n    if (container.nodeType === DOC_NODE_TYPE) {\n      context[ownerDocumentContextKey] = container;\n    } else {\n      context[ownerDocumentContextKey] = container.ownerDocument;\n    }\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (context === emptyObject) {\n      context = {};\n    }\n    var tag = container.nodeName.toLowerCase();\n    context[validateDOMNesting.ancestorInfoContextKey] = validateDOMNesting.updatedAncestorInfo(null, tag, null);\n  }\n  var markup = ReactReconciler.mountComponent(componentInstance, rootID, transaction, context);\n  componentInstance._renderedComponent._topLevelWrapper = componentInstance;\n  ReactMount._mountImageIntoNode(markup, container, shouldReuseMarkup, transaction);\n}\n\n/**\n * Batched mount.\n *\n * @param {ReactComponent} componentInstance The instance to mount.\n * @param {string} rootID DOM ID of the root node.\n * @param {DOMElement} container DOM element to mount into.\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\n */\nfunction batchedMountComponentIntoNode(componentInstance, rootID, container, shouldReuseMarkup, context) {\n  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(\n  /* forceHTML */shouldReuseMarkup);\n  transaction.perform(mountComponentIntoNode, null, componentInstance, rootID, container, transaction, shouldReuseMarkup, context);\n  ReactUpdates.ReactReconcileTransaction.release(transaction);\n}\n\n/**\n * Unmounts a component and removes it from the DOM.\n *\n * @param {ReactComponent} instance React component instance.\n * @param {DOMElement} container DOM element to unmount from.\n * @final\n * @internal\n * @see {ReactMount.unmountComponentAtNode}\n */\nfunction unmountComponentFromNode(instance, container) {\n  ReactReconciler.unmountComponent(instance);\n\n  if (container.nodeType === DOC_NODE_TYPE) {\n    container = container.documentElement;\n  }\n\n  // http://jsperf.com/emptying-a-node\n  while (container.lastChild) {\n    container.removeChild(container.lastChild);\n  }\n}\n\n/**\n * True if the supplied DOM node has a direct React-rendered child that is\n * not a React root element. Useful for warning in `render`,\n * `unmountComponentAtNode`, etc.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM element contains a direct child that was\n * rendered by React but is not a root element.\n * @internal\n */\nfunction hasNonRootReactChild(node) {\n  var reactRootID = getReactRootID(node);\n  return reactRootID ? reactRootID !== ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID) : false;\n}\n\n/**\n * Returns the first (deepest) ancestor of a node which is rendered by this copy\n * of React.\n */\nfunction findFirstReactDOMImpl(node) {\n  // This node might be from another React instance, so we make sure not to\n  // examine the node cache here\n  for (; node && node.parentNode !== node; node = node.parentNode) {\n    if (node.nodeType !== 1) {\n      // Not a DOMElement, therefore not a React component\n      continue;\n    }\n    var nodeID = internalGetID(node);\n    if (!nodeID) {\n      continue;\n    }\n    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);\n\n    // If containersByReactRootID contains the container we find by crawling up\n    // the tree, we know that this instance of React rendered the node.\n    // nb. isValid's strategy (with containsNode) does not work because render\n    // trees may be nested and we don't want a false positive in that case.\n    var current = node;\n    var lastID;\n    do {\n      lastID = internalGetID(current);\n      current = current.parentNode;\n      if (current == null) {\n        // The passed-in node has been detached from the container it was\n        // originally rendered into.\n        return null;\n      }\n    } while (lastID !== reactRootID);\n\n    if (current === containersByReactRootID[reactRootID]) {\n      return node;\n    }\n  }\n  return null;\n}\n\n/**\n * Temporary (?) hack so that we can store all top-level pending updates on\n * composites instead of having to worry about different types of components\n * here.\n */\nvar TopLevelWrapper = function () {};\nTopLevelWrapper.prototype.isReactComponent = {};\nif (process.env.NODE_ENV !== 'production') {\n  TopLevelWrapper.displayName = 'TopLevelWrapper';\n}\nTopLevelWrapper.prototype.render = function () {\n  // this.props is actually a ReactElement\n  return this.props;\n};\n\n/**\n * Mounting is the process of initializing a React component by creating its\n * representative DOM elements and inserting them into a supplied `container`.\n * Any prior content inside `container` is destroyed in the process.\n *\n *   ReactMount.render(\n *     component,\n *     document.getElementById('container')\n *   );\n *\n *   <div id=\"container\">                   <-- Supplied `container`.\n *     <div data-reactid=\".3\">              <-- Rendered reactRoot of React\n *       // ...                                 component.\n *     </div>\n *   </div>\n *\n * Inside of `container`, the first element rendered is the \"reactRoot\".\n */\nvar ReactMount = {\n\n  TopLevelWrapper: TopLevelWrapper,\n\n  /** Exposed for debugging purposes **/\n  _instancesByReactRootID: instancesByReactRootID,\n\n  /**\n   * This is a hook provided to support rendering React components while\n   * ensuring that the apparent scroll position of its `container` does not\n   * change.\n   *\n   * @param {DOMElement} container The `container` being rendered into.\n   * @param {function} renderCallback This must be called once to do the render.\n   */\n  scrollMonitor: function (container, renderCallback) {\n    renderCallback();\n  },\n\n  /**\n   * Take a component that's already mounted into the DOM and replace its props\n   * @param {ReactComponent} prevComponent component instance already in the DOM\n   * @param {ReactElement} nextElement component instance to render\n   * @param {DOMElement} container container to render into\n   * @param {?function} callback function triggered on completion\n   */\n  _updateRootComponent: function (prevComponent, nextElement, container, callback) {\n    ReactMount.scrollMonitor(container, function () {\n      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement);\n      if (callback) {\n        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);\n      }\n    });\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Record the root element in case it later gets transplanted.\n      rootElementsByReactRootID[getReactRootID(container)] = getReactRootElementInContainer(container);\n    }\n\n    return prevComponent;\n  },\n\n  /**\n   * Register a component into the instance map and starts scroll value\n   * monitoring\n   * @param {ReactComponent} nextComponent component instance to render\n   * @param {DOMElement} container container to render into\n   * @return {string} reactRoot ID prefix\n   */\n  _registerComponent: function (nextComponent, container) {\n    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : invariant(false) : undefined;\n\n    ReactBrowserEventEmitter.ensureScrollValueMonitoring();\n\n    var reactRootID = ReactMount.registerContainer(container);\n    instancesByReactRootID[reactRootID] = nextComponent;\n    return reactRootID;\n  },\n\n  /**\n   * Render a new component into the DOM.\n   * @param {ReactElement} nextElement element to render\n   * @param {DOMElement} container container to render into\n   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion\n   * @return {ReactComponent} nextComponent\n   */\n  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {\n    // Various parts of our code (such as ReactCompositeComponent's\n    // _renderValidatedComponent) assume that calls to render aren't nested;\n    // verify that that's the case.\n    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : undefined;\n\n    var componentInstance = instantiateReactComponent(nextElement, null);\n    var reactRootID = ReactMount._registerComponent(componentInstance, container);\n\n    // The initial render is synchronous but any updates that happen during\n    // rendering, in componentWillMount or componentDidMount, will be batched\n    // according to the current batching strategy.\n\n    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, reactRootID, container, shouldReuseMarkup, context);\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Record the root element in case it later gets transplanted.\n      rootElementsByReactRootID[reactRootID] = getReactRootElementInContainer(container);\n    }\n\n    return componentInstance;\n  },\n\n  /**\n   * Renders a React component into the DOM in the supplied `container`.\n   *\n   * If the React component was previously rendered into `container`, this will\n   * perform an update on it and only mutate the DOM as necessary to reflect the\n   * latest React component.\n   *\n   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.\n   * @param {ReactElement} nextElement Component element to render.\n   * @param {DOMElement} container DOM element to render into.\n   * @param {?function} callback function triggered on completion\n   * @return {ReactComponent} Component instance rendered in `container`.\n   */\n  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\n    !(parentComponent != null && parentComponent._reactInternalInstance != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : invariant(false) : undefined;\n    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);\n  },\n\n  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\n    !ReactElement.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing an element string, make sure to instantiate ' + 'it by passing it to React.createElement.' : typeof nextElement === 'function' ? ' Instead of passing a component class, make sure to instantiate ' + 'it by passing it to React.createElement.' :\n    // Check if it quacks like an element\n    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : invariant(false) : undefined;\n\n    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : undefined;\n\n    var nextWrappedElement = new ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);\n\n    var prevComponent = instancesByReactRootID[getReactRootID(container)];\n\n    if (prevComponent) {\n      var prevWrappedElement = prevComponent._currentElement;\n      var prevElement = prevWrappedElement.props;\n      if (shouldUpdateReactComponent(prevElement, nextElement)) {\n        var publicInst = prevComponent._renderedComponent.getPublicInstance();\n        var updatedCallback = callback && function () {\n          callback.call(publicInst);\n        };\n        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, container, updatedCallback);\n        return publicInst;\n      } else {\n        ReactMount.unmountComponentAtNode(container);\n      }\n    }\n\n    var reactRootElement = getReactRootElementInContainer(container);\n    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);\n    var containerHasNonRootReactChild = hasNonRootReactChild(container);\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : undefined;\n\n      if (!containerHasReactMarkup || reactRootElement.nextSibling) {\n        var rootElementSibling = reactRootElement;\n        while (rootElementSibling) {\n          if (internalGetID(rootElementSibling)) {\n            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : undefined;\n            break;\n          }\n          rootElementSibling = rootElementSibling.nextSibling;\n        }\n      }\n    }\n\n    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;\n    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, parentComponent != null ? parentComponent._reactInternalInstance._processChildContext(parentComponent._reactInternalInstance._context) : emptyObject)._renderedComponent.getPublicInstance();\n    if (callback) {\n      callback.call(component);\n    }\n    return component;\n  },\n\n  /**\n   * Renders a React component into the DOM in the supplied `container`.\n   *\n   * If the React component was previously rendered into `container`, this will\n   * perform an update on it and only mutate the DOM as necessary to reflect the\n   * latest React component.\n   *\n   * @param {ReactElement} nextElement Component element to render.\n   * @param {DOMElement} container DOM element to render into.\n   * @param {?function} callback function triggered on completion\n   * @return {ReactComponent} Component instance rendered in `container`.\n   */\n  render: function (nextElement, container, callback) {\n    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);\n  },\n\n  /**\n   * Registers a container node into which React components will be rendered.\n   * This also creates the \"reactRoot\" ID that will be assigned to the element\n   * rendered within.\n   *\n   * @param {DOMElement} container DOM element to register as a container.\n   * @return {string} The \"reactRoot\" ID of elements rendered within.\n   */\n  registerContainer: function (container) {\n    var reactRootID = getReactRootID(container);\n    if (reactRootID) {\n      // If one exists, make sure it is a valid \"reactRoot\" ID.\n      reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);\n    }\n    if (!reactRootID) {\n      // No valid \"reactRoot\" ID found, create one.\n      reactRootID = ReactInstanceHandles.createReactRootID();\n    }\n    containersByReactRootID[reactRootID] = container;\n    return reactRootID;\n  },\n\n  /**\n   * Unmounts and destroys the React component rendered in the `container`.\n   *\n   * @param {DOMElement} container DOM element containing a React component.\n   * @return {boolean} True if a component was found in and unmounted from\n   *                   `container`\n   */\n  unmountComponentAtNode: function (container) {\n    // Various parts of our code (such as ReactCompositeComponent's\n    // _renderValidatedComponent) assume that calls to render aren't nested;\n    // verify that that's the case. (Strictly speaking, unmounting won't cause a\n    // render but we still don't expect to be in a render call here.)\n    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : undefined;\n\n    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : invariant(false) : undefined;\n\n    var reactRootID = getReactRootID(container);\n    var component = instancesByReactRootID[reactRootID];\n    if (!component) {\n      // Check if the node being unmounted was rendered by React, but isn't a\n      // root node.\n      var containerHasNonRootReactChild = hasNonRootReactChild(container);\n\n      // Check if the container itself is a React root node.\n      var containerID = internalGetID(container);\n      var isContainerReactRoot = containerID && containerID === ReactInstanceHandles.getReactRootIDFromNodeID(containerID);\n\n      if (process.env.NODE_ENV !== 'production') {\n        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : undefined;\n      }\n\n      return false;\n    }\n    ReactUpdates.batchedUpdates(unmountComponentFromNode, component, container);\n    delete instancesByReactRootID[reactRootID];\n    delete containersByReactRootID[reactRootID];\n    if (process.env.NODE_ENV !== 'production') {\n      delete rootElementsByReactRootID[reactRootID];\n    }\n    return true;\n  },\n\n  /**\n   * Finds the container DOM element that contains React component to which the\n   * supplied DOM `id` belongs.\n   *\n   * @param {string} id The ID of an element rendered by a React component.\n   * @return {?DOMElement} DOM element that contains the `id`.\n   */\n  findReactContainerForID: function (id) {\n    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(id);\n    var container = containersByReactRootID[reactRootID];\n\n    if (process.env.NODE_ENV !== 'production') {\n      var rootElement = rootElementsByReactRootID[reactRootID];\n      if (rootElement && rootElement.parentNode !== container) {\n        process.env.NODE_ENV !== 'production' ? warning(\n        // Call internalGetID here because getID calls isValid which calls\n        // findReactContainerForID (this function).\n        internalGetID(rootElement) === reactRootID, 'ReactMount: Root element ID differed from reactRootID.') : undefined;\n        var containerChild = container.firstChild;\n        if (containerChild && reactRootID === internalGetID(containerChild)) {\n          // If the container has a new child with the same ID as the old\n          // root element, then rootElementsByReactRootID[reactRootID] is\n          // just stale and needs to be updated. The case that deserves a\n          // warning is when the container is empty.\n          rootElementsByReactRootID[reactRootID] = containerChild;\n        } else {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'ReactMount: Root element has been removed from its original ' + 'container. New container: %s', rootElement.parentNode) : undefined;\n        }\n      }\n    }\n\n    return container;\n  },\n\n  /**\n   * Finds an element rendered by React with the supplied ID.\n   *\n   * @param {string} id ID of a DOM node in the React component.\n   * @return {DOMElement} Root DOM node of the React component.\n   */\n  findReactNodeByID: function (id) {\n    var reactRoot = ReactMount.findReactContainerForID(id);\n    return ReactMount.findComponentRoot(reactRoot, id);\n  },\n\n  /**\n   * Traverses up the ancestors of the supplied node to find a node that is a\n   * DOM representation of a React component rendered by this copy of React.\n   *\n   * @param {*} node\n   * @return {?DOMEventTarget}\n   * @internal\n   */\n  getFirstReactDOM: function (node) {\n    return findFirstReactDOMImpl(node);\n  },\n\n  /**\n   * Finds a node with the supplied `targetID` inside of the supplied\n   * `ancestorNode`.  Exploits the ID naming scheme to perform the search\n   * quickly.\n   *\n   * @param {DOMEventTarget} ancestorNode Search from this root.\n   * @pararm {string} targetID ID of the DOM representation of the component.\n   * @return {DOMEventTarget} DOM node with the supplied `targetID`.\n   * @internal\n   */\n  findComponentRoot: function (ancestorNode, targetID) {\n    var firstChildren = findComponentRootReusableArray;\n    var childIndex = 0;\n\n    var deepestAncestor = findDeepestCachedAncestor(targetID) || ancestorNode;\n\n    if (process.env.NODE_ENV !== 'production') {\n      // This will throw on the next line; give an early warning\n      process.env.NODE_ENV !== 'production' ? warning(deepestAncestor != null, 'React can\\'t find the root component node for data-reactid value ' + '`%s`. If you\\'re seeing this message, it probably means that ' + 'you\\'ve loaded two copies of React on the page. At this time, only ' + 'a single copy of React can be loaded at a time.', targetID) : undefined;\n    }\n\n    firstChildren[0] = deepestAncestor.firstChild;\n    firstChildren.length = 1;\n\n    while (childIndex < firstChildren.length) {\n      var child = firstChildren[childIndex++];\n      var targetChild;\n\n      while (child) {\n        var childID = ReactMount.getID(child);\n        if (childID) {\n          // Even if we find the node we're looking for, we finish looping\n          // through its siblings to ensure they're cached so that we don't have\n          // to revisit this node again. Otherwise, we make n^2 calls to getID\n          // when visiting the many children of a single node in order.\n\n          if (targetID === childID) {\n            targetChild = child;\n          } else if (ReactInstanceHandles.isAncestorIDOf(childID, targetID)) {\n            // If we find a child whose ID is an ancestor of the given ID,\n            // then we can be sure that we only want to search the subtree\n            // rooted at this child, so we can throw out the rest of the\n            // search state.\n            firstChildren.length = childIndex = 0;\n            firstChildren.push(child.firstChild);\n          }\n        } else {\n          // If this child had no ID, then there's a chance that it was\n          // injected automatically by the browser, as when a `<table>`\n          // element sprouts an extra `<tbody>` child as a side effect of\n          // `.innerHTML` parsing. Optimistically continue down this\n          // branch, but not before examining the other siblings.\n          firstChildren.push(child.firstChild);\n        }\n\n        child = child.nextSibling;\n      }\n\n      if (targetChild) {\n        // Emptying firstChildren/findComponentRootReusableArray is\n        // not necessary for correctness, but it helps the GC reclaim\n        // any nodes that were left at the end of the search.\n        firstChildren.length = 0;\n\n        return targetChild;\n      }\n    }\n\n    firstChildren.length = 0;\n\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findComponentRoot(..., %s): Unable to find element. This probably ' + 'means the DOM was unexpectedly mutated (e.g., by the browser), ' + 'usually due to forgetting a <tbody> when using tables, nesting tags ' + 'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' + 'parent. ' + 'Try inspecting the child nodes of the element with React ID `%s`.', targetID, ReactMount.getID(ancestorNode)) : invariant(false) : undefined;\n  },\n\n  _mountImageIntoNode: function (markup, container, shouldReuseMarkup, transaction) {\n    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : invariant(false) : undefined;\n\n    if (shouldReuseMarkup) {\n      var rootElement = getReactRootElementInContainer(container);\n      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {\n        return;\n      } else {\n        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n\n        var rootMarkup = rootElement.outerHTML;\n        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);\n\n        var normalizedMarkup = markup;\n        if (process.env.NODE_ENV !== 'production') {\n          // because rootMarkup is retrieved from the DOM, various normalizations\n          // will have occurred which will not be present in `markup`. Here,\n          // insert markup into a <div> or <iframe> depending on the container\n          // type to perform the same normalizations before comparing.\n          var normalizer;\n          if (container.nodeType === ELEMENT_NODE_TYPE) {\n            normalizer = document.createElement('div');\n            normalizer.innerHTML = markup;\n            normalizedMarkup = normalizer.innerHTML;\n          } else {\n            normalizer = document.createElement('iframe');\n            document.body.appendChild(normalizer);\n            normalizer.contentDocument.write(markup);\n            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;\n            document.body.removeChild(normalizer);\n          }\n        }\n\n        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);\n        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);\n\n        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\\'re trying to render a component to the document using ' + 'server rendering but the checksum was invalid. This usually ' + 'means you rendered a different component type or props on ' + 'the client from the one on the server, or your render() ' + 'methods are impure. React cannot handle this case due to ' + 'cross-browser quirks by rendering at the document root. You ' + 'should look for environment dependent code in your components ' + 'and ensure the props are the same client and server side:\\n%s', difference) : invariant(false) : undefined;\n\n        if (process.env.NODE_ENV !== 'production') {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\\n%s', difference) : undefined;\n        }\n      }\n    }\n\n    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\\'re trying to render a component to the document but ' + 'you didn\\'t use server rendering. We can\\'t do this ' + 'without using server rendering due to cross-browser quirks. ' + 'See ReactDOMServer.renderToString() for server rendering.') : invariant(false) : undefined;\n\n    if (transaction.useCreateElement) {\n      while (container.lastChild) {\n        container.removeChild(container.lastChild);\n      }\n      container.appendChild(markup);\n    } else {\n      setInnerHTML(container, markup);\n    }\n  },\n\n  ownerDocumentContextKey: ownerDocumentContextKey,\n\n  /**\n   * React ID utilities.\n   */\n\n  getReactRootID: getReactRootID,\n\n  getID: getID,\n\n  setID: setID,\n\n  getNode: getNode,\n\n  getNodeFromInstance: getNodeFromInstance,\n\n  isValid: isValid,\n\n  purgeID: purgeID\n};\n\nReactPerf.measureMethods(ReactMount, 'ReactMount', {\n  _renderNewRootComponent: '_renderNewRootComponent',\n  _mountImageIntoNode: '_mountImageIntoNode'\n});\n\nmodule.exports = ReactMount;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactMount.js\n ** module id = 5\n ** module chunks = 0\n **/","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactElement\n */\n\n'use strict';\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\n\nvar assign = require('./Object.assign');\nvar canDefineProperty = require('./canDefineProperty');\n\n// The Symbol used to tag the ReactElement type. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\n\n/**\n * Base constructor for all React elements. This is only used to make this\n * work with a dynamic instanceof check. Nothing should live on this prototype.\n *\n * @param {*} type\n * @param {*} key\n * @param {string|object} ref\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @param {*} owner\n * @param {*} props\n * @internal\n */\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allow us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {};\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    if (canDefineProperty) {\n      Object.defineProperty(element._store, 'validated', {\n        configurable: false,\n        enumerable: false,\n        writable: true,\n        value: false\n      });\n      // self and source are DEV only properties.\n      Object.defineProperty(element, '_self', {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: self\n      });\n      // Two elements created in two different places should be considered\n      // equal for testing purposes and therefore we hide it from enumeration.\n      Object.defineProperty(element, '_source', {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: source\n      });\n    } else {\n      element._store.validated = false;\n      element._self = self;\n      element._source = source;\n    }\n    Object.freeze(element.props);\n    Object.freeze(element);\n  }\n\n  return element;\n};\n\nReactElement.createElement = function (type, config, children) {\n  var propName;\n\n  // Reserved names are extracted\n  var props = {};\n\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    ref = config.ref === undefined ? null : config.ref;\n    key = config.key === undefined ? null : '' + config.key;\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source;\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (typeof props[propName] === 'undefined') {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n};\n\nReactElement.createFactory = function (type) {\n  var factory = ReactElement.createElement.bind(null, type);\n  // Expose the type on the factory and the prototype so that it can be\n  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\n  // This should not be named `constructor` since this may not be the function\n  // that created the element, and it may not even be a constructor.\n  // Legacy hook TODO: Warn if this is accessed\n  factory.type = type;\n  return factory;\n};\n\nReactElement.cloneAndReplaceKey = function (oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n\n  return newElement;\n};\n\nReactElement.cloneAndReplaceProps = function (oldElement, newProps) {\n  var newElement = ReactElement(oldElement.type, oldElement.key, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, newProps);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // If the key on the original is valid, then the clone is valid\n    newElement._store.validated = oldElement._store.validated;\n  }\n\n  return newElement;\n};\n\nReactElement.cloneElement = function (element, config, children) {\n  var propName;\n\n  // Original props are copied\n  var props = assign({}, element.props);\n\n  // Reserved names are extracted\n  var key = element.key;\n  var ref = element.ref;\n  // Self is preserved since the owner is preserved.\n  var self = element._self;\n  // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n  var source = element._source;\n\n  // Owner will be preserved, unless ref is overridden\n  var owner = element._owner;\n\n  if (config != null) {\n    if (config.ref !== undefined) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n    if (config.key !== undefined) {\n      key = '' + config.key;\n    }\n    // Remaining properties override existing props\n    for (propName in config) {\n      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n};\n\n/**\n * @param {?object} object\n * @return {boolean} True if `object` is a valid component.\n * @final\n */\nReactElement.isValidElement = function (object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n};\n\nmodule.exports = ReactElement;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactElement.js\n ** module id = 6\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPerf\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * ReactPerf is a general AOP system designed to measure performance. This\n * module only has the hooks: see ReactDefaultPerf for the analysis tool.\n */\nvar ReactPerf = {\n  /**\n   * Boolean to enable/disable measurement. Set to false by default to prevent\n   * accidental logging and perf loss.\n   */\n  enableMeasure: false,\n\n  /**\n   * Holds onto the measure function in use. By default, don't measure\n   * anything, but we'll override this if we inject a measure function.\n   */\n  storedMeasure: _noMeasure,\n\n  /**\n   * @param {object} object\n   * @param {string} objectName\n   * @param {object<string>} methodNames\n   */\n  measureMethods: function (object, objectName, methodNames) {\n    if (process.env.NODE_ENV !== 'production') {\n      for (var key in methodNames) {\n        if (!methodNames.hasOwnProperty(key)) {\n          continue;\n        }\n        object[key] = ReactPerf.measure(objectName, methodNames[key], object[key]);\n      }\n    }\n  },\n\n  /**\n   * Use this to wrap methods you want to measure. Zero overhead in production.\n   *\n   * @param {string} objName\n   * @param {string} fnName\n   * @param {function} func\n   * @return {function}\n   */\n  measure: function (objName, fnName, func) {\n    if (process.env.NODE_ENV !== 'production') {\n      var measuredFunc = null;\n      var wrapper = function () {\n        if (ReactPerf.enableMeasure) {\n          if (!measuredFunc) {\n            measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);\n          }\n          return measuredFunc.apply(this, arguments);\n        }\n        return func.apply(this, arguments);\n      };\n      wrapper.displayName = objName + '_' + fnName;\n      return wrapper;\n    }\n    return func;\n  },\n\n  injection: {\n    /**\n     * @param {function} measure\n     */\n    injectMeasure: function (measure) {\n      ReactPerf.storedMeasure = measure;\n    }\n  }\n};\n\n/**\n * Simply passes through the measured function, without measuring it.\n *\n * @param {string} objName\n * @param {string} fnName\n * @param {function} func\n * @return {function}\n */\nfunction _noMeasure(objName, fnName, func) {\n  return func;\n}\n\nmodule.exports = ReactPerf;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactPerf.js\n ** module id = 7\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactUpdates\n */\n\n'use strict';\n\nvar CallbackQueue = require('./CallbackQueue');\nvar PooledClass = require('./PooledClass');\nvar ReactPerf = require('./ReactPerf');\nvar ReactReconciler = require('./ReactReconciler');\nvar Transaction = require('./Transaction');\n\nvar assign = require('./Object.assign');\nvar invariant = require('fbjs/lib/invariant');\n\nvar dirtyComponents = [];\nvar asapCallbackQueue = CallbackQueue.getPooled();\nvar asapEnqueued = false;\n\nvar batchingStrategy = null;\n\nfunction ensureInjected() {\n  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching ' + 'strategy') : invariant(false) : undefined;\n}\n\nvar NESTED_UPDATES = {\n  initialize: function () {\n    this.dirtyComponentsLength = dirtyComponents.length;\n  },\n  close: function () {\n    if (this.dirtyComponentsLength !== dirtyComponents.length) {\n      // Additional updates were enqueued by componentDidUpdate handlers or\n      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run\n      // these new updates so that if A's componentDidUpdate calls setState on\n      // B, B will update before the callback A's updater provided when calling\n      // setState.\n      dirtyComponents.splice(0, this.dirtyComponentsLength);\n      flushBatchedUpdates();\n    } else {\n      dirtyComponents.length = 0;\n    }\n  }\n};\n\nvar UPDATE_QUEUEING = {\n  initialize: function () {\n    this.callbackQueue.reset();\n  },\n  close: function () {\n    this.callbackQueue.notifyAll();\n  }\n};\n\nvar TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];\n\nfunction ReactUpdatesFlushTransaction() {\n  this.reinitializeTransaction();\n  this.dirtyComponentsLength = null;\n  this.callbackQueue = CallbackQueue.getPooled();\n  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled( /* forceHTML */false);\n}\n\nassign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  destructor: function () {\n    this.dirtyComponentsLength = null;\n    CallbackQueue.release(this.callbackQueue);\n    this.callbackQueue = null;\n    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);\n    this.reconcileTransaction = null;\n  },\n\n  perform: function (method, scope, a) {\n    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`\n    // with this transaction's wrappers around it.\n    return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);\n  }\n});\n\nPooledClass.addPoolingTo(ReactUpdatesFlushTransaction);\n\nfunction batchedUpdates(callback, a, b, c, d, e) {\n  ensureInjected();\n  batchingStrategy.batchedUpdates(callback, a, b, c, d, e);\n}\n\n/**\n * Array comparator for ReactComponents by mount ordering.\n *\n * @param {ReactComponent} c1 first component you're comparing\n * @param {ReactComponent} c2 second component you're comparing\n * @return {number} Return value usable by Array.prototype.sort().\n */\nfunction mountOrderComparator(c1, c2) {\n  return c1._mountOrder - c2._mountOrder;\n}\n\nfunction runBatchedUpdates(transaction) {\n  var len = transaction.dirtyComponentsLength;\n  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\\'s stored dirty-components length (%s) to ' + 'match dirty-components array length (%s).', len, dirtyComponents.length) : invariant(false) : undefined;\n\n  // Since reconciling a component higher in the owner hierarchy usually (not\n  // always -- see shouldComponentUpdate()) will reconcile children, reconcile\n  // them before their children by sorting the array.\n  dirtyComponents.sort(mountOrderComparator);\n\n  for (var i = 0; i < len; i++) {\n    // If a component is unmounted before pending changes apply, it will still\n    // be here, but we assume that it has cleared its _pendingCallbacks and\n    // that performUpdateIfNecessary is a noop.\n    var component = dirtyComponents[i];\n\n    // If performUpdateIfNecessary happens to enqueue any new updates, we\n    // shouldn't execute the callbacks until the next render happens, so\n    // stash the callbacks first\n    var callbacks = component._pendingCallbacks;\n    component._pendingCallbacks = null;\n\n    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction);\n\n    if (callbacks) {\n      for (var j = 0; j < callbacks.length; j++) {\n        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());\n      }\n    }\n  }\n}\n\nvar flushBatchedUpdates = function () {\n  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents\n  // array and perform any updates enqueued by mount-ready handlers (i.e.,\n  // componentDidUpdate) but we need to check here too in order to catch\n  // updates enqueued by setState callbacks and asap calls.\n  while (dirtyComponents.length || asapEnqueued) {\n    if (dirtyComponents.length) {\n      var transaction = ReactUpdatesFlushTransaction.getPooled();\n      transaction.perform(runBatchedUpdates, null, transaction);\n      ReactUpdatesFlushTransaction.release(transaction);\n    }\n\n    if (asapEnqueued) {\n      asapEnqueued = false;\n      var queue = asapCallbackQueue;\n      asapCallbackQueue = CallbackQueue.getPooled();\n      queue.notifyAll();\n      CallbackQueue.release(queue);\n    }\n  }\n};\nflushBatchedUpdates = ReactPerf.measure('ReactUpdates', 'flushBatchedUpdates', flushBatchedUpdates);\n\n/**\n * Mark a component as needing a rerender, adding an optional callback to a\n * list of functions which will be executed once the rerender occurs.\n */\nfunction enqueueUpdate(component) {\n  ensureInjected();\n\n  // Various parts of our code (such as ReactCompositeComponent's\n  // _renderValidatedComponent) assume that calls to render aren't nested;\n  // verify that that's the case. (This is called by each top-level update\n  // function, like setProps, setState, forceUpdate, etc.; creation and\n  // destruction of top-level components is guarded in ReactMount.)\n\n  if (!batchingStrategy.isBatchingUpdates) {\n    batchingStrategy.batchedUpdates(enqueueUpdate, component);\n    return;\n  }\n\n  dirtyComponents.push(component);\n}\n\n/**\n * Enqueue a callback to be run at the end of the current batching cycle. Throws\n * if no updates are currently being performed.\n */\nfunction asap(callback, context) {\n  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\\'t enqueue an asap callback in a context where' + 'updates are not being batched.') : invariant(false) : undefined;\n  asapCallbackQueue.enqueue(callback, context);\n  asapEnqueued = true;\n}\n\nvar ReactUpdatesInjection = {\n  injectReconcileTransaction: function (ReconcileTransaction) {\n    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : invariant(false) : undefined;\n    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;\n  },\n\n  injectBatchingStrategy: function (_batchingStrategy) {\n    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : invariant(false) : undefined;\n    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : invariant(false) : undefined;\n    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : invariant(false) : undefined;\n    batchingStrategy = _batchingStrategy;\n  }\n};\n\nvar ReactUpdates = {\n  /**\n   * React references `ReactReconcileTransaction` using this property in order\n   * to allow dependency injection.\n   *\n   * @internal\n   */\n  ReactReconcileTransaction: null,\n\n  batchedUpdates: batchedUpdates,\n  enqueueUpdate: enqueueUpdate,\n  flushBatchedUpdates: flushBatchedUpdates,\n  injection: ReactUpdatesInjection,\n  asap: asap\n};\n\nmodule.exports = ReactUpdates;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactUpdates.js\n ** module id = 8\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule emptyFunction\n */\n\n\"use strict\";\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nfunction emptyFunction() {}\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/emptyFunction.js\n ** module id = 9\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventConstants\n */\n\n'use strict';\n\nvar keyMirror = require('fbjs/lib/keyMirror');\n\nvar PropagationPhases = keyMirror({ bubbled: null, captured: null });\n\n/**\n * Types of raw signals from the browser caught at the top level.\n */\nvar topLevelTypes = keyMirror({\n  topAbort: null,\n  topBlur: null,\n  topCanPlay: null,\n  topCanPlayThrough: null,\n  topChange: null,\n  topClick: null,\n  topCompositionEnd: null,\n  topCompositionStart: null,\n  topCompositionUpdate: null,\n  topContextMenu: null,\n  topCopy: null,\n  topCut: null,\n  topDoubleClick: null,\n  topDrag: null,\n  topDragEnd: null,\n  topDragEnter: null,\n  topDragExit: null,\n  topDragLeave: null,\n  topDragOver: null,\n  topDragStart: null,\n  topDrop: null,\n  topDurationChange: null,\n  topEmptied: null,\n  topEncrypted: null,\n  topEnded: null,\n  topError: null,\n  topFocus: null,\n  topInput: null,\n  topKeyDown: null,\n  topKeyPress: null,\n  topKeyUp: null,\n  topLoad: null,\n  topLoadedData: null,\n  topLoadedMetadata: null,\n  topLoadStart: null,\n  topMouseDown: null,\n  topMouseMove: null,\n  topMouseOut: null,\n  topMouseOver: null,\n  topMouseUp: null,\n  topPaste: null,\n  topPause: null,\n  topPlay: null,\n  topPlaying: null,\n  topProgress: null,\n  topRateChange: null,\n  topReset: null,\n  topScroll: null,\n  topSeeked: null,\n  topSeeking: null,\n  topSelectionChange: null,\n  topStalled: null,\n  topSubmit: null,\n  topSuspend: null,\n  topTextInput: null,\n  topTimeUpdate: null,\n  topTouchCancel: null,\n  topTouchEnd: null,\n  topTouchMove: null,\n  topTouchStart: null,\n  topVolumeChange: null,\n  topWaiting: null,\n  topWheel: null\n});\n\nvar EventConstants = {\n  topLevelTypes: topLevelTypes,\n  PropagationPhases: PropagationPhases\n};\n\nmodule.exports = EventConstants;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/EventConstants.js\n ** module id = 10\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactCurrentOwner\n */\n\n'use strict';\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n\n};\n\nmodule.exports = ReactCurrentOwner;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactCurrentOwner.js\n ** module id = 11\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule PooledClass\n */\n\n'use strict';\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Static poolers. Several custom versions for each potential number of\n * arguments. A completely generic pooler is easy to implement, but would\n * require accessing the `arguments` object. In each of these, `this` refers to\n * the Class itself, not an instance. If any others are needed, simply add them\n * here, or in their own files.\n */\nvar oneArgumentPooler = function (copyFieldsFrom) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, copyFieldsFrom);\n    return instance;\n  } else {\n    return new Klass(copyFieldsFrom);\n  }\n};\n\nvar twoArgumentPooler = function (a1, a2) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2);\n    return instance;\n  } else {\n    return new Klass(a1, a2);\n  }\n};\n\nvar threeArgumentPooler = function (a1, a2, a3) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3);\n  }\n};\n\nvar fourArgumentPooler = function (a1, a2, a3, a4) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3, a4);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3, a4);\n  }\n};\n\nvar fiveArgumentPooler = function (a1, a2, a3, a4, a5) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3, a4, a5);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3, a4, a5);\n  }\n};\n\nvar standardReleaser = function (instance) {\n  var Klass = this;\n  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : invariant(false) : undefined;\n  instance.destructor();\n  if (Klass.instancePool.length < Klass.poolSize) {\n    Klass.instancePool.push(instance);\n  }\n};\n\nvar DEFAULT_POOL_SIZE = 10;\nvar DEFAULT_POOLER = oneArgumentPooler;\n\n/**\n * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n * itself (statically) not adding any prototypical fields. Any CopyConstructor\n * you give this may have a `poolSize` property, and will look for a\n * prototypical `destructor` on instances (optional).\n *\n * @param {Function} CopyConstructor Constructor that can be used to reset.\n * @param {Function} pooler Customizable pooler.\n */\nvar addPoolingTo = function (CopyConstructor, pooler) {\n  var NewKlass = CopyConstructor;\n  NewKlass.instancePool = [];\n  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n  if (!NewKlass.poolSize) {\n    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n  }\n  NewKlass.release = standardReleaser;\n  return NewKlass;\n};\n\nvar PooledClass = {\n  addPoolingTo: addPoolingTo,\n  oneArgumentPooler: oneArgumentPooler,\n  twoArgumentPooler: twoArgumentPooler,\n  threeArgumentPooler: threeArgumentPooler,\n  fourArgumentPooler: fourArgumentPooler,\n  fiveArgumentPooler: fiveArgumentPooler\n};\n\nmodule.exports = PooledClass;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/PooledClass.js\n ** module id = 12\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule keyOf\n */\n\n/**\n * Allows extraction of a minified key. Let's the build system minify keys\n * without losing the ability to dynamically use key strings as values\n * themselves. Pass in an object with a single key/val pair and it will return\n * you the string key of that single record. Suppose you want to grab the\n * value for a key 'className' inside of an object. Key/val minification may\n * have aliased that key to be 'xa12'. keyOf({className: null}) will return\n * 'xa12' in that case. Resolve keys you want to use once at startup time, then\n * reuse those resolutions.\n */\n\"use strict\";\n\nvar keyOf = function (oneKeyObj) {\n  var key;\n  for (key in oneKeyObj) {\n    if (!oneKeyObj.hasOwnProperty(key)) {\n      continue;\n    }\n    return key;\n  }\n  return null;\n};\n\nmodule.exports = keyOf;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/keyOf.js\n ** module id = 13\n ** module chunks = 0\n **/","//  Ramda v0.19.1\n//  https://github.com/ramda/ramda\n//  (c) 2013-2016 Scott Sauyet, Michael Hurley, and David Chambers\n//  Ramda may be freely distributed under the MIT license.\n\n;(function() {\n\n  'use strict';\n\n  /**\n     * A special placeholder value used to specify \"gaps\" within curried functions,\n     * allowing partial application of any combination of arguments, regardless of\n     * their positions.\n     *\n     * If `g` is a curried ternary function and `_` is `R.__`, the following are\n     * equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2, _)(1, 3)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @constant\n     * @memberOf R\n     * @since v0.6.0\n     * @category Function\n     * @example\n     *\n     *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\n     *      greet('Alice'); //=> 'Hello, Alice!'\n     */\n    var __ = { '@@functional/placeholder': true };\n\n    /* eslint-disable no-unused-vars */\n    var _arity = function _arity(n, fn) {\n        /* eslint-disable no-unused-vars */\n        switch (n) {\n        case 0:\n            return function () {\n                return fn.apply(this, arguments);\n            };\n        case 1:\n            return function (a0) {\n                return fn.apply(this, arguments);\n            };\n        case 2:\n            return function (a0, a1) {\n                return fn.apply(this, arguments);\n            };\n        case 3:\n            return function (a0, a1, a2) {\n                return fn.apply(this, arguments);\n            };\n        case 4:\n            return function (a0, a1, a2, a3) {\n                return fn.apply(this, arguments);\n            };\n        case 5:\n            return function (a0, a1, a2, a3, a4) {\n                return fn.apply(this, arguments);\n            };\n        case 6:\n            return function (a0, a1, a2, a3, a4, a5) {\n                return fn.apply(this, arguments);\n            };\n        case 7:\n            return function (a0, a1, a2, a3, a4, a5, a6) {\n                return fn.apply(this, arguments);\n            };\n        case 8:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n                return fn.apply(this, arguments);\n            };\n        case 9:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n                return fn.apply(this, arguments);\n            };\n        case 10:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n                return fn.apply(this, arguments);\n            };\n        default:\n            throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n        }\n    };\n\n    var _arrayFromIterator = function _arrayFromIterator(iter) {\n        var list = [];\n        var next;\n        while (!(next = iter.next()).done) {\n            list.push(next.value);\n        }\n        return list;\n    };\n\n    var _cloneRegExp = function _cloneRegExp(pattern) {\n        return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n    };\n\n    var _complement = function _complement(f) {\n        return function () {\n            return !f.apply(this, arguments);\n        };\n    };\n\n    /**\n     * Private `concat` function to merge two array-like objects.\n     *\n     * @private\n     * @param {Array|Arguments} [set1=[]] An array-like object.\n     * @param {Array|Arguments} [set2=[]] An array-like object.\n     * @return {Array} A new, merged array.\n     * @example\n     *\n     *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n     */\n    var _concat = function _concat(set1, set2) {\n        set1 = set1 || [];\n        set2 = set2 || [];\n        var idx;\n        var len1 = set1.length;\n        var len2 = set2.length;\n        var result = [];\n        idx = 0;\n        while (idx < len1) {\n            result[result.length] = set1[idx];\n            idx += 1;\n        }\n        idx = 0;\n        while (idx < len2) {\n            result[result.length] = set2[idx];\n            idx += 1;\n        }\n        return result;\n    };\n\n    var _containsWith = function _containsWith(pred, x, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len) {\n            if (pred(x, list[idx])) {\n                return true;\n            }\n            idx += 1;\n        }\n        return false;\n    };\n\n    var _filter = function _filter(fn, list) {\n        var idx = 0;\n        var len = list.length;\n        var result = [];\n        while (idx < len) {\n            if (fn(list[idx])) {\n                result[result.length] = list[idx];\n            }\n            idx += 1;\n        }\n        return result;\n    };\n\n    var _forceReduced = function _forceReduced(x) {\n        return {\n            '@@transducer/value': x,\n            '@@transducer/reduced': true\n        };\n    };\n\n    var _has = function _has(prop, obj) {\n        return Object.prototype.hasOwnProperty.call(obj, prop);\n    };\n\n    var _identity = function _identity(x) {\n        return x;\n    };\n\n    var _isArguments = function () {\n        var toString = Object.prototype.toString;\n        return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n            return toString.call(x) === '[object Arguments]';\n        } : function _isArguments(x) {\n            return _has('callee', x);\n        };\n    }();\n\n    /**\n     * Tests whether or not an object is an array.\n     *\n     * @private\n     * @param {*} val The object to test.\n     * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n     * @example\n     *\n     *      _isArray([]); //=> true\n     *      _isArray(null); //=> false\n     *      _isArray({}); //=> false\n     */\n    var _isArray = Array.isArray || function _isArray(val) {\n        return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n    };\n\n    /**\n     * Determine if the passed argument is an integer.\n     *\n     * @private\n     * @param {*} n\n     * @category Type\n     * @return {Boolean}\n     */\n    var _isInteger = Number.isInteger || function _isInteger(n) {\n        return n << 0 === n;\n    };\n\n    var _isNumber = function _isNumber(x) {\n        return Object.prototype.toString.call(x) === '[object Number]';\n    };\n\n    var _isObject = function _isObject(x) {\n        return Object.prototype.toString.call(x) === '[object Object]';\n    };\n\n    var _isPlaceholder = function _isPlaceholder(a) {\n        return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n    };\n\n    var _isRegExp = function _isRegExp(x) {\n        return Object.prototype.toString.call(x) === '[object RegExp]';\n    };\n\n    var _isString = function _isString(x) {\n        return Object.prototype.toString.call(x) === '[object String]';\n    };\n\n    var _isTransformer = function _isTransformer(obj) {\n        return typeof obj['@@transducer/step'] === 'function';\n    };\n\n    var _map = function _map(fn, functor) {\n        var idx = 0;\n        var len = functor.length;\n        var result = Array(len);\n        while (idx < len) {\n            result[idx] = fn(functor[idx]);\n            idx += 1;\n        }\n        return result;\n    };\n\n    var _of = function _of(x) {\n        return [x];\n    };\n\n    var _pipe = function _pipe(f, g) {\n        return function () {\n            return g.call(this, f.apply(this, arguments));\n        };\n    };\n\n    var _pipeP = function _pipeP(f, g) {\n        return function () {\n            var ctx = this;\n            return f.apply(ctx, arguments).then(function (x) {\n                return g.call(ctx, x);\n            });\n        };\n    };\n\n    // \\b matches word boundary; [\\b] matches backspace\n    var _quote = function _quote(s) {\n        var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b')    // \\b matches word boundary; [\\b] matches backspace\n    .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n        return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n    };\n\n    var _reduced = function _reduced(x) {\n        return x && x['@@transducer/reduced'] ? x : {\n            '@@transducer/value': x,\n            '@@transducer/reduced': true\n        };\n    };\n\n    /**\n     * An optimized, private array `slice` implementation.\n     *\n     * @private\n     * @param {Arguments|Array} args The array or arguments object to consider.\n     * @param {Number} [from=0] The array index to slice from, inclusive.\n     * @param {Number} [to=args.length] The array index to slice to, exclusive.\n     * @return {Array} A new, sliced array.\n     * @example\n     *\n     *      _slice([1, 2, 3, 4, 5], 1, 3); //=> [2, 3]\n     *\n     *      var firstThreeArgs = function(a, b, c, d) {\n     *        return _slice(arguments, 0, 3);\n     *      };\n     *      firstThreeArgs(1, 2, 3, 4); //=> [1, 2, 3]\n     */\n    var _slice = function _slice(args, from, to) {\n        switch (arguments.length) {\n        case 1:\n            return _slice(args, 0, args.length);\n        case 2:\n            return _slice(args, from, args.length);\n        default:\n            var list = [];\n            var idx = 0;\n            var len = Math.max(0, Math.min(args.length, to) - from);\n            while (idx < len) {\n                list[idx] = args[from + idx];\n                idx += 1;\n            }\n            return list;\n        }\n    };\n\n    /**\n     * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n     */\n    var _toISOString = function () {\n        var pad = function pad(n) {\n            return (n < 10 ? '0' : '') + n;\n        };\n        return typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n            return d.toISOString();\n        } : function _toISOString(d) {\n            return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n        };\n    }();\n\n    var _xfBase = {\n        init: function () {\n            return this.xf['@@transducer/init']();\n        },\n        result: function (result) {\n            return this.xf['@@transducer/result'](result);\n        }\n    };\n\n    var _xwrap = function () {\n        function XWrap(fn) {\n            this.f = fn;\n        }\n        XWrap.prototype['@@transducer/init'] = function () {\n            throw new Error('init not implemented on XWrap');\n        };\n        XWrap.prototype['@@transducer/result'] = function (acc) {\n            return acc;\n        };\n        XWrap.prototype['@@transducer/step'] = function (acc, x) {\n            return this.f(acc, x);\n        };\n        return function _xwrap(fn) {\n            return new XWrap(fn);\n        };\n    }();\n\n    var _aperture = function _aperture(n, list) {\n        var idx = 0;\n        var limit = list.length - (n - 1);\n        var acc = new Array(limit >= 0 ? limit : 0);\n        while (idx < limit) {\n            acc[idx] = _slice(list, idx, idx + n);\n            idx += 1;\n        }\n        return acc;\n    };\n\n    /**\n     * Similar to hasMethod, this checks whether a function has a [methodname]\n     * function. If it isn't an array it will execute that function otherwise it\n     * will default to the ramda implementation.\n     *\n     * @private\n     * @param {Function} fn ramda implemtation\n     * @param {String} methodname property to check for a custom implementation\n     * @return {Object} Whatever the return value of the method is.\n     */\n    var _checkForMethod = function _checkForMethod(methodname, fn) {\n        return function () {\n            var length = arguments.length;\n            if (length === 0) {\n                return fn();\n            }\n            var obj = arguments[length - 1];\n            return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, _slice(arguments, 0, length - 1));\n        };\n    };\n\n    /**\n     * Optimized internal one-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry1 = function _curry1(fn) {\n        return function f1(a) {\n            if (arguments.length === 0 || _isPlaceholder(a)) {\n                return f1;\n            } else {\n                return fn.apply(this, arguments);\n            }\n        };\n    };\n\n    /**\n     * Optimized internal two-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry2 = function _curry2(fn) {\n        return function f2(a, b) {\n            switch (arguments.length) {\n            case 0:\n                return f2;\n            case 1:\n                return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n                    return fn(a, _b);\n                });\n            default:\n                return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n                    return fn(_a, b);\n                }) : _isPlaceholder(b) ? _curry1(function (_b) {\n                    return fn(a, _b);\n                }) : fn(a, b);\n            }\n        };\n    };\n\n    /**\n     * Optimized internal three-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry3 = function _curry3(fn) {\n        return function f3(a, b, c) {\n            switch (arguments.length) {\n            case 0:\n                return f3;\n            case 1:\n                return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n                    return fn(a, _b, _c);\n                });\n            case 2:\n                return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n                    return fn(_a, b, _c);\n                }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n                    return fn(a, _b, _c);\n                }) : _curry1(function (_c) {\n                    return fn(a, b, _c);\n                });\n            default:\n                return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n                    return fn(_a, _b, c);\n                }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n                    return fn(_a, b, _c);\n                }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n                    return fn(a, _b, _c);\n                }) : _isPlaceholder(a) ? _curry1(function (_a) {\n                    return fn(_a, b, c);\n                }) : _isPlaceholder(b) ? _curry1(function (_b) {\n                    return fn(a, _b, c);\n                }) : _isPlaceholder(c) ? _curry1(function (_c) {\n                    return fn(a, b, _c);\n                }) : fn(a, b, c);\n            }\n        };\n    };\n\n    /**\n     * Internal curryN function.\n     *\n     * @private\n     * @category Function\n     * @param {Number} length The arity of the curried function.\n     * @param {Array} received An array of arguments received thus far.\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curryN = function _curryN(length, received, fn) {\n        return function () {\n            var combined = [];\n            var argsIdx = 0;\n            var left = length;\n            var combinedIdx = 0;\n            while (combinedIdx < received.length || argsIdx < arguments.length) {\n                var result;\n                if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n                    result = received[combinedIdx];\n                } else {\n                    result = arguments[argsIdx];\n                    argsIdx += 1;\n                }\n                combined[combinedIdx] = result;\n                if (!_isPlaceholder(result)) {\n                    left -= 1;\n                }\n                combinedIdx += 1;\n            }\n            return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n        };\n    };\n\n    /**\n     * Returns a function that dispatches with different strategies based on the\n     * object in list position (last argument). If it is an array, executes [fn].\n     * Otherwise, if it has a function with [methodname], it will execute that\n     * function (functor case). Otherwise, if it is a transformer, uses transducer\n     * [xf] to return a new transformer (transducer case). Otherwise, it will\n     * default to executing [fn].\n     *\n     * @private\n     * @param {String} methodname property to check for a custom implementation\n     * @param {Function} xf transducer to initialize if object is transformer\n     * @param {Function} fn default ramda implementation\n     * @return {Function} A function that dispatches on object in list position\n     */\n    var _dispatchable = function _dispatchable(methodname, xf, fn) {\n        return function () {\n            var length = arguments.length;\n            if (length === 0) {\n                return fn();\n            }\n            var obj = arguments[length - 1];\n            if (!_isArray(obj)) {\n                var args = _slice(arguments, 0, length - 1);\n                if (typeof obj[methodname] === 'function') {\n                    return obj[methodname].apply(obj, args);\n                }\n                if (_isTransformer(obj)) {\n                    var transducer = xf.apply(null, args);\n                    return transducer(obj);\n                }\n            }\n            return fn.apply(this, arguments);\n        };\n    };\n\n    var _dropLastWhile = function dropLastWhile(pred, list) {\n        var idx = list.length - 1;\n        while (idx >= 0 && pred(list[idx])) {\n            idx -= 1;\n        }\n        return _slice(list, 0, idx + 1);\n    };\n\n    var _xall = function () {\n        function XAll(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.all = true;\n        }\n        XAll.prototype['@@transducer/init'] = _xfBase.init;\n        XAll.prototype['@@transducer/result'] = function (result) {\n            if (this.all) {\n                result = this.xf['@@transducer/step'](result, true);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XAll.prototype['@@transducer/step'] = function (result, input) {\n            if (!this.f(input)) {\n                this.all = false;\n                result = _reduced(this.xf['@@transducer/step'](result, false));\n            }\n            return result;\n        };\n        return _curry2(function _xall(f, xf) {\n            return new XAll(f, xf);\n        });\n    }();\n\n    var _xany = function () {\n        function XAny(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.any = false;\n        }\n        XAny.prototype['@@transducer/init'] = _xfBase.init;\n        XAny.prototype['@@transducer/result'] = function (result) {\n            if (!this.any) {\n                result = this.xf['@@transducer/step'](result, false);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XAny.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f(input)) {\n                this.any = true;\n                result = _reduced(this.xf['@@transducer/step'](result, true));\n            }\n            return result;\n        };\n        return _curry2(function _xany(f, xf) {\n            return new XAny(f, xf);\n        });\n    }();\n\n    var _xaperture = function () {\n        function XAperture(n, xf) {\n            this.xf = xf;\n            this.pos = 0;\n            this.full = false;\n            this.acc = new Array(n);\n        }\n        XAperture.prototype['@@transducer/init'] = _xfBase.init;\n        XAperture.prototype['@@transducer/result'] = function (result) {\n            this.acc = null;\n            return this.xf['@@transducer/result'](result);\n        };\n        XAperture.prototype['@@transducer/step'] = function (result, input) {\n            this.store(input);\n            return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n        };\n        XAperture.prototype.store = function (input) {\n            this.acc[this.pos] = input;\n            this.pos += 1;\n            if (this.pos === this.acc.length) {\n                this.pos = 0;\n                this.full = true;\n            }\n        };\n        XAperture.prototype.getCopy = function () {\n            return _concat(_slice(this.acc, this.pos), _slice(this.acc, 0, this.pos));\n        };\n        return _curry2(function _xaperture(n, xf) {\n            return new XAperture(n, xf);\n        });\n    }();\n\n    var _xdrop = function () {\n        function XDrop(n, xf) {\n            this.xf = xf;\n            this.n = n;\n        }\n        XDrop.prototype['@@transducer/init'] = _xfBase.init;\n        XDrop.prototype['@@transducer/result'] = _xfBase.result;\n        XDrop.prototype['@@transducer/step'] = function (result, input) {\n            if (this.n > 0) {\n                this.n -= 1;\n                return result;\n            }\n            return this.xf['@@transducer/step'](result, input);\n        };\n        return _curry2(function _xdrop(n, xf) {\n            return new XDrop(n, xf);\n        });\n    }();\n\n    var _xdropLast = function () {\n        function XDropLast(n, xf) {\n            this.xf = xf;\n            this.pos = 0;\n            this.full = false;\n            this.acc = new Array(n);\n        }\n        XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n        XDropLast.prototype['@@transducer/result'] = function (result) {\n            this.acc = null;\n            return this.xf['@@transducer/result'](result);\n        };\n        XDropLast.prototype['@@transducer/step'] = function (result, input) {\n            if (this.full) {\n                result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n            }\n            this.store(input);\n            return result;\n        };\n        XDropLast.prototype.store = function (input) {\n            this.acc[this.pos] = input;\n            this.pos += 1;\n            if (this.pos === this.acc.length) {\n                this.pos = 0;\n                this.full = true;\n            }\n        };\n        return _curry2(function _xdropLast(n, xf) {\n            return new XDropLast(n, xf);\n        });\n    }();\n\n    var _xdropRepeatsWith = function () {\n        function XDropRepeatsWith(pred, xf) {\n            this.xf = xf;\n            this.pred = pred;\n            this.lastValue = undefined;\n            this.seenFirstValue = false;\n        }\n        XDropRepeatsWith.prototype['@@transducer/init'] = function () {\n            return this.xf['@@transducer/init']();\n        };\n        XDropRepeatsWith.prototype['@@transducer/result'] = function (result) {\n            return this.xf['@@transducer/result'](result);\n        };\n        XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n            var sameAsLast = false;\n            if (!this.seenFirstValue) {\n                this.seenFirstValue = true;\n            } else if (this.pred(this.lastValue, input)) {\n                sameAsLast = true;\n            }\n            this.lastValue = input;\n            return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n        };\n        return _curry2(function _xdropRepeatsWith(pred, xf) {\n            return new XDropRepeatsWith(pred, xf);\n        });\n    }();\n\n    var _xdropWhile = function () {\n        function XDropWhile(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n        XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n        XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f) {\n                if (this.f(input)) {\n                    return result;\n                }\n                this.f = null;\n            }\n            return this.xf['@@transducer/step'](result, input);\n        };\n        return _curry2(function _xdropWhile(f, xf) {\n            return new XDropWhile(f, xf);\n        });\n    }();\n\n    var _xfilter = function () {\n        function XFilter(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XFilter.prototype['@@transducer/init'] = _xfBase.init;\n        XFilter.prototype['@@transducer/result'] = _xfBase.result;\n        XFilter.prototype['@@transducer/step'] = function (result, input) {\n            return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n        };\n        return _curry2(function _xfilter(f, xf) {\n            return new XFilter(f, xf);\n        });\n    }();\n\n    var _xfind = function () {\n        function XFind(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.found = false;\n        }\n        XFind.prototype['@@transducer/init'] = _xfBase.init;\n        XFind.prototype['@@transducer/result'] = function (result) {\n            if (!this.found) {\n                result = this.xf['@@transducer/step'](result, void 0);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XFind.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f(input)) {\n                this.found = true;\n                result = _reduced(this.xf['@@transducer/step'](result, input));\n            }\n            return result;\n        };\n        return _curry2(function _xfind(f, xf) {\n            return new XFind(f, xf);\n        });\n    }();\n\n    var _xfindIndex = function () {\n        function XFindIndex(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.idx = -1;\n            this.found = false;\n        }\n        XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n        XFindIndex.prototype['@@transducer/result'] = function (result) {\n            if (!this.found) {\n                result = this.xf['@@transducer/step'](result, -1);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n            this.idx += 1;\n            if (this.f(input)) {\n                this.found = true;\n                result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n            }\n            return result;\n        };\n        return _curry2(function _xfindIndex(f, xf) {\n            return new XFindIndex(f, xf);\n        });\n    }();\n\n    var _xfindLast = function () {\n        function XFindLast(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n        XFindLast.prototype['@@transducer/result'] = function (result) {\n            return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n        };\n        XFindLast.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f(input)) {\n                this.last = input;\n            }\n            return result;\n        };\n        return _curry2(function _xfindLast(f, xf) {\n            return new XFindLast(f, xf);\n        });\n    }();\n\n    var _xfindLastIndex = function () {\n        function XFindLastIndex(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.idx = -1;\n            this.lastIdx = -1;\n        }\n        XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n        XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n            return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n        };\n        XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n            this.idx += 1;\n            if (this.f(input)) {\n                this.lastIdx = this.idx;\n            }\n            return result;\n        };\n        return _curry2(function _xfindLastIndex(f, xf) {\n            return new XFindLastIndex(f, xf);\n        });\n    }();\n\n    var _xmap = function () {\n        function XMap(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XMap.prototype['@@transducer/init'] = _xfBase.init;\n        XMap.prototype['@@transducer/result'] = _xfBase.result;\n        XMap.prototype['@@transducer/step'] = function (result, input) {\n            return this.xf['@@transducer/step'](result, this.f(input));\n        };\n        return _curry2(function _xmap(f, xf) {\n            return new XMap(f, xf);\n        });\n    }();\n\n    var _xtake = function () {\n        function XTake(n, xf) {\n            this.xf = xf;\n            this.n = n;\n        }\n        XTake.prototype['@@transducer/init'] = _xfBase.init;\n        XTake.prototype['@@transducer/result'] = _xfBase.result;\n        XTake.prototype['@@transducer/step'] = function (result, input) {\n            if (this.n === 0) {\n                return _reduced(result);\n            } else {\n                this.n -= 1;\n                return this.xf['@@transducer/step'](result, input);\n            }\n        };\n        return _curry2(function _xtake(n, xf) {\n            return new XTake(n, xf);\n        });\n    }();\n\n    var _xtakeWhile = function () {\n        function XTakeWhile(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n        XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n        XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n            return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n        };\n        return _curry2(function _xtakeWhile(f, xf) {\n            return new XTakeWhile(f, xf);\n        });\n    }();\n\n    /**\n     * Adds two numbers. Equivalent to `a + b` but curried.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Number}\n     * @see R.subtract\n     * @example\n     *\n     *      R.add(2, 3);       //=>  5\n     *      R.add(7)(10);      //=> 17\n     */\n    var add = _curry2(function add(a, b) {\n        return a + b;\n    });\n\n    /**\n     * Applies a function to the value at the given index of an array, returning a\n     * new copy of the array with the element at the given index replaced with the\n     * result of the function application.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category List\n     * @sig (a -> a) -> Number -> [a] -> [a]\n     * @param {Function} fn The function to apply.\n     * @param {Number} idx The index.\n     * @param {Array|Arguments} list An array-like object whose value\n     *        at the supplied index will be replaced.\n     * @return {Array} A copy of the supplied array-like object with\n     *         the element at index `idx` replaced with the value\n     *         returned by applying `fn` to the existing element.\n     * @see R.update\n     * @example\n     *\n     *      R.adjust(R.add(10), 1, [0, 1, 2]);     //=> [0, 11, 2]\n     *      R.adjust(R.add(10))(1)([0, 1, 2]);     //=> [0, 11, 2]\n     */\n    var adjust = _curry3(function adjust(fn, idx, list) {\n        if (idx >= list.length || idx < -list.length) {\n            return list;\n        }\n        var start = idx < 0 ? list.length : 0;\n        var _idx = start + idx;\n        var _list = _concat(list);\n        _list[_idx] = fn(list[_idx]);\n        return _list;\n    });\n\n    /**\n     * Returns `true` if all elements of the list match the predicate, `false` if\n     * there are any that don't.\n     *\n     * Dispatches to the `all` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n     *         otherwise.\n     * @see R.any, R.none, R.transduce\n     * @example\n     *\n     *      var lessThan2 = R.flip(R.lt)(2);\n     *      var lessThan3 = R.flip(R.lt)(3);\n     *      R.all(lessThan2)([1, 2]); //=> false\n     *      R.all(lessThan3)([1, 2]); //=> true\n     */\n    var all = _curry2(_dispatchable('all', _xall, function all(fn, list) {\n        var idx = 0;\n        while (idx < list.length) {\n            if (!fn(list[idx])) {\n                return false;\n            }\n            idx += 1;\n        }\n        return true;\n    }));\n\n    /**\n     * Returns a function that always returns the given value. Note that for\n     * non-primitives the value returned is a reference to the original value.\n     *\n     * This function is known as `const`, `constant`, or `K` (for K combinator) in\n     * other languages and libraries.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig a -> (* -> a)\n     * @param {*} val The value to wrap in a function\n     * @return {Function} A Function :: * -> val.\n     * @example\n     *\n     *      var t = R.always('Tee');\n     *      t(); //=> 'Tee'\n     */\n    var always = _curry1(function always(val) {\n        return function () {\n            return val;\n        };\n    });\n\n    /**\n     * Returns `true` if both arguments are `true`; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Logic\n     * @sig * -> * -> *\n     * @param {Boolean} a A boolean value\n     * @param {Boolean} b A boolean value\n     * @return {Boolean} `true` if both arguments are `true`, `false` otherwise\n     * @see R.both\n     * @example\n     *\n     *      R.and(true, true); //=> true\n     *      R.and(true, false); //=> false\n     *      R.and(false, true); //=> false\n     *      R.and(false, false); //=> false\n     */\n    var and = _curry2(function and(a, b) {\n        return a && b;\n    });\n\n    /**\n     * Returns `true` if at least one of elements of the list match the predicate,\n     * `false` otherwise.\n     *\n     * Dispatches to the `any` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n     *         otherwise.\n     * @see R.all, R.none, R.transduce\n     * @example\n     *\n     *      var lessThan0 = R.flip(R.lt)(0);\n     *      var lessThan2 = R.flip(R.lt)(2);\n     *      R.any(lessThan0)([1, 2]); //=> false\n     *      R.any(lessThan2)([1, 2]); //=> true\n     */\n    var any = _curry2(_dispatchable('any', _xany, function any(fn, list) {\n        var idx = 0;\n        while (idx < list.length) {\n            if (fn(list[idx])) {\n                return true;\n            }\n            idx += 1;\n        }\n        return false;\n    }));\n\n    /**\n     * Returns a new list, composed of n-tuples of consecutive elements If `n` is\n     * greater than the length of the list, an empty list is returned.\n     *\n     * Dispatches to the `aperture` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category List\n     * @sig Number -> [a] -> [[a]]\n     * @param {Number} n The size of the tuples to create\n     * @param {Array} list The list to split into `n`-tuples\n     * @return {Array} The new list.\n     * @see R.transduce\n     * @example\n     *\n     *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n     *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n     *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n     */\n    var aperture = _curry2(_dispatchable('aperture', _xaperture, _aperture));\n\n    /**\n     * Returns a new list containing the contents of the given list, followed by\n     * the given element.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} el The element to add to the end of the new list.\n     * @param {Array} list The list whose contents will be added to the beginning of the output\n     *        list.\n     * @return {Array} A new list containing the contents of the old list followed by `el`.\n     * @see R.prepend\n     * @example\n     *\n     *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n     *      R.append('tests', []); //=> ['tests']\n     *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n     */\n    var append = _curry2(function append(el, list) {\n        return _concat(list, [el]);\n    });\n\n    /**\n     * Applies function `fn` to the argument list `args`. This is useful for\n     * creating a fixed-arity function from a variadic function. `fn` should be a\n     * bound function if context is significant.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Function\n     * @sig (*... -> a) -> [*] -> a\n     * @param {Function} fn\n     * @param {Array} args\n     * @return {*}\n     * @see R.call, R.unapply\n     * @example\n     *\n     *      var nums = [1, 2, 3, -99, 42, 6, 7];\n     *      R.apply(Math.max, nums); //=> 42\n     */\n    var apply = _curry2(function apply(fn, args) {\n        return fn.apply(this, args);\n    });\n\n    /**\n     * Makes a shallow clone of an object, setting or overriding the specified\n     * property with the given value. Note that this copies and flattens prototype\n     * properties onto the new object as well. All non-primitive properties are\n     * copied by reference.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Object\n     * @sig String -> a -> {k: v} -> {k: v}\n     * @param {String} prop the property name to set\n     * @param {*} val the new value\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original except for the specified property.\n     * @see R.dissoc\n     * @example\n     *\n     *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n     */\n    var assoc = _curry3(function assoc(prop, val, obj) {\n        var result = {};\n        for (var p in obj) {\n            result[p] = obj[p];\n        }\n        result[prop] = val;\n        return result;\n    });\n\n    /**\n     * Makes a shallow clone of an object, setting or overriding the nodes required\n     * to create the given path, and placing the specific value at the tail end of\n     * that path. Note that this copies and flattens prototype properties onto the\n     * new object as well. All non-primitive properties are copied by reference.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Object\n     * @sig [String] -> a -> {k: v} -> {k: v}\n     * @param {Array} path the path to set\n     * @param {*} val the new value\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original except along the specified path.\n     * @see R.dissocPath\n     * @example\n     *\n     *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n     */\n    var assocPath = _curry3(function assocPath(path, val, obj) {\n        switch (path.length) {\n        case 0:\n            return val;\n        case 1:\n            return assoc(path[0], val, obj);\n        default:\n            return assoc(path[0], assocPath(_slice(path, 1), val, Object(obj[path[0]])), obj);\n        }\n    });\n\n    /**\n     * Creates a function that is bound to a context.\n     * Note: `R.bind` does not provide the additional argument-binding capabilities of\n     * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.6.0\n     * @category Function\n     * @category Object\n     * @sig (* -> *) -> {*} -> (* -> *)\n     * @param {Function} fn The function to bind to context\n     * @param {Object} thisObj The context to bind `fn` to\n     * @return {Function} A function that will execute in the context of `thisObj`.\n     * @see R.partial\n     */\n    var bind = _curry2(function bind(fn, thisObj) {\n        return _arity(fn.length, function () {\n            return fn.apply(thisObj, arguments);\n        });\n    });\n\n    /**\n     * A function wrapping calls to the two functions in an `&&` operation,\n     * returning the result of the first function if it is false-y and the result\n     * of the second function otherwise. Note that this is short-circuited,\n     * meaning that the second function will not be invoked if the first returns a\n     * false-y value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n     * @param {Function} f a predicate\n     * @param {Function} g another predicate\n     * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n     * @see R.and\n     * @example\n     *\n     *      var gt10 = x => x > 10;\n     *      var even = x => x % 2 === 0;\n     *      var f = R.both(gt10, even);\n     *      f(100); //=> true\n     *      f(101); //=> false\n     */\n    var both = _curry2(function both(f, g) {\n        return function _both() {\n            return f.apply(this, arguments) && g.apply(this, arguments);\n        };\n    });\n\n    /**\n     * Makes a comparator function out of a function that reports whether the first\n     * element is less than the second.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (a, b -> Boolean) -> (a, b -> Number)\n     * @param {Function} pred A predicate function of arity two.\n     * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`.\n     * @example\n     *\n     *      var cmp = R.comparator((a, b) => a.age < b.age);\n     *      var people = [\n     *        // ...\n     *      ];\n     *      R.sort(cmp, people);\n     */\n    var comparator = _curry1(function comparator(pred) {\n        return function (a, b) {\n            return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n        };\n    });\n\n    /**\n     * Returns a function, `fn`, which encapsulates if/else-if/else logic.\n     * `R.cond` takes a list of [predicate, transform] pairs. All of the arguments\n     * to `fn` are applied to each of the predicates in turn until one returns a\n     * \"truthy\" value, at which point `fn` returns the result of applying its\n     * arguments to the corresponding transformer. If none of the predicates\n     * matches, `fn` returns undefined.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.6.0\n     * @category Logic\n     * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n     * @param {Array} pairs\n     * @return {Function}\n     * @example\n     *\n     *      var fn = R.cond([\n     *        [R.equals(0),   R.always('water freezes at 0°C')],\n     *        [R.equals(100), R.always('water boils at 100°C')],\n     *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n     *      ]);\n     *      fn(0); //=> 'water freezes at 0°C'\n     *      fn(50); //=> 'nothing special happens at 50°C'\n     *      fn(100); //=> 'water boils at 100°C'\n     */\n    var cond = _curry1(function cond(pairs) {\n        return function () {\n            var idx = 0;\n            while (idx < pairs.length) {\n                if (pairs[idx][0].apply(this, arguments)) {\n                    return pairs[idx][1].apply(this, arguments);\n                }\n                idx += 1;\n            }\n        };\n    });\n\n    /**\n     * Counts the elements of a list according to how many match each value of a\n     * key generated by the supplied function. Returns an object mapping the keys\n     * produced by `fn` to the number of occurrences in the list. Note that all\n     * keys are coerced to strings because of how JavaScript objects work.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig (a -> String) -> [a] -> {*}\n     * @param {Function} fn The function used to map values to keys.\n     * @param {Array} list The list to count elements from.\n     * @return {Object} An object mapping keys to number of occurrences in the list.\n     * @example\n     *\n     *      var numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n     *      var letters = R.split('', 'abcABCaaaBBc');\n     *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n     *      R.countBy(R.toLower)(letters);   //=> {'a': 5, 'b': 4, 'c': 3}\n     */\n    var countBy = _curry2(function countBy(fn, list) {\n        var counts = {};\n        var len = list.length;\n        var idx = 0;\n        while (idx < len) {\n            var key = fn(list[idx]);\n            counts[key] = (_has(key, counts) ? counts[key] : 0) + 1;\n            idx += 1;\n        }\n        return counts;\n    });\n\n    /**\n     * Returns a curried equivalent of the provided function, with the specified\n     * arity. The curried function has two unusual capabilities. First, its\n     * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n     * following are equivalent:\n     *\n     *   - `g(1)(2)(3)`\n     *   - `g(1)(2, 3)`\n     *   - `g(1, 2)(3)`\n     *   - `g(1, 2, 3)`\n     *\n     * Secondly, the special placeholder value `R.__` may be used to specify\n     * \"gaps\", allowing partial application of any combination of arguments,\n     * regardless of their positions. If `g` is as above and `_` is `R.__`, the\n     * following are equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @func\n     * @memberOf R\n     * @since v0.5.0\n     * @category Function\n     * @sig Number -> (* -> a) -> (* -> a)\n     * @param {Number} length The arity for the returned function.\n     * @param {Function} fn The function to curry.\n     * @return {Function} A new, curried function.\n     * @see R.curry\n     * @example\n     *\n     *      var sumArgs = (...args) => R.sum(args);\n     *\n     *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n     *      var f = curriedAddFourNumbers(1, 2);\n     *      var g = f(3);\n     *      g(4); //=> 10\n     */\n    var curryN = _curry2(function curryN(length, fn) {\n        if (length === 1) {\n            return _curry1(fn);\n        }\n        return _arity(length, _curryN(length, [], fn));\n    });\n\n    /**\n     * Decrements its argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @see R.inc\n     * @example\n     *\n     *      R.dec(42); //=> 41\n     */\n    var dec = add(-1);\n\n    /**\n     * Returns the second argument if it is not `null`, `undefined` or `NaN`\n     * otherwise the first argument is returned.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Logic\n     * @sig a -> b -> a | b\n     * @param {a} val The default value.\n     * @param {b} val The value to return if it is not null or undefined\n     * @return {*} The the second value or the default value\n     * @example\n     *\n     *      var defaultTo42 = R.defaultTo(42);\n     *\n     *      defaultTo42(null);  //=> 42\n     *      defaultTo42(undefined);  //=> 42\n     *      defaultTo42('Ramda');  //=> 'Ramda'\n     *      defaultTo42(parseInt('string')); //=> 42\n     */\n    var defaultTo = _curry2(function defaultTo(d, v) {\n        return v == null || v !== v ? d : v;\n    });\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements in the first list not\n     * contained in the second list. Duplication is determined according to the\n     * value returned by applying the supplied predicate to two list elements.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The elements in `list1` that are not in `list2`.\n     * @see R.difference\n     * @example\n     *\n     *      function cmp(x, y) => x.a === y.a;\n     *      var l1 = [{a: 1}, {a: 2}, {a: 3}];\n     *      var l2 = [{a: 3}, {a: 4}];\n     *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n     */\n    var differenceWith = _curry3(function differenceWith(pred, first, second) {\n        var out = [];\n        var idx = 0;\n        var firstLen = first.length;\n        while (idx < firstLen) {\n            if (!_containsWith(pred, first[idx], second) && !_containsWith(pred, first[idx], out)) {\n                out.push(first[idx]);\n            }\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new object that does not contain a `prop` property.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Object\n     * @sig String -> {k: v} -> {k: v}\n     * @param {String} prop the name of the property to dissociate\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original but without the specified property\n     * @see R.assoc\n     * @example\n     *\n     *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n     */\n    var dissoc = _curry2(function dissoc(prop, obj) {\n        var result = {};\n        for (var p in obj) {\n            if (p !== prop) {\n                result[p] = obj[p];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Makes a shallow clone of an object, omitting the property at the given path.\n     * Note that this copies and flattens prototype properties onto the new object\n     * as well. All non-primitive properties are copied by reference.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.11.0\n     * @category Object\n     * @sig [String] -> {k: v} -> {k: v}\n     * @param {Array} path the path to set\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object without the property at path\n     * @see R.assocPath\n     * @example\n     *\n     *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n     */\n    var dissocPath = _curry2(function dissocPath(path, obj) {\n        switch (path.length) {\n        case 0:\n            return obj;\n        case 1:\n            return dissoc(path[0], obj);\n        default:\n            var head = path[0];\n            var tail = _slice(path, 1);\n            return obj[head] == null ? obj : assoc(head, dissocPath(tail, obj[head]), obj);\n        }\n    });\n\n    /**\n     * Divides two numbers. Equivalent to `a / b`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a / b`.\n     * @see R.multiply\n     * @example\n     *\n     *      R.divide(71, 100); //=> 0.71\n     *\n     *      var half = R.divide(R.__, 2);\n     *      half(42); //=> 21\n     *\n     *      var reciprocal = R.divide(1);\n     *      reciprocal(4);   //=> 0.25\n     */\n    var divide = _curry2(function divide(a, b) {\n        return a / b;\n    });\n\n    /**\n     * Returns a new list containing the last `n` elements of a given list, passing\n     * each value to the supplied predicate function, skipping elements while the\n     * predicate function returns `true`. The predicate function is passed one\n     * argument: *(value)*.\n     *\n     * Dispatches to the `dropWhile` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.takeWhile, R.transduce, R.addIndex\n     * @example\n     *\n     *      var lteTwo = x => x <= 2;\n     *\n     *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n     */\n    var dropWhile = _curry2(_dispatchable('dropWhile', _xdropWhile, function dropWhile(pred, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len && pred(list[idx])) {\n            idx += 1;\n        }\n        return _slice(list, idx);\n    }));\n\n    /**\n     * A function wrapping calls to the two functions in an `||` operation,\n     * returning the result of the first function if it is truth-y and the result\n     * of the second function otherwise. Note that this is short-circuited,\n     * meaning that the second function will not be invoked if the first returns a\n     * truth-y value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n     * @param {Function} f a predicate\n     * @param {Function} g another predicate\n     * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n     * @see R.or\n     * @example\n     *\n     *      var gt10 = x => x > 10;\n     *      var even = x => x % 2 === 0;\n     *      var f = R.either(gt10, even);\n     *      f(101); //=> true\n     *      f(8); //=> true\n     */\n    var either = _curry2(function either(f, g) {\n        return function _either() {\n            return f.apply(this, arguments) || g.apply(this, arguments);\n        };\n    });\n\n    /**\n     * Returns the empty value of its argument's type. Ramda defines the empty\n     * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n     * types are supported if they define `<Type>.empty` and/or\n     * `<Type>.prototype.empty`.\n     *\n     * Dispatches to the `empty` method of the first argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category Function\n     * @sig a -> a\n     * @param {*} x\n     * @return {*}\n     * @example\n     *\n     *      R.empty(Just(42));      //=> Nothing()\n     *      R.empty([1, 2, 3]);     //=> []\n     *      R.empty('unicorns');    //=> ''\n     *      R.empty({x: 1, y: 2});  //=> {}\n     */\n    // else\n    var empty = _curry1(function empty(x) {\n        return x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n            return arguments;\n        }() : // else\n        void 0;\n    });\n\n    /**\n     * Creates a new object by recursively evolving a shallow copy of `object`,\n     * according to the `transformation` functions. All non-primitive properties\n     * are copied by reference.\n     *\n     * A `transformation` function will not be invoked if its corresponding key\n     * does not exist in the evolved object.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Object\n     * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n     * @param {Object} transformations The object specifying transformation functions to apply\n     *        to the object.\n     * @param {Object} object The object to be transformed.\n     * @return {Object} The transformed object.\n     * @example\n     *\n     *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n     *      var transformations = {\n     *        firstName: R.trim,\n     *        lastName: R.trim, // Will not get invoked.\n     *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n     *      };\n     *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n     */\n    var evolve = _curry2(function evolve(transformations, object) {\n        var result = {};\n        var transformation, key, type;\n        for (key in object) {\n            transformation = transformations[key];\n            type = typeof transformation;\n            result[key] = type === 'function' ? transformation(object[key]) : type === 'object' ? evolve(transformations[key], object[key]) : object[key];\n        }\n        return result;\n    });\n\n    /**\n     * Returns the first element of the list which matches the predicate, or\n     * `undefined` if no element matches.\n     *\n     * Dispatches to the `find` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> a | undefined\n     * @param {Function} fn The predicate function used to determine if the element is the\n     *        desired one.\n     * @param {Array} list The array to consider.\n     * @return {Object} The element found, or `undefined`.\n     * @see R.transduce\n     * @example\n     *\n     *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n     *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n     *      R.find(R.propEq('a', 4))(xs); //=> undefined\n     */\n    var find = _curry2(_dispatchable('find', _xfind, function find(fn, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len) {\n            if (fn(list[idx])) {\n                return list[idx];\n            }\n            idx += 1;\n        }\n    }));\n\n    /**\n     * Returns the index of the first element of the list which matches the\n     * predicate, or `-1` if no element matches.\n     *\n     * Dispatches to the `findIndex` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Number\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Number} The index of the element found, or `-1`.\n     * @see R.transduce\n     * @example\n     *\n     *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n     *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n     *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n     */\n    var findIndex = _curry2(_dispatchable('findIndex', _xfindIndex, function findIndex(fn, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len) {\n            if (fn(list[idx])) {\n                return idx;\n            }\n            idx += 1;\n        }\n        return -1;\n    }));\n\n    /**\n     * Returns the last element of the list which matches the predicate, or\n     * `undefined` if no element matches.\n     *\n     * Dispatches to the `findLast` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> a | undefined\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Object} The element found, or `undefined`.\n     * @see R.transduce\n     * @example\n     *\n     *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n     *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n     *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n     */\n    var findLast = _curry2(_dispatchable('findLast', _xfindLast, function findLast(fn, list) {\n        var idx = list.length - 1;\n        while (idx >= 0) {\n            if (fn(list[idx])) {\n                return list[idx];\n            }\n            idx -= 1;\n        }\n    }));\n\n    /**\n     * Returns the index of the last element of the list which matches the\n     * predicate, or `-1` if no element matches.\n     *\n     * Dispatches to the `findLastIndex` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Number\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Number} The index of the element found, or `-1`.\n     * @see R.transduce\n     * @example\n     *\n     *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n     *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n     *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n     */\n    var findLastIndex = _curry2(_dispatchable('findLastIndex', _xfindLastIndex, function findLastIndex(fn, list) {\n        var idx = list.length - 1;\n        while (idx >= 0) {\n            if (fn(list[idx])) {\n                return idx;\n            }\n            idx -= 1;\n        }\n        return -1;\n    }));\n\n    /**\n     * Iterate over an input `list`, calling a provided function `fn` for each\n     * element in the list.\n     *\n     * `fn` receives one argument: *(value)*.\n     *\n     * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n     * arrays), unlike the native `Array.prototype.forEach` method. For more\n     * details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n     *\n     * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n     * the original array. In some libraries this function is named `each`.\n     *\n     * Dispatches to the `forEach` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category List\n     * @sig (a -> *) -> [a] -> [a]\n     * @param {Function} fn The function to invoke. Receives one argument, `value`.\n     * @param {Array} list The list to iterate over.\n     * @return {Array} The original list.\n     * @see R.addIndex\n     * @example\n     *\n     *      var printXPlusFive = x => console.log(x + 5);\n     *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n     *      //-> 6\n     *      //-> 7\n     *      //-> 8\n     */\n    var forEach = _curry2(_checkForMethod('forEach', function forEach(fn, list) {\n        var len = list.length;\n        var idx = 0;\n        while (idx < len) {\n            fn(list[idx]);\n            idx += 1;\n        }\n        return list;\n    }));\n\n    /**\n     * Creates a new object out of a list key-value pairs.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category List\n     * @sig [[k,v]] -> {k: v}\n     * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n     * @return {Object} The object made by pairing up `keys` and `values`.\n     * @see R.toPairs, R.pair\n     * @example\n     *\n     *      R.fromPairs([['a', 1], ['b', 2],  ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n     */\n    var fromPairs = _curry1(function fromPairs(pairs) {\n        var idx = 0;\n        var len = pairs.length;\n        var out = {};\n        while (idx < len) {\n            if (_isArray(pairs[idx]) && pairs[idx].length) {\n                out[pairs[idx][0]] = pairs[idx][1];\n            }\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns `true` if the first argument is greater than the second; `false`\n     * otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @see R.lt\n     * @example\n     *\n     *      R.gt(2, 1); //=> true\n     *      R.gt(2, 2); //=> false\n     *      R.gt(2, 3); //=> false\n     *      R.gt('a', 'z'); //=> false\n     *      R.gt('z', 'a'); //=> true\n     */\n    var gt = _curry2(function gt(a, b) {\n        return a > b;\n    });\n\n    /**\n     * Returns `true` if the first argument is greater than or equal to the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Boolean}\n     * @see R.lte\n     * @example\n     *\n     *      R.gte(2, 1); //=> true\n     *      R.gte(2, 2); //=> true\n     *      R.gte(2, 3); //=> false\n     *      R.gte('a', 'z'); //=> false\n     *      R.gte('z', 'a'); //=> true\n     */\n    var gte = _curry2(function gte(a, b) {\n        return a >= b;\n    });\n\n    /**\n     * Returns whether or not an object has an own property with the specified name\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Object\n     * @sig s -> {s: x} -> Boolean\n     * @param {String} prop The name of the property to check for.\n     * @param {Object} obj The object to query.\n     * @return {Boolean} Whether the property exists.\n     * @example\n     *\n     *      var hasName = R.has('name');\n     *      hasName({name: 'alice'});   //=> true\n     *      hasName({name: 'bob'});     //=> true\n     *      hasName({});                //=> false\n     *\n     *      var point = {x: 0, y: 0};\n     *      var pointHas = R.has(R.__, point);\n     *      pointHas('x');  //=> true\n     *      pointHas('y');  //=> true\n     *      pointHas('z');  //=> false\n     */\n    var has = _curry2(_has);\n\n    /**\n     * Returns whether or not an object or its prototype chain has a property with\n     * the specified name\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Object\n     * @sig s -> {s: x} -> Boolean\n     * @param {String} prop The name of the property to check for.\n     * @param {Object} obj The object to query.\n     * @return {Boolean} Whether the property exists.\n     * @example\n     *\n     *      function Rectangle(width, height) {\n     *        this.width = width;\n     *        this.height = height;\n     *      }\n     *      Rectangle.prototype.area = function() {\n     *        return this.width * this.height;\n     *      };\n     *\n     *      var square = new Rectangle(2, 2);\n     *      R.hasIn('width', square);  //=> true\n     *      R.hasIn('area', square);  //=> true\n     */\n    var hasIn = _curry2(function hasIn(prop, obj) {\n        return prop in obj;\n    });\n\n    /**\n     * Returns true if its arguments are identical, false otherwise. Values are\n     * identical if they reference the same memory. `NaN` is identical to `NaN`;\n     * `0` and `-0` are not identical.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.15.0\n     * @category Relation\n     * @sig a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @example\n     *\n     *      var o = {};\n     *      R.identical(o, o); //=> true\n     *      R.identical(1, 1); //=> true\n     *      R.identical(1, '1'); //=> false\n     *      R.identical([], []); //=> false\n     *      R.identical(0, -0); //=> false\n     *      R.identical(NaN, NaN); //=> true\n     */\n    // SameValue algorithm\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Step 6.a: NaN == NaN\n    var identical = _curry2(function identical(a, b) {\n        // SameValue algorithm\n        if (a === b) {\n            // Steps 1-5, 7-10\n            // Steps 6.b-6.e: +0 != -0\n            return a !== 0 || 1 / a === 1 / b;\n        } else {\n            // Step 6.a: NaN == NaN\n            return a !== a && b !== b;\n        }\n    });\n\n    /**\n     * A function that does nothing but return the parameter supplied to it. Good\n     * as a default or placeholder function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig a -> a\n     * @param {*} x The value to return.\n     * @return {*} The input value, `x`.\n     * @example\n     *\n     *      R.identity(1); //=> 1\n     *\n     *      var obj = {};\n     *      R.identity(obj) === obj; //=> true\n     */\n    var identity = _curry1(_identity);\n\n    /**\n     * Creates a function that will process either the `onTrue` or the `onFalse`\n     * function depending upon the result of the `condition` predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n     * @param {Function} condition A predicate function\n     * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n     * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n     * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\n     *                    function depending upon the result of the `condition` predicate.\n     * @see R.unless, R.when\n     * @example\n     *\n     *      var incCount = R.ifElse(\n     *        R.has('count'),\n     *        R.over(R.lensProp('count'), R.inc),\n     *        R.assoc('count', 1)\n     *      );\n     *      incCount({});           //=> { count: 1 }\n     *      incCount({ count: 1 }); //=> { count: 2 }\n     */\n    var ifElse = _curry3(function ifElse(condition, onTrue, onFalse) {\n        return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n            return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n        });\n    });\n\n    /**\n     * Increments its argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @see R.dec\n     * @example\n     *\n     *      R.inc(42); //=> 43\n     */\n    var inc = add(1);\n\n    /**\n     * Inserts the supplied element into the list, at index `index`. _Note that\n     * this is not destructive_: it returns a copy of the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.2\n     * @category List\n     * @sig Number -> a -> [a] -> [a]\n     * @param {Number} index The position to insert the element\n     * @param {*} elt The element to insert into the Array\n     * @param {Array} list The list to insert into\n     * @return {Array} A new Array with `elt` inserted at `index`.\n     * @example\n     *\n     *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n     */\n    var insert = _curry3(function insert(idx, elt, list) {\n        idx = idx < list.length && idx >= 0 ? idx : list.length;\n        var result = _slice(list);\n        result.splice(idx, 0, elt);\n        return result;\n    });\n\n    /**\n     * Inserts the sub-list into the list, at index `index`. _Note that this is not\n     * destructive_: it returns a copy of the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category List\n     * @sig Number -> [a] -> [a] -> [a]\n     * @param {Number} index The position to insert the sub-list\n     * @param {Array} elts The sub-list to insert into the Array\n     * @param {Array} list The list to insert the sub-list into\n     * @return {Array} A new Array with `elts` inserted starting at `index`.\n     * @example\n     *\n     *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n     */\n    var insertAll = _curry3(function insertAll(idx, elts, list) {\n        idx = idx < list.length && idx >= 0 ? idx : list.length;\n        return _concat(_concat(_slice(list, 0, idx), elts), _slice(list, idx));\n    });\n\n    /**\n     * Creates a new list with the separator interposed between elements.\n     *\n     * Dispatches to the `intersperse` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} separator The element to add to the list.\n     * @param {Array} list The list to be interposed.\n     * @return {Array} The new list.\n     * @example\n     *\n     *      R.intersperse('n', ['ba', 'a', 'a']); //=> ['ba', 'n', 'a', 'n', 'a']\n     */\n    var intersperse = _curry2(_checkForMethod('intersperse', function intersperse(separator, list) {\n        var out = [];\n        var idx = 0;\n        var length = list.length;\n        while (idx < length) {\n            if (idx === length - 1) {\n                out.push(list[idx]);\n            } else {\n                out.push(list[idx], separator);\n            }\n            idx += 1;\n        }\n        return out;\n    }));\n\n    /**\n     * See if an object (`val`) is an instance of the supplied constructor. This\n     * function will check up the inheritance chain, if any.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category Type\n     * @sig (* -> {*}) -> a -> Boolean\n     * @param {Object} ctor A constructor\n     * @param {*} val The value to test\n     * @return {Boolean}\n     * @example\n     *\n     *      R.is(Object, {}); //=> true\n     *      R.is(Number, 1); //=> true\n     *      R.is(Object, 1); //=> false\n     *      R.is(String, 's'); //=> true\n     *      R.is(String, new String('')); //=> true\n     *      R.is(Object, new String('')); //=> true\n     *      R.is(Object, 's'); //=> false\n     *      R.is(Number, {}); //=> false\n     */\n    var is = _curry2(function is(Ctor, val) {\n        return val != null && val.constructor === Ctor || val instanceof Ctor;\n    });\n\n    /**\n     * Tests whether or not an object is similar to an array.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.5.0\n     * @category Type\n     * @category List\n     * @sig * -> Boolean\n     * @param {*} x The object to test.\n     * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n     * @example\n     *\n     *      R.isArrayLike([]); //=> true\n     *      R.isArrayLike(true); //=> false\n     *      R.isArrayLike({}); //=> false\n     *      R.isArrayLike({length: 10}); //=> false\n     *      R.isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n     */\n    var isArrayLike = _curry1(function isArrayLike(x) {\n        if (_isArray(x)) {\n            return true;\n        }\n        if (!x) {\n            return false;\n        }\n        if (typeof x !== 'object') {\n            return false;\n        }\n        if (x instanceof String) {\n            return false;\n        }\n        if (x.nodeType === 1) {\n            return !!x.length;\n        }\n        if (x.length === 0) {\n            return true;\n        }\n        if (x.length > 0) {\n            return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n        }\n        return false;\n    });\n\n    /**\n     * Checks if the input value is `null` or `undefined`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Type\n     * @sig * -> Boolean\n     * @param {*} x The value to test.\n     * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n     * @example\n     *\n     *      R.isNil(null); //=> true\n     *      R.isNil(undefined); //=> true\n     *      R.isNil(0); //=> false\n     *      R.isNil([]); //=> false\n     */\n    var isNil = _curry1(function isNil(x) {\n        return x == null;\n    });\n\n    /**\n     * Returns a list containing the names of all the enumerable own properties of\n     * the supplied object.\n     * Note that the order of the output array is not guaranteed to be consistent\n     * across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig {k: v} -> [k]\n     * @param {Object} obj The object to extract properties from\n     * @return {Array} An array of the object's own properties.\n     * @example\n     *\n     *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n     */\n    // cover IE < 9 keys issues\n    // Safari bug\n    var keys = function () {\n        // cover IE < 9 keys issues\n        var hasEnumBug = !{ toString: null }.propertyIsEnumerable('toString');\n        var nonEnumerableProps = [\n            'constructor',\n            'valueOf',\n            'isPrototypeOf',\n            'toString',\n            'propertyIsEnumerable',\n            'hasOwnProperty',\n            'toLocaleString'\n        ];\n        // Safari bug\n        var hasArgsEnumBug = function () {\n            'use strict';\n            return arguments.propertyIsEnumerable('length');\n        }();\n        var contains = function contains(list, item) {\n            var idx = 0;\n            while (idx < list.length) {\n                if (list[idx] === item) {\n                    return true;\n                }\n                idx += 1;\n            }\n            return false;\n        };\n        return typeof Object.keys === 'function' && !hasArgsEnumBug ? _curry1(function keys(obj) {\n            return Object(obj) !== obj ? [] : Object.keys(obj);\n        }) : _curry1(function keys(obj) {\n            if (Object(obj) !== obj) {\n                return [];\n            }\n            var prop, nIdx;\n            var ks = [];\n            var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n            for (prop in obj) {\n                if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n                    ks[ks.length] = prop;\n                }\n            }\n            if (hasEnumBug) {\n                nIdx = nonEnumerableProps.length - 1;\n                while (nIdx >= 0) {\n                    prop = nonEnumerableProps[nIdx];\n                    if (_has(prop, obj) && !contains(ks, prop)) {\n                        ks[ks.length] = prop;\n                    }\n                    nIdx -= 1;\n                }\n            }\n            return ks;\n        });\n    }();\n\n    /**\n     * Returns a list containing the names of all the properties of the supplied\n     * object, including prototype properties.\n     * Note that the order of the output array is not guaranteed to be consistent\n     * across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category Object\n     * @sig {k: v} -> [k]\n     * @param {Object} obj The object to extract properties from\n     * @return {Array} An array of the object's own and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.keysIn(f); //=> ['x', 'y']\n     */\n    var keysIn = _curry1(function keysIn(obj) {\n        var prop;\n        var ks = [];\n        for (prop in obj) {\n            ks[ks.length] = prop;\n        }\n        return ks;\n    });\n\n    /**\n     * Returns the number of elements in the array by returning `list.length`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category List\n     * @sig [a] -> Number\n     * @param {Array} list The array to inspect.\n     * @return {Number} The length of the array.\n     * @example\n     *\n     *      R.length([]); //=> 0\n     *      R.length([1, 2, 3]); //=> 3\n     */\n    var length = _curry1(function length(list) {\n        return list != null && is(Number, list.length) ? list.length : NaN;\n    });\n\n    /**\n     * Returns `true` if the first argument is less than the second; `false`\n     * otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @see R.gt\n     * @example\n     *\n     *      R.lt(2, 1); //=> false\n     *      R.lt(2, 2); //=> false\n     *      R.lt(2, 3); //=> true\n     *      R.lt('a', 'z'); //=> true\n     *      R.lt('z', 'a'); //=> false\n     */\n    var lt = _curry2(function lt(a, b) {\n        return a < b;\n    });\n\n    /**\n     * Returns `true` if the first argument is less than or equal to the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Boolean}\n     * @see R.gte\n     * @example\n     *\n     *      R.lte(2, 1); //=> false\n     *      R.lte(2, 2); //=> true\n     *      R.lte(2, 3); //=> true\n     *      R.lte('a', 'z'); //=> true\n     *      R.lte('z', 'a'); //=> false\n     */\n    var lte = _curry2(function lte(a, b) {\n        return a <= b;\n    });\n\n    /**\n     * The mapAccum function behaves like a combination of map and reduce; it\n     * applies a function to each element of a list, passing an accumulating\n     * parameter from left to right, and returning a final value of this\n     * accumulator together with the new list.\n     *\n     * The iterator function receives two arguments, *acc* and *value*, and should\n     * return a tuple *[acc, value]*.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category List\n     * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.addIndex\n     * @example\n     *\n     *      var digits = ['1', '2', '3', '4'];\n     *      var append = (a, b) => [a + b, a + b];\n     *\n     *      R.mapAccum(append, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n     */\n    var mapAccum = _curry3(function mapAccum(fn, acc, list) {\n        var idx = 0;\n        var len = list.length;\n        var result = [];\n        var tuple = [acc];\n        while (idx < len) {\n            tuple = fn(tuple[0], list[idx]);\n            result[idx] = tuple[1];\n            idx += 1;\n        }\n        return [\n            tuple[0],\n            result\n        ];\n    });\n\n    /**\n     * The mapAccumRight function behaves like a combination of map and reduce; it\n     * applies a function to each element of a list, passing an accumulating\n     * parameter from right to left, and returning a final value of this\n     * accumulator together with the new list.\n     *\n     * Similar to `mapAccum`, except moves through the input list from the right to\n     * the left.\n     *\n     * The iterator function receives two arguments, *acc* and *value*, and should\n     * return a tuple *[acc, value]*.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category List\n     * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.addIndex\n     * @example\n     *\n     *      var digits = ['1', '2', '3', '4'];\n     *      var append = (a, b) => [a + b, a + b];\n     *\n     *      R.mapAccumRight(append, 0, digits); //=> ['04321', ['04321', '0432', '043', '04']]\n     */\n    var mapAccumRight = _curry3(function mapAccumRight(fn, acc, list) {\n        var idx = list.length - 1;\n        var result = [];\n        var tuple = [acc];\n        while (idx >= 0) {\n            tuple = fn(tuple[0], list[idx]);\n            result[idx] = tuple[1];\n            idx -= 1;\n        }\n        return [\n            tuple[0],\n            result\n        ];\n    });\n\n    /**\n     * Tests a regular expression against a String. Note that this function will\n     * return an empty array when there are no matches. This differs from\n     * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n     * which returns `null` when there are no matches.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category String\n     * @sig RegExp -> String -> [String | Undefined]\n     * @param {RegExp} rx A regular expression.\n     * @param {String} str The string to match against\n     * @return {Array} The list of matches or empty array.\n     * @see R.test\n     * @example\n     *\n     *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n     *      R.match(/a/, 'b'); //=> []\n     *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n     */\n    var match = _curry2(function match(rx, str) {\n        return str.match(rx) || [];\n    });\n\n    /**\n     * mathMod behaves like the modulo operator should mathematically, unlike the\n     * `%` operator (and by extension, R.modulo). So while \"-17 % 5\" is -2,\n     * mathMod(-17, 5) is 3. mathMod requires Integer arguments, and returns NaN\n     * when the modulus is zero or negative.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} m The dividend.\n     * @param {Number} p the modulus.\n     * @return {Number} The result of `b mod a`.\n     * @example\n     *\n     *      R.mathMod(-17, 5);  //=> 3\n     *      R.mathMod(17, 5);   //=> 2\n     *      R.mathMod(17, -5);  //=> NaN\n     *      R.mathMod(17, 0);   //=> NaN\n     *      R.mathMod(17.2, 5); //=> NaN\n     *      R.mathMod(17, 5.3); //=> NaN\n     *\n     *      var clock = R.mathMod(R.__, 12);\n     *      clock(15); //=> 3\n     *      clock(24); //=> 0\n     *\n     *      var seventeenMod = R.mathMod(17);\n     *      seventeenMod(3);  //=> 2\n     *      seventeenMod(4);  //=> 1\n     *      seventeenMod(10); //=> 7\n     */\n    var mathMod = _curry2(function mathMod(m, p) {\n        if (!_isInteger(m)) {\n            return NaN;\n        }\n        if (!_isInteger(p) || p < 1) {\n            return NaN;\n        }\n        return (m % p + p) % p;\n    });\n\n    /**\n     * Returns the larger of its two arguments.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> a\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.maxBy, R.min\n     * @example\n     *\n     *      R.max(789, 123); //=> 789\n     *      R.max('a', 'b'); //=> 'b'\n     */\n    var max = _curry2(function max(a, b) {\n        return b > a ? b : a;\n    });\n\n    /**\n     * Takes a function and two values, and returns whichever value produces the\n     * larger result when passed to the provided function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Relation\n     * @sig Ord b => (a -> b) -> a -> a -> a\n     * @param {Function} f\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.max, R.minBy\n     * @example\n     *\n     *      //  square :: Number -> Number\n     *      var square = n => n * n;\n     *\n     *      R.maxBy(square, -3, 2); //=> -3\n     *\n     *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5\n     *      R.reduce(R.maxBy(square), 0, []); //=> 0\n     */\n    var maxBy = _curry3(function maxBy(f, a, b) {\n        return f(b) > f(a) ? b : a;\n    });\n\n    /**\n     * Creates a new object with the own properties of the two provided objects. If\n     * a key exists in both objects, the provided function is applied to the key\n     * and the values associated with the key in each object, with the result being\n     * used as the value associated with the key in the returned object. The key\n     * will be excluded from the returned object if the resulting value is\n     * `undefined`.\n     *\n     * @func\n     * @memberOf R\n     * @since 0.19.1\n     * @since 0.19.0\n     * @category Object\n     * @sig (String -> a -> a -> a) -> {a} -> {a} -> {a}\n     * @param {Function} fn\n     * @param {Object} l\n     * @param {Object} r\n     * @return {Object}\n     * @see R.merge, R.mergeWith\n     * @example\n     *\n     *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n     *      R.mergeWithKey(concatValues,\n     *                     { a: true, thing: 'foo', values: [10, 20] },\n     *                     { b: true, thing: 'bar', values: [15, 35] });\n     *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n     */\n    var mergeWithKey = _curry3(function mergeWithKey(fn, l, r) {\n        var result = {};\n        var k;\n        for (k in l) {\n            if (_has(k, l)) {\n                result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n            }\n        }\n        for (k in r) {\n            if (_has(k, r) && !_has(k, result)) {\n                result[k] = r[k];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Returns the smaller of its two arguments.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> a\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.minBy, R.max\n     * @example\n     *\n     *      R.min(789, 123); //=> 123\n     *      R.min('a', 'b'); //=> 'a'\n     */\n    var min = _curry2(function min(a, b) {\n        return b < a ? b : a;\n    });\n\n    /**\n     * Takes a function and two values, and returns whichever value produces the\n     * smaller result when passed to the provided function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Relation\n     * @sig Ord b => (a -> b) -> a -> a -> a\n     * @param {Function} f\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.min, R.maxBy\n     * @example\n     *\n     *      //  square :: Number -> Number\n     *      var square = n => n * n;\n     *\n     *      R.minBy(square, -3, 2); //=> 2\n     *\n     *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1\n     *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity\n     */\n    var minBy = _curry3(function minBy(f, a, b) {\n        return f(b) < f(a) ? b : a;\n    });\n\n    /**\n     * Divides the second parameter by the first and returns the remainder. Note\n     * that this function preserves the JavaScript-style behavior for modulo. For\n     * mathematical modulo see `mathMod`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The value to the divide.\n     * @param {Number} b The pseudo-modulus\n     * @return {Number} The result of `b % a`.\n     * @see R.mathMod\n     * @example\n     *\n     *      R.modulo(17, 3); //=> 2\n     *      // JS behavior:\n     *      R.modulo(-17, 3); //=> -2\n     *      R.modulo(17, -3); //=> 2\n     *\n     *      var isOdd = R.modulo(R.__, 2);\n     *      isOdd(42); //=> 0\n     *      isOdd(21); //=> 1\n     */\n    var modulo = _curry2(function modulo(a, b) {\n        return a % b;\n    });\n\n    /**\n     * Multiplies two numbers. Equivalent to `a * b` but curried.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a * b`.\n     * @see R.divide\n     * @example\n     *\n     *      var double = R.multiply(2);\n     *      var triple = R.multiply(3);\n     *      double(3);       //=>  6\n     *      triple(4);       //=> 12\n     *      R.multiply(2, 5);  //=> 10\n     */\n    var multiply = _curry2(function multiply(a, b) {\n        return a * b;\n    });\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts\n     * exactly `n` parameters. Any extraneous parameters will not be passed to the\n     * supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig Number -> (* -> a) -> (* -> a)\n     * @param {Number} n The desired arity of the new function.\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity `n`.\n     * @example\n     *\n     *      var takesTwoArgs = (a, b) => [a, b];\n     *\n     *      takesTwoArgs.length; //=> 2\n     *      takesTwoArgs(1, 2); //=> [1, 2]\n     *\n     *      var takesOneArg = R.nAry(1, takesTwoArgs);\n     *      takesOneArg.length; //=> 1\n     *      // Only `n` arguments are passed to the wrapped function\n     *      takesOneArg(1, 2); //=> [1, undefined]\n     */\n    var nAry = _curry2(function nAry(n, fn) {\n        switch (n) {\n        case 0:\n            return function () {\n                return fn.call(this);\n            };\n        case 1:\n            return function (a0) {\n                return fn.call(this, a0);\n            };\n        case 2:\n            return function (a0, a1) {\n                return fn.call(this, a0, a1);\n            };\n        case 3:\n            return function (a0, a1, a2) {\n                return fn.call(this, a0, a1, a2);\n            };\n        case 4:\n            return function (a0, a1, a2, a3) {\n                return fn.call(this, a0, a1, a2, a3);\n            };\n        case 5:\n            return function (a0, a1, a2, a3, a4) {\n                return fn.call(this, a0, a1, a2, a3, a4);\n            };\n        case 6:\n            return function (a0, a1, a2, a3, a4, a5) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5);\n            };\n        case 7:\n            return function (a0, a1, a2, a3, a4, a5, a6) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n            };\n        case 8:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n            };\n        case 9:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n            };\n        case 10:\n            return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n                return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n            };\n        default:\n            throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n        }\n    });\n\n    /**\n     * Negates its argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @example\n     *\n     *      R.negate(42); //=> -42\n     */\n    var negate = _curry1(function negate(n) {\n        return -n;\n    });\n\n    /**\n     * Returns `true` if no elements of the list match the predicate, `false`\n     * otherwise.\n     *\n     * Dispatches to the `any` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n     * @see R.all, R.any\n     * @example\n     *\n     *      var isEven = n => n % 2 === 0;\n     *\n     *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n     *      R.none(isEven, [1, 3, 5, 7, 8, 11]); //=> false\n     */\n    var none = _curry2(_complement(_dispatchable('any', _xany, any)));\n\n    /**\n     * A function that returns the `!` of its argument. It will return `true` when\n     * passed false-y value, and `false` when passed a truth-y one.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Logic\n     * @sig * -> Boolean\n     * @param {*} a any value\n     * @return {Boolean} the logical inverse of passed argument.\n     * @see R.complement\n     * @example\n     *\n     *      R.not(true); //=> false\n     *      R.not(false); //=> true\n     *      R.not(0); => true\n     *      R.not(1); => false\n     */\n    var not = _curry1(function not(a) {\n        return !a;\n    });\n\n    /**\n     * Returns the nth element of the given list or string. If n is negative the\n     * element at index length + n is returned.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Number -> [a] -> a | Undefined\n     * @sig Number -> String -> String\n     * @param {Number} offset\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      var list = ['foo', 'bar', 'baz', 'quux'];\n     *      R.nth(1, list); //=> 'bar'\n     *      R.nth(-1, list); //=> 'quux'\n     *      R.nth(-99, list); //=> undefined\n     *\n     *      R.nth('abc', 2); //=> 'c'\n     *      R.nth('abc', 3); //=> ''\n     */\n    var nth = _curry2(function nth(offset, list) {\n        var idx = offset < 0 ? list.length + offset : offset;\n        return _isString(list) ? list.charAt(idx) : list[idx];\n    });\n\n    /**\n     * Returns a function which returns its nth argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Function\n     * @sig Number -> *... -> *\n     * @param {Number} n\n     * @return {Function}\n     * @example\n     *\n     *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n     *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n     */\n    var nthArg = _curry1(function nthArg(n) {\n        return function () {\n            return nth(n, arguments);\n        };\n    });\n\n    /**\n     * Creates an object containing a single key:value pair.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category Object\n     * @sig String -> a -> {String:a}\n     * @param {String} key\n     * @param {*} val\n     * @return {Object}\n     * @see R.pair\n     * @example\n     *\n     *      var matchPhrases = R.compose(\n     *        R.objOf('must'),\n     *        R.map(R.objOf('match_phrase'))\n     *      );\n     *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n     */\n    var objOf = _curry2(function objOf(key, val) {\n        var obj = {};\n        obj[key] = val;\n        return obj;\n    });\n\n    /**\n     * Returns a singleton array containing the value provided.\n     *\n     * Note this `of` is different from the ES6 `of`; See\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category Function\n     * @sig a -> [a]\n     * @param {*} x any value\n     * @return {Array} An array wrapping `x`.\n     * @example\n     *\n     *      R.of(null); //=> [null]\n     *      R.of([42]); //=> [[42]]\n     */\n    var of = _curry1(_of);\n\n    /**\n     * Accepts a function `fn` and returns a function that guards invocation of\n     * `fn` such that `fn` can only ever be called once, no matter how many times\n     * the returned function is invoked. The first value calculated is returned in\n     * subsequent invocations.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (a... -> b) -> (a... -> b)\n     * @param {Function} fn The function to wrap in a call-only-once wrapper.\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      var addOneOnce = R.once(x => x + 1);\n     *      addOneOnce(10); //=> 11\n     *      addOneOnce(addOneOnce(50)); //=> 11\n     */\n    var once = _curry1(function once(fn) {\n        var called = false;\n        var result;\n        return _arity(fn.length, function () {\n            if (called) {\n                return result;\n            }\n            called = true;\n            result = fn.apply(this, arguments);\n            return result;\n        });\n    });\n\n    /**\n     * Returns `true` if one or both of its arguments are `true`. Returns `false`\n     * if both arguments are `false`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Logic\n     * @sig * -> * -> *\n     * @param {Boolean} a A boolean value\n     * @param {Boolean} b A boolean value\n     * @return {Boolean} `true` if one or both arguments are `true`, `false` otherwise\n     * @see R.either\n     * @example\n     *\n     *      R.or(true, true); //=> true\n     *      R.or(true, false); //=> true\n     *      R.or(false, true); //=> true\n     *      R.or(false, false); //=> false\n     */\n    var or = _curry2(function or(a, b) {\n        return a || b;\n    });\n\n    /**\n     * Returns the result of \"setting\" the portion of the given data structure\n     * focused by the given lens to the result of applying the given function to\n     * the focused value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> (a -> a) -> s -> s\n     * @param {Lens} lens\n     * @param {*} v\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var headLens = R.lensIndex(0);\n     *\n     *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n     */\n    var over = function () {\n        var Identity = function (x) {\n            return {\n                value: x,\n                map: function (f) {\n                    return Identity(f(x));\n                }\n            };\n        };\n        return _curry3(function over(lens, f, x) {\n            return lens(function (y) {\n                return Identity(f(y));\n            })(x).value;\n        });\n    }();\n\n    /**\n     * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category List\n     * @sig a -> b -> (a,b)\n     * @param {*} fst\n     * @param {*} snd\n     * @return {Array}\n     * @see R.createMapEntry, R.of\n     * @example\n     *\n     *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n     */\n    var pair = _curry2(function pair(fst, snd) {\n        return [\n            fst,\n            snd\n        ];\n    });\n\n    /**\n     * Retrieve the value at a given path.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category Object\n     * @sig [String] -> {k: v} -> v | Undefined\n     * @param {Array} path The path to use.\n     * @param {Object} obj The object to retrieve the nested property from.\n     * @return {*} The data at `path`.\n     * @example\n     *\n     *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n     *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n     */\n    var path = _curry2(function path(paths, obj) {\n        var val = obj;\n        var idx = 0;\n        while (idx < paths.length) {\n            if (val == null) {\n                return;\n            }\n            val = val[paths[idx]];\n            idx += 1;\n        }\n        return val;\n    });\n\n    /**\n     * If the given, non-null object has a value at the given path, returns the\n     * value at that path. Otherwise returns the provided default value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category Object\n     * @sig a -> [String] -> Object -> a\n     * @param {*} d The default value.\n     * @param {Array} p The path to use.\n     * @param {Object} obj The object to retrieve the nested property from.\n     * @return {*} The data at `path` of the supplied object or the default value.\n     * @example\n     *\n     *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n     *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n     */\n    var pathOr = _curry3(function pathOr(d, p, obj) {\n        return defaultTo(d, path(p, obj));\n    });\n\n    /**\n     * Returns `true` if the specified object property at given path satisfies the\n     * given predicate; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since 0.19.1\n     * @since 0.19.0\n     * @category Logic\n     * @sig (a -> Boolean) -> [String] -> Object -> Boolean\n     * @param {Function} pred\n     * @param {Array} propPath\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.propSatisfies, R.path\n     * @example\n     *\n     *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\n     */\n    var pathSatisfies = _curry3(function pathSatisfies(pred, propPath, obj) {\n        return propPath.length > 0 && pred(path(propPath, obj));\n    });\n\n    /**\n     * Returns a partial copy of an object containing only the keys specified. If\n     * the key does not exist, the property is ignored.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig [k] -> {k: v} -> {k: v}\n     * @param {Array} names an array of String property names to copy onto a new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties from `names` on it.\n     * @see R.omit, R.props\n     * @example\n     *\n     *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n     *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n     */\n    var pick = _curry2(function pick(names, obj) {\n        var result = {};\n        var idx = 0;\n        while (idx < names.length) {\n            if (names[idx] in obj) {\n                result[names[idx]] = obj[names[idx]];\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Similar to `pick` except that this one includes a `key: undefined` pair for\n     * properties that don't exist.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig [k] -> {k: v} -> {k: v}\n     * @param {Array} names an array of String property names to copy onto a new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties from `names` on it.\n     * @see R.pick\n     * @example\n     *\n     *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n     *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n     */\n    var pickAll = _curry2(function pickAll(names, obj) {\n        var result = {};\n        var idx = 0;\n        var len = names.length;\n        while (idx < len) {\n            var name = names[idx];\n            result[name] = obj[name];\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns a partial copy of an object containing only the keys that satisfy\n     * the supplied predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Object\n     * @sig (v, k -> Boolean) -> {k: v} -> {k: v}\n     * @param {Function} pred A predicate to determine whether or not a key\n     *        should be included on the output object.\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties that satisfy `pred`\n     *         on it.\n     * @see R.pick, R.filter\n     * @example\n     *\n     *      var isUpperCase = (val, key) => key.toUpperCase() === key;\n     *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n     */\n    var pickBy = _curry2(function pickBy(test, obj) {\n        var result = {};\n        for (var prop in obj) {\n            if (test(obj[prop], prop, obj)) {\n                result[prop] = obj[prop];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new list with the given element at the front, followed by the\n     * contents of the list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} el The item to add to the head of the output list.\n     * @param {Array} list The array to add to the tail of the output list.\n     * @return {Array} A new array.\n     * @see R.append\n     * @example\n     *\n     *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n     */\n    var prepend = _curry2(function prepend(el, list) {\n        return _concat([el], list);\n    });\n\n    /**\n     * Returns a function that when supplied an object returns the indicated\n     * property of that object, if it exists.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig s -> {s: a} -> a | Undefined\n     * @param {String} p The property name\n     * @param {Object} obj The object to query\n     * @return {*} The value at `obj.p`.\n     * @example\n     *\n     *      R.prop('x', {x: 100}); //=> 100\n     *      R.prop('x', {}); //=> undefined\n     */\n    var prop = _curry2(function prop(p, obj) {\n        return obj[p];\n    });\n\n    /**\n     * If the given, non-null object has an own property with the specified name,\n     * returns the value of that property. Otherwise returns the provided default\n     * value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.6.0\n     * @category Object\n     * @sig a -> String -> Object -> a\n     * @param {*} val The default value.\n     * @param {String} p The name of the property to return.\n     * @param {Object} obj The object to query.\n     * @return {*} The value of given property of the supplied object or the default value.\n     * @example\n     *\n     *      var alice = {\n     *        name: 'ALICE',\n     *        age: 101\n     *      };\n     *      var favorite = R.prop('favoriteLibrary');\n     *      var favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n     *\n     *      favorite(alice);  //=> undefined\n     *      favoriteWithDefault(alice);  //=> 'Ramda'\n     */\n    var propOr = _curry3(function propOr(val, p, obj) {\n        return obj != null && _has(p, obj) ? obj[p] : val;\n    });\n\n    /**\n     * Returns `true` if the specified object property satisfies the given\n     * predicate; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Logic\n     * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n     * @param {Function} pred\n     * @param {String} name\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.propEq, R.propIs\n     * @example\n     *\n     *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n     */\n    var propSatisfies = _curry3(function propSatisfies(pred, name, obj) {\n        return pred(obj[name]);\n    });\n\n    /**\n     * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n     * order.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig [k] -> {k: v} -> [v]\n     * @param {Array} ps The property names to fetch\n     * @param {Object} obj The object to query\n     * @return {Array} The corresponding values or partially applied function.\n     * @example\n     *\n     *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n     *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n     *\n     *      var fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n     *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n     */\n    var props = _curry2(function props(ps, obj) {\n        var len = ps.length;\n        var out = [];\n        var idx = 0;\n        while (idx < len) {\n            out[idx] = obj[ps[idx]];\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Number -> Number -> [Number]\n     * @param {Number} from The first number in the list.\n     * @param {Number} to One more than the last number in the list.\n     * @return {Array} The list of numbers in tthe set `[a, b)`.\n     * @example\n     *\n     *      R.range(1, 5);    //=> [1, 2, 3, 4]\n     *      R.range(50, 53);  //=> [50, 51, 52]\n     */\n    var range = _curry2(function range(from, to) {\n        if (!(_isNumber(from) && _isNumber(to))) {\n            throw new TypeError('Both arguments to range must be numbers');\n        }\n        var result = [];\n        var n = from;\n        while (n < to) {\n            result.push(n);\n            n += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns a single item by iterating through the list, successively calling\n     * the iterator function and passing it an accumulator value and the current\n     * value from the array, and then passing the result to the next call.\n     *\n     * Similar to `reduce`, except moves through the input list from the right to\n     * the left.\n     *\n     * The iterator function receives two values: *(acc, value)*\n     *\n     * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\n     * arrays), unlike the native `Array.prototype.reduce` method. For more details\n     * on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a,b -> a) -> a -> [b] -> a\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.addIndex\n     * @example\n     *\n     *      var pairs = [ ['a', 1], ['b', 2], ['c', 3] ];\n     *      var flattenPairs = (acc, pair) => acc.concat(pair);\n     *\n     *      R.reduceRight(flattenPairs, [], pairs); //=> [ 'c', 3, 'b', 2, 'a', 1 ]\n     */\n    var reduceRight = _curry3(function reduceRight(fn, acc, list) {\n        var idx = list.length - 1;\n        while (idx >= 0) {\n            acc = fn(acc, list[idx]);\n            idx -= 1;\n        }\n        return acc;\n    });\n\n    /**\n     * Returns a value wrapped to indicate that it is the final value of the reduce\n     * and transduce functions. The returned value should be considered a black\n     * box: the internal structure is not guaranteed to be stable.\n     *\n     * Note: this optimization is unavailable to functions not explicitly listed\n     * above. For instance, it is not currently supported by reduceRight.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.15.0\n     * @category List\n     * @sig a -> *\n     * @param {*} x The final value of the reduce.\n     * @return {*} The wrapped value.\n     * @see R.reduce, R.transduce\n     * @example\n     *\n     *      R.reduce(\n     *        R.pipe(R.add, R.when(R.gte(R.__, 10), R.reduced)),\n     *        0,\n     *        [1, 2, 3, 4, 5]) // 10\n     */\n    var reduced = _curry1(_reduced);\n\n    /**\n     * Removes the sub-list of `list` starting at index `start` and containing\n     * `count` elements. _Note that this is not destructive_: it returns a copy of\n     * the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.2\n     * @category List\n     * @sig Number -> Number -> [a] -> [a]\n     * @param {Number} start The position to start removing elements\n     * @param {Number} count The number of elements to remove\n     * @param {Array} list The list to remove from\n     * @return {Array} A new Array with `count` elements from `start` removed.\n     * @example\n     *\n     *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n     */\n    var remove = _curry3(function remove(start, count, list) {\n        return _concat(_slice(list, 0, Math.min(start, list.length)), _slice(list, Math.min(list.length, start + count)));\n    });\n\n    /**\n     * Replace a substring or regex match in a string with a replacement.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category String\n     * @sig RegExp|String -> String -> String -> String\n     * @param {RegExp|String} pattern A regular expression or a substring to match.\n     * @param {String} replacement The string to replace the matches with.\n     * @param {String} str The String to do the search and replacement in.\n     * @return {String} The result.\n     * @example\n     *\n     *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n     *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n     *\n     *      // Use the \"g\" (global) flag to replace all occurrences:\n     *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n     */\n    var replace = _curry3(function replace(regex, replacement, str) {\n        return str.replace(regex, replacement);\n    });\n\n    /**\n     * Returns a new list or string with the elements or characters in reverse\n     * order.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [a]\n     * @sig String -> String\n     * @param {Array|String} list\n     * @return {Array|String}\n     * @example\n     *\n     *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n     *      R.reverse([1, 2]);     //=> [2, 1]\n     *      R.reverse([1]);        //=> [1]\n     *      R.reverse([]);         //=> []\n     *\n     *      R.reverse('abc');      //=> 'cba'\n     *      R.reverse('ab');       //=> 'ba'\n     *      R.reverse('a');        //=> 'a'\n     *      R.reverse('');         //=> ''\n     */\n    var reverse = _curry1(function reverse(list) {\n        return _isString(list) ? list.split('').reverse().join('') : _slice(list).reverse();\n    });\n\n    /**\n     * Scan is similar to reduce, but returns a list of successively reduced values\n     * from the left\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category List\n     * @sig (a,b -> a) -> a -> [b] -> [a]\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {Array} A list of all intermediately reduced values.\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n     */\n    var scan = _curry3(function scan(fn, acc, list) {\n        var idx = 0;\n        var len = list.length;\n        var result = [acc];\n        while (idx < len) {\n            acc = fn(acc, list[idx]);\n            result[idx + 1] = acc;\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns the result of \"setting\" the portion of the given data structure\n     * focused by the given lens to the given value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> a -> s -> s\n     * @param {Lens} lens\n     * @param {*} v\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n     *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n     */\n    var set = _curry3(function set(lens, v, x) {\n        return over(lens, always(v), x);\n    });\n\n    /**\n     * Returns the elements of the given list or string (or object with a `slice`\n     * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n     *\n     * Dispatches to the `slice` method of the third argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.4\n     * @category List\n     * @sig Number -> Number -> [a] -> [a]\n     * @sig Number -> Number -> String -> String\n     * @param {Number} fromIndex The start index (inclusive).\n     * @param {Number} toIndex The end index (exclusive).\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n     *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n     *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n     *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n     *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n     */\n    var slice = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n        return Array.prototype.slice.call(list, fromIndex, toIndex);\n    }));\n\n    /**\n     * Returns a copy of the list, sorted according to the comparator function,\n     * which should accept two values at a time and return a negative number if the\n     * first value is smaller, a positive number if it's larger, and zero if they\n     * are equal. Please note that this is a **copy** of the list. It does not\n     * modify the original.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a,a -> Number) -> [a] -> [a]\n     * @param {Function} comparator A sorting function :: a -> b -> Int\n     * @param {Array} list The list to sort\n     * @return {Array} a new array with its elements sorted by the comparator function.\n     * @example\n     *\n     *      var diff = function(a, b) { return a - b; };\n     *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n     */\n    var sort = _curry2(function sort(comparator, list) {\n        return _slice(list).sort(comparator);\n    });\n\n    /**\n     * Sorts the list according to the supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord b => (a -> b) -> [a] -> [a]\n     * @param {Function} fn\n     * @param {Array} list The list to sort.\n     * @return {Array} A new list sorted by the keys generated by `fn`.\n     * @example\n     *\n     *      var sortByFirstItem = R.sortBy(R.prop(0));\n     *      var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n     *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];\n     *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n     *      var alice = {\n     *        name: 'ALICE',\n     *        age: 101\n     *      };\n     *      var bob = {\n     *        name: 'Bob',\n     *        age: -10\n     *      };\n     *      var clara = {\n     *        name: 'clara',\n     *        age: 314.159\n     *      };\n     *      var people = [clara, bob, alice];\n     *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n     */\n    var sortBy = _curry2(function sortBy(fn, list) {\n        return _slice(list).sort(function (a, b) {\n            var aa = fn(a);\n            var bb = fn(b);\n            return aa < bb ? -1 : aa > bb ? 1 : 0;\n        });\n    });\n\n    /**\n     * Splits a given list or string at a given index.\n     *\n     * @func\n     * @memberOf R\n     * @since 0.19.1\n     * @since 0.19.0\n     * @category List\n     * @sig Number -> [a] -> [[a], [a]]\n     * @sig Number -> String -> [String, String]\n     * @param {Number} index The index where the array/string is split.\n     * @param {Array|String} array The array/string to be split.\n     * @return {Array}\n     * @example\n     *\n     *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n     *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n     *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n     */\n    var splitAt = _curry2(function splitAt(index, array) {\n        return [\n            slice(0, index, array),\n            slice(index, length(array), array)\n        ];\n    });\n\n    /**\n     * Splits a collection into slices of the specified length.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig Number -> [a] -> [[a]]\n     * @sig Number -> String -> [String]\n     * @param {Number} n\n     * @param {Array} list\n     * @return {Array}\n     * @example\n     *\n     *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n     *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n     */\n    var splitEvery = _curry2(function splitEvery(n, list) {\n        if (n <= 0) {\n            throw new Error('First argument to splitEvery must be a positive integer');\n        }\n        var result = [];\n        var idx = 0;\n        while (idx < list.length) {\n            result.push(slice(idx, idx += n, list));\n        }\n        return result;\n    });\n\n    /**\n     * Takes a list and a predicate and returns a pair of lists with the following properties:\n     *\n     *  - the result of concatenating the two output lists is equivalent to the input list;\n     *  - none of the elements of the first output list satisfies the predicate; and\n     *  - if the second output list is non-empty, its first element satisfies the predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since 0.19.1\n     * @since 0.19.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [[a], [a]]\n     * @param {Function} pred The predicate that determines where the array is split.\n     * @param {Array} list The array to be split.\n     * @return {Array}\n     * @example\n     *\n     *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]\n     */\n    var splitWhen = _curry2(function splitWhen(pred, list) {\n        var idx = 0;\n        var len = list.length;\n        var prefix = [];\n        while (idx < len && !pred(list[idx])) {\n            prefix.push(list[idx]);\n            idx += 1;\n        }\n        return [\n            prefix,\n            _slice(list, idx)\n        ];\n    });\n\n    /**\n     * Subtracts two numbers. Equivalent to `a - b` but curried.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a - b`.\n     * @see R.add\n     * @example\n     *\n     *      R.subtract(10, 8); //=> 2\n     *\n     *      var minus5 = R.subtract(R.__, 5);\n     *      minus5(17); //=> 12\n     *\n     *      var complementaryAngle = R.subtract(90);\n     *      complementaryAngle(30); //=> 60\n     *      complementaryAngle(72); //=> 18\n     */\n    var subtract = _curry2(function subtract(a, b) {\n        return a - b;\n    });\n\n    /**\n     * Returns all but the first element of the given list or string (or object\n     * with a `tail` method).\n     *\n     * Dispatches to the `slice` method of the first argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [a]\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @see R.head, R.init, R.last\n     * @example\n     *\n     *      R.tail([1, 2, 3]);  //=> [2, 3]\n     *      R.tail([1, 2]);     //=> [2]\n     *      R.tail([1]);        //=> []\n     *      R.tail([]);         //=> []\n     *\n     *      R.tail('abc');  //=> 'bc'\n     *      R.tail('ab');   //=> 'b'\n     *      R.tail('a');    //=> ''\n     *      R.tail('');     //=> ''\n     */\n    var tail = _checkForMethod('tail', slice(1, Infinity));\n\n    /**\n     * Returns the first `n` elements of the given list, string, or\n     * transducer/transformer (or object with a `take` method).\n     *\n     * Dispatches to the `take` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n\n     * @param {*} list\n     * @return {*}\n     * @see R.drop\n     * @example\n     *\n     *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n     *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n     *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.take(3, 'ramda');               //=> 'ram'\n     *\n     *      var personnel = [\n     *        'Dave Brubeck',\n     *        'Paul Desmond',\n     *        'Eugene Wright',\n     *        'Joe Morello',\n     *        'Gerry Mulligan',\n     *        'Bob Bates',\n     *        'Joe Dodge',\n     *        'Ron Crotty'\n     *      ];\n     *\n     *      var takeFive = R.take(5);\n     *      takeFive(personnel);\n     *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n     */\n    var take = _curry2(_dispatchable('take', _xtake, function take(n, xs) {\n        return slice(0, n < 0 ? Infinity : n, xs);\n    }));\n\n    /**\n     * Returns a new list containing the last `n` elements of a given list, passing\n     * each value to the supplied predicate function, and terminating when the\n     * predicate function returns `false`. Excludes the element that caused the\n     * predicate function to fail. The predicate function is passed one argument:\n     * *(value)*.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.dropLastWhile, R.addIndex\n     * @example\n     *\n     *      var isNotOne = x => x !== 1;\n     *\n     *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n     */\n    var takeLastWhile = _curry2(function takeLastWhile(fn, list) {\n        var idx = list.length - 1;\n        while (idx >= 0 && fn(list[idx])) {\n            idx -= 1;\n        }\n        return _slice(list, idx + 1, Infinity);\n    });\n\n    /**\n     * Returns a new list containing the first `n` elements of a given list,\n     * passing each value to the supplied predicate function, and terminating when\n     * the predicate function returns `false`. Excludes the element that caused the\n     * predicate function to fail. The predicate function is passed one argument:\n     * *(value)*.\n     *\n     * Dispatches to the `takeWhile` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.dropWhile, R.transduce, R.addIndex\n     * @example\n     *\n     *      var isNotFour = x => x !== 4;\n     *\n     *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n     */\n    var takeWhile = _curry2(_dispatchable('takeWhile', _xtakeWhile, function takeWhile(fn, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len && fn(list[idx])) {\n            idx += 1;\n        }\n        return _slice(list, 0, idx);\n    }));\n\n    /**\n     * Runs the given function with the supplied object, then returns the object.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (a -> *) -> a -> a\n     * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n     * @param {*} x\n     * @return {*} `x`.\n     * @example\n     *\n     *      var sayX = x => console.log('x is ' + x);\n     *      R.tap(sayX, 100); //=> 100\n     *      //-> 'x is 100'\n     */\n    var tap = _curry2(function tap(fn, x) {\n        fn(x);\n        return x;\n    });\n\n    /**\n     * Calls an input function `n` times, returning an array containing the results\n     * of those function calls.\n     *\n     * `fn` is passed one argument: The current value of `n`, which begins at `0`\n     * and is gradually incremented to `n - 1`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.3\n     * @category List\n     * @sig (Number -> a) -> Number -> [a]\n     * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n     * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n     * @return {Array} An array containing the return values of all calls to `fn`.\n     * @example\n     *\n     *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n     */\n    var times = _curry2(function times(fn, n) {\n        var len = Number(n);\n        var idx = 0;\n        var list;\n        if (len < 0 || isNaN(len)) {\n            throw new RangeError('n must be a non-negative number');\n        }\n        list = new Array(len);\n        while (idx < len) {\n            list[idx] = fn(idx);\n            idx += 1;\n        }\n        return list;\n    });\n\n    /**\n     * Converts an object into an array of key, value arrays. Only the object's\n     * own properties are used.\n     * Note that the order of the output array is not guaranteed to be consistent\n     * across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.4.0\n     * @category Object\n     * @sig {String: *} -> [[String,*]]\n     * @param {Object} obj The object to extract from\n     * @return {Array} An array of key, value arrays from the object's own properties.\n     * @see R.fromPairs\n     * @example\n     *\n     *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n     */\n    var toPairs = _curry1(function toPairs(obj) {\n        var pairs = [];\n        for (var prop in obj) {\n            if (_has(prop, obj)) {\n                pairs[pairs.length] = [\n                    prop,\n                    obj[prop]\n                ];\n            }\n        }\n        return pairs;\n    });\n\n    /**\n     * Converts an object into an array of key, value arrays. The object's own\n     * properties and prototype properties are used. Note that the order of the\n     * output array is not guaranteed to be consistent across different JS\n     * platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.4.0\n     * @category Object\n     * @sig {String: *} -> [[String,*]]\n     * @param {Object} obj The object to extract from\n     * @return {Array} An array of key, value arrays from the object's own\n     *         and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n     */\n    var toPairsIn = _curry1(function toPairsIn(obj) {\n        var pairs = [];\n        for (var prop in obj) {\n            pairs[pairs.length] = [\n                prop,\n                obj[prop]\n            ];\n        }\n        return pairs;\n    });\n\n    /**\n     * Transposes the rows and columns of a 2D list.\n     * When passed a list of `n` lists of length `x`,\n     * returns a list of `x` lists of length `n`.\n     *\n     *\n     * @func\n     * @memberOf R\n     * @since 0.19.1\n     * @since 0.19.0\n     * @category List\n     * @sig [[a]] -> [[a]]\n     * @param {Array} list A 2D list\n     * @return {Array} A 2D list\n     * @example\n     *\n     *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\n     *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n     *\n     * If some of the rows are shorter than the following rows, their elements are skipped:\n     *\n     *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\n     */\n    var transpose = _curry1(function transpose(outerlist) {\n        var i = 0;\n        var result = [];\n        while (i < outerlist.length) {\n            var innerlist = outerlist[i];\n            var j = 0;\n            while (j < innerlist.length) {\n                if (typeof result[j] === 'undefined') {\n                    result[j] = [];\n                }\n                result[j].push(innerlist[j]);\n                j += 1;\n            }\n            i += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Removes (strips) whitespace from both ends of the string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.6.0\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to trim.\n     * @return {String} Trimmed version of `str`.\n     * @example\n     *\n     *      R.trim('   xyz  '); //=> 'xyz'\n     *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n     */\n    var trim = function () {\n        var ws = '\\t\\n\\x0B\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\n        var zeroWidth = '\\u200B';\n        var hasProtoTrim = typeof String.prototype.trim === 'function';\n        if (!hasProtoTrim || (ws.trim() || !zeroWidth.trim())) {\n            return _curry1(function trim(str) {\n                var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n                var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n                return str.replace(beginRx, '').replace(endRx, '');\n            });\n        } else {\n            return _curry1(function trim(str) {\n                return str.trim();\n            });\n        }\n    }();\n\n    /**\n     * Gives a single-word string description of the (native) type of a value,\n     * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n     * attempt to distinguish user Object types any further, reporting them all as\n     * 'Object'.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Type\n     * @sig (* -> {*}) -> String\n     * @param {*} val The value to test\n     * @return {String}\n     * @example\n     *\n     *      R.type({}); //=> \"Object\"\n     *      R.type(1); //=> \"Number\"\n     *      R.type(false); //=> \"Boolean\"\n     *      R.type('s'); //=> \"String\"\n     *      R.type(null); //=> \"Null\"\n     *      R.type([]); //=> \"Array\"\n     *      R.type(/[A-z]/); //=> \"RegExp\"\n     */\n    var type = _curry1(function type(val) {\n        return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n    });\n\n    /**\n     * Takes a function `fn`, which takes a single array argument, and returns a\n     * function which:\n     *\n     *   - takes any number of positional arguments;\n     *   - passes these arguments to `fn` as an array; and\n     *   - returns the result.\n     *\n     * In other words, R.unapply derives a variadic function from a function which\n     * takes an array. R.unapply is the inverse of R.apply.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Function\n     * @sig ([*...] -> a) -> (*... -> a)\n     * @param {Function} fn\n     * @return {Function}\n     * @see R.apply\n     * @example\n     *\n     *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n     */\n    var unapply = _curry1(function unapply(fn) {\n        return function () {\n            return fn(_slice(arguments));\n        };\n    });\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts\n     * exactly 1 parameter. Any extraneous parameters will not be passed to the\n     * supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category Function\n     * @sig (* -> b) -> (a -> b)\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity 1.\n     * @example\n     *\n     *      var takesTwoArgs = function(a, b) {\n     *        return [a, b];\n     *      };\n     *      takesTwoArgs.length; //=> 2\n     *      takesTwoArgs(1, 2); //=> [1, 2]\n     *\n     *      var takesOneArg = R.unary(takesTwoArgs);\n     *      takesOneArg.length; //=> 1\n     *      // Only 1 argument is passed to the wrapped function\n     *      takesOneArg(1, 2); //=> [1, undefined]\n     */\n    var unary = _curry1(function unary(fn) {\n        return nAry(1, fn);\n    });\n\n    /**\n     * Returns a function of arity `n` from a (manually) curried function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Function\n     * @sig Number -> (a -> b) -> (a -> c)\n     * @param {Number} length The arity for the returned function.\n     * @param {Function} fn The function to uncurry.\n     * @return {Function} A new function.\n     * @see R.curry\n     * @example\n     *\n     *      var addFour = a => b => c => d => a + b + c + d;\n     *\n     *      var uncurriedAddFour = R.uncurryN(4, addFour);\n     *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n     */\n    var uncurryN = _curry2(function uncurryN(depth, fn) {\n        return curryN(depth, function () {\n            var currentDepth = 1;\n            var value = fn;\n            var idx = 0;\n            var endIdx;\n            while (currentDepth <= depth && typeof value === 'function') {\n                endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n                value = value.apply(this, _slice(arguments, idx, endIdx));\n                currentDepth += 1;\n                idx = endIdx;\n            }\n            return value;\n        });\n    });\n\n    /**\n     * Builds a list from a seed value. Accepts an iterator function, which returns\n     * either false to stop iteration or an array of length 2 containing the value\n     * to add to the resulting list and the seed to be used in the next call to the\n     * iterator function.\n     *\n     * The iterator function receives one argument: *(seed)*.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category List\n     * @sig (a -> [b]) -> * -> [b]\n     * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n     *        either false to quit iteration or an array of length two to proceed. The element\n     *        at index 0 of this array will be added to the resulting array, and the element\n     *        at index 1 will be passed to the next call to `fn`.\n     * @param {*} seed The seed value.\n     * @return {Array} The final list.\n     * @example\n     *\n     *      var f = n => n > 50 ? false : [-n, n + 10];\n     *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n     */\n    var unfold = _curry2(function unfold(fn, seed) {\n        var pair = fn(seed);\n        var result = [];\n        while (pair && pair.length) {\n            result[result.length] = pair[0];\n            pair = fn(pair[1]);\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new list containing only one copy of each element in the original\n     * list, based upon the value returned by applying the supplied predicate to\n     * two list elements. Prefers the first item if two items compare equal based\n     * on the predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category List\n     * @sig (a, a -> Boolean) -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      var strEq = R.eqBy(String);\n     *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n     *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n     *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n     *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n     */\n    var uniqWith = _curry2(function uniqWith(pred, list) {\n        var idx = 0;\n        var len = list.length;\n        var result = [];\n        var item;\n        while (idx < len) {\n            item = list[idx];\n            if (!_containsWith(pred, item, result)) {\n                result[result.length] = item;\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Tests the final argument by passing it to the given predicate function. If\n     * the predicate is not satisfied, the function will return the result of\n     * calling the `whenFalseFn` function with the same argument. If the predicate\n     * is satisfied, the argument is returned as is.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category Logic\n     * @sig (a -> Boolean) -> (a -> a) -> a -> a\n     * @param {Function} pred        A predicate function\n     * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n     *                               to a falsy value.\n     * @param {*}        x           An object to test with the `pred` function and\n     *                               pass to `whenFalseFn` if necessary.\n     * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n     * @see R.ifElse, R.when\n     * @example\n     *\n     *      // coerceArray :: (a|[a]) -> [a]\n     *      var coerceArray = R.unless(R.isArrayLike, R.of);\n     *      coerceArray([1, 2, 3]); //=> [1, 2, 3]\n     *      coerceArray(1);         //=> [1]\n     */\n    var unless = _curry3(function unless(pred, whenFalseFn, x) {\n        return pred(x) ? x : whenFalseFn(x);\n    });\n\n    /**\n     * Returns a new copy of the array with the element at the provided index\n     * replaced with the given value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category List\n     * @sig Number -> a -> [a] -> [a]\n     * @param {Number} idx The index to update.\n     * @param {*} x The value to exist at the given index of the returned array.\n     * @param {Array|Arguments} list The source array-like object to be updated.\n     * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n     * @see R.adjust\n     * @example\n     *\n     *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\n     *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\n     */\n    var update = _curry3(function update(idx, x, list) {\n        return adjust(always(x), idx, list);\n    });\n\n    /**\n     * Accepts a function `fn` and a list of transformer functions and returns a\n     * new curried function. When the new function is invoked, it calls the\n     * function `fn` with parameters consisting of the result of calling each\n     * supplied handler on successive arguments to the new function.\n     *\n     * If more arguments are passed to the returned function than transformer\n     * functions, those arguments are passed directly to `fn` as additional\n     * parameters. If you expect additional arguments that don't need to be\n     * transformed, although you can ignore them, it's best to pass an identity\n     * function so that the new function reports the correct arity.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (x1 -> x2 -> ... -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n     * @param {Function} fn The function to wrap.\n     * @param {Array} transformers A list of transformer functions\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n     *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n     *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n     *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n     */\n    var useWith = _curry2(function useWith(fn, transformers) {\n        return curryN(transformers.length, function () {\n            var args = [];\n            var idx = 0;\n            while (idx < transformers.length) {\n                args.push(transformers[idx].call(this, arguments[idx]));\n                idx += 1;\n            }\n            return fn.apply(this, args.concat(_slice(arguments, transformers.length)));\n        });\n    });\n\n    /**\n     * Returns a list of all the enumerable own properties of the supplied object.\n     * Note that the order of the output array is not guaranteed across different\n     * JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig {k: v} -> [v]\n     * @param {Object} obj The object to extract values from\n     * @return {Array} An array of the values of the object's own properties.\n     * @example\n     *\n     *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n     */\n    var values = _curry1(function values(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var vals = [];\n        var idx = 0;\n        while (idx < len) {\n            vals[idx] = obj[props[idx]];\n            idx += 1;\n        }\n        return vals;\n    });\n\n    /**\n     * Returns a list of all the properties, including prototype properties, of the\n     * supplied object.\n     * Note that the order of the output array is not guaranteed to be consistent\n     * across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category Object\n     * @sig {k: v} -> [v]\n     * @param {Object} obj The object to extract values from\n     * @return {Array} An array of the values of the object's own and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.valuesIn(f); //=> ['X', 'Y']\n     */\n    var valuesIn = _curry1(function valuesIn(obj) {\n        var prop;\n        var vs = [];\n        for (prop in obj) {\n            vs[vs.length] = obj[prop];\n        }\n        return vs;\n    });\n\n    /**\n     * Returns a \"view\" of the given data structure, determined by the given lens.\n     * The lens's focus determines which portion of the data structure is visible.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> s -> a\n     * @param {Lens} lens\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.view(xLens, {x: 1, y: 2});  //=> 1\n     *      R.view(xLens, {x: 4, y: 2});  //=> 4\n     */\n    var view = function () {\n        var Const = function (x) {\n            return {\n                value: x,\n                map: function () {\n                    return this;\n                }\n            };\n        };\n        return _curry2(function view(lens, x) {\n            return lens(Const)(x).value;\n        });\n    }();\n\n    /**\n     * Tests the final argument by passing it to the given predicate function. If\n     * the predicate is satisfied, the function will return the result of calling\n     * the `whenTrueFn` function with the same argument. If the predicate is not\n     * satisfied, the argument is returned as is.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category Logic\n     * @sig (a -> Boolean) -> (a -> a) -> a -> a\n     * @param {Function} pred       A predicate function\n     * @param {Function} whenTrueFn A function to invoke when the `condition`\n     *                              evaluates to a truthy value.\n     * @param {*}        x          An object to test with the `pred` function and\n     *                              pass to `whenTrueFn` if necessary.\n     * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n     * @see R.ifElse, R.unless\n     * @example\n     *\n     *      // truncate :: String -> String\n     *      var truncate = R.when(\n     *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n     *        R.pipe(R.take(10), R.append('…'), R.join(''))\n     *      );\n     *      truncate('12345');         //=> '12345'\n     *      truncate('0123456789ABC'); //=> '0123456789…'\n     */\n    var when = _curry3(function when(pred, whenTrueFn, x) {\n        return pred(x) ? whenTrueFn(x) : x;\n    });\n\n    /**\n     * Takes a spec object and a test object; returns true if the test satisfies\n     * the spec. Each of the spec's own properties must be a predicate function.\n     * Each predicate is applied to the value of the corresponding property of the\n     * test object. `where` returns true if all the predicates return true, false\n     * otherwise.\n     *\n     * `where` is well suited to declaratively expressing constraints for other\n     * functions such as `filter` and `find`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category Object\n     * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n     * @param {Object} spec\n     * @param {Object} testObj\n     * @return {Boolean}\n     * @example\n     *\n     *      // pred :: Object -> Boolean\n     *      var pred = R.where({\n     *        a: R.equals('foo'),\n     *        b: R.complement(R.equals('bar')),\n     *        x: R.gt(_, 10),\n     *        y: R.lt(_, 20)\n     *      });\n     *\n     *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n     *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n     */\n    var where = _curry2(function where(spec, testObj) {\n        for (var prop in spec) {\n            if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n                return false;\n            }\n        }\n        return true;\n    });\n\n    /**\n     * Wrap a function inside another to allow you to make adjustments to the\n     * parameters, or do other processing either before the internal function is\n     * called or with its results.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (a... -> b) -> ((a... -> b) -> a... -> c) -> (a... -> c)\n     * @param {Function} fn The function to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      var greet = name => 'Hello ' + name;\n     *\n     *      var shoutedGreet = R.wrap(greet, (gr, name) => gr(name).toUpperCase());\n     *\n     *      shoutedGreet(\"Kathy\"); //=> \"HELLO KATHY\"\n     *\n     *      var shortenedGreet = R.wrap(greet, function(gr, name) {\n     *        return gr(name.substring(0, 3));\n     *      });\n     *      shortenedGreet(\"Robert\"); //=> \"Hello Rob\"\n     */\n    var wrap = _curry2(function wrap(fn, wrapper) {\n        return curryN(fn.length, function () {\n            return wrapper.apply(this, _concat([fn], arguments));\n        });\n    });\n\n    /**\n     * Creates a new list out of the two supplied by creating each possible pair\n     * from the lists.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [b] -> [[a,b]]\n     * @param {Array} as The first list.\n     * @param {Array} bs The second list.\n     * @return {Array} The list made by combining each possible pair from\n     *         `as` and `bs` into pairs (`[a, b]`).\n     * @example\n     *\n     *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n     */\n    // = xprodWith(prepend); (takes about 3 times as long...)\n    var xprod = _curry2(function xprod(a, b) {\n        // = xprodWith(prepend); (takes about 3 times as long...)\n        var idx = 0;\n        var ilen = a.length;\n        var j;\n        var jlen = b.length;\n        var result = [];\n        while (idx < ilen) {\n            j = 0;\n            while (j < jlen) {\n                result[result.length] = [\n                    a[idx],\n                    b[j]\n                ];\n                j += 1;\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Creates a new list out of the two supplied by pairing up equally-positioned\n     * items from both lists. The returned list is truncated to the length of the\n     * shorter of the two input lists.\n     * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [b] -> [[a,b]]\n     * @param {Array} list1 The first array to consider.\n     * @param {Array} list2 The second array to consider.\n     * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n     * @example\n     *\n     *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n     */\n    var zip = _curry2(function zip(a, b) {\n        var rv = [];\n        var idx = 0;\n        var len = Math.min(a.length, b.length);\n        while (idx < len) {\n            rv[idx] = [\n                a[idx],\n                b[idx]\n            ];\n            idx += 1;\n        }\n        return rv;\n    });\n\n    /**\n     * Creates a new object out of a list of keys and a list of values.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category List\n     * @sig [String] -> [*] -> {String: *}\n     * @param {Array} keys The array that will be properties on the output object.\n     * @param {Array} values The list of values on the output object.\n     * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n     * @example\n     *\n     *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n     */\n    var zipObj = _curry2(function zipObj(keys, values) {\n        var idx = 0;\n        var len = keys.length;\n        var out = {};\n        while (idx < len) {\n            out[keys[idx]] = values[idx];\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Creates a new list out of the two supplied by applying the function to each\n     * equally-positioned pair in the lists. The returned list is truncated to the\n     * length of the shorter of the two input lists.\n     *\n     * @function\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a,b -> c) -> [a] -> [b] -> [c]\n     * @param {Function} fn The function used to combine the two elements into one value.\n     * @param {Array} list1 The first array to consider.\n     * @param {Array} list2 The second array to consider.\n     * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n     *         using `fn`.\n     * @example\n     *\n     *      var f = (x, y) => {\n     *        // ...\n     *      };\n     *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n     *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n     */\n    var zipWith = _curry3(function zipWith(fn, a, b) {\n        var rv = [];\n        var idx = 0;\n        var len = Math.min(a.length, b.length);\n        while (idx < len) {\n            rv[idx] = fn(a[idx], b[idx]);\n            idx += 1;\n        }\n        return rv;\n    });\n\n    /**\n     * A function that always returns `false`. Any passed in parameters are ignored.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Function\n     * @sig * -> Boolean\n     * @param {*}\n     * @return {Boolean}\n     * @see R.always, R.T\n     * @example\n     *\n     *      R.F(); //=> false\n     */\n    var F = always(false);\n\n    /**\n     * A function that always returns `true`. Any passed in parameters are ignored.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Function\n     * @sig * -> Boolean\n     * @param {*}\n     * @return {Boolean}\n     * @see R.always, R.F\n     * @example\n     *\n     *      R.T(); //=> true\n     */\n    var T = always(true);\n\n    /**\n     * Copies an object.\n     *\n     * @private\n     * @param {*} value The value to be copied\n     * @param {Array} refFrom Array containing the source references\n     * @param {Array} refTo Array containing the copied source references\n     * @return {*} The copied value.\n     */\n    var _clone = function _clone(value, refFrom, refTo) {\n        var copy = function copy(copiedValue) {\n            var len = refFrom.length;\n            var idx = 0;\n            while (idx < len) {\n                if (value === refFrom[idx]) {\n                    return refTo[idx];\n                }\n                idx += 1;\n            }\n            refFrom[idx + 1] = value;\n            refTo[idx + 1] = copiedValue;\n            for (var key in value) {\n                copiedValue[key] = _clone(value[key], refFrom, refTo);\n            }\n            return copiedValue;\n        };\n        switch (type(value)) {\n        case 'Object':\n            return copy({});\n        case 'Array':\n            return copy([]);\n        case 'Date':\n            return new Date(value.valueOf());\n        case 'RegExp':\n            return _cloneRegExp(value);\n        default:\n            return value;\n        }\n    };\n\n    var _createPartialApplicator = function _createPartialApplicator(concat) {\n        return _curry2(function (fn, args) {\n            return _arity(Math.max(0, fn.length - args.length), function () {\n                return fn.apply(this, concat(args, arguments));\n            });\n        });\n    };\n\n    var _dropLast = function dropLast(n, xs) {\n        return take(n < xs.length ? xs.length - n : 0, xs);\n    };\n\n    // Values of other types are only equal if identical.\n    var _equals = function _equals(a, b, stackA, stackB) {\n        if (identical(a, b)) {\n            return true;\n        }\n        if (type(a) !== type(b)) {\n            return false;\n        }\n        if (a == null || b == null) {\n            return false;\n        }\n        if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n            return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n        }\n        switch (type(a)) {\n        case 'Arguments':\n        case 'Array':\n        case 'Object':\n            break;\n        case 'Boolean':\n        case 'Number':\n        case 'String':\n            if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {\n                return false;\n            }\n            break;\n        case 'Date':\n            if (!identical(a.valueOf(), b.valueOf())) {\n                return false;\n            }\n            break;\n        case 'Error':\n            return a.name === b.name && a.message === b.message;\n        case 'RegExp':\n            if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n                return false;\n            }\n            break;\n        case 'Map':\n        case 'Set':\n            if (!_equals(_arrayFromIterator(a.entries()), _arrayFromIterator(b.entries()), stackA, stackB)) {\n                return false;\n            }\n            break;\n        case 'Int8Array':\n        case 'Uint8Array':\n        case 'Uint8ClampedArray':\n        case 'Int16Array':\n        case 'Uint16Array':\n        case 'Int32Array':\n        case 'Uint32Array':\n        case 'Float32Array':\n        case 'Float64Array':\n            break;\n        case 'ArrayBuffer':\n            break;\n        default:\n            // Values of other types are only equal if identical.\n            return false;\n        }\n        var keysA = keys(a);\n        if (keysA.length !== keys(b).length) {\n            return false;\n        }\n        var idx = stackA.length - 1;\n        while (idx >= 0) {\n            if (stackA[idx] === a) {\n                return stackB[idx] === b;\n            }\n            idx -= 1;\n        }\n        stackA.push(a);\n        stackB.push(b);\n        idx = keysA.length - 1;\n        while (idx >= 0) {\n            var key = keysA[idx];\n            if (!(_has(key, b) && _equals(b[key], a[key], stackA, stackB))) {\n                return false;\n            }\n            idx -= 1;\n        }\n        stackA.pop();\n        stackB.pop();\n        return true;\n    };\n\n    /**\n     * `_makeFlat` is a helper function that returns a one-level or fully recursive\n     * function based on the flag passed in.\n     *\n     * @private\n     */\n    var _makeFlat = function _makeFlat(recursive) {\n        return function flatt(list) {\n            var value, jlen, j;\n            var result = [];\n            var idx = 0;\n            var ilen = list.length;\n            while (idx < ilen) {\n                if (isArrayLike(list[idx])) {\n                    value = recursive ? flatt(list[idx]) : list[idx];\n                    j = 0;\n                    jlen = value.length;\n                    while (j < jlen) {\n                        result[result.length] = value[j];\n                        j += 1;\n                    }\n                } else {\n                    result[result.length] = list[idx];\n                }\n                idx += 1;\n            }\n            return result;\n        };\n    };\n\n    var _reduce = function () {\n        function _arrayReduce(xf, acc, list) {\n            var idx = 0;\n            var len = list.length;\n            while (idx < len) {\n                acc = xf['@@transducer/step'](acc, list[idx]);\n                if (acc && acc['@@transducer/reduced']) {\n                    acc = acc['@@transducer/value'];\n                    break;\n                }\n                idx += 1;\n            }\n            return xf['@@transducer/result'](acc);\n        }\n        function _iterableReduce(xf, acc, iter) {\n            var step = iter.next();\n            while (!step.done) {\n                acc = xf['@@transducer/step'](acc, step.value);\n                if (acc && acc['@@transducer/reduced']) {\n                    acc = acc['@@transducer/value'];\n                    break;\n                }\n                step = iter.next();\n            }\n            return xf['@@transducer/result'](acc);\n        }\n        function _methodReduce(xf, acc, obj) {\n            return xf['@@transducer/result'](obj.reduce(bind(xf['@@transducer/step'], xf), acc));\n        }\n        var symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n        return function _reduce(fn, acc, list) {\n            if (typeof fn === 'function') {\n                fn = _xwrap(fn);\n            }\n            if (isArrayLike(list)) {\n                return _arrayReduce(fn, acc, list);\n            }\n            if (typeof list.reduce === 'function') {\n                return _methodReduce(fn, acc, list);\n            }\n            if (list[symIterator] != null) {\n                return _iterableReduce(fn, acc, list[symIterator]());\n            }\n            if (typeof list.next === 'function') {\n                return _iterableReduce(fn, acc, list);\n            }\n            throw new TypeError('reduce: list must be array or iterable');\n        };\n    }();\n\n    var _xdropLastWhile = function () {\n        function XDropLastWhile(fn, xf) {\n            this.f = fn;\n            this.retained = [];\n            this.xf = xf;\n        }\n        XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n        XDropLastWhile.prototype['@@transducer/result'] = function (result) {\n            this.retained = null;\n            return this.xf['@@transducer/result'](result);\n        };\n        XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\n            return this.f(input) ? this.retain(result, input) : this.flush(result, input);\n        };\n        XDropLastWhile.prototype.flush = function (result, input) {\n            result = _reduce(this.xf['@@transducer/step'], result, this.retained);\n            this.retained = [];\n            return this.xf['@@transducer/step'](result, input);\n        };\n        XDropLastWhile.prototype.retain = function (result, input) {\n            this.retained.push(input);\n            return result;\n        };\n        return _curry2(function _xdropLastWhile(fn, xf) {\n            return new XDropLastWhile(fn, xf);\n        });\n    }();\n\n    var _xgroupBy = function () {\n        function XGroupBy(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.inputs = {};\n        }\n        XGroupBy.prototype['@@transducer/init'] = _xfBase.init;\n        XGroupBy.prototype['@@transducer/result'] = function (result) {\n            var key;\n            for (key in this.inputs) {\n                if (_has(key, this.inputs)) {\n                    result = this.xf['@@transducer/step'](result, this.inputs[key]);\n                    if (result['@@transducer/reduced']) {\n                        result = result['@@transducer/value'];\n                        break;\n                    }\n                }\n            }\n            this.inputs = null;\n            return this.xf['@@transducer/result'](result);\n        };\n        XGroupBy.prototype['@@transducer/step'] = function (result, input) {\n            var key = this.f(input);\n            this.inputs[key] = this.inputs[key] || [\n                key,\n                []\n            ];\n            this.inputs[key][1] = append(input, this.inputs[key][1]);\n            return result;\n        };\n        return _curry2(function _xgroupBy(f, xf) {\n            return new XGroupBy(f, xf);\n        });\n    }();\n\n    /**\n     * Creates a new list iteration function from an existing one by adding two new\n     * parameters to its callback function: the current index, and the entire list.\n     *\n     * This would turn, for instance, Ramda's simple `map` function into one that\n     * more closely resembles `Array.prototype.map`. Note that this will only work\n     * for functions in which the iteration callback function is the first\n     * parameter, and where the list is the last parameter. (This latter might be\n     * unimportant if the list parameter is not used.)\n     *\n     * @func\n     * @memberOf R\n     * @since v0.15.0\n     * @category Function\n     * @category List\n     * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\n     * @param {Function} fn A list iteration function that does not pass index or list to its callback\n     * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n     * @example\n     *\n     *      var mapIndexed = R.addIndex(R.map);\n     *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n     *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n     */\n    var addIndex = _curry1(function addIndex(fn) {\n        return curryN(fn.length, function () {\n            var idx = 0;\n            var origFn = arguments[0];\n            var list = arguments[arguments.length - 1];\n            var args = _slice(arguments);\n            args[0] = function () {\n                var result = origFn.apply(this, _concat(arguments, [\n                    idx,\n                    list\n                ]));\n                idx += 1;\n                return result;\n            };\n            return fn.apply(this, args);\n        });\n    });\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts\n     * exactly 2 parameters. Any extraneous parameters will not be passed to the\n     * supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category Function\n     * @sig (* -> c) -> (a, b -> c)\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity 2.\n     * @example\n     *\n     *      var takesThreeArgs = function(a, b, c) {\n     *        return [a, b, c];\n     *      };\n     *      takesThreeArgs.length; //=> 3\n     *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n     *\n     *      var takesTwoArgs = R.binary(takesThreeArgs);\n     *      takesTwoArgs.length; //=> 2\n     *      // Only 2 arguments are passed to the wrapped function\n     *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n     */\n    var binary = _curry1(function binary(fn) {\n        return nAry(2, fn);\n    });\n\n    /**\n     * Creates a deep copy of the value which may contain (nested) `Array`s and\n     * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are not\n     * copied, but assigned by their reference.\n     *\n     * Dispatches to a `clone` method if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig {*} -> {*}\n     * @param {*} value The object or array to clone\n     * @return {*} A new object or array.\n     * @example\n     *\n     *      var objects = [{}, {}, {}];\n     *      var objectsClone = R.clone(objects);\n     *      objects[0] === objectsClone[0]; //=> false\n     */\n    var clone = _curry1(function clone(value) {\n        return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], []);\n    });\n\n    /**\n     * Returns a curried equivalent of the provided function. The curried function\n     * has two unusual capabilities. First, its arguments needn't be provided one\n     * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n     * following are equivalent:\n     *\n     *   - `g(1)(2)(3)`\n     *   - `g(1)(2, 3)`\n     *   - `g(1, 2)(3)`\n     *   - `g(1, 2, 3)`\n     *\n     * Secondly, the special placeholder value `R.__` may be used to specify\n     * \"gaps\", allowing partial application of any combination of arguments,\n     * regardless of their positions. If `g` is as above and `_` is `R.__`, the\n     * following are equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (* -> a) -> (* -> a)\n     * @param {Function} fn The function to curry.\n     * @return {Function} A new, curried function.\n     * @see R.curryN\n     * @example\n     *\n     *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\n     *\n     *      var curriedAddFourNumbers = R.curry(addFourNumbers);\n     *      var f = curriedAddFourNumbers(1, 2);\n     *      var g = f(3);\n     *      g(4); //=> 10\n     */\n    var curry = _curry1(function curry(fn) {\n        return curryN(fn.length, fn);\n    });\n\n    /**\n     * Returns all but the first `n` elements of the given list, string, or\n     * transducer/transformer (or object with a `drop` method).\n     *\n     * Dispatches to the `drop` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n\n     * @param {*} list\n     * @return {*}\n     * @see R.take, R.transduce\n     * @example\n     *\n     *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n     *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n     *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n     *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n     *      R.drop(3, 'ramda');               //=> 'da'\n     */\n    var drop = _curry2(_dispatchable('drop', _xdrop, function drop(n, xs) {\n        return slice(Math.max(0, n), Infinity, xs);\n    }));\n\n    /**\n     * Returns a list containing all but the last `n` elements of the given `list`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n The number of elements of `xs` to skip.\n     * @param {Array} xs The collection to consider.\n     * @return {Array}\n     * @see R.takeLast\n     * @example\n     *\n     *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n     *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n     *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n     *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n     *      R.dropLast(3, 'ramda');               //=> 'ra'\n     */\n    var dropLast = _curry2(_dispatchable('dropLast', _xdropLast, _dropLast));\n\n    /**\n     * Returns a new list containing all but last the`n` elements of a given list,\n     * passing each value from the right to the supplied predicate function,\n     * skipping elements while the predicate function returns `true`. The predicate\n     * function is passed one argument: (value)*.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.takeLastWhile, R.addIndex\n     * @example\n     *\n     *      var lteThree = x => x <= 3;\n     *\n     *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n     */\n    var dropLastWhile = _curry2(_dispatchable('dropLastWhile', _xdropLastWhile, _dropLastWhile));\n\n    /**\n     * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n     * cyclical data structures.\n     *\n     * Dispatches symmetrically to the `equals` methods of both arguments, if\n     * present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.15.0\n     * @category Relation\n     * @sig a -> b -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @example\n     *\n     *      R.equals(1, 1); //=> true\n     *      R.equals(1, '1'); //=> false\n     *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n     *\n     *      var a = {}; a.v = a;\n     *      var b = {}; b.v = b;\n     *      R.equals(a, b); //=> true\n     */\n    var equals = _curry2(function equals(a, b) {\n        return _equals(a, b, [], []);\n    });\n\n    /**\n     * Takes a predicate and a \"filterable\", and returns a new filterable of the\n     * same type containing the members of the given filterable which satisfy the\n     * given predicate.\n     *\n     * Dispatches to the `filter` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Filterable f => (a -> Boolean) -> f a -> f a\n     * @param {Function} pred\n     * @param {Array} filterable\n     * @return {Array}\n     * @see R.reject, R.transduce, R.addIndex\n     * @example\n     *\n     *      var isEven = n => n % 2 === 0;\n     *\n     *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n     *\n     *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n     */\n    // else\n    var filter = _curry2(_dispatchable('filter', _xfilter, function (pred, filterable) {\n        return _isObject(filterable) ? _reduce(function (acc, key) {\n            if (pred(filterable[key])) {\n                acc[key] = filterable[key];\n            }\n            return acc;\n        }, {}, keys(filterable)) : // else\n        _filter(pred, filterable);\n    }));\n\n    /**\n     * Returns a new list by pulling every item out of it (and all its sub-arrays)\n     * and putting them in a new array, depth-first.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [b]\n     * @param {Array} list The array to consider.\n     * @return {Array} The flattened list.\n     * @see R.unnest\n     * @example\n     *\n     *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n     *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n     */\n    var flatten = _curry1(_makeFlat(true));\n\n    /**\n     * Returns a new function much like the supplied one, except that the first two\n     * arguments' order is reversed.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (a -> b -> c -> ... -> z) -> (b -> a -> c -> ... -> z)\n     * @param {Function} fn The function to invoke with its first two parameters reversed.\n     * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n     * @example\n     *\n     *      var mergeThree = (a, b, c) => [].concat(a, b, c);\n     *\n     *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n     *\n     *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n     */\n    var flip = _curry1(function flip(fn) {\n        return curry(function (a, b) {\n            var args = _slice(arguments);\n            args[0] = b;\n            args[1] = a;\n            return fn.apply(this, args);\n        });\n    });\n\n    /**\n     * Splits a list into sub-lists stored in an object, based on the result of\n     * calling a String-returning function on each element, and grouping the\n     * results according to values returned.\n     *\n     * Dispatches to the `groupBy` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a -> String) -> [a] -> {String: [a]}\n     * @param {Function} fn Function :: a -> String\n     * @param {Array} list The array to group\n     * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n     *         that produced that key when passed to `fn`.\n     * @see R.transduce\n     * @example\n     *\n     *      var byGrade = R.groupBy(function(student) {\n     *        var score = student.score;\n     *        return score < 65 ? 'F' :\n     *               score < 70 ? 'D' :\n     *               score < 80 ? 'C' :\n     *               score < 90 ? 'B' : 'A';\n     *      });\n     *      var students = [{name: 'Abby', score: 84},\n     *                      {name: 'Eddy', score: 58},\n     *                      // ...\n     *                      {name: 'Jack', score: 69}];\n     *      byGrade(students);\n     *      // {\n     *      //   'A': [{name: 'Dianne', score: 99}],\n     *      //   'B': [{name: 'Abby', score: 84}]\n     *      //   // ...,\n     *      //   'F': [{name: 'Eddy', score: 58}]\n     *      // }\n     */\n    var groupBy = _curry2(_dispatchable('groupBy', _xgroupBy, function groupBy(fn, list) {\n        return _reduce(function (acc, elt) {\n            var key = fn(elt);\n            acc[key] = append(elt, acc[key] || (acc[key] = []));\n            return acc;\n        }, {}, list);\n    }));\n\n    /**\n     * Returns the first element of the given list or string. In some libraries\n     * this function is named `first`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> a | Undefined\n     * @sig String -> String\n     * @param {Array|String} list\n     * @return {*}\n     * @see R.tail, R.init, R.last\n     * @example\n     *\n     *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n     *      R.head([]); //=> undefined\n     *\n     *      R.head('abc'); //=> 'a'\n     *      R.head(''); //=> ''\n     */\n    var head = nth(0);\n\n    /**\n     * Given a function that generates a key, turns a list of objects into an\n     * object indexing the objects by the given key. Note that if multiple\n     * objects generate the same value for the indexing key only the last value\n     * will be included in the generated object.\n     *\n     * @func\n     * @memberOf R\n     * @since 0.19.1\n     * @since 0.19.0\n     * @category List\n     * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n     * @param {Function} fn Function :: a -> String\n     * @param {Array} array The array of objects to index\n     * @return {Object} An object indexing each array element by the given property.\n     * @example\n     *\n     *      var list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n     *      R.indexBy(R.prop('id'), list);\n     *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n     */\n    var indexBy = _curry2(function indexBy(fn, list) {\n        return _reduce(function (acc, elem) {\n            var key = fn(elem);\n            acc[key] = elem;\n            return acc;\n        }, {}, list);\n    });\n\n    /**\n     * Returns all but the last element of the given list or string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category List\n     * @sig [a] -> [a]\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @see R.last, R.head, R.tail\n     * @example\n     *\n     *      R.init([1, 2, 3]);  //=> [1, 2]\n     *      R.init([1, 2]);     //=> [1]\n     *      R.init([1]);        //=> []\n     *      R.init([]);         //=> []\n     *\n     *      R.init('abc');  //=> 'ab'\n     *      R.init('ab');   //=> 'a'\n     *      R.init('a');    //=> ''\n     *      R.init('');     //=> ''\n     */\n    var init = slice(0, -1);\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of those\n     * elements common to both lists. Duplication is determined according to the\n     * value returned by applying the supplied predicate to two list elements.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\n     * @param {Function} pred A predicate function that determines whether\n     *        the two supplied elements are equal.\n     * @param {Array} list1 One list of items to compare\n     * @param {Array} list2 A second list of items to compare\n     * @return {Array} A new list containing those elements common to both lists.\n     * @see R.intersection\n     * @example\n     *\n     *      var buffaloSpringfield = [\n     *        {id: 824, name: 'Richie Furay'},\n     *        {id: 956, name: 'Dewey Martin'},\n     *        {id: 313, name: 'Bruce Palmer'},\n     *        {id: 456, name: 'Stephen Stills'},\n     *        {id: 177, name: 'Neil Young'}\n     *      ];\n     *      var csny = [\n     *        {id: 204, name: 'David Crosby'},\n     *        {id: 456, name: 'Stephen Stills'},\n     *        {id: 539, name: 'Graham Nash'},\n     *        {id: 177, name: 'Neil Young'}\n     *      ];\n     *\n     *      R.intersectionWith(R.eqBy(R.prop('id')), buffaloSpringfield, csny);\n     *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n     */\n    var intersectionWith = _curry3(function intersectionWith(pred, list1, list2) {\n        var results = [];\n        var idx = 0;\n        while (idx < list1.length) {\n            if (_containsWith(pred, list1[idx], list2)) {\n                results[results.length] = list1[idx];\n            }\n            idx += 1;\n        }\n        return uniqWith(pred, results);\n    });\n\n    /**\n     * Same as R.invertObj, however this accounts for objects with duplicate values\n     * by putting the values into an array.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Object\n     * @sig {s: x} -> {x: [ s, ... ]}\n     * @param {Object} obj The object or array to invert\n     * @return {Object} out A new object with keys\n     * in an array.\n     * @example\n     *\n     *      var raceResultsByFirstName = {\n     *        first: 'alice',\n     *        second: 'jake',\n     *        third: 'alice',\n     *      };\n     *      R.invert(raceResultsByFirstName);\n     *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n     */\n    var invert = _curry1(function invert(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var idx = 0;\n        var out = {};\n        while (idx < len) {\n            var key = props[idx];\n            var val = obj[key];\n            var list = _has(val, out) ? out[val] : out[val] = [];\n            list[list.length] = key;\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new object with the keys of the given object as values, and the\n     * values of the given object, which are coerced to strings, as keys. Note\n     * that the last key found is preferred when handling the same value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Object\n     * @sig {s: x} -> {x: s}\n     * @param {Object} obj The object or array to invert\n     * @return {Object} out A new object\n     * @example\n     *\n     *      var raceResults = {\n     *        first: 'alice',\n     *        second: 'jake'\n     *      };\n     *      R.invertObj(raceResults);\n     *      //=> { 'alice': 'first', 'jake':'second' }\n     *\n     *      // Alternatively:\n     *      var raceResults = ['alice', 'jake'];\n     *      R.invertObj(raceResults);\n     *      //=> { 'alice': '0', 'jake':'1' }\n     */\n    var invertObj = _curry1(function invertObj(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var idx = 0;\n        var out = {};\n        while (idx < len) {\n            var key = props[idx];\n            out[obj[key]] = key;\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns `true` if the given value is its type's empty value; `false`\n     * otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Logic\n     * @sig a -> Boolean\n     * @param {*} x\n     * @return {Boolean}\n     * @see R.empty\n     * @example\n     *\n     *      R.isEmpty([1, 2, 3]);   //=> false\n     *      R.isEmpty([]);          //=> true\n     *      R.isEmpty('');          //=> true\n     *      R.isEmpty(null);        //=> false\n     *      R.isEmpty({});          //=> true\n     *      R.isEmpty({length: 0}); //=> false\n     */\n    var isEmpty = _curry1(function isEmpty(x) {\n        return x != null && equals(x, empty(x));\n    });\n\n    /**\n     * Returns the last element of the given list or string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.4\n     * @category List\n     * @sig [a] -> a | Undefined\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @see R.init, R.head, R.tail\n     * @example\n     *\n     *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n     *      R.last([]); //=> undefined\n     *\n     *      R.last('abc'); //=> 'c'\n     *      R.last(''); //=> ''\n     */\n    var last = nth(-1);\n\n    /**\n     * Returns the position of the last occurrence of an item in an array, or -1 if\n     * the item is not included in the array. `R.equals` is used to determine\n     * equality.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig a -> [a] -> Number\n     * @param {*} target The item to find.\n     * @param {Array} xs The array to search in.\n     * @return {Number} the index of the target, or -1 if the target is not found.\n     * @see R.indexOf\n     * @example\n     *\n     *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n     *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n     */\n    var lastIndexOf = _curry2(function lastIndexOf(target, xs) {\n        if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n            return xs.lastIndexOf(target);\n        } else {\n            var idx = xs.length - 1;\n            while (idx >= 0) {\n                if (equals(xs[idx], target)) {\n                    return idx;\n                }\n                idx -= 1;\n            }\n            return -1;\n        }\n    });\n\n    /**\n     * Takes a function and\n     * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n     * applies the function to each of the functor's values, and returns\n     * a functor of the same shape.\n     *\n     * Ramda provides suitable `map` implementations for `Array` and `Object`,\n     * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n     *\n     * Dispatches to the `map` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * Also treats functions as functors and will compose them together.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Functor f => (a -> b) -> f a -> f b\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {Array} list The list to be iterated over.\n     * @return {Array} The new list.\n     * @see R.transduce, R.addIndex\n     * @example\n     *\n     *      var double = x => x * 2;\n     *\n     *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n     *\n     *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n     */\n    var map = _curry2(_dispatchable('map', _xmap, function map(fn, functor) {\n        switch (Object.prototype.toString.call(functor)) {\n        case '[object Function]':\n            return curryN(functor.length, function () {\n                return fn.call(this, functor.apply(this, arguments));\n            });\n        case '[object Object]':\n            return _reduce(function (acc, key) {\n                acc[key] = fn(functor[key]);\n                return acc;\n            }, {}, keys(functor));\n        default:\n            return _map(fn, functor);\n        }\n    }));\n\n    /**\n     * An Object-specific version of `map`. The function is applied to three\n     * arguments: *(value, key, obj)*. If only the value is significant, use\n     * `map` instead.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Object\n     * @sig ((*, String, Object) -> *) -> Object -> Object\n     * @param {Function} fn\n     * @param {Object} obj\n     * @return {Object}\n     * @see R.map\n     * @example\n     *\n     *      var values = { x: 1, y: 2, z: 3 };\n     *      var prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n     *\n     *      R.mapObjIndexed(prependKeyAndDouble, values); //=> { x: 'x2', y: 'y4', z: 'z6' }\n     */\n    var mapObjIndexed = _curry2(function mapObjIndexed(fn, obj) {\n        return _reduce(function (acc, key) {\n            acc[key] = fn(obj[key], key, obj);\n            return acc;\n        }, {}, keys(obj));\n    });\n\n    /**\n     * Creates a new object with the own properties of the two provided objects. If\n     * a key exists in both objects, the provided function is applied to the values\n     * associated with the key in each object, with the result being used as the\n     * value associated with the key in the returned object. The key will be\n     * excluded from the returned object if the resulting value is `undefined`.\n     *\n     * @func\n     * @memberOf R\n     * @since 0.19.1\n     * @since 0.19.0\n     * @category Object\n     * @sig (a -> a -> a) -> {a} -> {a} -> {a}\n     * @param {Function} fn\n     * @param {Object} l\n     * @param {Object} r\n     * @return {Object}\n     * @see R.merge, R.mergeWithKey\n     * @example\n     *\n     *      R.mergeWith(R.concat,\n     *                  { a: true, values: [10, 20] },\n     *                  { b: true, values: [15, 35] });\n     *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n     */\n    var mergeWith = _curry3(function mergeWith(fn, l, r) {\n        return mergeWithKey(function (_, _l, _r) {\n            return fn(_l, _r);\n        }, l, r);\n    });\n\n    /**\n     * Takes a function `f` and a list of arguments, and returns a function `g`.\n     * When applied, `g` returns the result of applying `f` to the arguments\n     * provided initially followed by the arguments provided to `g`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Function\n     * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\n     * @param {Function} f\n     * @param {Array} args\n     * @return {Function}\n     * @see R.partialRight\n     * @example\n     *\n     *      var multiply = (a, b) => a * b;\n     *      var double = R.partial(multiply, [2]);\n     *      double(2); //=> 4\n     *\n     *      var greet = (salutation, title, firstName, lastName) =>\n     *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n     *\n     *      var sayHello = R.partial(greet, ['Hello']);\n     *      var sayHelloToMs = R.partial(sayHello, ['Ms.']);\n     *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n     */\n    var partial = _createPartialApplicator(_concat);\n\n    /**\n     * Takes a function `f` and a list of arguments, and returns a function `g`.\n     * When applied, `g` returns the result of applying `f` to the arguments\n     * provided to `g` followed by the arguments provided initially.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Function\n     * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n     * @param {Function} f\n     * @param {Array} args\n     * @return {Function}\n     * @see R.partial\n     * @example\n     *\n     *      var greet = (salutation, title, firstName, lastName) =>\n     *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n     *\n     *      var greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n     *\n     *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n     */\n    var partialRight = _createPartialApplicator(flip(_concat));\n\n    /**\n     * Takes a predicate and a list and returns the pair of lists of elements which\n     * do and do not satisfy the predicate, respectively.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.4\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [[a],[a]]\n     * @param {Function} pred A predicate to determine which array the element belongs to.\n     * @param {Array} list The array to partition.\n     * @return {Array} A nested array, containing first an array of elements that satisfied the predicate,\n     *         and second an array of elements that did not satisfy.\n     * @see R.filter, R.reject\n     * @example\n     *\n     *      R.partition(R.contains('s'), ['sss', 'ttt', 'foo', 'bars']);\n     *      //=> [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n     */\n    var partition = _curry2(function partition(pred, list) {\n        return _reduce(function (acc, elt) {\n            var xs = acc[pred(elt) ? 0 : 1];\n            xs[xs.length] = elt;\n            return acc;\n        }, [\n            [],\n            []\n        ], list);\n    });\n\n    /**\n     * Determines whether a nested path on an object has a specific value, in\n     * `R.equals` terms. Most likely used to filter a list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Relation\n     * @sig [String] -> * -> {String: *} -> Boolean\n     * @param {Array} path The path of the nested property to use\n     * @param {*} val The value to compare the nested property with\n     * @param {Object} obj The object to check the nested property in\n     * @return {Boolean} `true` if the value equals the nested object property,\n     *         `false` otherwise.\n     * @example\n     *\n     *      var user1 = { address: { zipCode: 90210 } };\n     *      var user2 = { address: { zipCode: 55555 } };\n     *      var user3 = { name: 'Bob' };\n     *      var users = [ user1, user2, user3 ];\n     *      var isFamous = R.pathEq(['address', 'zipCode'], 90210);\n     *      R.filter(isFamous, users); //=> [ user1 ]\n     */\n    var pathEq = _curry3(function pathEq(_path, val, obj) {\n        return equals(path(_path, obj), val);\n    });\n\n    /**\n     * Returns a new list by plucking the same named property off all objects in\n     * the list supplied.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig k -> [{k: v}] -> [v]\n     * @param {Number|String} key The key name to pluck off of each object.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of values for the given key.\n     * @see R.props\n     * @example\n     *\n     *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n     *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n     */\n    var pluck = _curry2(function pluck(p, list) {\n        return map(prop(p), list);\n    });\n\n    /**\n     * Reasonable analog to SQL `select` statement.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @category Relation\n     * @sig [k] -> [{k: v}] -> [{k: v}]\n     * @param {Array} props The property names to project\n     * @param {Array} objs The objects to query\n     * @return {Array} An array of objects with just the `props` properties.\n     * @example\n     *\n     *      var abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n     *      var fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n     *      var kids = [abby, fred];\n     *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n     */\n    // passing `identity` gives correct arity\n    var project = useWith(_map, [\n        pickAll,\n        identity\n    ]);\n\n    /**\n     * Returns `true` if the specified object property is equal, in `R.equals`\n     * terms, to the given value; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig String -> a -> Object -> Boolean\n     * @param {String} name\n     * @param {*} val\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.equals, R.propSatisfies\n     * @example\n     *\n     *      var abby = {name: 'Abby', age: 7, hair: 'blond'};\n     *      var fred = {name: 'Fred', age: 12, hair: 'brown'};\n     *      var rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n     *      var alois = {name: 'Alois', age: 15, disposition: 'surly'};\n     *      var kids = [abby, fred, rusty, alois];\n     *      var hasBrownHair = R.propEq('hair', 'brown');\n     *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n     */\n    var propEq = _curry3(function propEq(name, val, obj) {\n        return propSatisfies(equals(val), name, obj);\n    });\n\n    /**\n     * Returns `true` if the specified object property is of the given type;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Type\n     * @sig Type -> String -> Object -> Boolean\n     * @param {Function} type\n     * @param {String} name\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.is, R.propSatisfies\n     * @example\n     *\n     *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n     *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n     *      R.propIs(Number, 'x', {});            //=> false\n     */\n    var propIs = _curry3(function propIs(type, name, obj) {\n        return propSatisfies(is(type), name, obj);\n    });\n\n    /**\n     * Returns a single item by iterating through the list, successively calling\n     * the iterator function and passing it an accumulator value and the current\n     * value from the array, and then passing the result to the next call.\n     *\n     * The iterator function receives two values: *(acc, value)*. It may use\n     * `R.reduced` to shortcut the iteration.\n     *\n     * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n     * arrays), unlike the native `Array.prototype.reduce` method. For more details\n     * on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n     *\n     * Dispatches to the `reduce` method of the third argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig ((a, b) -> a) -> a -> [b] -> a\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.reduced, R.addIndex\n     * @example\n     *\n     *      var numbers = [1, 2, 3];\n     *      var add = (a, b) => a + b;\n     *\n     *      R.reduce(add, 10, numbers); //=> 16\n     */\n    var reduce = _curry3(_reduce);\n\n    /**\n     * The complement of `filter`.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Filterable f => (a -> Boolean) -> f a -> f a\n     * @param {Function} pred\n     * @param {Array} filterable\n     * @return {Array}\n     * @see R.filter, R.transduce, R.addIndex\n     * @example\n     *\n     *      var isOdd = (n) => n % 2 === 1;\n     *\n     *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n     *\n     *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n     */\n    var reject = _curry2(function reject(pred, filterable) {\n        return filter(_complement(pred), filterable);\n    });\n\n    /**\n     * Returns a fixed list of size `n` containing a specified identical value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category List\n     * @sig a -> n -> [a]\n     * @param {*} value The value to repeat.\n     * @param {Number} n The desired size of the output list.\n     * @return {Array} A new array containing `n` `value`s.\n     * @example\n     *\n     *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n     *\n     *      var obj = {};\n     *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n     *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n     */\n    var repeat = _curry2(function repeat(value, n) {\n        return times(always(value), n);\n    });\n\n    /**\n     * Adds together all the elements of a list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list An array of numbers\n     * @return {Number} The sum of all the numbers in the list.\n     * @see R.reduce\n     * @example\n     *\n     *      R.sum([2,4,6,8,100,1]); //=> 121\n     */\n    var sum = reduce(add, 0);\n\n    /**\n     * Returns a new list containing the last `n` elements of the given list.\n     * If `n > list.length`, returns a list of `list.length` elements.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n The number of elements to return.\n     * @param {Array} xs The collection to consider.\n     * @return {Array}\n     * @see R.dropLast\n     * @example\n     *\n     *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n     *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n     *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.takeLast(3, 'ramda');               //=> 'mda'\n     */\n    var takeLast = _curry2(function takeLast(n, xs) {\n        return drop(n >= 0 ? xs.length - n : 0, xs);\n    });\n\n    /**\n     * Initializes a transducer using supplied iterator function. Returns a single\n     * item by iterating through the list, successively calling the transformed\n     * iterator function and passing it an accumulator value and the current value\n     * from the array, and then passing the result to the next call.\n     *\n     * The iterator function receives two values: *(acc, value)*. It will be\n     * wrapped as a transformer to initialize the transducer. A transformer can be\n     * passed directly in place of an iterator function. In both cases, iteration\n     * may be stopped early with the `R.reduced` function.\n     *\n     * A transducer is a function that accepts a transformer and returns a\n     * transformer and can be composed directly.\n     *\n     * A transformer is an an object that provides a 2-arity reducing iterator\n     * function, step, 0-arity initial value function, init, and 1-arity result\n     * extraction function, result. The step function is used as the iterator\n     * function in reduce. The result function is used to convert the final\n     * accumulator into the return type and in most cases is R.identity. The init\n     * function can be used to provide an initial accumulator, but is ignored by\n     * transduce.\n     *\n     * The iteration is performed with R.reduce after initializing the transducer.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category List\n     * @sig (c -> c) -> (a,b -> a) -> a -> [b] -> a\n     * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array. Wrapped as transformer, if necessary, and used to\n     *        initialize the transducer\n     * @param {*} acc The initial accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.reduce, R.reduced, R.into\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n     *\n     *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n     */\n    var transduce = curryN(4, function transduce(xf, fn, acc, list) {\n        return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n    });\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of the elements\n     * of each list. Duplication is determined according to the value returned by\n     * applying the supplied predicate to two list elements.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The first and second lists concatenated, with\n     *         duplicates removed.\n     * @see R.union\n     * @example\n     *\n     *      var l1 = [{a: 1}, {a: 2}];\n     *      var l2 = [{a: 1}, {a: 4}];\n     *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n     */\n    var unionWith = _curry3(function unionWith(pred, list1, list2) {\n        return uniqWith(pred, _concat(list1, list2));\n    });\n\n    /**\n     * Takes a spec object and a test object; returns true if the test satisfies\n     * the spec, false otherwise. An object satisfies the spec if, for each of the\n     * spec's own properties, accessing that property of the object gives the same\n     * value (in `R.equals` terms) as accessing that property of the spec.\n     *\n     * `whereEq` is a specialization of [`where`](#where).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Object\n     * @sig {String: *} -> {String: *} -> Boolean\n     * @param {Object} spec\n     * @param {Object} testObj\n     * @return {Boolean}\n     * @see R.where\n     * @example\n     *\n     *      // pred :: Object -> Boolean\n     *      var pred = R.whereEq({a: 1, b: 2});\n     *\n     *      pred({a: 1});              //=> false\n     *      pred({a: 1, b: 2});        //=> true\n     *      pred({a: 1, b: 2, c: 3});  //=> true\n     *      pred({a: 1, b: 1});        //=> false\n     */\n    var whereEq = _curry2(function whereEq(spec, testObj) {\n        return where(map(equals, spec), testObj);\n    });\n\n    var _flatCat = function () {\n        var preservingReduced = function (xf) {\n            return {\n                '@@transducer/init': _xfBase.init,\n                '@@transducer/result': function (result) {\n                    return xf['@@transducer/result'](result);\n                },\n                '@@transducer/step': function (result, input) {\n                    var ret = xf['@@transducer/step'](result, input);\n                    return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n                }\n            };\n        };\n        return function _xcat(xf) {\n            var rxf = preservingReduced(xf);\n            return {\n                '@@transducer/init': _xfBase.init,\n                '@@transducer/result': function (result) {\n                    return rxf['@@transducer/result'](result);\n                },\n                '@@transducer/step': function (result, input) {\n                    return !isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n                }\n            };\n        };\n    }();\n\n    // Array.prototype.indexOf doesn't exist below IE9\n    // manually crawl the list to distinguish between +0 and -0\n    // NaN\n    // non-zero numbers can utilise Set\n    // all these types can utilise Set\n    // null can utilise Set\n    // anything else not covered above, defer to R.equals\n    var _indexOf = function _indexOf(list, a, idx) {\n        var inf, item;\n        // Array.prototype.indexOf doesn't exist below IE9\n        if (typeof list.indexOf === 'function') {\n            switch (typeof a) {\n            case 'number':\n                if (a === 0) {\n                    // manually crawl the list to distinguish between +0 and -0\n                    inf = 1 / a;\n                    while (idx < list.length) {\n                        item = list[idx];\n                        if (item === 0 && 1 / item === inf) {\n                            return idx;\n                        }\n                        idx += 1;\n                    }\n                    return -1;\n                } else if (a !== a) {\n                    // NaN\n                    while (idx < list.length) {\n                        item = list[idx];\n                        if (typeof item === 'number' && item !== item) {\n                            return idx;\n                        }\n                        idx += 1;\n                    }\n                    return -1;\n                }\n                // non-zero numbers can utilise Set\n                return list.indexOf(a, idx);\n            // all these types can utilise Set\n            case 'string':\n            case 'boolean':\n            case 'function':\n            case 'undefined':\n                return list.indexOf(a, idx);\n            case 'object':\n                if (a === null) {\n                    // null can utilise Set\n                    return list.indexOf(a, idx);\n                }\n            }\n        }\n        // anything else not covered above, defer to R.equals\n        while (idx < list.length) {\n            if (equals(list[idx], a)) {\n                return idx;\n            }\n            idx += 1;\n        }\n        return -1;\n    };\n\n    var _xchain = _curry2(function _xchain(f, xf) {\n        return map(f, _flatCat(xf));\n    });\n\n    /**\n     * Takes a list of predicates and returns a predicate that returns true for a\n     * given list of arguments if every one of the provided predicates is satisfied\n     * by those arguments.\n     *\n     * The function returned is a curried function whose arity matches that of the\n     * highest-arity predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Logic\n     * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n     * @param {Array} preds\n     * @return {Function}\n     * @see R.anyPass\n     * @example\n     *\n     *      var isQueen = R.propEq('rank', 'Q');\n     *      var isSpade = R.propEq('suit', '♠︎');\n     *      var isQueenOfSpades = R.allPass([isQueen, isSpade]);\n     *\n     *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false\n     *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true\n     */\n    var allPass = _curry1(function allPass(preds) {\n        return curryN(reduce(max, 0, pluck('length', preds)), function () {\n            var idx = 0;\n            var len = preds.length;\n            while (idx < len) {\n                if (!preds[idx].apply(this, arguments)) {\n                    return false;\n                }\n                idx += 1;\n            }\n            return true;\n        });\n    });\n\n    /**\n     * Returns `true` if all elements are unique, in `R.equals` terms, otherwise\n     * `false`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category List\n     * @sig [a] -> Boolean\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if all elements are unique, else `false`.\n     * @example\n     *\n     *      R.allUniq(['1', 1]); //=> true\n     *      R.allUniq([1, 1]);   //=> false\n     *      R.allUniq([[42], [42]]); //=> false\n     */\n    var allUniq = _curry1(function allUniq(list) {\n        var len = list.length;\n        var idx = 0;\n        while (idx < len) {\n            if (_indexOf(list, list[idx], idx + 1) >= 0) {\n                return false;\n            }\n            idx += 1;\n        }\n        return true;\n    });\n\n    /**\n     * Takes a list of predicates and returns a predicate that returns true for a\n     * given list of arguments if at least one of the provided predicates is\n     * satisfied by those arguments.\n     *\n     * The function returned is a curried function whose arity matches that of the\n     * highest-arity predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Logic\n     * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n     * @param {Array} preds\n     * @return {Function}\n     * @see R.allPass\n     * @example\n     *\n     *      var gte = R.anyPass([R.gt, R.equals]);\n     *\n     *      gte(3, 2); //=> true\n     *      gte(2, 2); //=> true\n     *      gte(2, 3); //=> false\n     */\n    var anyPass = _curry1(function anyPass(preds) {\n        return curryN(reduce(max, 0, pluck('length', preds)), function () {\n            var idx = 0;\n            var len = preds.length;\n            while (idx < len) {\n                if (preds[idx].apply(this, arguments)) {\n                    return true;\n                }\n                idx += 1;\n            }\n            return false;\n        });\n    });\n\n    /**\n     * ap applies a list of functions to a list of values.\n     *\n     * Dispatches to the `ap` method of the second argument, if present. Also\n     * treats functions as applicatives.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category Function\n     * @sig [f] -> [a] -> [f a]\n     * @param {Array} fns An array of functions\n     * @param {Array} vs An array of values\n     * @return {Array} An array of results of applying each of `fns` to all of `vs` in turn.\n     * @example\n     *\n     *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n     */\n    // else\n    var ap = _curry2(function ap(applicative, fn) {\n        return typeof applicative.ap === 'function' ? applicative.ap(fn) : typeof applicative === 'function' ? curryN(Math.max(applicative.length, fn.length), function () {\n            return applicative.apply(this, arguments)(fn.apply(this, arguments));\n        }) : // else\n        _reduce(function (acc, f) {\n            return _concat(acc, map(f, fn));\n        }, [], applicative);\n    });\n\n    /**\n     * Returns the result of calling its first argument with the remaining\n     * arguments. This is occasionally useful as a converging function for\n     * `R.converge`: the left branch can produce a function while the right branch\n     * produces a value to be passed to that function as an argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Function\n     * @sig (*... -> a),*... -> a\n     * @param {Function} fn The function to apply to the remaining arguments.\n     * @param {...*} args Any number of positional arguments.\n     * @return {*}\n     * @see R.apply\n     * @example\n     *\n     *      var indentN = R.pipe(R.times(R.always(' ')),\n     *                           R.join(''),\n     *                           R.replace(/^(?!$)/gm));\n     *\n     *      var format = R.converge(R.call, [\n     *                                  R.pipe(R.prop('indent'), indentN),\n     *                                  R.prop('value')\n     *                              ]);\n     *\n     *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n     */\n    var call = curry(function call(fn) {\n        return fn.apply(this, _slice(arguments, 1));\n    });\n\n    /**\n     * `chain` maps a function over a list and concatenates the results. `chain`\n     * is also known as `flatMap` in some libraries\n     *\n     * Dispatches to the `chain` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category List\n     * @sig (a -> [b]) -> [a] -> [b]\n     * @param {Function} fn\n     * @param {Array} list\n     * @return {Array}\n     * @example\n     *\n     *      var duplicate = n => [n, n];\n     *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n     */\n    var chain = _curry2(_dispatchable('chain', _xchain, function chain(fn, monad) {\n        if (typeof monad === 'function') {\n            return function () {\n                return monad.call(this, fn.apply(this, arguments)).apply(this, arguments);\n            };\n        }\n        return _makeFlat(false)(map(fn, monad));\n    }));\n\n    /**\n     * Turns a list of Functors into a Functor of a list, applying a mapping\n     * function to the elements of the list along the way.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category List\n     * @sig Functor f => (a -> f b) -> (x -> f x) -> [a] -> f [b]\n     * @param {Function} fn The transformation function\n     * @param {Function} of A function that returns the data type to return\n     * @param {Array} list An array of functors of the same type\n     * @return {*}\n     * @see R.traverse\n     * @deprecated since v0.19.0\n     * @example\n     *\n     *      var add10 = R.map(R.add(10));\n     *      R.commuteMap(add10, R.of, [[1], [2, 3]]);   //=> [[11, 12], [11, 13]]\n     *      R.commuteMap(add10, R.of, [[1, 2], [3]]);   //=> [[11, 13], [12, 13]]\n     *      R.commuteMap(add10, R.of, [[1], [2], [3]]); //=> [[11, 12, 13]]\n     *      R.commuteMap(add10, Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([11, 12, 13])\n     *      R.commuteMap(add10, Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n     *\n     *      var fetch = url => Future((rej, res) => http.get(url, res).on('error', rej));\n     *      R.commuteMap(fetch, Future.of, [\n     *        'http://ramdajs.com',\n     *        'http://github.com/ramda'\n     *      ]); //=> Future([IncomingMessage, IncomingMessage])\n     */\n    var commuteMap = _curry3(function commuteMap(fn, of, list) {\n        function consF(acc, x) {\n            return ap(map(prepend, fn(x)), acc);\n        }\n        return reduceRight(consF, of([]), list);\n    });\n\n    /**\n     * Wraps a constructor function inside a curried function that can be called\n     * with the same arguments and returns the same type. The arity of the function\n     * returned is specified to allow using variadic constructor functions.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.4.0\n     * @category Function\n     * @sig Number -> (* -> {*}) -> (* -> {*})\n     * @param {Number} n The arity of the constructor function.\n     * @param {Function} Fn The constructor function to wrap.\n     * @return {Function} A wrapped, curried constructor function.\n     * @example\n     *\n     *      // Variadic constructor function\n     *      var Widget = () => {\n     *        this.children = Array.prototype.slice.call(arguments);\n     *        // ...\n     *      };\n     *      Widget.prototype = {\n     *        // ...\n     *      };\n     *      var allConfigs = [\n     *        // ...\n     *      ];\n     *      R.map(R.constructN(1, Widget), allConfigs); // a list of Widgets\n     */\n    var constructN = _curry2(function constructN(n, Fn) {\n        if (n > 10) {\n            throw new Error('Constructor with greater than ten arguments');\n        }\n        if (n === 0) {\n            return function () {\n                return new Fn();\n            };\n        }\n        return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n            switch (arguments.length) {\n            case 1:\n                return new Fn($0);\n            case 2:\n                return new Fn($0, $1);\n            case 3:\n                return new Fn($0, $1, $2);\n            case 4:\n                return new Fn($0, $1, $2, $3);\n            case 5:\n                return new Fn($0, $1, $2, $3, $4);\n            case 6:\n                return new Fn($0, $1, $2, $3, $4, $5);\n            case 7:\n                return new Fn($0, $1, $2, $3, $4, $5, $6);\n            case 8:\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n            case 9:\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n            case 10:\n                return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n            }\n        }));\n    });\n\n    /**\n     * Accepts a converging function and a list of branching functions and returns\n     * a new function. When invoked, this new function is applied to some\n     * arguments, each branching function is applied to those same arguments. The\n     * results of each branching function are passed as arguments to the converging\n     * function to produce the return value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.4.2\n     * @category Function\n     * @sig (x1 -> x2 -> ... -> z) -> [(a -> b -> ... -> x1), (a -> b -> ... -> x2), ...] -> (a -> b -> ... -> z)\n     * @param {Function} after A function. `after` will be invoked with the return values of\n     *        `fn1` and `fn2` as its arguments.\n     * @param {Array} functions A list of functions.\n     * @return {Function} A new function.\n     * @example\n     *\n     *      var add = (a, b) => a + b;\n     *      var multiply = (a, b) => a * b;\n     *      var subtract = (a, b) => a - b;\n     *\n     *      //≅ multiply( add(1, 2), subtract(1, 2) );\n     *      R.converge(multiply, [add, subtract])(1, 2); //=> -3\n     *\n     *      var add3 = (a, b, c) => a + b + c;\n     *      R.converge(add3, [multiply, add, subtract])(1, 2); //=> 4\n     */\n    var converge = _curry2(function converge(after, fns) {\n        return curryN(Math.max.apply(Math, pluck('length', fns)), function () {\n            var args = arguments;\n            var context = this;\n            return after.apply(context, _map(function (fn) {\n                return fn.apply(context, args);\n            }, fns));\n        });\n    });\n\n    /**\n     * Returns a new list without any consecutively repeating elements. Equality is\n     * determined by applying the supplied predicate two consecutive elements. The\n     * first element in a series of equal element is the one being preserved.\n     *\n     * Dispatches to the `dropRepeatsWith` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category List\n     * @sig (a, a -> Boolean) -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list The array to consider.\n     * @return {Array} `list` without repeating elements.\n     * @see R.transduce\n     * @example\n     *\n     *      var lengthEq = (x, y) => Math.abs(x) === Math.abs(y);\n     *      var l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n     *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n     */\n    var dropRepeatsWith = _curry2(_dispatchable('dropRepeatsWith', _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n        var result = [];\n        var idx = 1;\n        var len = list.length;\n        if (len !== 0) {\n            result[0] = list[0];\n            while (idx < len) {\n                if (!pred(last(result), list[idx])) {\n                    result[result.length] = list[idx];\n                }\n                idx += 1;\n            }\n        }\n        return result;\n    }));\n\n    /**\n     * Takes a function and two values in its domain and returns `true` if the\n     * values map to the same value in the codomain; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category Relation\n     * @sig (a -> b) -> a -> a -> Boolean\n     * @param {Function} f\n     * @param {*} x\n     * @param {*} y\n     * @return {Boolean}\n     * @example\n     *\n     *      R.eqBy(Math.abs, 5, -5); //=> true\n     */\n    var eqBy = _curry3(function eqBy(f, x, y) {\n        return equals(f(x), f(y));\n    });\n\n    /**\n     * Reports whether two objects have the same value, in `R.equals` terms, for\n     * the specified property. Useful as a curried predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig k -> {k: v} -> {k: v} -> Boolean\n     * @param {String} prop The name of the property to compare\n     * @param {Object} obj1\n     * @param {Object} obj2\n     * @return {Boolean}\n     *\n     * @example\n     *\n     *      var o1 = { a: 1, b: 2, c: 3, d: 4 };\n     *      var o2 = { a: 10, b: 20, c: 3, d: 40 };\n     *      R.eqProps('a', o1, o2); //=> false\n     *      R.eqProps('c', o1, o2); //=> true\n     */\n    var eqProps = _curry3(function eqProps(prop, obj1, obj2) {\n        return equals(obj1[prop], obj2[prop]);\n    });\n\n    /**\n     * Returns the position of the first occurrence of an item in an array, or -1\n     * if the item is not included in the array. `R.equals` is used to determine\n     * equality.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig a -> [a] -> Number\n     * @param {*} target The item to find.\n     * @param {Array} xs The array to search in.\n     * @return {Number} the index of the target, or -1 if the target is not found.\n     * @see R.lastIndexOf\n     * @example\n     *\n     *      R.indexOf(3, [1,2,3,4]); //=> 2\n     *      R.indexOf(10, [1,2,3,4]); //=> -1\n     */\n    var indexOf = _curry2(function indexOf(target, xs) {\n        return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n    });\n\n    /**\n     * juxt applies a list of functions to a list of values.\n     *\n     * @func\n     * @memberOf R\n     * @since 0.19.1\n     * @since 0.19.0\n     * @category Function\n     * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n     * @param {Array} fns An array of functions\n     * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n     * @example\n     *\n     *      var range = R.juxt([Math.min, Math.max]);\n     *      range(3, 4, 9, -3); //=> [-3, 9]\n     */\n    var juxt = _curry1(function juxt(fns) {\n        return function () {\n            return map(apply(__, arguments), fns);\n        };\n    });\n\n    /**\n     * Returns a lens for the given getter and setter functions. The getter \"gets\"\n     * the value of the focus; the setter \"sets\" the value of the focus. The setter\n     * should not mutate the data structure.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n     * @param {Function} getter\n     * @param {Function} setter\n     * @return {Lens}\n     * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\n     *\n     *      R.view(xLens, {x: 1, y: 2});            //=> 1\n     *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n     *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n     */\n    var lens = _curry2(function lens(getter, setter) {\n        return function (f) {\n            return function (s) {\n                return map(function (v) {\n                    return setter(v, s);\n                }, f(getter(s)));\n            };\n        };\n    });\n\n    /**\n     * Returns a lens whose focus is the specified index.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Number -> Lens s a\n     * @param {Number} n\n     * @return {Lens}\n     * @see R.view, R.set, R.over\n     * @example\n     *\n     *      var headLens = R.lensIndex(0);\n     *\n     *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n     *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n     *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n     */\n    var lensIndex = _curry1(function lensIndex(n) {\n        return lens(nth(n), update(n));\n    });\n\n    /**\n     * Returns a lens whose focus is the specified path.\n     *\n     * @func\n     * @memberOf R\n     * @since 0.19.1\n     * @since 0.19.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig [String] -> Lens s a\n     * @param {Array} path The path to use.\n     * @return {Lens}\n     * @see R.view, R.set, R.over\n     * @example\n     *\n     *      var xyLens = R.lensPath(['x', 'y']);\n     *\n     *      R.view(xyLens, {x: {y: 2, z: 3}});            //=> 2\n     *      R.set(xyLens, 4, {x: {y: 2, z: 3}});          //=> {x: {y: 4, z: 3}}\n     *      R.over(xyLens, R.negate, {x: {y: 2, z: 3}});  //=> {x: {y: -2, z: 3}}\n     */\n    var lensPath = _curry1(function lensPath(p) {\n        return lens(path(p), assocPath(p));\n    });\n\n    /**\n     * Returns a lens whose focus is the specified property.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig String -> Lens s a\n     * @param {String} k\n     * @return {Lens}\n     * @see R.view, R.set, R.over\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.view(xLens, {x: 1, y: 2});            //=> 1\n     *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n     *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n     */\n    var lensProp = _curry1(function lensProp(k) {\n        return lens(prop(k), assoc(k));\n    });\n\n    /**\n     * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n     * many lists (or other objects that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply)).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Function\n     * @sig Number -> (*... -> *) -> ([*]... -> [*])\n     * @param {Function} fn The function to lift into higher context\n     * @return {Function} The lifted function.\n     * @see R.lift\n     * @example\n     *\n     *      var madd3 = R.liftN(3, R.curryN(3, (...args) => R.sum(args)));\n     *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n     */\n    var liftN = _curry2(function liftN(arity, fn) {\n        var lifted = curryN(arity, fn);\n        return curryN(arity, function () {\n            return _reduce(ap, map(lifted, arguments[0]), _slice(arguments, 1));\n        });\n    });\n\n    /**\n     * Returns the mean of the given list of numbers.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list\n     * @return {Number}\n     * @example\n     *\n     *      R.mean([2, 7, 9]); //=> 6\n     *      R.mean([]); //=> NaN\n     */\n    var mean = _curry1(function mean(list) {\n        return sum(list) / list.length;\n    });\n\n    /**\n     * Returns the median of the given list of numbers.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list\n     * @return {Number}\n     * @example\n     *\n     *      R.median([2, 9, 7]); //=> 7\n     *      R.median([7, 2, 10, 9]); //=> 8\n     *      R.median([]); //=> NaN\n     */\n    var median = _curry1(function median(list) {\n        var len = list.length;\n        if (len === 0) {\n            return NaN;\n        }\n        var width = 2 - len % 2;\n        var idx = (len - width) / 2;\n        return mean(_slice(list).sort(function (a, b) {\n            return a < b ? -1 : a > b ? 1 : 0;\n        }).slice(idx, idx + width));\n    });\n\n    /**\n     * Create a new object with the own properties of the first object merged with\n     * the own properties of the second object. If a key exists in both objects,\n     * the value from the second object will be used.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig {k: v} -> {k: v} -> {k: v}\n     * @param {Object} l\n     * @param {Object} r\n     * @return {Object}\n     * @see R.mergeWith, R.mergeWithKey\n     * @example\n     *\n     *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n     *      //=> { 'name': 'fred', 'age': 40 }\n     *\n     *      var resetToDefault = R.merge(R.__, {x: 0});\n     *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n     */\n    var merge = mergeWith(function (l, r) {\n        return r;\n    });\n\n    /**\n     * Merges a list of objects together into one object.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category List\n     * @sig [{k: v}] -> {k: v}\n     * @param {Array} list An array of objects\n     * @return {Object} A merged object.\n     * @see R.reduce\n     * @example\n     *\n     *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n     *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n     */\n    var mergeAll = _curry1(function mergeAll(list) {\n        return reduce(merge, {}, list);\n    });\n\n    /**\n     * Performs left-to-right function composition. The leftmost function may have\n     * any arity; the remaining functions must be unary.\n     *\n     * In some libraries this function is named `sequence`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.compose\n     * @example\n     *\n     *      var f = R.pipe(Math.pow, R.negate, R.inc);\n     *\n     *      f(3, 4); // -(3^4) + 1\n     */\n    var pipe = function pipe() {\n        if (arguments.length === 0) {\n            throw new Error('pipe requires at least one argument');\n        }\n        return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n    };\n\n    /**\n     * Performs left-to-right composition of one or more Promise-returning\n     * functions. The leftmost function may have any arity; the remaining functions\n     * must be unary.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Function\n     * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.composeP\n     * @example\n     *\n     *      //  followersForUser :: String -> Promise [User]\n     *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n     */\n    var pipeP = function pipeP() {\n        if (arguments.length === 0) {\n            throw new Error('pipeP requires at least one argument');\n        }\n        return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));\n    };\n\n    /**\n     * Multiplies together all the elements of a list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list An array of numbers\n     * @return {Number} The product of all the numbers in the list.\n     * @see R.reduce\n     * @example\n     *\n     *      R.product([2,4,6,8,100,1]); //=> 38400\n     */\n    var product = reduce(multiply, 1);\n\n    /**\n     * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n     * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n     * Applicative of Traversable.\n     *\n     * Dispatches to the `sequence` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since 0.19.1\n     * @since 0.19.0\n     * @category List\n     * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n     * @param {Function} of\n     * @param {*} traversable\n     * @return {*}\n     * @see R.traverse\n     * @example\n     *\n     *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n     *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n     *\n     *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n     *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n     */\n    var sequence = _curry2(function sequence(of, traversable) {\n        return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (acc, x) {\n            return ap(map(prepend, x), acc);\n        }, of([]), traversable);\n    });\n\n    /**\n     * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n     * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n     * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n     * into an Applicative of Traversable.\n     *\n     * Dispatches to the `sequence` method of the third argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since 0.19.1\n     * @since 0.19.0\n     * @category List\n     * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\n     * @param {Function} of\n     * @param {Function} f\n     * @param {*} traversable\n     * @return {*}\n     * @see R.sequence\n     * @example\n     *\n     *      R.traverse(Maybe.of, R.negate, [Just(1), Just(2), Just(3)]);   //=> Just([-1, -2, -3])\n     *      R.traverse(Maybe.of, R.negate, [Just(1), Just(2), Nothing()]); //=> Nothing()\n     *\n     *      R.traverse(R.of, R.negate, Just([1, 2, 3])); //=> [Just(-1), Just(-2), Just(-3)]\n     *      R.traverse(R.of, R.negate, Nothing());       //=> [Nothing()]\n     */\n    var traverse = _curry3(function traverse(of, f, traversable) {\n        return sequence(of, map(f, traversable));\n    });\n\n    /**\n     * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n     * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category List\n     * @sig Chain c => c (c a) -> c a\n     * @param {*} list\n     * @return {*}\n     * @see R.flatten, R.chain\n     * @example\n     *\n     *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n     *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n     */\n    var unnest = chain(_identity);\n\n    var _contains = function _contains(a, list) {\n        return _indexOf(list, a, 0) >= 0;\n    };\n\n    var _stepCat = function () {\n        var _stepCatArray = {\n            '@@transducer/init': Array,\n            '@@transducer/step': function (xs, x) {\n                return _concat(xs, [x]);\n            },\n            '@@transducer/result': _identity\n        };\n        var _stepCatString = {\n            '@@transducer/init': String,\n            '@@transducer/step': function (a, b) {\n                return a + b;\n            },\n            '@@transducer/result': _identity\n        };\n        var _stepCatObject = {\n            '@@transducer/init': Object,\n            '@@transducer/step': function (result, input) {\n                return merge(result, isArrayLike(input) ? objOf(input[0], input[1]) : input);\n            },\n            '@@transducer/result': _identity\n        };\n        return function _stepCat(obj) {\n            if (_isTransformer(obj)) {\n                return obj;\n            }\n            if (isArrayLike(obj)) {\n                return _stepCatArray;\n            }\n            if (typeof obj === 'string') {\n                return _stepCatString;\n            }\n            if (typeof obj === 'object') {\n                return _stepCatObject;\n            }\n            throw new Error('Cannot create transformer for ' + obj);\n        };\n    }();\n\n    //  mapPairs :: (Object, [String]) -> [String]\n    var _toString = function _toString(x, seen) {\n        var recur = function recur(y) {\n            var xs = seen.concat([x]);\n            return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n        };\n        //  mapPairs :: (Object, [String]) -> [String]\n        var mapPairs = function (obj, keys) {\n            return _map(function (k) {\n                return _quote(k) + ': ' + recur(obj[k]);\n            }, keys.slice().sort());\n        };\n        switch (Object.prototype.toString.call(x)) {\n        case '[object Arguments]':\n            return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n        case '[object Array]':\n            return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n                return /^\\d+$/.test(k);\n            }, keys(x)))).join(', ') + ']';\n        case '[object Boolean]':\n            return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n        case '[object Date]':\n            return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n        case '[object Null]':\n            return 'null';\n        case '[object Number]':\n            return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n        case '[object String]':\n            return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n        case '[object Undefined]':\n            return 'undefined';\n        default:\n            if (typeof x.toString === 'function') {\n                var repr = x.toString();\n                if (repr !== '[object Object]') {\n                    return repr;\n                }\n            }\n            return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n        }\n    };\n\n    /**\n     * Turns a list of Functors into a Functor of a list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category List\n     * @sig Functor f => (x -> f x) -> [f a] -> f [a]\n     * @param {Function} of A function that returns the data type to return\n     * @param {Array} list An array of functors of the same type\n     * @return {*}\n     * @see R.sequence\n     * @deprecated since v0.19.0\n     * @example\n     *\n     *      R.commute(R.of, [[1], [2, 3]]);   //=> [[1, 2], [1, 3]]\n     *      R.commute(R.of, [[1, 2], [3]]);   //=> [[1, 3], [2, 3]]\n     *      R.commute(R.of, [[1], [2], [3]]); //=> [[1, 2, 3]]\n     *      R.commute(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n     *      R.commute(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n     */\n    var commute = commuteMap(identity);\n\n    /**\n     * Performs right-to-left function composition. The rightmost function may have\n     * any arity; the remaining functions must be unary.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.pipe\n     * @example\n     *\n     *      var f = R.compose(R.inc, R.negate, Math.pow);\n     *\n     *      f(3, 4); // -(3^4) + 1\n     */\n    var compose = function compose() {\n        if (arguments.length === 0) {\n            throw new Error('compose requires at least one argument');\n        }\n        return pipe.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Returns the right-to-left Kleisli composition of the provided functions,\n     * each of which must return a value of a type supported by [`chain`](#chain).\n     *\n     * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), R.chain(f))`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Function\n     * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (m a -> m z)\n     * @param {...Function}\n     * @return {Function}\n     * @see R.pipeK\n     * @example\n     *\n     *      //  parseJson :: String -> Maybe *\n     *      //  get :: String -> Object -> Maybe *\n     *\n     *      //  getStateCode :: Maybe String -> Maybe String\n     *      var getStateCode = R.composeK(\n     *        R.compose(Maybe.of, R.toUpper),\n     *        get('state'),\n     *        get('address'),\n     *        get('user'),\n     *        parseJson\n     *      );\n     *\n     *      getStateCode(Maybe.of('{\"user\":{\"address\":{\"state\":\"ny\"}}}'));\n     *      //=> Just('NY')\n     *      getStateCode(Maybe.of('[Invalid JSON]'));\n     *      //=> Nothing()\n     */\n    var composeK = function composeK() {\n        return compose.apply(this, prepend(identity, map(chain, arguments)));\n    };\n\n    /**\n     * Performs right-to-left composition of one or more Promise-returning\n     * functions. The rightmost function may have any arity; the remaining\n     * functions must be unary.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Function\n     * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.pipeP\n     * @example\n     *\n     *      //  followersForUser :: String -> Promise [User]\n     *      var followersForUser = R.composeP(db.getFollowers, db.getUserById);\n     */\n    var composeP = function composeP() {\n        if (arguments.length === 0) {\n            throw new Error('composeP requires at least one argument');\n        }\n        return pipeP.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Wraps a constructor function inside a curried function that can be called\n     * with the same arguments and returns the same type.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (* -> {*}) -> (* -> {*})\n     * @param {Function} Fn The constructor function to wrap.\n     * @return {Function} A wrapped, curried constructor function.\n     * @example\n     *\n     *      // Constructor function\n     *      var Widget = config => {\n     *        // ...\n     *      };\n     *      Widget.prototype = {\n     *        // ...\n     *      };\n     *      var allConfigs = [\n     *        // ...\n     *      ];\n     *      R.map(R.construct(Widget), allConfigs); // a list of Widgets\n     */\n    var construct = _curry1(function construct(Fn) {\n        return constructN(Fn.length, Fn);\n    });\n\n    /**\n     * Returns `true` if the specified value is equal, in `R.equals` terms, to at\n     * least one element of the given list; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig a -> [a] -> Boolean\n     * @param {Object} a The item to compare against.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the item is in the list, `false` otherwise.\n     * @see R.any\n     * @example\n     *\n     *      R.contains(3, [1, 2, 3]); //=> true\n     *      R.contains(4, [1, 2, 3]); //=> false\n     *      R.contains([42], [[42]]); //=> true\n     */\n    var contains = _curry2(_contains);\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements in the first list not\n     * contained in the second list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig [*] -> [*] -> [*]\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The elements in `list1` that are not in `list2`.\n     * @see R.differenceWith\n     * @example\n     *\n     *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n     *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n     */\n    var difference = _curry2(function difference(first, second) {\n        var out = [];\n        var idx = 0;\n        var firstLen = first.length;\n        while (idx < firstLen) {\n            if (!_contains(first[idx], second) && !_contains(first[idx], out)) {\n                out[out.length] = first[idx];\n            }\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new list without any consecutively repeating elements. `R.equals`\n     * is used to determine equality.\n     *\n     * Dispatches to the `dropRepeats` method of the first argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category List\n     * @sig [a] -> [a]\n     * @param {Array} list The array to consider.\n     * @return {Array} `list` without repeating elements.\n     * @see R.transduce\n     * @example\n     *\n     *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n     */\n    var dropRepeats = _curry1(_dispatchable('dropRepeats', _xdropRepeatsWith(equals), dropRepeatsWith(equals)));\n\n    /**\n     * Transforms the items of the list with the transducer and appends the\n     * transformed items to the accumulator using an appropriate iterator function\n     * based on the accumulator type.\n     *\n     * The accumulator can be an array, string, object or a transformer. Iterated\n     * items will be appended to arrays and concatenated to strings. Objects will\n     * be merged directly or 2-item arrays will be merged as key, value pairs.\n     *\n     * The accumulator can also be a transformer object that provides a 2-arity\n     * reducing iterator function, step, 0-arity initial value function, init, and\n     * 1-arity result extraction function result. The step function is used as the\n     * iterator function in reduce. The result function is used to convert the\n     * final accumulator into the return type and in most cases is R.identity. The\n     * init function is used to provide the initial accumulator.\n     *\n     * The iteration is performed with R.reduce after initializing the transducer.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category List\n     * @sig a -> (b -> b) -> [c] -> a\n     * @param {*} acc The initial accumulator value.\n     * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n     *\n     *      R.into([], transducer, numbers); //=> [2, 3]\n     *\n     *      var intoArray = R.into([]);\n     *      intoArray(transducer, numbers); //=> [2, 3]\n     */\n    var into = _curry3(function into(acc, xf, list) {\n        return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), acc, list);\n    });\n\n    /**\n     * \"lifts\" a function of arity > 1 so that it may \"map over\" an Array or other\n     * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Function\n     * @sig (*... -> *) -> ([*]... -> [*])\n     * @param {Function} fn The function to lift into higher context\n     * @return {Function} The lifted function.\n     * @see R.liftN\n     * @example\n     *\n     *      var madd3 = R.lift(R.curry((a, b, c) => a + b + c));\n     *\n     *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n     *\n     *      var madd5 = R.lift(R.curry((a, b, c, d, e) => a + b + c + d + e));\n     *\n     *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n     */\n    var lift = _curry1(function lift(fn) {\n        return liftN(fn.length, fn);\n    });\n\n    /**\n     * Returns a partial copy of an object omitting the keys specified.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig [String] -> {String: *} -> {String: *}\n     * @param {Array} names an array of String property names to omit from the new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with properties from `names` not on it.\n     * @see R.pick\n     * @example\n     *\n     *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n     */\n    var omit = _curry2(function omit(names, obj) {\n        var result = {};\n        for (var prop in obj) {\n            if (!_contains(prop, names)) {\n                result[prop] = obj[prop];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Returns the left-to-right Kleisli composition of the provided functions,\n     * each of which must return a value of a type supported by [`chain`](#chain).\n     *\n     * `R.pipeK(f, g, h)` is equivalent to `R.pipe(R.chain(f), R.chain(g), R.chain(h))`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Function\n     * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (m a -> m z)\n     * @param {...Function}\n     * @return {Function}\n     * @see R.composeK\n     * @example\n     *\n     *      //  parseJson :: String -> Maybe *\n     *      //  get :: String -> Object -> Maybe *\n     *\n     *      //  getStateCode :: Maybe String -> Maybe String\n     *      var getStateCode = R.pipeK(\n     *        parseJson,\n     *        get('user'),\n     *        get('address'),\n     *        get('state'),\n     *        R.compose(Maybe.of, R.toUpper)\n     *      );\n     *\n     *      getStateCode(Maybe.of('{\"user\":{\"address\":{\"state\":\"ny\"}}}'));\n     *      //=> Just('NY')\n     *      getStateCode(Maybe.of('[Invalid JSON]'));\n     *      //=> Nothing()\n     */\n    var pipeK = function pipeK() {\n        return composeK.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Returns the string representation of the given value. `eval`'ing the output\n     * should result in a value equivalent to the input value. Many of the built-in\n     * `toString` methods do not satisfy this requirement.\n     *\n     * If the given value is an `[object Object]` with a `toString` method other\n     * than `Object.prototype.toString`, this method is invoked with no arguments\n     * to produce the return value. This means user-defined constructor functions\n     * can provide a suitable `toString` method. For example:\n     *\n     *     function Point(x, y) {\n     *       this.x = x;\n     *       this.y = y;\n     *     }\n     *\n     *     Point.prototype.toString = function() {\n     *       return 'new Point(' + this.x + ', ' + this.y + ')';\n     *     };\n     *\n     *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category String\n     * @sig * -> String\n     * @param {*} val\n     * @return {String}\n     * @example\n     *\n     *      R.toString(42); //=> '42'\n     *      R.toString('abc'); //=> '\"abc\"'\n     *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n     *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n     *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n     */\n    var toString = _curry1(function toString(val) {\n        return _toString(val, []);\n    });\n\n    /**\n     * Returns a new list containing only one copy of each element in the original\n     * list, based upon the value returned by applying the supplied function to\n     * each list element. Prefers the first item if the supplied function produces\n     * the same value on two items. `R.equals` is used for comparison.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig (a -> b) -> [a] -> [a]\n     * @param {Function} fn A function used to produce a value to use during comparisons.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n     */\n    /* globals Set */\n    // distinguishing between +0 and -0 is not supported by Set\n    /* falls through */\n    // these types can all utilise Set\n    // prevent scan for null by tracking as a boolean\n    /* falls through */\n    // scan through all previously applied items\n    var uniqBy = _curry2(/* globals Set */\n    typeof Set === 'undefined' ? function uniqBy(fn, list) {\n        var idx = 0;\n        var applied = [];\n        var result = [];\n        var appliedItem, item;\n        while (idx < list.length) {\n            item = list[idx];\n            appliedItem = fn(item);\n            if (!_contains(appliedItem, applied)) {\n                result.push(item);\n                applied.push(appliedItem);\n            }\n            idx += 1;\n        }\n        return result;\n    } : function uniqBySet(fn, list) {\n        var set = new Set();\n        var applied = [];\n        var prevSetSize = 0;\n        var result = [];\n        var nullExists = false;\n        var negZeroExists = false;\n        var idx = 0;\n        var appliedItem, item, newSetSize;\n        while (idx < list.length) {\n            item = list[idx];\n            appliedItem = fn(item);\n            switch (typeof appliedItem) {\n            case 'number':\n                // distinguishing between +0 and -0 is not supported by Set\n                if (appliedItem === 0 && !negZeroExists && 1 / appliedItem === -Infinity) {\n                    negZeroExists = true;\n                    result.push(item);\n                    break;\n                }\n            /* falls through */\n            case 'string':\n            case 'boolean':\n            case 'function':\n            case 'undefined':\n                // these types can all utilise Set\n                set.add(appliedItem);\n                newSetSize = set.size;\n                if (newSetSize > prevSetSize) {\n                    result.push(item);\n                    prevSetSize = newSetSize;\n                }\n                break;\n            case 'object':\n                if (appliedItem === null) {\n                    if (!nullExists) {\n                        // prevent scan for null by tracking as a boolean\n                        nullExists = true;\n                        result.push(null);\n                    }\n                    break;\n                }\n            /* falls through */\n            default:\n                // scan through all previously applied items\n                if (!_contains(appliedItem, applied)) {\n                    applied.push(appliedItem);\n                    result.push(item);\n                }\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new list without values in the first argument.\n     * `R.equals` is used to determine equality.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since 0.19.1\n     * @since 0.19.0\n     * @category List\n     * @sig [a] -> [a] -> [a]\n     * @param {Array} list1 The values to be removed from `list2`.\n     * @param {Array} list2 The array to remove values from.\n     * @return {Array} The new array without values in `list1`.\n     * @see R.transduce\n     * @example\n     *\n     *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n     */\n    var without = _curry2(function (xs, list) {\n        return reject(flip(_contains)(xs), list);\n    });\n\n    /**\n     * Takes a function `f` and returns a function `g` such that:\n     *\n     *   - applying `g` to zero or more arguments will give __true__ if applying\n     *     the same arguments to `f` gives a logical __false__ value; and\n     *\n     *   - applying `g` to zero or more arguments will give __false__ if applying\n     *     the same arguments to `f` gives a logical __true__ value.\n     *\n     * `R.complement` will work on all other functors as well.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category Logic\n     * @sig (*... -> *) -> (*... -> Boolean)\n     * @param {Function} f\n     * @return {Function}\n     * @see R.not\n     * @example\n     *\n     *      var isEven = n => n % 2 === 0;\n     *      var isOdd = R.complement(isEven);\n     *      isOdd(21); //=> true\n     *      isOdd(42); //=> false\n     */\n    var complement = lift(not);\n\n    /**\n     * Turns a named method with a specified arity into a function that can be\n     * called directly supplied with arguments and a target object.\n     *\n     * The returned function is curried and accepts `arity + 1` parameters where\n     * the final parameter is the target object.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n     * @param {Number} arity Number of arguments the returned function should take\n     *        before the target object.\n     * @param {String} method Name of the method to call.\n     * @return {Function} A new curried function.\n     * @example\n     *\n     *      var sliceFrom = R.invoker(1, 'slice');\n     *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n     *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n     *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n     */\n    var invoker = _curry2(function invoker(arity, method) {\n        return curryN(arity + 1, function () {\n            var target = arguments[arity];\n            if (target != null && is(Function, target[method])) {\n                return target[method].apply(target, _slice(arguments, 0, arity));\n            }\n            throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n        });\n    });\n\n    /**\n     * Returns a string made by inserting the `separator` between each element and\n     * concatenating all the elements into a single string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig String -> [a] -> String\n     * @param {Number|String} separator The string used to separate the elements.\n     * @param {Array} xs The elements to join into a string.\n     * @return {String} str The string made by concatenating `xs` with `separator`.\n     * @see R.split\n     * @example\n     *\n     *      var spacer = R.join(' ');\n     *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n     *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n     */\n    var join = invoker(1, 'join');\n\n    /**\n     * Creates a new function that, when invoked, caches the result of calling `fn`\n     * for a given argument set and returns the result. Subsequent calls to the\n     * memoized `fn` with the same argument set will not result in an additional\n     * call to `fn`; instead, the cached result for that set of arguments will be\n     * returned.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (*... -> a) -> (*... -> a)\n     * @param {Function} fn The function to memoize.\n     * @return {Function} Memoized version of `fn`.\n     * @example\n     *\n     *      var count = 0;\n     *      var factorial = R.memoize(n => {\n     *        count += 1;\n     *        return R.product(R.range(1, n + 1));\n     *      });\n     *      factorial(5); //=> 120\n     *      factorial(5); //=> 120\n     *      factorial(5); //=> 120\n     *      count; //=> 1\n     */\n    var memoize = _curry1(function memoize(fn) {\n        var cache = {};\n        return _arity(fn.length, function () {\n            var key = toString(arguments);\n            if (!_has(key, cache)) {\n                cache[key] = fn.apply(this, arguments);\n            }\n            return cache[key];\n        });\n    });\n\n    /**\n     * Splits a string into an array of strings based on the given\n     * separator.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category String\n     * @sig (String | RegExp) -> String -> [String]\n     * @param {String|RegExp} sep The pattern.\n     * @param {String} str The string to separate into an array.\n     * @return {Array} The array of strings from `str` separated by `str`.\n     * @see R.join\n     * @example\n     *\n     *      var pathComponents = R.split('/');\n     *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n     *\n     *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n     */\n    var split = invoker(1, 'split');\n\n    /**\n     * Determines whether a given string matches a given regular expression.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category String\n     * @sig RegExp -> String -> Boolean\n     * @param {RegExp} pattern\n     * @param {String} str\n     * @return {Boolean}\n     * @see R.match\n     * @example\n     *\n     *      R.test(/^x/, 'xyz'); //=> true\n     *      R.test(/^y/, 'xyz'); //=> false\n     */\n    var test = _curry2(function test(pattern, str) {\n        if (!_isRegExp(pattern)) {\n            throw new TypeError('\\u2018test\\u2019 requires a value of type RegExp as its first argument; received ' + toString(pattern));\n        }\n        return _cloneRegExp(pattern).test(str);\n    });\n\n    /**\n     * The lower case version of a string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to lower case.\n     * @return {String} The lower case version of `str`.\n     * @see R.toUpper\n     * @example\n     *\n     *      R.toLower('XYZ'); //=> 'xyz'\n     */\n    var toLower = invoker(0, 'toLowerCase');\n\n    /**\n     * The upper case version of a string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to upper case.\n     * @return {String} The upper case version of `str`.\n     * @see R.toLower\n     * @example\n     *\n     *      R.toUpper('abc'); //=> 'ABC'\n     */\n    var toUpper = invoker(0, 'toUpperCase');\n\n    /**\n     * Returns a new list containing only one copy of each element in the original\n     * list. `R.equals` is used to determine equality.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [a]\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n     *      R.uniq([1, '1']);     //=> [1, '1']\n     *      R.uniq([[42], [42]]); //=> [[42]]\n     */\n    var uniq = uniqBy(identity);\n\n    /**\n     * Returns the result of concatenating the given lists or strings.\n     *\n     * Dispatches to the `concat` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [a] -> [a]\n     * @sig String -> String -> String\n     * @param {Array|String} a\n     * @param {Array|String} b\n     * @return {Array|String}\n     *\n     * @example\n     *\n     *      R.concat([], []); //=> []\n     *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n     *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n     */\n    var concat = flip(invoker(1, 'concat'));\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of those\n     * elements common to both lists.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig [*] -> [*] -> [*]\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The list of elements found in both `list1` and `list2`.\n     * @see R.intersectionWith\n     * @example\n     *\n     *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n     */\n    var intersection = _curry2(function intersection(list1, list2) {\n        return uniq(_filter(flip(_contains)(list1), list2));\n    });\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements contained in the first or\n     * second list, but not both.\n     *\n     * @func\n     * @memberOf R\n     * @since 0.19.1\n     * @since 0.19.0\n     * @category Relation\n     * @sig [*] -> [*] -> [*]\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The elements in `list1` or `list2`, but not both.\n     * @see R.symmetricDifferenceWith\n     * @example\n     *\n     *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n     *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n     */\n    var symmetricDifference = _curry2(function symmetricDifference(list1, list2) {\n        return concat(difference(list1, list2), difference(list2, list1));\n    });\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements contained in the first or\n     * second list, but not both. Duplication is determined according to the value\n     * returned by applying the supplied predicate to two list elements.\n     *\n     * @func\n     * @memberOf R\n     * @since 0.19.1\n     * @since 0.19.0\n     * @category Relation\n     * @sig (a -> a -> Boolean) -> [a] -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The elements in `list1` or `list2`, but not both.\n     * @see R.symmetricDifference\n     * @example\n     *\n     *      var eqA = R.eqBy(R.prop('a'));\n     *      var l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n     *      var l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n     *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n     */\n    var symmetricDifferenceWith = _curry3(function symmetricDifferenceWith(pred, list1, list2) {\n        return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n    });\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of the elements\n     * of each list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig [*] -> [*] -> [*]\n     * @param {Array} as The first list.\n     * @param {Array} bs The second list.\n     * @return {Array} The first and second lists concatenated, with\n     *         duplicates removed.\n     * @example\n     *\n     *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n     */\n    var union = _curry2(compose(uniq, _concat));\n\n    var R = {\n        F: F,\n        T: T,\n        __: __,\n        add: add,\n        addIndex: addIndex,\n        adjust: adjust,\n        all: all,\n        allPass: allPass,\n        allUniq: allUniq,\n        always: always,\n        and: and,\n        any: any,\n        anyPass: anyPass,\n        ap: ap,\n        aperture: aperture,\n        append: append,\n        apply: apply,\n        assoc: assoc,\n        assocPath: assocPath,\n        binary: binary,\n        bind: bind,\n        both: both,\n        call: call,\n        chain: chain,\n        clone: clone,\n        commute: commute,\n        commuteMap: commuteMap,\n        comparator: comparator,\n        complement: complement,\n        compose: compose,\n        composeK: composeK,\n        composeP: composeP,\n        concat: concat,\n        cond: cond,\n        construct: construct,\n        constructN: constructN,\n        contains: contains,\n        converge: converge,\n        countBy: countBy,\n        curry: curry,\n        curryN: curryN,\n        dec: dec,\n        defaultTo: defaultTo,\n        difference: difference,\n        differenceWith: differenceWith,\n        dissoc: dissoc,\n        dissocPath: dissocPath,\n        divide: divide,\n        drop: drop,\n        dropLast: dropLast,\n        dropLastWhile: dropLastWhile,\n        dropRepeats: dropRepeats,\n        dropRepeatsWith: dropRepeatsWith,\n        dropWhile: dropWhile,\n        either: either,\n        empty: empty,\n        eqBy: eqBy,\n        eqProps: eqProps,\n        equals: equals,\n        evolve: evolve,\n        filter: filter,\n        find: find,\n        findIndex: findIndex,\n        findLast: findLast,\n        findLastIndex: findLastIndex,\n        flatten: flatten,\n        flip: flip,\n        forEach: forEach,\n        fromPairs: fromPairs,\n        groupBy: groupBy,\n        gt: gt,\n        gte: gte,\n        has: has,\n        hasIn: hasIn,\n        head: head,\n        identical: identical,\n        identity: identity,\n        ifElse: ifElse,\n        inc: inc,\n        indexBy: indexBy,\n        indexOf: indexOf,\n        init: init,\n        insert: insert,\n        insertAll: insertAll,\n        intersection: intersection,\n        intersectionWith: intersectionWith,\n        intersperse: intersperse,\n        into: into,\n        invert: invert,\n        invertObj: invertObj,\n        invoker: invoker,\n        is: is,\n        isArrayLike: isArrayLike,\n        isEmpty: isEmpty,\n        isNil: isNil,\n        join: join,\n        juxt: juxt,\n        keys: keys,\n        keysIn: keysIn,\n        last: last,\n        lastIndexOf: lastIndexOf,\n        length: length,\n        lens: lens,\n        lensIndex: lensIndex,\n        lensPath: lensPath,\n        lensProp: lensProp,\n        lift: lift,\n        liftN: liftN,\n        lt: lt,\n        lte: lte,\n        map: map,\n        mapAccum: mapAccum,\n        mapAccumRight: mapAccumRight,\n        mapObjIndexed: mapObjIndexed,\n        match: match,\n        mathMod: mathMod,\n        max: max,\n        maxBy: maxBy,\n        mean: mean,\n        median: median,\n        memoize: memoize,\n        merge: merge,\n        mergeAll: mergeAll,\n        mergeWith: mergeWith,\n        mergeWithKey: mergeWithKey,\n        min: min,\n        minBy: minBy,\n        modulo: modulo,\n        multiply: multiply,\n        nAry: nAry,\n        negate: negate,\n        none: none,\n        not: not,\n        nth: nth,\n        nthArg: nthArg,\n        objOf: objOf,\n        of: of,\n        omit: omit,\n        once: once,\n        or: or,\n        over: over,\n        pair: pair,\n        partial: partial,\n        partialRight: partialRight,\n        partition: partition,\n        path: path,\n        pathEq: pathEq,\n        pathOr: pathOr,\n        pathSatisfies: pathSatisfies,\n        pick: pick,\n        pickAll: pickAll,\n        pickBy: pickBy,\n        pipe: pipe,\n        pipeK: pipeK,\n        pipeP: pipeP,\n        pluck: pluck,\n        prepend: prepend,\n        product: product,\n        project: project,\n        prop: prop,\n        propEq: propEq,\n        propIs: propIs,\n        propOr: propOr,\n        propSatisfies: propSatisfies,\n        props: props,\n        range: range,\n        reduce: reduce,\n        reduceRight: reduceRight,\n        reduced: reduced,\n        reject: reject,\n        remove: remove,\n        repeat: repeat,\n        replace: replace,\n        reverse: reverse,\n        scan: scan,\n        sequence: sequence,\n        set: set,\n        slice: slice,\n        sort: sort,\n        sortBy: sortBy,\n        split: split,\n        splitAt: splitAt,\n        splitEvery: splitEvery,\n        splitWhen: splitWhen,\n        subtract: subtract,\n        sum: sum,\n        symmetricDifference: symmetricDifference,\n        symmetricDifferenceWith: symmetricDifferenceWith,\n        tail: tail,\n        take: take,\n        takeLast: takeLast,\n        takeLastWhile: takeLastWhile,\n        takeWhile: takeWhile,\n        tap: tap,\n        test: test,\n        times: times,\n        toLower: toLower,\n        toPairs: toPairs,\n        toPairsIn: toPairsIn,\n        toString: toString,\n        toUpper: toUpper,\n        transduce: transduce,\n        transpose: transpose,\n        traverse: traverse,\n        trim: trim,\n        type: type,\n        unapply: unapply,\n        unary: unary,\n        uncurryN: uncurryN,\n        unfold: unfold,\n        union: union,\n        unionWith: unionWith,\n        uniq: uniq,\n        uniqBy: uniqBy,\n        uniqWith: uniqWith,\n        unless: unless,\n        unnest: unnest,\n        update: update,\n        useWith: useWith,\n        values: values,\n        valuesIn: valuesIn,\n        view: view,\n        when: when,\n        where: where,\n        whereEq: whereEq,\n        without: without,\n        wrap: wrap,\n        xprod: xprod,\n        zip: zip,\n        zipObj: zipObj,\n        zipWith: zipWith\n    };\n  /* eslint-env amd */\n\n  /* TEST_ENTRY_POINT */\n\n  if (typeof exports === 'object') {\n    module.exports = R;\n  } else if (typeof define === 'function' && define.amd) {\n    define(function() { return R; });\n  } else {\n    this.R = R;\n  }\n\n}.call(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ramda/dist/ramda.js\n ** module id = 14\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactReconciler\n */\n\n'use strict';\n\nvar ReactRef = require('./ReactRef');\n\n/**\n * Helper to call ReactRef.attachRefs with this composite component, split out\n * to avoid allocations in the transaction mount-ready queue.\n */\nfunction attachRefs() {\n  ReactRef.attachRefs(this, this._currentElement);\n}\n\nvar ReactReconciler = {\n\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {string} rootID DOM ID of the root node.\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function (internalInstance, rootID, transaction, context) {\n    var markup = internalInstance.mountComponent(rootID, transaction, context);\n    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {\n      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n    }\n    return markup;\n  },\n\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function (internalInstance) {\n    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);\n    internalInstance.unmountComponent();\n  },\n\n  /**\n   * Update a component using a new element.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactElement} nextElement\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   * @internal\n   */\n  receiveComponent: function (internalInstance, nextElement, transaction, context) {\n    var prevElement = internalInstance._currentElement;\n\n    if (nextElement === prevElement && context === internalInstance._context) {\n      // Since elements are immutable after the owner is rendered,\n      // we can do a cheap identity compare here to determine if this is a\n      // superfluous reconcile. It's possible for state to be mutable but such\n      // change should trigger an update of the owner which would recreate\n      // the element. We explicitly check for the existence of an owner since\n      // it's possible for an element created outside a composite to be\n      // deeply mutated and reused.\n\n      // TODO: Bailing out early is just a perf optimization right?\n      // TODO: Removing the return statement should affect correctness?\n      return;\n    }\n\n    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);\n\n    if (refsChanged) {\n      ReactRef.detachRefs(internalInstance, prevElement);\n    }\n\n    internalInstance.receiveComponent(nextElement, transaction, context);\n\n    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {\n      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n    }\n  },\n\n  /**\n   * Flush any dirty changes in a component.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function (internalInstance, transaction) {\n    internalInstance.performUpdateIfNecessary(transaction);\n  }\n\n};\n\nmodule.exports = ReactReconciler;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactReconciler.js\n ** module id = 15\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar PooledClass = require('./PooledClass');\n\nvar assign = require('./Object.assign');\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar EventInterface = {\n  type: null,\n  target: null,\n  // currentTarget is set when dispatching; no use in copying it here\n  currentTarget: emptyFunction.thatReturnsNull,\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function (event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n\n/**\n * Synthetic events are dispatched by event plugins, typically in response to a\n * top-level event delegation handler.\n *\n * These systems should generally use pooling to reduce the frequency of garbage\n * collection. The system should check `isPersistent` to determine whether the\n * event should be released into the pool after being dispatched. Users that\n * need a persisted event should invoke `persist`.\n *\n * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n * normalizing browser quirks. Subclasses do not necessarily have to implement a\n * DOM interface; custom application-specific events can also subclass this.\n *\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n */\nfunction SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  this.dispatchConfig = dispatchConfig;\n  this.dispatchMarker = dispatchMarker;\n  this.nativeEvent = nativeEvent;\n\n  var Interface = this.constructor.Interface;\n  for (var propName in Interface) {\n    if (!Interface.hasOwnProperty(propName)) {\n      continue;\n    }\n    var normalize = Interface[propName];\n    if (normalize) {\n      this[propName] = normalize(nativeEvent);\n    } else {\n      if (propName === 'target') {\n        this.target = nativeEventTarget;\n      } else {\n        this[propName] = nativeEvent[propName];\n      }\n    }\n  }\n\n  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;\n  if (defaultPrevented) {\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  } else {\n    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;\n  }\n  this.isPropagationStopped = emptyFunction.thatReturnsFalse;\n}\n\nassign(SyntheticEvent.prototype, {\n\n  preventDefault: function () {\n    this.defaultPrevented = true;\n    var event = this.nativeEvent;\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\\'re ' + 'seeing this, you\\'re calling `preventDefault` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;\n    }\n    if (!event) {\n      return;\n    }\n\n    if (event.preventDefault) {\n      event.preventDefault();\n    } else {\n      event.returnValue = false;\n    }\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  },\n\n  stopPropagation: function () {\n    var event = this.nativeEvent;\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\\'re ' + 'seeing this, you\\'re calling `stopPropagation` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;\n    }\n    if (!event) {\n      return;\n    }\n\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    } else {\n      event.cancelBubble = true;\n    }\n    this.isPropagationStopped = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n   * them back into the pool. This allows a way to hold onto a reference that\n   * won't be added back into the pool.\n   */\n  persist: function () {\n    this.isPersistent = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * Checks if this event should be released back into the pool.\n   *\n   * @return {boolean} True if this should not be released, false otherwise.\n   */\n  isPersistent: emptyFunction.thatReturnsFalse,\n\n  /**\n   * `PooledClass` looks for `destructor` on each instance it releases.\n   */\n  destructor: function () {\n    var Interface = this.constructor.Interface;\n    for (var propName in Interface) {\n      this[propName] = null;\n    }\n    this.dispatchConfig = null;\n    this.dispatchMarker = null;\n    this.nativeEvent = null;\n  }\n\n});\n\nSyntheticEvent.Interface = EventInterface;\n\n/**\n * Helper to reduce boilerplate when creating subclasses.\n *\n * @param {function} Class\n * @param {?object} Interface\n */\nSyntheticEvent.augmentClass = function (Class, Interface) {\n  var Super = this;\n\n  var prototype = Object.create(Super.prototype);\n  assign(prototype, Class.prototype);\n  Class.prototype = prototype;\n  Class.prototype.constructor = Class;\n\n  Class.Interface = assign({}, Super.Interface, Interface);\n  Class.augmentClass = Super.augmentClass;\n\n  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);\n};\n\nPooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);\n\nmodule.exports = SyntheticEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticEvent.js\n ** module id = 16\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMProperty\n * @typechecks static-only\n */\n\n'use strict';\n\nvar invariant = require('fbjs/lib/invariant');\n\nfunction checkMask(value, bitmask) {\n  return (value & bitmask) === bitmask;\n}\n\nvar DOMPropertyInjection = {\n  /**\n   * Mapping from normalized, camelcased property names to a configuration that\n   * specifies how the associated DOM property should be accessed or rendered.\n   */\n  MUST_USE_ATTRIBUTE: 0x1,\n  MUST_USE_PROPERTY: 0x2,\n  HAS_SIDE_EFFECTS: 0x4,\n  HAS_BOOLEAN_VALUE: 0x8,\n  HAS_NUMERIC_VALUE: 0x10,\n  HAS_POSITIVE_NUMERIC_VALUE: 0x20 | 0x10,\n  HAS_OVERLOADED_BOOLEAN_VALUE: 0x40,\n\n  /**\n   * Inject some specialized knowledge about the DOM. This takes a config object\n   * with the following properties:\n   *\n   * isCustomAttribute: function that given an attribute name will return true\n   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*\n   * attributes where it's impossible to enumerate all of the possible\n   * attribute names,\n   *\n   * Properties: object mapping DOM property name to one of the\n   * DOMPropertyInjection constants or null. If your attribute isn't in here,\n   * it won't get written to the DOM.\n   *\n   * DOMAttributeNames: object mapping React attribute name to the DOM\n   * attribute name. Attribute names not specified use the **lowercase**\n   * normalized name.\n   *\n   * DOMAttributeNamespaces: object mapping React attribute name to the DOM\n   * attribute namespace URL. (Attribute names not specified use no namespace.)\n   *\n   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.\n   * Property names not specified use the normalized name.\n   *\n   * DOMMutationMethods: Properties that require special mutation methods. If\n   * `value` is undefined, the mutation method should unset the property.\n   *\n   * @param {object} domPropertyConfig the config as described above.\n   */\n  injectDOMPropertyConfig: function (domPropertyConfig) {\n    var Injection = DOMPropertyInjection;\n    var Properties = domPropertyConfig.Properties || {};\n    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};\n    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};\n    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};\n    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};\n\n    if (domPropertyConfig.isCustomAttribute) {\n      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);\n    }\n\n    for (var propName in Properties) {\n      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\\'re trying to inject DOM property ' + '\\'%s\\' which has already been injected. You may be accidentally ' + 'injecting the same DOM property config twice, or you may be ' + 'injecting two configs that have conflicting property names.', propName) : invariant(false) : undefined;\n\n      var lowerCased = propName.toLowerCase();\n      var propConfig = Properties[propName];\n\n      var propertyInfo = {\n        attributeName: lowerCased,\n        attributeNamespace: null,\n        propertyName: propName,\n        mutationMethod: null,\n\n        mustUseAttribute: checkMask(propConfig, Injection.MUST_USE_ATTRIBUTE),\n        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),\n        hasSideEffects: checkMask(propConfig, Injection.HAS_SIDE_EFFECTS),\n        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),\n        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),\n        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),\n        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)\n      };\n\n      !(!propertyInfo.mustUseAttribute || !propertyInfo.mustUseProperty) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Cannot require using both attribute and property: %s', propName) : invariant(false) : undefined;\n      !(propertyInfo.mustUseProperty || !propertyInfo.hasSideEffects) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Properties that have side effects must use property: %s', propName) : invariant(false) : undefined;\n      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or ' + 'numeric value, but not a combination: %s', propName) : invariant(false) : undefined;\n\n      if (process.env.NODE_ENV !== 'production') {\n        DOMProperty.getPossibleStandardName[lowerCased] = propName;\n      }\n\n      if (DOMAttributeNames.hasOwnProperty(propName)) {\n        var attributeName = DOMAttributeNames[propName];\n        propertyInfo.attributeName = attributeName;\n        if (process.env.NODE_ENV !== 'production') {\n          DOMProperty.getPossibleStandardName[attributeName] = propName;\n        }\n      }\n\n      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {\n        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];\n      }\n\n      if (DOMPropertyNames.hasOwnProperty(propName)) {\n        propertyInfo.propertyName = DOMPropertyNames[propName];\n      }\n\n      if (DOMMutationMethods.hasOwnProperty(propName)) {\n        propertyInfo.mutationMethod = DOMMutationMethods[propName];\n      }\n\n      DOMProperty.properties[propName] = propertyInfo;\n    }\n  }\n};\nvar defaultValueCache = {};\n\n/**\n * DOMProperty exports lookup objects that can be used like functions:\n *\n *   > DOMProperty.isValid['id']\n *   true\n *   > DOMProperty.isValid['foobar']\n *   undefined\n *\n * Although this may be confusing, it performs better in general.\n *\n * @see http://jsperf.com/key-exists\n * @see http://jsperf.com/key-missing\n */\nvar DOMProperty = {\n\n  ID_ATTRIBUTE_NAME: 'data-reactid',\n\n  /**\n   * Map from property \"standard name\" to an object with info about how to set\n   * the property in the DOM. Each object contains:\n   *\n   * attributeName:\n   *   Used when rendering markup or with `*Attribute()`.\n   * attributeNamespace\n   * propertyName:\n   *   Used on DOM node instances. (This includes properties that mutate due to\n   *   external factors.)\n   * mutationMethod:\n   *   If non-null, used instead of the property or `setAttribute()` after\n   *   initial render.\n   * mustUseAttribute:\n   *   Whether the property must be accessed and mutated using `*Attribute()`.\n   *   (This includes anything that fails `<propName> in <element>`.)\n   * mustUseProperty:\n   *   Whether the property must be accessed and mutated as an object property.\n   * hasSideEffects:\n   *   Whether or not setting a value causes side effects such as triggering\n   *   resources to be loaded or text selection changes. If true, we read from\n   *   the DOM before updating to ensure that the value is only set if it has\n   *   changed.\n   * hasBooleanValue:\n   *   Whether the property should be removed when set to a falsey value.\n   * hasNumericValue:\n   *   Whether the property must be numeric or parse as a numeric and should be\n   *   removed when set to a falsey value.\n   * hasPositiveNumericValue:\n   *   Whether the property must be positive numeric or parse as a positive\n   *   numeric and should be removed when set to a falsey value.\n   * hasOverloadedBooleanValue:\n   *   Whether the property can be used as a flag as well as with a value.\n   *   Removed when strictly equal to false; present without a value when\n   *   strictly equal to true; present with a value otherwise.\n   */\n  properties: {},\n\n  /**\n   * Mapping from lowercase property names to the properly cased version, used\n   * to warn in the case of missing properties. Available only in __DEV__.\n   * @type {Object}\n   */\n  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? {} : null,\n\n  /**\n   * All of the isCustomAttribute() functions that have been injected.\n   */\n  _isCustomAttributeFunctions: [],\n\n  /**\n   * Checks whether a property name is a custom attribute.\n   * @method\n   */\n  isCustomAttribute: function (attributeName) {\n    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {\n      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];\n      if (isCustomAttributeFn(attributeName)) {\n        return true;\n      }\n    }\n    return false;\n  },\n\n  /**\n   * Returns the default property value for a DOM property (i.e., not an\n   * attribute). Most default values are '' or false, but not all. Worse yet,\n   * some (in particular, `type`) vary depending on the type of element.\n   *\n   * TODO: Is it better to grab all the possible properties when creating an\n   * element to avoid having to create the same element twice?\n   */\n  getDefaultValueForProperty: function (nodeName, prop) {\n    var nodeDefaults = defaultValueCache[nodeName];\n    var testElement;\n    if (!nodeDefaults) {\n      defaultValueCache[nodeName] = nodeDefaults = {};\n    }\n    if (!(prop in nodeDefaults)) {\n      testElement = document.createElement(nodeName);\n      nodeDefaults[prop] = testElement[prop];\n    }\n    return nodeDefaults[prop];\n  },\n\n  injection: DOMPropertyInjection\n};\n\nmodule.exports = DOMProperty;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/DOMProperty.js\n ** module id = 17\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInstanceHandles\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactRootIndex = require('./ReactRootIndex');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar SEPARATOR = '.';\nvar SEPARATOR_LENGTH = SEPARATOR.length;\n\n/**\n * Maximum depth of traversals before we consider the possibility of a bad ID.\n */\nvar MAX_TREE_DEPTH = 10000;\n\n/**\n * Creates a DOM ID prefix to use when mounting React components.\n *\n * @param {number} index A unique integer\n * @return {string} React root ID.\n * @internal\n */\nfunction getReactRootIDString(index) {\n  return SEPARATOR + index.toString(36);\n}\n\n/**\n * Checks if a character in the supplied ID is a separator or the end.\n *\n * @param {string} id A React DOM ID.\n * @param {number} index Index of the character to check.\n * @return {boolean} True if the character is a separator or end of the ID.\n * @private\n */\nfunction isBoundary(id, index) {\n  return id.charAt(index) === SEPARATOR || index === id.length;\n}\n\n/**\n * Checks if the supplied string is a valid React DOM ID.\n *\n * @param {string} id A React DOM ID, maybe.\n * @return {boolean} True if the string is a valid React DOM ID.\n * @private\n */\nfunction isValidID(id) {\n  return id === '' || id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR;\n}\n\n/**\n * Checks if the first ID is an ancestor of or equal to the second ID.\n *\n * @param {string} ancestorID\n * @param {string} descendantID\n * @return {boolean} True if `ancestorID` is an ancestor of `descendantID`.\n * @internal\n */\nfunction isAncestorIDOf(ancestorID, descendantID) {\n  return descendantID.indexOf(ancestorID) === 0 && isBoundary(descendantID, ancestorID.length);\n}\n\n/**\n * Gets the parent ID of the supplied React DOM ID, `id`.\n *\n * @param {string} id ID of a component.\n * @return {string} ID of the parent, or an empty string.\n * @private\n */\nfunction getParentID(id) {\n  return id ? id.substr(0, id.lastIndexOf(SEPARATOR)) : '';\n}\n\n/**\n * Gets the next DOM ID on the tree path from the supplied `ancestorID` to the\n * supplied `destinationID`. If they are equal, the ID is returned.\n *\n * @param {string} ancestorID ID of an ancestor node of `destinationID`.\n * @param {string} destinationID ID of the destination node.\n * @return {string} Next ID on the path from `ancestorID` to `destinationID`.\n * @private\n */\nfunction getNextDescendantID(ancestorID, destinationID) {\n  !(isValidID(ancestorID) && isValidID(destinationID)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNextDescendantID(%s, %s): Received an invalid React DOM ID.', ancestorID, destinationID) : invariant(false) : undefined;\n  !isAncestorIDOf(ancestorID, destinationID) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNextDescendantID(...): React has made an invalid assumption about ' + 'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.', ancestorID, destinationID) : invariant(false) : undefined;\n  if (ancestorID === destinationID) {\n    return ancestorID;\n  }\n  // Skip over the ancestor and the immediate separator. Traverse until we hit\n  // another separator or we reach the end of `destinationID`.\n  var start = ancestorID.length + SEPARATOR_LENGTH;\n  var i;\n  for (i = start; i < destinationID.length; i++) {\n    if (isBoundary(destinationID, i)) {\n      break;\n    }\n  }\n  return destinationID.substr(0, i);\n}\n\n/**\n * Gets the nearest common ancestor ID of two IDs.\n *\n * Using this ID scheme, the nearest common ancestor ID is the longest common\n * prefix of the two IDs that immediately preceded a \"marker\" in both strings.\n *\n * @param {string} oneID\n * @param {string} twoID\n * @return {string} Nearest common ancestor ID, or the empty string if none.\n * @private\n */\nfunction getFirstCommonAncestorID(oneID, twoID) {\n  var minLength = Math.min(oneID.length, twoID.length);\n  if (minLength === 0) {\n    return '';\n  }\n  var lastCommonMarkerIndex = 0;\n  // Use `<=` to traverse until the \"EOL\" of the shorter string.\n  for (var i = 0; i <= minLength; i++) {\n    if (isBoundary(oneID, i) && isBoundary(twoID, i)) {\n      lastCommonMarkerIndex = i;\n    } else if (oneID.charAt(i) !== twoID.charAt(i)) {\n      break;\n    }\n  }\n  var longestCommonID = oneID.substr(0, lastCommonMarkerIndex);\n  !isValidID(longestCommonID) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s', oneID, twoID, longestCommonID) : invariant(false) : undefined;\n  return longestCommonID;\n}\n\n/**\n * Traverses the parent path between two IDs (either up or down). The IDs must\n * not be the same, and there must exist a parent path between them. If the\n * callback returns `false`, traversal is stopped.\n *\n * @param {?string} start ID at which to start traversal.\n * @param {?string} stop ID at which to end traversal.\n * @param {function} cb Callback to invoke each ID with.\n * @param {*} arg Argument to invoke the callback with.\n * @param {?boolean} skipFirst Whether or not to skip the first node.\n * @param {?boolean} skipLast Whether or not to skip the last node.\n * @private\n */\nfunction traverseParentPath(start, stop, cb, arg, skipFirst, skipLast) {\n  start = start || '';\n  stop = stop || '';\n  !(start !== stop) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.', start) : invariant(false) : undefined;\n  var traverseUp = isAncestorIDOf(stop, start);\n  !(traverseUp || isAncestorIDOf(start, stop)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' + 'not have a parent path.', start, stop) : invariant(false) : undefined;\n  // Traverse from `start` to `stop` one depth at a time.\n  var depth = 0;\n  var traverse = traverseUp ? getParentID : getNextDescendantID;\n  for (var id = start;; /* until break */id = traverse(id, stop)) {\n    var ret;\n    if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {\n      ret = cb(id, traverseUp, arg);\n    }\n    if (ret === false || id === stop) {\n      // Only break //after// visiting `stop`.\n      break;\n    }\n    !(depth++ < MAX_TREE_DEPTH) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' + 'traversing the React DOM ID tree. This may be due to malformed IDs: %s', start, stop, id) : invariant(false) : undefined;\n  }\n}\n\n/**\n * Manages the IDs assigned to DOM representations of React components. This\n * uses a specific scheme in order to traverse the DOM efficiently (e.g. in\n * order to simulate events).\n *\n * @internal\n */\nvar ReactInstanceHandles = {\n\n  /**\n   * Constructs a React root ID\n   * @return {string} A React root ID.\n   */\n  createReactRootID: function () {\n    return getReactRootIDString(ReactRootIndex.createReactRootIndex());\n  },\n\n  /**\n   * Constructs a React ID by joining a root ID with a name.\n   *\n   * @param {string} rootID Root ID of a parent component.\n   * @param {string} name A component's name (as flattened children).\n   * @return {string} A React ID.\n   * @internal\n   */\n  createReactID: function (rootID, name) {\n    return rootID + name;\n  },\n\n  /**\n   * Gets the DOM ID of the React component that is the root of the tree that\n   * contains the React component with the supplied DOM ID.\n   *\n   * @param {string} id DOM ID of a React component.\n   * @return {?string} DOM ID of the React component that is the root.\n   * @internal\n   */\n  getReactRootIDFromNodeID: function (id) {\n    if (id && id.charAt(0) === SEPARATOR && id.length > 1) {\n      var index = id.indexOf(SEPARATOR, 1);\n      return index > -1 ? id.substr(0, index) : id;\n    }\n    return null;\n  },\n\n  /**\n   * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that\n   * should would receive a `mouseEnter` or `mouseLeave` event.\n   *\n   * NOTE: Does not invoke the callback on the nearest common ancestor because\n   * nothing \"entered\" or \"left\" that element.\n   *\n   * @param {string} leaveID ID being left.\n   * @param {string} enterID ID being entered.\n   * @param {function} cb Callback to invoke on each entered/left ID.\n   * @param {*} upArg Argument to invoke the callback with on left IDs.\n   * @param {*} downArg Argument to invoke the callback with on entered IDs.\n   * @internal\n   */\n  traverseEnterLeave: function (leaveID, enterID, cb, upArg, downArg) {\n    var ancestorID = getFirstCommonAncestorID(leaveID, enterID);\n    if (ancestorID !== leaveID) {\n      traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);\n    }\n    if (ancestorID !== enterID) {\n      traverseParentPath(ancestorID, enterID, cb, downArg, true, false);\n    }\n  },\n\n  /**\n   * Simulates the traversal of a two-phase, capture/bubble event dispatch.\n   *\n   * NOTE: This traversal happens on IDs without touching the DOM.\n   *\n   * @param {string} targetID ID of the target node.\n   * @param {function} cb Callback to invoke.\n   * @param {*} arg Argument to invoke the callback with.\n   * @internal\n   */\n  traverseTwoPhase: function (targetID, cb, arg) {\n    if (targetID) {\n      traverseParentPath('', targetID, cb, arg, true, false);\n      traverseParentPath(targetID, '', cb, arg, false, true);\n    }\n  },\n\n  /**\n   * Same as `traverseTwoPhase` but skips the `targetID`.\n   */\n  traverseTwoPhaseSkipTarget: function (targetID, cb, arg) {\n    if (targetID) {\n      traverseParentPath('', targetID, cb, arg, true, true);\n      traverseParentPath(targetID, '', cb, arg, true, true);\n    }\n  },\n\n  /**\n   * Traverse a node ID, calling the supplied `cb` for each ancestor ID. For\n   * example, passing `.0.$row-0.1` would result in `cb` getting called\n   * with `.0`, `.0.$row-0`, and `.0.$row-0.1`.\n   *\n   * NOTE: This traversal happens on IDs without touching the DOM.\n   *\n   * @param {string} targetID ID of the target node.\n   * @param {function} cb Callback to invoke.\n   * @param {*} arg Argument to invoke the callback with.\n   * @internal\n   */\n  traverseAncestors: function (targetID, cb, arg) {\n    traverseParentPath('', targetID, cb, arg, true, false);\n  },\n\n  getFirstCommonAncestorID: getFirstCommonAncestorID,\n\n  /**\n   * Exposed for unit testing.\n   * @private\n   */\n  _getNextDescendantID: getNextDescendantID,\n\n  isAncestorIDOf: isAncestorIDOf,\n\n  SEPARATOR: SEPARATOR\n\n};\n\nmodule.exports = ReactInstanceHandles;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactInstanceHandles.js\n ** module id = 18\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPluginHub\n */\n\n'use strict';\n\nvar EventPluginRegistry = require('./EventPluginRegistry');\nvar EventPluginUtils = require('./EventPluginUtils');\nvar ReactErrorUtils = require('./ReactErrorUtils');\n\nvar accumulateInto = require('./accumulateInto');\nvar forEachAccumulated = require('./forEachAccumulated');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Internal store for event listeners\n */\nvar listenerBank = {};\n\n/**\n * Internal queue of events that have accumulated their dispatches and are\n * waiting to have their dispatches executed.\n */\nvar eventQueue = null;\n\n/**\n * Dispatches an event and releases it back into the pool, unless persistent.\n *\n * @param {?object} event Synthetic event to be dispatched.\n * @param {boolean} simulated If the event is simulated (changes exn behavior)\n * @private\n */\nvar executeDispatchesAndRelease = function (event, simulated) {\n  if (event) {\n    EventPluginUtils.executeDispatchesInOrder(event, simulated);\n\n    if (!event.isPersistent()) {\n      event.constructor.release(event);\n    }\n  }\n};\nvar executeDispatchesAndReleaseSimulated = function (e) {\n  return executeDispatchesAndRelease(e, true);\n};\nvar executeDispatchesAndReleaseTopLevel = function (e) {\n  return executeDispatchesAndRelease(e, false);\n};\n\n/**\n * - `InstanceHandle`: [required] Module that performs logical traversals of DOM\n *   hierarchy given ids of the logical DOM elements involved.\n */\nvar InstanceHandle = null;\n\nfunction validateInstanceHandle() {\n  var valid = InstanceHandle && InstanceHandle.traverseTwoPhase && InstanceHandle.traverseEnterLeave;\n  process.env.NODE_ENV !== 'production' ? warning(valid, 'InstanceHandle not injected before use!') : undefined;\n}\n\n/**\n * This is a unified interface for event plugins to be installed and configured.\n *\n * Event plugins can implement the following properties:\n *\n *   `extractEvents` {function(string, DOMEventTarget, string, object): *}\n *     Required. When a top-level event is fired, this method is expected to\n *     extract synthetic events that will in turn be queued and dispatched.\n *\n *   `eventTypes` {object}\n *     Optional, plugins that fire events must publish a mapping of registration\n *     names that are used to register listeners. Values of this mapping must\n *     be objects that contain `registrationName` or `phasedRegistrationNames`.\n *\n *   `executeDispatch` {function(object, function, string)}\n *     Optional, allows plugins to override how an event gets dispatched. By\n *     default, the listener is simply invoked.\n *\n * Each plugin that is injected into `EventsPluginHub` is immediately operable.\n *\n * @public\n */\nvar EventPluginHub = {\n\n  /**\n   * Methods for injecting dependencies.\n   */\n  injection: {\n\n    /**\n     * @param {object} InjectedMount\n     * @public\n     */\n    injectMount: EventPluginUtils.injection.injectMount,\n\n    /**\n     * @param {object} InjectedInstanceHandle\n     * @public\n     */\n    injectInstanceHandle: function (InjectedInstanceHandle) {\n      InstanceHandle = InjectedInstanceHandle;\n      if (process.env.NODE_ENV !== 'production') {\n        validateInstanceHandle();\n      }\n    },\n\n    getInstanceHandle: function () {\n      if (process.env.NODE_ENV !== 'production') {\n        validateInstanceHandle();\n      }\n      return InstanceHandle;\n    },\n\n    /**\n     * @param {array} InjectedEventPluginOrder\n     * @public\n     */\n    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,\n\n    /**\n     * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n     */\n    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName\n\n  },\n\n  eventNameDispatchConfigs: EventPluginRegistry.eventNameDispatchConfigs,\n\n  registrationNameModules: EventPluginRegistry.registrationNameModules,\n\n  /**\n   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.\n   *\n   * @param {string} id ID of the DOM element.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {?function} listener The callback to store.\n   */\n  putListener: function (id, registrationName, listener) {\n    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : invariant(false) : undefined;\n\n    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});\n    bankForRegistrationName[id] = listener;\n\n    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n    if (PluginModule && PluginModule.didPutListener) {\n      PluginModule.didPutListener(id, registrationName, listener);\n    }\n  },\n\n  /**\n   * @param {string} id ID of the DOM element.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @return {?function} The stored callback.\n   */\n  getListener: function (id, registrationName) {\n    var bankForRegistrationName = listenerBank[registrationName];\n    return bankForRegistrationName && bankForRegistrationName[id];\n  },\n\n  /**\n   * Deletes a listener from the registration bank.\n   *\n   * @param {string} id ID of the DOM element.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   */\n  deleteListener: function (id, registrationName) {\n    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n    if (PluginModule && PluginModule.willDeleteListener) {\n      PluginModule.willDeleteListener(id, registrationName);\n    }\n\n    var bankForRegistrationName = listenerBank[registrationName];\n    // TODO: This should never be null -- when is it?\n    if (bankForRegistrationName) {\n      delete bankForRegistrationName[id];\n    }\n  },\n\n  /**\n   * Deletes all listeners for the DOM element with the supplied ID.\n   *\n   * @param {string} id ID of the DOM element.\n   */\n  deleteAllListeners: function (id) {\n    for (var registrationName in listenerBank) {\n      if (!listenerBank[registrationName][id]) {\n        continue;\n      }\n\n      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n      if (PluginModule && PluginModule.willDeleteListener) {\n        PluginModule.willDeleteListener(id, registrationName);\n      }\n\n      delete listenerBank[registrationName][id];\n    }\n  },\n\n  /**\n   * Allows registered plugins an opportunity to extract events from top-level\n   * native browser events.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @internal\n   */\n  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n    var events;\n    var plugins = EventPluginRegistry.plugins;\n    for (var i = 0; i < plugins.length; i++) {\n      // Not every plugin in the ordering may be loaded at runtime.\n      var possiblePlugin = plugins[i];\n      if (possiblePlugin) {\n        var extractedEvents = possiblePlugin.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);\n        if (extractedEvents) {\n          events = accumulateInto(events, extractedEvents);\n        }\n      }\n    }\n    return events;\n  },\n\n  /**\n   * Enqueues a synthetic event that should be dispatched when\n   * `processEventQueue` is invoked.\n   *\n   * @param {*} events An accumulation of synthetic events.\n   * @internal\n   */\n  enqueueEvents: function (events) {\n    if (events) {\n      eventQueue = accumulateInto(eventQueue, events);\n    }\n  },\n\n  /**\n   * Dispatches all synthetic events on the event queue.\n   *\n   * @internal\n   */\n  processEventQueue: function (simulated) {\n    // Set `eventQueue` to null before processing it so that we can tell if more\n    // events get enqueued while processing.\n    var processingEventQueue = eventQueue;\n    eventQueue = null;\n    if (simulated) {\n      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);\n    } else {\n      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);\n    }\n    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing ' + 'an event queue. Support for this has not yet been implemented.') : invariant(false) : undefined;\n    // This would be a good time to rethrow if any of the event handlers threw.\n    ReactErrorUtils.rethrowCaughtError();\n  },\n\n  /**\n   * These are needed for tests only. Do not use!\n   */\n  __purge: function () {\n    listenerBank = {};\n  },\n\n  __getListenerBank: function () {\n    return listenerBank;\n  }\n\n};\n\nmodule.exports = EventPluginHub;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/EventPluginHub.js\n ** module id = 19\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPropagators\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar EventPluginHub = require('./EventPluginHub');\n\nvar warning = require('fbjs/lib/warning');\n\nvar accumulateInto = require('./accumulateInto');\nvar forEachAccumulated = require('./forEachAccumulated');\n\nvar PropagationPhases = EventConstants.PropagationPhases;\nvar getListener = EventPluginHub.getListener;\n\n/**\n * Some event types have a notion of different registration names for different\n * \"phases\" of propagation. This finds listeners by a given phase.\n */\nfunction listenerAtPhase(id, event, propagationPhase) {\n  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n  return getListener(id, registrationName);\n}\n\n/**\n * Tags a `SyntheticEvent` with dispatched listeners. Creating this function\n * here, allows us to not have to bind or create functions for each event.\n * Mutating the event's members allows us to not have to create a wrapping\n * \"dispatch\" object that pairs the event with the listener.\n */\nfunction accumulateDirectionalDispatches(domID, upwards, event) {\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(domID, 'Dispatching id must not be null') : undefined;\n  }\n  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;\n  var listener = listenerAtPhase(domID, event, phase);\n  if (listener) {\n    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n    event._dispatchIDs = accumulateInto(event._dispatchIDs, domID);\n  }\n}\n\n/**\n * Collect dispatches (must be entirely collected before dispatching - see unit\n * tests). Lazily allocate the array to conserve memory.  We must loop through\n * each event and perform the traversal for each one. We cannot perform a\n * single traversal for the entire collection of events because each event may\n * have a different target.\n */\nfunction accumulateTwoPhaseDispatchesSingle(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(event.dispatchMarker, accumulateDirectionalDispatches, event);\n  }\n}\n\n/**\n * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.\n */\nfunction accumulateTwoPhaseDispatchesSingleSkipTarget(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    EventPluginHub.injection.getInstanceHandle().traverseTwoPhaseSkipTarget(event.dispatchMarker, accumulateDirectionalDispatches, event);\n  }\n}\n\n/**\n * Accumulates without regard to direction, does not look for phased\n * registration names. Same as `accumulateDirectDispatchesSingle` but without\n * requiring that the `dispatchMarker` be the same as the dispatched ID.\n */\nfunction accumulateDispatches(id, ignoredDirection, event) {\n  if (event && event.dispatchConfig.registrationName) {\n    var registrationName = event.dispatchConfig.registrationName;\n    var listener = getListener(id, registrationName);\n    if (listener) {\n      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n      event._dispatchIDs = accumulateInto(event._dispatchIDs, id);\n    }\n  }\n}\n\n/**\n * Accumulates dispatches on an `SyntheticEvent`, but only for the\n * `dispatchMarker`.\n * @param {SyntheticEvent} event\n */\nfunction accumulateDirectDispatchesSingle(event) {\n  if (event && event.dispatchConfig.registrationName) {\n    accumulateDispatches(event.dispatchMarker, null, event);\n  }\n}\n\nfunction accumulateTwoPhaseDispatches(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\n}\n\nfunction accumulateTwoPhaseDispatchesSkipTarget(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);\n}\n\nfunction accumulateEnterLeaveDispatches(leave, enter, fromID, toID) {\n  EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(fromID, toID, accumulateDispatches, leave, enter);\n}\n\nfunction accumulateDirectDispatches(events) {\n  forEachAccumulated(events, accumulateDirectDispatchesSingle);\n}\n\n/**\n * A small set of propagation patterns, each of which will accept a small amount\n * of information, and generate a set of \"dispatch ready event objects\" - which\n * are sets of events that have already been annotated with a set of dispatched\n * listener functions/ids. The API is designed this way to discourage these\n * propagation strategies from actually executing the dispatches, since we\n * always want to collect the entire set of dispatches before executing event a\n * single one.\n *\n * @constructor EventPropagators\n */\nvar EventPropagators = {\n  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,\n  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,\n  accumulateDirectDispatches: accumulateDirectDispatches,\n  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches\n};\n\nmodule.exports = EventPropagators;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/EventPropagators.js\n ** module id = 20\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInstanceMap\n */\n\n'use strict';\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n */\n\n// TODO: Replace this with ES6: var ReactInstanceMap = new Map();\nvar ReactInstanceMap = {\n\n  /**\n   * This API should be called `delete` but we'd have to make sure to always\n   * transform these to strings for IE support. When this transform is fully\n   * supported we can rename it.\n   */\n  remove: function (key) {\n    key._reactInternalInstance = undefined;\n  },\n\n  get: function (key) {\n    return key._reactInternalInstance;\n  },\n\n  has: function (key) {\n    return key._reactInternalInstance !== undefined;\n  },\n\n  set: function (key, value) {\n    key._reactInternalInstance = value;\n  }\n\n};\n\nmodule.exports = ReactInstanceMap;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactInstanceMap.js\n ** module id = 21\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticUIEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\nvar getEventTarget = require('./getEventTarget');\n\n/**\n * @interface UIEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar UIEventInterface = {\n  view: function (event) {\n    if (event.view) {\n      return event.view;\n    }\n\n    var target = getEventTarget(event);\n    if (target != null && target.window === target) {\n      // target is a window object\n      return target;\n    }\n\n    var doc = target.ownerDocument;\n    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n    if (doc) {\n      return doc.defaultView || doc.parentWindow;\n    } else {\n      return window;\n    }\n  },\n  detail: function (event) {\n    return event.detail || 0;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticEvent}\n */\nfunction SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);\n\nmodule.exports = SyntheticUIEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticUIEvent.js\n ** module id = 22\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule emptyObject\n */\n\n'use strict';\n\nvar emptyObject = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/emptyObject.js\n ** module id = 23\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = require('./lib/React');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/react.js\n ** module id = 24\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactBrowserEventEmitter\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar EventPluginHub = require('./EventPluginHub');\nvar EventPluginRegistry = require('./EventPluginRegistry');\nvar ReactEventEmitterMixin = require('./ReactEventEmitterMixin');\nvar ReactPerf = require('./ReactPerf');\nvar ViewportMetrics = require('./ViewportMetrics');\n\nvar assign = require('./Object.assign');\nvar isEventSupported = require('./isEventSupported');\n\n/**\n * Summary of `ReactBrowserEventEmitter` event handling:\n *\n *  - Top-level delegation is used to trap most native browser events. This\n *    may only occur in the main thread and is the responsibility of\n *    ReactEventListener, which is injected and can therefore support pluggable\n *    event sources. This is the only work that occurs in the main thread.\n *\n *  - We normalize and de-duplicate events to account for browser quirks. This\n *    may be done in the worker thread.\n *\n *  - Forward these native events (with the associated top-level type used to\n *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want\n *    to extract any synthetic events.\n *\n *  - The `EventPluginHub` will then process each event by annotating them with\n *    \"dispatches\", a sequence of listeners and IDs that care about that event.\n *\n *  - The `EventPluginHub` then dispatches the events.\n *\n * Overview of React and the event system:\n *\n * +------------+    .\n * |    DOM     |    .\n * +------------+    .\n *       |           .\n *       v           .\n * +------------+    .\n * | ReactEvent |    .\n * |  Listener  |    .\n * +------------+    .                         +-----------+\n *       |           .               +--------+|SimpleEvent|\n *       |           .               |         |Plugin     |\n * +-----|------+    .               v         +-----------+\n * |     |      |    .    +--------------+                    +------------+\n * |     +-----------.--->|EventPluginHub|                    |    Event   |\n * |            |    .    |              |     +-----------+  | Propagators|\n * | ReactEvent |    .    |              |     |TapEvent   |  |------------|\n * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|\n * |            |    .    |              |     +-----------+  |  utilities |\n * |     +-----------.--->|              |                    +------------+\n * |     |      |    .    +--------------+\n * +-----|------+    .                ^        +-----------+\n *       |           .                |        |Enter/Leave|\n *       +           .                +-------+|Plugin     |\n * +-------------+   .                         +-----------+\n * | application |   .\n * |-------------|   .\n * |             |   .\n * |             |   .\n * +-------------+   .\n *                   .\n *    React Core     .  General Purpose Event Plugin System\n */\n\nvar alreadyListeningTo = {};\nvar isMonitoringScrollValue = false;\nvar reactTopListenersCounter = 0;\n\n// For events like 'submit' which don't consistently bubble (which we trap at a\n// lower node than `document`), binding at `document` would cause duplicate\n// events so we don't include them here\nvar topEventMapping = {\n  topAbort: 'abort',\n  topBlur: 'blur',\n  topCanPlay: 'canplay',\n  topCanPlayThrough: 'canplaythrough',\n  topChange: 'change',\n  topClick: 'click',\n  topCompositionEnd: 'compositionend',\n  topCompositionStart: 'compositionstart',\n  topCompositionUpdate: 'compositionupdate',\n  topContextMenu: 'contextmenu',\n  topCopy: 'copy',\n  topCut: 'cut',\n  topDoubleClick: 'dblclick',\n  topDrag: 'drag',\n  topDragEnd: 'dragend',\n  topDragEnter: 'dragenter',\n  topDragExit: 'dragexit',\n  topDragLeave: 'dragleave',\n  topDragOver: 'dragover',\n  topDragStart: 'dragstart',\n  topDrop: 'drop',\n  topDurationChange: 'durationchange',\n  topEmptied: 'emptied',\n  topEncrypted: 'encrypted',\n  topEnded: 'ended',\n  topError: 'error',\n  topFocus: 'focus',\n  topInput: 'input',\n  topKeyDown: 'keydown',\n  topKeyPress: 'keypress',\n  topKeyUp: 'keyup',\n  topLoadedData: 'loadeddata',\n  topLoadedMetadata: 'loadedmetadata',\n  topLoadStart: 'loadstart',\n  topMouseDown: 'mousedown',\n  topMouseMove: 'mousemove',\n  topMouseOut: 'mouseout',\n  topMouseOver: 'mouseover',\n  topMouseUp: 'mouseup',\n  topPaste: 'paste',\n  topPause: 'pause',\n  topPlay: 'play',\n  topPlaying: 'playing',\n  topProgress: 'progress',\n  topRateChange: 'ratechange',\n  topScroll: 'scroll',\n  topSeeked: 'seeked',\n  topSeeking: 'seeking',\n  topSelectionChange: 'selectionchange',\n  topStalled: 'stalled',\n  topSuspend: 'suspend',\n  topTextInput: 'textInput',\n  topTimeUpdate: 'timeupdate',\n  topTouchCancel: 'touchcancel',\n  topTouchEnd: 'touchend',\n  topTouchMove: 'touchmove',\n  topTouchStart: 'touchstart',\n  topVolumeChange: 'volumechange',\n  topWaiting: 'waiting',\n  topWheel: 'wheel'\n};\n\n/**\n * To ensure no conflicts with other potential React instances on the page\n */\nvar topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);\n\nfunction getListeningForDocument(mountAt) {\n  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`\n  // directly.\n  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {\n    mountAt[topListenersIDKey] = reactTopListenersCounter++;\n    alreadyListeningTo[mountAt[topListenersIDKey]] = {};\n  }\n  return alreadyListeningTo[mountAt[topListenersIDKey]];\n}\n\n/**\n * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For\n * example:\n *\n *   ReactBrowserEventEmitter.putListener('myID', 'onClick', myFunction);\n *\n * This would allocate a \"registration\" of `('onClick', myFunction)` on 'myID'.\n *\n * @internal\n */\nvar ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {\n\n  /**\n   * Injectable event backend\n   */\n  ReactEventListener: null,\n\n  injection: {\n    /**\n     * @param {object} ReactEventListener\n     */\n    injectReactEventListener: function (ReactEventListener) {\n      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);\n      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;\n    }\n  },\n\n  /**\n   * Sets whether or not any created callbacks should be enabled.\n   *\n   * @param {boolean} enabled True if callbacks should be enabled.\n   */\n  setEnabled: function (enabled) {\n    if (ReactBrowserEventEmitter.ReactEventListener) {\n      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);\n    }\n  },\n\n  /**\n   * @return {boolean} True if callbacks are enabled.\n   */\n  isEnabled: function () {\n    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());\n  },\n\n  /**\n   * We listen for bubbled touch events on the document object.\n   *\n   * Firefox v8.01 (and possibly others) exhibited strange behavior when\n   * mounting `onmousemove` events at some node that was not the document\n   * element. The symptoms were that if your mouse is not moving over something\n   * contained within that mount point (for example on the background) the\n   * top-level listeners for `onmousemove` won't be called. However, if you\n   * register the `mousemove` on the document object, then it will of course\n   * catch all `mousemove`s. This along with iOS quirks, justifies restricting\n   * top-level listeners to the document object only, at least for these\n   * movement types of events and possibly all events.\n   *\n   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n   *\n   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but\n   * they bubble to document.\n   *\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {object} contentDocumentHandle Document which owns the container\n   */\n  listenTo: function (registrationName, contentDocumentHandle) {\n    var mountAt = contentDocumentHandle;\n    var isListening = getListeningForDocument(mountAt);\n    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];\n\n    var topLevelTypes = EventConstants.topLevelTypes;\n    for (var i = 0; i < dependencies.length; i++) {\n      var dependency = dependencies[i];\n      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {\n        if (dependency === topLevelTypes.topWheel) {\n          if (isEventSupported('wheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);\n          } else if (isEventSupported('mousewheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);\n          } else {\n            // Firefox needs to capture a different mouse scroll event.\n            // @see http://www.quirksmode.org/dom/events/tests/scroll.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);\n          }\n        } else if (dependency === topLevelTypes.topScroll) {\n\n          if (isEventSupported('scroll', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);\n          } else {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);\n          }\n        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {\n\n          if (isEventSupported('focus', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);\n          } else if (isEventSupported('focusin')) {\n            // IE has `focusin` and `focusout` events which bubble.\n            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);\n          }\n\n          // to make sure blur and focus event listeners are only attached once\n          isListening[topLevelTypes.topBlur] = true;\n          isListening[topLevelTypes.topFocus] = true;\n        } else if (topEventMapping.hasOwnProperty(dependency)) {\n          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);\n        }\n\n        isListening[dependency] = true;\n      }\n    }\n  },\n\n  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);\n  },\n\n  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);\n  },\n\n  /**\n   * Listens to window scroll and resize events. We cache scroll values so that\n   * application code can access them without triggering reflows.\n   *\n   * NOTE: Scroll events do not bubble.\n   *\n   * @see http://www.quirksmode.org/dom/events/scroll.html\n   */\n  ensureScrollValueMonitoring: function () {\n    if (!isMonitoringScrollValue) {\n      var refresh = ViewportMetrics.refreshScrollValues;\n      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);\n      isMonitoringScrollValue = true;\n    }\n  },\n\n  eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,\n\n  registrationNameModules: EventPluginHub.registrationNameModules,\n\n  putListener: EventPluginHub.putListener,\n\n  getListener: EventPluginHub.getListener,\n\n  deleteListener: EventPluginHub.deleteListener,\n\n  deleteAllListeners: EventPluginHub.deleteAllListeners\n\n});\n\nReactPerf.measureMethods(ReactBrowserEventEmitter, 'ReactBrowserEventEmitter', {\n  putListener: 'putListener',\n  deleteListener: 'deleteListener'\n});\n\nmodule.exports = ReactBrowserEventEmitter;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactBrowserEventEmitter.js\n ** module id = 25\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPropTypeLocationNames\n */\n\n'use strict';\n\nvar ReactPropTypeLocationNames = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  ReactPropTypeLocationNames = {\n    prop: 'prop',\n    context: 'context',\n    childContext: 'child context'\n  };\n}\n\nmodule.exports = ReactPropTypeLocationNames;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactPropTypeLocationNames.js\n ** module id = 26\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPropTypeLocations\n */\n\n'use strict';\n\nvar keyMirror = require('fbjs/lib/keyMirror');\n\nvar ReactPropTypeLocations = keyMirror({\n  prop: null,\n  context: null,\n  childContext: null\n});\n\nmodule.exports = ReactPropTypeLocations;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactPropTypeLocations.js\n ** module id = 27\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticMouseEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\nvar ViewportMetrics = require('./ViewportMetrics');\n\nvar getEventModifierState = require('./getEventModifierState');\n\n/**\n * @interface MouseEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar MouseEventInterface = {\n  screenX: null,\n  screenY: null,\n  clientX: null,\n  clientY: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  getModifierState: getEventModifierState,\n  button: function (event) {\n    // Webkit, Firefox, IE9+\n    // which:  1 2 3\n    // button: 0 1 2 (standard)\n    var button = event.button;\n    if ('which' in event) {\n      return button;\n    }\n    // IE<9\n    // which:  undefined\n    // button: 0 0 0\n    // button: 1 4 2 (onmouseup)\n    return button === 2 ? 2 : button === 4 ? 1 : 0;\n  },\n  buttons: null,\n  relatedTarget: function (event) {\n    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);\n  },\n  // \"Proprietary\" Interface.\n  pageX: function (event) {\n    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;\n  },\n  pageY: function (event) {\n    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);\n\nmodule.exports = SyntheticMouseEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticMouseEvent.js\n ** module id = 28\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Transaction\n */\n\n'use strict';\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * `Transaction` creates a black box that is able to wrap any method such that\n * certain invariants are maintained before and after the method is invoked\n * (Even if an exception is thrown while invoking the wrapped method). Whoever\n * instantiates a transaction can provide enforcers of the invariants at\n * creation time. The `Transaction` class itself will supply one additional\n * automatic invariant for you - the invariant that any transaction instance\n * should not be run while it is already being run. You would typically create a\n * single instance of a `Transaction` for reuse multiple times, that potentially\n * is used to wrap several different methods. Wrappers are extremely simple -\n * they only require implementing two methods.\n *\n * <pre>\n *                       wrappers (injected at creation time)\n *                                      +        +\n *                                      |        |\n *                    +-----------------|--------|--------------+\n *                    |                 v        |              |\n *                    |      +---------------+   |              |\n *                    |   +--|    wrapper1   |---|----+         |\n *                    |   |  +---------------+   v    |         |\n *                    |   |          +-------------+  |         |\n *                    |   |     +----|   wrapper2  |--------+   |\n *                    |   |     |    +-------------+  |     |   |\n *                    |   |     |                     |     |   |\n *                    |   v     v                     v     v   | wrapper\n *                    | +---+ +---+   +---------+   +---+ +---+ | invariants\n * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained\n * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | +---+ +---+   +---------+   +---+ +---+ |\n *                    |  initialize                    close    |\n *                    +-----------------------------------------+\n * </pre>\n *\n * Use cases:\n * - Preserving the input selection ranges before/after reconciliation.\n *   Restoring selection even in the event of an unexpected error.\n * - Deactivating events while rearranging the DOM, preventing blurs/focuses,\n *   while guaranteeing that afterwards, the event system is reactivated.\n * - Flushing a queue of collected DOM mutations to the main UI thread after a\n *   reconciliation takes place in a worker thread.\n * - Invoking any collected `componentDidUpdate` callbacks after rendering new\n *   content.\n * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue\n *   to preserve the `scrollTop` (an automatic scroll aware DOM).\n * - (Future use case): Layout calculations before and after DOM updates.\n *\n * Transactional plugin API:\n * - A module that has an `initialize` method that returns any precomputation.\n * - and a `close` method that accepts the precomputation. `close` is invoked\n *   when the wrapped process is completed, or has failed.\n *\n * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules\n * that implement `initialize` and `close`.\n * @return {Transaction} Single transaction for reuse in thread.\n *\n * @class Transaction\n */\nvar Mixin = {\n  /**\n   * Sets up this instance so that it is prepared for collecting metrics. Does\n   * so such that this setup method may be used on an instance that is already\n   * initialized, in a way that does not consume additional memory upon reuse.\n   * That can be useful if you decide to make your subclass of this mixin a\n   * \"PooledClass\".\n   */\n  reinitializeTransaction: function () {\n    this.transactionWrappers = this.getTransactionWrappers();\n    if (this.wrapperInitData) {\n      this.wrapperInitData.length = 0;\n    } else {\n      this.wrapperInitData = [];\n    }\n    this._isInTransaction = false;\n  },\n\n  _isInTransaction: false,\n\n  /**\n   * @abstract\n   * @return {Array<TransactionWrapper>} Array of transaction wrappers.\n   */\n  getTransactionWrappers: null,\n\n  isInTransaction: function () {\n    return !!this._isInTransaction;\n  },\n\n  /**\n   * Executes the function within a safety window. Use this for the top level\n   * methods that result in large amounts of computation/mutations that would\n   * need to be safety checked. The optional arguments helps prevent the need\n   * to bind in many cases.\n   *\n   * @param {function} method Member of scope to call.\n   * @param {Object} scope Scope to invoke from.\n   * @param {Object?=} a Argument to pass to the method.\n   * @param {Object?=} b Argument to pass to the method.\n   * @param {Object?=} c Argument to pass to the method.\n   * @param {Object?=} d Argument to pass to the method.\n   * @param {Object?=} e Argument to pass to the method.\n   * @param {Object?=} f Argument to pass to the method.\n   *\n   * @return {*} Return value from `method`.\n   */\n  perform: function (method, scope, a, b, c, d, e, f) {\n    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there ' + 'is already an outstanding transaction.') : invariant(false) : undefined;\n    var errorThrown;\n    var ret;\n    try {\n      this._isInTransaction = true;\n      // Catching errors makes debugging more difficult, so we start with\n      // errorThrown set to true before setting it to false after calling\n      // close -- if it's still set to true in the finally block, it means\n      // one of these calls threw.\n      errorThrown = true;\n      this.initializeAll(0);\n      ret = method.call(scope, a, b, c, d, e, f);\n      errorThrown = false;\n    } finally {\n      try {\n        if (errorThrown) {\n          // If `method` throws, prefer to show that stack trace over any thrown\n          // by invoking `closeAll`.\n          try {\n            this.closeAll(0);\n          } catch (err) {}\n        } else {\n          // Since `method` didn't throw, we don't want to silence the exception\n          // here.\n          this.closeAll(0);\n        }\n      } finally {\n        this._isInTransaction = false;\n      }\n    }\n    return ret;\n  },\n\n  initializeAll: function (startIndex) {\n    var transactionWrappers = this.transactionWrappers;\n    for (var i = startIndex; i < transactionWrappers.length; i++) {\n      var wrapper = transactionWrappers[i];\n      try {\n        // Catching errors makes debugging more difficult, so we start with the\n        // OBSERVED_ERROR state before overwriting it with the real return value\n        // of initialize -- if it's still set to OBSERVED_ERROR in the finally\n        // block, it means wrapper.initialize threw.\n        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;\n        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;\n      } finally {\n        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {\n          // The initializer for wrapper i threw an error; initialize the\n          // remaining wrappers but silence any exceptions from them to ensure\n          // that the first error is the one to bubble up.\n          try {\n            this.initializeAll(i + 1);\n          } catch (err) {}\n        }\n      }\n    }\n  },\n\n  /**\n   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into\n   * them the respective return values of `this.transactionWrappers.init[i]`\n   * (`close`rs that correspond to initializers that failed will not be\n   * invoked).\n   */\n  closeAll: function (startIndex) {\n    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : invariant(false) : undefined;\n    var transactionWrappers = this.transactionWrappers;\n    for (var i = startIndex; i < transactionWrappers.length; i++) {\n      var wrapper = transactionWrappers[i];\n      var initData = this.wrapperInitData[i];\n      var errorThrown;\n      try {\n        // Catching errors makes debugging more difficult, so we start with\n        // errorThrown set to true before setting it to false after calling\n        // close -- if it's still set to true in the finally block, it means\n        // wrapper.close threw.\n        errorThrown = true;\n        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {\n          wrapper.close.call(this, initData);\n        }\n        errorThrown = false;\n      } finally {\n        if (errorThrown) {\n          // The closer for wrapper i threw an error; close the remaining\n          // wrappers but silence any exceptions from them to ensure that the\n          // first error is the one to bubble up.\n          try {\n            this.closeAll(i + 1);\n          } catch (e) {}\n        }\n      }\n    }\n    this.wrapperInitData.length = 0;\n  }\n};\n\nvar Transaction = {\n\n  Mixin: Mixin,\n\n  /**\n   * Token to look for to determine if an error occurred.\n   */\n  OBSERVED_ERROR: {}\n\n};\n\nmodule.exports = Transaction;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/Transaction.js\n ** module id = 29\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule canDefineProperty\n */\n\n'use strict';\n\nvar canDefineProperty = false;\nif (process.env.NODE_ENV !== 'production') {\n  try {\n    Object.defineProperty({}, 'x', { get: function () {} });\n    canDefineProperty = true;\n  } catch (x) {\n    // IE will fail on defineProperty\n  }\n}\n\nmodule.exports = canDefineProperty;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/canDefineProperty.js\n ** module id = 30\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule escapeTextContentForBrowser\n */\n\n'use strict';\n\nvar ESCAPE_LOOKUP = {\n  '&': '&amp;',\n  '>': '&gt;',\n  '<': '&lt;',\n  '\"': '&quot;',\n  '\\'': '&#x27;'\n};\n\nvar ESCAPE_REGEX = /[&><\"']/g;\n\nfunction escaper(match) {\n  return ESCAPE_LOOKUP[match];\n}\n\n/**\n * Escapes text to prevent scripting attacks.\n *\n * @param {*} text Text value to escape.\n * @return {string} An escaped string.\n */\nfunction escapeTextContentForBrowser(text) {\n  return ('' + text).replace(ESCAPE_REGEX, escaper);\n}\n\nmodule.exports = escapeTextContentForBrowser;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/escapeTextContentForBrowser.js\n ** module id = 31\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule setInnerHTML\n */\n\n/* globals MSApp */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar WHITESPACE_TEST = /^[ \\r\\n\\t\\f]/;\nvar NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \\r\\n\\t\\f\\/>]/;\n\n/**\n * Set the innerHTML property of a node, ensuring that whitespace is preserved\n * even in IE8.\n *\n * @param {DOMElement} node\n * @param {string} html\n * @internal\n */\nvar setInnerHTML = function (node, html) {\n  node.innerHTML = html;\n};\n\n// Win8 apps: Allow all html to be inserted\nif (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {\n  setInnerHTML = function (node, html) {\n    MSApp.execUnsafeLocalFunction(function () {\n      node.innerHTML = html;\n    });\n  };\n}\n\nif (ExecutionEnvironment.canUseDOM) {\n  // IE8: When updating a just created node with innerHTML only leading\n  // whitespace is removed. When updating an existing node with innerHTML\n  // whitespace in root TextNodes is also collapsed.\n  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html\n\n  // Feature detection; only IE8 is known to behave improperly like this.\n  var testElement = document.createElement('div');\n  testElement.innerHTML = ' ';\n  if (testElement.innerHTML === '') {\n    setInnerHTML = function (node, html) {\n      // Magic theory: IE8 supposedly differentiates between added and updated\n      // nodes when processing innerHTML, innerHTML on updated nodes suffers\n      // from worse whitespace behavior. Re-adding a node like this triggers\n      // the initial and more favorable whitespace behavior.\n      // TODO: What to do on a detached node?\n      if (node.parentNode) {\n        node.parentNode.replaceChild(node, node);\n      }\n\n      // We also implement a workaround for non-visible tags disappearing into\n      // thin air on IE8, this only happens if there is no visible text\n      // in-front of the non-visible tags. Piggyback on the whitespace fix\n      // and simply check if any non-visible tags appear in the source.\n      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {\n        // Recover leading whitespace by temporarily prepending any character.\n        // \\uFEFF has the potential advantage of being zero-width/invisible.\n        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode\n        // in hopes that this is preserved even if \"\\uFEFF\" is transformed to\n        // the actual Unicode character (by Babel, for example).\n        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216\n        node.innerHTML = String.fromCharCode(0xFEFF) + html;\n\n        // deleteData leaves an empty `TextNode` which offsets the index of all\n        // children. Definitely want to avoid this.\n        var textNode = node.firstChild;\n        if (textNode.data.length === 1) {\n          node.removeChild(textNode);\n        } else {\n          textNode.deleteData(0, 1);\n        }\n      } else {\n        node.innerHTML = html;\n      }\n    };\n  }\n}\n\nmodule.exports = setInnerHTML;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/setInnerHTML.js\n ** module id = 32\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule keyMirror\n * @typechecks static-only\n */\n\n'use strict';\n\nvar invariant = require('./invariant');\n\n/**\n * Constructs an enumeration with keys equal to their value.\n *\n * For example:\n *\n *   var COLORS = keyMirror({blue: null, red: null});\n *   var myColor = COLORS.blue;\n *   var isColorValid = !!COLORS[myColor];\n *\n * The last line could not be performed if the values of the generated enum were\n * not equal to their keys.\n *\n *   Input:  {key1: val1, key2: val2}\n *   Output: {key1: key1, key2: key2}\n *\n * @param {object} obj\n * @return {object}\n */\nvar keyMirror = function (obj) {\n  var ret = {};\n  var key;\n  !(obj instanceof Object && !Array.isArray(obj)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : undefined;\n  for (key in obj) {\n    if (!obj.hasOwnProperty(key)) {\n      continue;\n    }\n    ret[key] = key;\n  }\n  return ret;\n};\n\nmodule.exports = keyMirror;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/keyMirror.js\n ** module id = 33\n ** module chunks = 0\n **/","// Generated by CoffeeScript 1.9.1\n(function() {\n  var R, _composeP2, add, addIndex, adjust, call, cc, ccp, clamp, complement, compose, composeP, composeP2, concat, concatMany, curry, dec, difference, evolve, evolveAll, exports, fail, flip, flipAllAndPrependY, fromPairs, getPath, head, init, intersection, into, isNil, isNotNil, isThenable, keys, last, map, mapIndexed, mapObjIndexed, max, maxIn, merge, mergeMany, mergeOrEvolve, min, minIn, path, pick, pickAll, pickBy, pickOr, pluck, prop, ramdaFlipped, reduce, reduceObj, reduceRight, ref, split, sum, toPairs, toStr,\n    slice = [].slice;\n\n  ref = R = require('ramda'), add = ref.add, addIndex = ref.addIndex, adjust = ref.adjust, call = ref.call, complement = ref.complement, compose = ref.compose, composeP = ref.composeP, concat = ref.concat, curry = ref.curry, dec = ref.dec, difference = ref.difference, evolve = ref.evolve, flip = ref.flip, fromPairs = ref.fromPairs, head = ref.head, init = ref.init, intersection = ref.intersection, into = ref.into, isNil = ref.isNil, keys = ref.keys, last = ref.last, map = ref.map, mapObjIndexed = ref.mapObjIndexed, max = ref.max, merge = ref.merge, min = ref.min, path = ref.path, pick = ref.pick, pickAll = ref.pickAll, pickBy = ref.pickBy, pluck = ref.pluck, prop = ref.prop, reduce = ref.reduce, reduceRight = ref.reduceRight, split = ref.split, sum = ref.sum, toPairs = ref.toPairs;\n\n  getPath = curry(function(path, o) {\n    var pathToUse;\n    pathToUse = R.is(String, path) ? split('.', path) : path;\n    return R.path(pathToUse, o);\n  });\n\n  concatMany = function() {\n    var lists;\n    lists = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return reduce(concat, [], lists);\n  };\n\n  maxIn = reduce(max, -Infinity);\n\n  minIn = reduce(min, Infinity);\n\n  mapIndexed = addIndex(map);\n\n  pickOr = function(keysAndDefaults, o) {\n    var picked, valueOrDefault;\n    picked = pickAll(keys(keysAndDefaults), o);\n    valueOrDefault = function(v, k) {\n      if (v === void 0) {\n        return prop(k, keysAndDefaults);\n      } else {\n        return v;\n      }\n    };\n    return mapObjIndexed(valueOrDefault, picked);\n  };\n\n  mergeMany = function() {\n    var objects, original;\n    original = arguments[0], objects = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    return reduce(merge, original, objects);\n  };\n\n  isThenable = function(value) {\n    return value !== null && value === Object(value) && typeof value.then === 'function';\n  };\n\n  reduceObj = curry(function(f, init, o) {\n    var callF, ret;\n    ret = cloneShallow(init);\n    callF = function(v, k) {\n      return ret = f(ret, k, v);\n    };\n    mapObjIndexed(callF, o);\n    return ret;\n  });\n\n  mergeOrEvolve = curry(function(spec, data) {\n    var data2, forcedMerges, merged, missingKeys, sharedKeys, spec2, toMerge, transformations;\n    forcedMerges = pickBy(complement(R.is(Array)), spec);\n    data2 = merge(data, forcedMerges);\n    spec2 = pickBy(R.is(Array), spec);\n    missingKeys = difference(keys(spec2), keys(data2));\n    sharedKeys = intersection(keys(spec2), keys(data2));\n    toMerge = map(head, pick(missingKeys, spec2));\n    merged = merge(data2, toMerge);\n    transformations = map(last, pick(sharedKeys, spec2));\n    return evolve(transformations, merged);\n  });\n\n  evolveAll = function(spec, data) {\n    var data2, missingKeys, toMerge;\n    missingKeys = difference(keys(spec), keys(data));\n    toMerge = pick(missingKeys, spec);\n    data2 = merge(data, toMerge);\n    return evolve(spec, data2);\n  };\n\n  cc = function() {\n    var data, functions, i;\n    functions = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), data = arguments[i++];\n    return compose.apply(null, functions)(data);\n  };\n\n  ccp = function() {\n    var data, functions, i;\n    functions = 2 <= arguments.length ? slice.call(arguments, 0, i = arguments.length - 1) : (i = 0, []), data = arguments[i++];\n    return composeP.apply(null, functions)(data);\n  };\n\n  _composeP2 = function(acc, f) {\n    return function() {\n      var context, value;\n      context = this;\n      if (!acc) {\n        return f.apply(this, arguments);\n      }\n      value = acc.apply(this, arguments);\n      if (isThenable(value)) {\n        if (f._fail) {\n          return value.fail(function(x) {\n            return f.call(context, x);\n          });\n        } else {\n          return value.then(function(x) {\n            return f.call(context, x);\n          });\n        }\n      } else {\n        return f.call(this, value);\n      }\n    };\n  };\n\n  composeP2 = function() {\n    var fs;\n    fs = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    return reduceRight(_composeP2, null, fs);\n  };\n\n  fail = function(f) {\n    var context, f2;\n    context = this;\n    f2 = function() {\n      return f.apply(context, arguments);\n    };\n    f2._fail = true;\n    return f2;\n  };\n\n  isNotNil = complement(isNil);\n\n  toStr = function(a) {\n    return a + '';\n  };\n\n  clamp = curry(function(a, b, x) {\n    return Math.min(b, Math.max(a, x));\n  });\n\n  flipAllAndPrependY = compose(fromPairs, map(adjust(add('y'), 0)), toPairs, mapObjIndexed(flip));\n\n  ramdaFlipped = flipAllAndPrependY(R);\n\n  exports = {\n    maxIn: maxIn,\n    minIn: minIn,\n    mapIndexed: mapIndexed,\n    getPath: getPath,\n    cc: cc,\n    ccp: ccp,\n    mergeMany: mergeMany,\n    toStr: toStr,\n    pickOr: pickOr,\n    isThenable: isThenable,\n    composeP2: composeP2,\n    fail: fail,\n    reduceObj: reduceObj,\n    mergeOrEvolve: mergeOrEvolve,\n    evolveAll: evolveAll,\n    clamp: clamp,\n    isNotNil: isNotNil\n  };\n\n  module.exports = merge(exports, ramdaFlipped);\n\n}).call(this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/ramda-extras/lib/ramda-extras.js\n ** module id = 34\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CallbackQueue\n */\n\n'use strict';\n\nvar PooledClass = require('./PooledClass');\n\nvar assign = require('./Object.assign');\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * A specialized pseudo-event module to help keep track of components waiting to\n * be notified when their DOM representations are available for use.\n *\n * This implements `PooledClass`, so you should never need to instantiate this.\n * Instead, use `CallbackQueue.getPooled()`.\n *\n * @class ReactMountReady\n * @implements PooledClass\n * @internal\n */\nfunction CallbackQueue() {\n  this._callbacks = null;\n  this._contexts = null;\n}\n\nassign(CallbackQueue.prototype, {\n\n  /**\n   * Enqueues a callback to be invoked when `notifyAll` is invoked.\n   *\n   * @param {function} callback Invoked when `notifyAll` is invoked.\n   * @param {?object} context Context to call `callback` with.\n   * @internal\n   */\n  enqueue: function (callback, context) {\n    this._callbacks = this._callbacks || [];\n    this._contexts = this._contexts || [];\n    this._callbacks.push(callback);\n    this._contexts.push(context);\n  },\n\n  /**\n   * Invokes all enqueued callbacks and clears the queue. This is invoked after\n   * the DOM representation of a component has been created or updated.\n   *\n   * @internal\n   */\n  notifyAll: function () {\n    var callbacks = this._callbacks;\n    var contexts = this._contexts;\n    if (callbacks) {\n      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : invariant(false) : undefined;\n      this._callbacks = null;\n      this._contexts = null;\n      for (var i = 0; i < callbacks.length; i++) {\n        callbacks[i].call(contexts[i]);\n      }\n      callbacks.length = 0;\n      contexts.length = 0;\n    }\n  },\n\n  /**\n   * Resets the internal queue.\n   *\n   * @internal\n   */\n  reset: function () {\n    this._callbacks = null;\n    this._contexts = null;\n  },\n\n  /**\n   * `PooledClass` looks for this.\n   */\n  destructor: function () {\n    this.reset();\n  }\n\n});\n\nPooledClass.addPoolingTo(CallbackQueue);\n\nmodule.exports = CallbackQueue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/CallbackQueue.js\n ** module id = 35\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMPropertyOperations\n * @typechecks static-only\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\nvar ReactPerf = require('./ReactPerf');\n\nvar quoteAttributeValueForBrowser = require('./quoteAttributeValueForBrowser');\nvar warning = require('fbjs/lib/warning');\n\n// Simplified subset\nvar VALID_ATTRIBUTE_NAME_REGEX = /^[a-zA-Z_][\\w\\.\\-]*$/;\nvar illegalAttributeNameCache = {};\nvar validatedAttributeNameCache = {};\n\nfunction isAttributeNameSafe(attributeName) {\n  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {\n    return true;\n  }\n  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {\n    return false;\n  }\n  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {\n    validatedAttributeNameCache[attributeName] = true;\n    return true;\n  }\n  illegalAttributeNameCache[attributeName] = true;\n  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : undefined;\n  return false;\n}\n\nfunction shouldIgnoreValue(propertyInfo, value) {\n  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  var reactProps = {\n    children: true,\n    dangerouslySetInnerHTML: true,\n    key: true,\n    ref: true\n  };\n  var warnedProperties = {};\n\n  var warnUnknownProperty = function (name) {\n    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {\n      return;\n    }\n\n    warnedProperties[name] = true;\n    var lowerCasedName = name.toLowerCase();\n\n    // data-* attributes should be lowercase; suggest the lowercase version\n    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;\n\n    // For now, only warn when we have a suggested correction. This prevents\n    // logging too much when using transferPropsTo.\n    process.env.NODE_ENV !== 'production' ? warning(standardName == null, 'Unknown DOM property %s. Did you mean %s?', name, standardName) : undefined;\n  };\n}\n\n/**\n * Operations for dealing with DOM properties.\n */\nvar DOMPropertyOperations = {\n\n  /**\n   * Creates markup for the ID property.\n   *\n   * @param {string} id Unescaped ID.\n   * @return {string} Markup string.\n   */\n  createMarkupForID: function (id) {\n    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);\n  },\n\n  setAttributeForID: function (node, id) {\n    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);\n  },\n\n  /**\n   * Creates markup for a property.\n   *\n   * @param {string} name\n   * @param {*} value\n   * @return {?string} Markup string, or null if the property was invalid.\n   */\n  createMarkupForProperty: function (name, value) {\n    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n    if (propertyInfo) {\n      if (shouldIgnoreValue(propertyInfo, value)) {\n        return '';\n      }\n      var attributeName = propertyInfo.attributeName;\n      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {\n        return attributeName + '=\"\"';\n      }\n      return attributeName + '=' + quoteAttributeValueForBrowser(value);\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        return '';\n      }\n      return name + '=' + quoteAttributeValueForBrowser(value);\n    } else if (process.env.NODE_ENV !== 'production') {\n      warnUnknownProperty(name);\n    }\n    return null;\n  },\n\n  /**\n   * Creates markup for a custom property.\n   *\n   * @param {string} name\n   * @param {*} value\n   * @return {string} Markup string, or empty string if the property was invalid.\n   */\n  createMarkupForCustomAttribute: function (name, value) {\n    if (!isAttributeNameSafe(name) || value == null) {\n      return '';\n    }\n    return name + '=' + quoteAttributeValueForBrowser(value);\n  },\n\n  /**\n   * Sets the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   * @param {*} value\n   */\n  setValueForProperty: function (node, name, value) {\n    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n    if (propertyInfo) {\n      var mutationMethod = propertyInfo.mutationMethod;\n      if (mutationMethod) {\n        mutationMethod(node, value);\n      } else if (shouldIgnoreValue(propertyInfo, value)) {\n        this.deleteValueForProperty(node, name);\n      } else if (propertyInfo.mustUseAttribute) {\n        var attributeName = propertyInfo.attributeName;\n        var namespace = propertyInfo.attributeNamespace;\n        // `setAttribute` with objects becomes only `[object]` in IE8/9,\n        // ('' + value) makes it output the correct toString()-value.\n        if (namespace) {\n          node.setAttributeNS(namespace, attributeName, '' + value);\n        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {\n          node.setAttribute(attributeName, '');\n        } else {\n          node.setAttribute(attributeName, '' + value);\n        }\n      } else {\n        var propName = propertyInfo.propertyName;\n        // Must explicitly cast values for HAS_SIDE_EFFECTS-properties to the\n        // property type before comparing; only `value` does and is string.\n        if (!propertyInfo.hasSideEffects || '' + node[propName] !== '' + value) {\n          // Contrary to `setAttribute`, object properties are properly\n          // `toString`ed by IE8/9.\n          node[propName] = value;\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      DOMPropertyOperations.setValueForAttribute(node, name, value);\n    } else if (process.env.NODE_ENV !== 'production') {\n      warnUnknownProperty(name);\n    }\n  },\n\n  setValueForAttribute: function (node, name, value) {\n    if (!isAttributeNameSafe(name)) {\n      return;\n    }\n    if (value == null) {\n      node.removeAttribute(name);\n    } else {\n      node.setAttribute(name, '' + value);\n    }\n  },\n\n  /**\n   * Deletes the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   */\n  deleteValueForProperty: function (node, name) {\n    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n    if (propertyInfo) {\n      var mutationMethod = propertyInfo.mutationMethod;\n      if (mutationMethod) {\n        mutationMethod(node, undefined);\n      } else if (propertyInfo.mustUseAttribute) {\n        node.removeAttribute(propertyInfo.attributeName);\n      } else {\n        var propName = propertyInfo.propertyName;\n        var defaultValue = DOMProperty.getDefaultValueForProperty(node.nodeName, propName);\n        if (!propertyInfo.hasSideEffects || '' + node[propName] !== defaultValue) {\n          node[propName] = defaultValue;\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      node.removeAttribute(name);\n    } else if (process.env.NODE_ENV !== 'production') {\n      warnUnknownProperty(name);\n    }\n  }\n\n};\n\nReactPerf.measureMethods(DOMPropertyOperations, 'DOMPropertyOperations', {\n  setValueForProperty: 'setValueForProperty',\n  setValueForAttribute: 'setValueForAttribute',\n  deleteValueForProperty: 'deleteValueForProperty'\n});\n\nmodule.exports = DOMPropertyOperations;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/DOMPropertyOperations.js\n ** module id = 36\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule LinkedValueUtils\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactPropTypes = require('./ReactPropTypes');\nvar ReactPropTypeLocations = require('./ReactPropTypeLocations');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar hasReadOnlyValue = {\n  'button': true,\n  'checkbox': true,\n  'image': true,\n  'hidden': true,\n  'radio': true,\n  'reset': true,\n  'submit': true\n};\n\nfunction _assertSingleLink(inputProps) {\n  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use ' + 'checkedLink, you probably don\\'t want to use valueLink and vice versa.') : invariant(false) : undefined;\n}\nfunction _assertValueLink(inputProps) {\n  _assertSingleLink(inputProps);\n  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want ' + 'to use value or onChange, you probably don\\'t want to use valueLink.') : invariant(false) : undefined;\n}\n\nfunction _assertCheckedLink(inputProps) {\n  _assertSingleLink(inputProps);\n  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. ' + 'If you want to use checked or onChange, you probably don\\'t want to ' + 'use checkedLink') : invariant(false) : undefined;\n}\n\nvar propTypes = {\n  value: function (props, propName, componentName) {\n    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  checked: function (props, propName, componentName) {\n    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  onChange: ReactPropTypes.func\n};\n\nvar loggedTypeFailures = {};\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Provide a linked `value` attribute for controlled forms. You should not use\n * this outside of the ReactDOM controlled form components.\n */\nvar LinkedValueUtils = {\n  checkPropTypes: function (tagName, props, owner) {\n    for (var propName in propTypes) {\n      if (propTypes.hasOwnProperty(propName)) {\n        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop);\n      }\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n\n        var addendum = getDeclarationErrorAddendum(owner);\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : undefined;\n      }\n    }\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current value of the input either from value prop or link.\n   */\n  getValue: function (inputProps) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n      return inputProps.valueLink.value;\n    }\n    return inputProps.value;\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current checked status of the input either from checked prop\n   *             or link.\n   */\n  getChecked: function (inputProps) {\n    if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n      return inputProps.checkedLink.value;\n    }\n    return inputProps.checked;\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @param {SyntheticEvent} event change event to handle\n   */\n  executeOnChange: function (inputProps, event) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n      return inputProps.valueLink.requestChange(event.target.value);\n    } else if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n      return inputProps.checkedLink.requestChange(event.target.checked);\n    } else if (inputProps.onChange) {\n      return inputProps.onChange.call(undefined, event);\n    }\n  }\n};\n\nmodule.exports = LinkedValueUtils;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/LinkedValueUtils.js\n ** module id = 37\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponentBrowserEnvironment\n */\n\n'use strict';\n\nvar ReactDOMIDOperations = require('./ReactDOMIDOperations');\nvar ReactMount = require('./ReactMount');\n\n/**\n * Abstracts away all functionality of the reconciler that requires knowledge of\n * the browser context. TODO: These callers should be refactored to avoid the\n * need for this injection.\n */\nvar ReactComponentBrowserEnvironment = {\n\n  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,\n\n  replaceNodeWithMarkupByID: ReactDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,\n\n  /**\n   * If a particular environment requires that some resources be cleaned up,\n   * specify this in the injected Mixin. In the DOM, we would likely want to\n   * purge any cached node ID lookups.\n   *\n   * @private\n   */\n  unmountIDFromEnvironment: function (rootNodeID) {\n    ReactMount.purgeID(rootNodeID);\n  }\n\n};\n\nmodule.exports = ReactComponentBrowserEnvironment;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactComponentBrowserEnvironment.js\n ** module id = 38\n ** module chunks = 0\n **/","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponentEnvironment\n */\n\n'use strict';\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar injected = false;\n\nvar ReactComponentEnvironment = {\n\n  /**\n   * Optionally injectable environment dependent cleanup hook. (server vs.\n   * browser etc). Example: A browser system caches DOM nodes based on component\n   * ID and must remove that cache entry when this instance is unmounted.\n   */\n  unmountIDFromEnvironment: null,\n\n  /**\n   * Optionally injectable hook for swapping out mount images in the middle of\n   * the tree.\n   */\n  replaceNodeWithMarkupByID: null,\n\n  /**\n   * Optionally injectable hook for processing a queue of child updates. Will\n   * later move into MultiChildComponents.\n   */\n  processChildrenUpdates: null,\n\n  injection: {\n    injectEnvironment: function (environment) {\n      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : invariant(false) : undefined;\n      ReactComponentEnvironment.unmountIDFromEnvironment = environment.unmountIDFromEnvironment;\n      ReactComponentEnvironment.replaceNodeWithMarkupByID = environment.replaceNodeWithMarkupByID;\n      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;\n      injected = true;\n    }\n  }\n\n};\n\nmodule.exports = ReactComponentEnvironment;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactComponentEnvironment.js\n ** module id = 39\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMIDOperations\n * @typechecks static-only\n */\n\n'use strict';\n\nvar DOMChildrenOperations = require('./DOMChildrenOperations');\nvar DOMPropertyOperations = require('./DOMPropertyOperations');\nvar ReactMount = require('./ReactMount');\nvar ReactPerf = require('./ReactPerf');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Errors for properties that should not be updated with `updatePropertyByID()`.\n *\n * @type {object}\n * @private\n */\nvar INVALID_PROPERTY_ERRORS = {\n  dangerouslySetInnerHTML: '`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.',\n  style: '`style` must be set using `updateStylesByID()`.'\n};\n\n/**\n * Operations used to process updates to DOM nodes.\n */\nvar ReactDOMIDOperations = {\n\n  /**\n   * Updates a DOM node with new property values. This should only be used to\n   * update DOM properties in `DOMProperty`.\n   *\n   * @param {string} id ID of the node to update.\n   * @param {string} name A valid property name, see `DOMProperty`.\n   * @param {*} value New value of the property.\n   * @internal\n   */\n  updatePropertyByID: function (id, name, value) {\n    var node = ReactMount.getNode(id);\n    !!INVALID_PROPERTY_ERRORS.hasOwnProperty(name) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updatePropertyByID(...): %s', INVALID_PROPERTY_ERRORS[name]) : invariant(false) : undefined;\n\n    // If we're updating to null or undefined, we should remove the property\n    // from the DOM node instead of inadvertantly setting to a string. This\n    // brings us in line with the same behavior we have on initial render.\n    if (value != null) {\n      DOMPropertyOperations.setValueForProperty(node, name, value);\n    } else {\n      DOMPropertyOperations.deleteValueForProperty(node, name);\n    }\n  },\n\n  /**\n   * Replaces a DOM node that exists in the document with markup.\n   *\n   * @param {string} id ID of child to be replaced.\n   * @param {string} markup Dangerous markup to inject in place of child.\n   * @internal\n   * @see {Danger.dangerouslyReplaceNodeWithMarkup}\n   */\n  dangerouslyReplaceNodeWithMarkupByID: function (id, markup) {\n    var node = ReactMount.getNode(id);\n    DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup(node, markup);\n  },\n\n  /**\n   * Updates a component's children by processing a series of updates.\n   *\n   * @param {array<object>} updates List of update configurations.\n   * @param {array<string>} markup List of markup strings.\n   * @internal\n   */\n  dangerouslyProcessChildrenUpdates: function (updates, markup) {\n    for (var i = 0; i < updates.length; i++) {\n      updates[i].parentNode = ReactMount.getNode(updates[i].parentID);\n    }\n    DOMChildrenOperations.processUpdates(updates, markup);\n  }\n};\n\nReactPerf.measureMethods(ReactDOMIDOperations, 'ReactDOMIDOperations', {\n  dangerouslyReplaceNodeWithMarkupByID: 'dangerouslyReplaceNodeWithMarkupByID',\n  dangerouslyProcessChildrenUpdates: 'dangerouslyProcessChildrenUpdates'\n});\n\nmodule.exports = ReactDOMIDOperations;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMIDOperations.js\n ** module id = 40\n ** module chunks = 0\n **/","/**\n * Copyright 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactUpdateQueue\n */\n\n'use strict';\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactElement = require('./ReactElement');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar assign = require('./Object.assign');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nfunction enqueueUpdate(internalInstance) {\n  ReactUpdates.enqueueUpdate(internalInstance);\n}\n\nfunction getInternalInstanceReadyForUpdate(publicInstance, callerName) {\n  var internalInstance = ReactInstanceMap.get(publicInstance);\n  if (!internalInstance) {\n    if (process.env.NODE_ENV !== 'production') {\n      // Only warn when we have a callerName. Otherwise we should be silent.\n      // We're probably calling from enqueueCallback. We don't want to warn\n      // there because we already warned for the corresponding lifecycle method.\n      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor.displayName) : undefined;\n    }\n    return null;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition ' + '(such as within `render`). Render methods should be a pure function ' + 'of props and state.', callerName) : undefined;\n  }\n\n  return internalInstance;\n}\n\n/**\n * ReactUpdateQueue allows for state updates to be scheduled into a later\n * reconciliation step.\n */\nvar ReactUpdateQueue = {\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    if (process.env.NODE_ENV !== 'production') {\n      var owner = ReactCurrentOwner.current;\n      if (owner !== null) {\n        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : undefined;\n        owner._warnedAboutRefsInRender = true;\n      }\n    }\n    var internalInstance = ReactInstanceMap.get(publicInstance);\n    if (internalInstance) {\n      // During componentWillMount and render this will still be null but after\n      // that will always render to something. At least for now. So we can use\n      // this hack.\n      return !!internalInstance._renderedComponent;\n    } else {\n      return false;\n    }\n  },\n\n  /**\n   * Enqueue a callback that will be executed after all the pending updates\n   * have processed.\n   *\n   * @param {ReactClass} publicInstance The instance to use as `this` context.\n   * @param {?function} callback Called after state is updated.\n   * @internal\n   */\n  enqueueCallback: function (publicInstance, callback) {\n    !(typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + '`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 'isn\\'t callable.') : invariant(false) : undefined;\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);\n\n    // Previously we would throw an error if we didn't have an internal\n    // instance. Since we want to make it a no-op instead, we mirror the same\n    // behavior we have in other enqueue* methods.\n    // We also need to ignore callbacks in componentWillMount. See\n    // enqueueUpdates.\n    if (!internalInstance) {\n      return null;\n    }\n\n    if (internalInstance._pendingCallbacks) {\n      internalInstance._pendingCallbacks.push(callback);\n    } else {\n      internalInstance._pendingCallbacks = [callback];\n    }\n    // TODO: The callback here is ignored when setState is called from\n    // componentWillMount. Either fix it or disallow doing so completely in\n    // favor of getInitialState. Alternatively, we can disallow\n    // componentWillMount during server-side rendering.\n    enqueueUpdate(internalInstance);\n  },\n\n  enqueueCallbackInternal: function (internalInstance, callback) {\n    !(typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + '`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 'isn\\'t callable.') : invariant(false) : undefined;\n    if (internalInstance._pendingCallbacks) {\n      internalInstance._pendingCallbacks.push(callback);\n    } else {\n      internalInstance._pendingCallbacks = [callback];\n    }\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance) {\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');\n\n    if (!internalInstance) {\n      return;\n    }\n\n    internalInstance._pendingForceUpdate = true;\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState) {\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');\n\n    if (!internalInstance) {\n      return;\n    }\n\n    internalInstance._pendingStateQueue = [completeState];\n    internalInstance._pendingReplaceState = true;\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState) {\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');\n\n    if (!internalInstance) {\n      return;\n    }\n\n    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);\n    queue.push(partialState);\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Sets a subset of the props.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialProps Subset of the next props.\n   * @internal\n   */\n  enqueueSetProps: function (publicInstance, partialProps) {\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setProps');\n    if (!internalInstance) {\n      return;\n    }\n    ReactUpdateQueue.enqueueSetPropsInternal(internalInstance, partialProps);\n  },\n\n  enqueueSetPropsInternal: function (internalInstance, partialProps) {\n    var topLevelWrapper = internalInstance._topLevelWrapper;\n    !topLevelWrapper ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setProps(...): You called `setProps` on a ' + 'component with a parent. This is an anti-pattern since props will ' + 'get reactively updated when rendered. Instead, change the owner\\'s ' + '`render` method to pass the correct value as props to the component ' + 'where it is created.') : invariant(false) : undefined;\n\n    // Merge with the pending element if it exists, otherwise with existing\n    // element props.\n    var wrapElement = topLevelWrapper._pendingElement || topLevelWrapper._currentElement;\n    var element = wrapElement.props;\n    var props = assign({}, element.props, partialProps);\n    topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(wrapElement, ReactElement.cloneAndReplaceProps(element, props));\n\n    enqueueUpdate(topLevelWrapper);\n  },\n\n  /**\n   * Replaces all of the props.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} props New props.\n   * @internal\n   */\n  enqueueReplaceProps: function (publicInstance, props) {\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceProps');\n    if (!internalInstance) {\n      return;\n    }\n    ReactUpdateQueue.enqueueReplacePropsInternal(internalInstance, props);\n  },\n\n  enqueueReplacePropsInternal: function (internalInstance, props) {\n    var topLevelWrapper = internalInstance._topLevelWrapper;\n    !topLevelWrapper ? process.env.NODE_ENV !== 'production' ? invariant(false, 'replaceProps(...): You called `replaceProps` on a ' + 'component with a parent. This is an anti-pattern since props will ' + 'get reactively updated when rendered. Instead, change the owner\\'s ' + '`render` method to pass the correct value as props to the component ' + 'where it is created.') : invariant(false) : undefined;\n\n    // Merge with the pending element if it exists, otherwise with existing\n    // element props.\n    var wrapElement = topLevelWrapper._pendingElement || topLevelWrapper._currentElement;\n    var element = wrapElement.props;\n    topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(wrapElement, ReactElement.cloneAndReplaceProps(element, props));\n\n    enqueueUpdate(topLevelWrapper);\n  },\n\n  enqueueElementInternal: function (internalInstance, newElement) {\n    internalInstance._pendingElement = newElement;\n    enqueueUpdate(internalInstance);\n  }\n\n};\n\nmodule.exports = ReactUpdateQueue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactUpdateQueue.js\n ** module id = 41\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactVersion\n */\n\n'use strict';\n\nmodule.exports = '0.14.8';\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactVersion.js\n ** module id = 42\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule findDOMNode\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactMount = require('./ReactMount');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Returns the DOM node rendered by this element.\n *\n * @param {ReactComponent|DOMElement} componentOrElement\n * @return {?DOMElement} The root node of this element.\n */\nfunction findDOMNode(componentOrElement) {\n  if (process.env.NODE_ENV !== 'production') {\n    var owner = ReactCurrentOwner.current;\n    if (owner !== null) {\n      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing getDOMNode or findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : undefined;\n      owner._warnedAboutRefsInRender = true;\n    }\n  }\n  if (componentOrElement == null) {\n    return null;\n  }\n  if (componentOrElement.nodeType === 1) {\n    return componentOrElement;\n  }\n  if (ReactInstanceMap.has(componentOrElement)) {\n    return ReactMount.getNodeFromInstance(componentOrElement);\n  }\n  !(componentOrElement.render == null || typeof componentOrElement.render !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : invariant(false) : undefined;\n  !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : invariant(false) : undefined;\n}\n\nmodule.exports = findDOMNode;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/findDOMNode.js\n ** module id = 43\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventCharCode\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * `charCode` represents the actual \"character code\" and is safe to use with\n * `String.fromCharCode`. As such, only keys that correspond to printable\n * characters produce a valid `charCode`, the only exception to this is Enter.\n * The Tab-key is considered non-printable and does not have a `charCode`,\n * presumably because it does not produce a tab-character in browsers.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {number} Normalized `charCode` property.\n */\nfunction getEventCharCode(nativeEvent) {\n  var charCode;\n  var keyCode = nativeEvent.keyCode;\n\n  if ('charCode' in nativeEvent) {\n    charCode = nativeEvent.charCode;\n\n    // FF does not set `charCode` for the Enter-key, check against `keyCode`.\n    if (charCode === 0 && keyCode === 13) {\n      charCode = 13;\n    }\n  } else {\n    // IE8 does not implement `charCode`, but `keyCode` has the correct value.\n    charCode = keyCode;\n  }\n\n  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.\n  // Must not discard the (non-)printable Enter-key.\n  if (charCode >= 32 || charCode === 13) {\n    return charCode;\n  }\n\n  return 0;\n}\n\nmodule.exports = getEventCharCode;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/getEventCharCode.js\n ** module id = 44\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventModifierState\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Translation from modifier key to the associated property in the event.\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers\n */\n\nvar modifierKeyToProp = {\n  'Alt': 'altKey',\n  'Control': 'ctrlKey',\n  'Meta': 'metaKey',\n  'Shift': 'shiftKey'\n};\n\n// IE8 does not implement getModifierState so we simply map it to the only\n// modifier keys exposed by the event itself, does not support Lock-keys.\n// Currently, all major browsers except Chrome seems to support Lock-keys.\nfunction modifierStateGetter(keyArg) {\n  var syntheticEvent = this;\n  var nativeEvent = syntheticEvent.nativeEvent;\n  if (nativeEvent.getModifierState) {\n    return nativeEvent.getModifierState(keyArg);\n  }\n  var keyProp = modifierKeyToProp[keyArg];\n  return keyProp ? !!nativeEvent[keyProp] : false;\n}\n\nfunction getEventModifierState(nativeEvent) {\n  return modifierStateGetter;\n}\n\nmodule.exports = getEventModifierState;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/getEventModifierState.js\n ** module id = 45\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventTarget\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Gets the target node from a native browser event by accounting for\n * inconsistencies in browser DOM APIs.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {DOMEventTarget} Target node.\n */\nfunction getEventTarget(nativeEvent) {\n  var target = nativeEvent.target || nativeEvent.srcElement || window;\n  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).\n  // @see http://www.quirksmode.org/js/events_properties.html\n  return target.nodeType === 3 ? target.parentNode : target;\n}\n\nmodule.exports = getEventTarget;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/getEventTarget.js\n ** module id = 46\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getIteratorFn\n * @typechecks static-only\n */\n\n'use strict';\n\n/* global Symbol */\nvar ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n/**\n * Returns the iterator method function contained on the iterable object.\n *\n * Be sure to invoke the function with the iterable as context:\n *\n *     var iteratorFn = getIteratorFn(myIterable);\n *     if (iteratorFn) {\n *       var iterator = iteratorFn.call(myIterable);\n *       ...\n *     }\n *\n * @param {?object} maybeIterable\n * @return {?function}\n */\nfunction getIteratorFn(maybeIterable) {\n  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n  if (typeof iteratorFn === 'function') {\n    return iteratorFn;\n  }\n}\n\nmodule.exports = getIteratorFn;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/getIteratorFn.js\n ** module id = 47\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule instantiateReactComponent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactCompositeComponent = require('./ReactCompositeComponent');\nvar ReactEmptyComponent = require('./ReactEmptyComponent');\nvar ReactNativeComponent = require('./ReactNativeComponent');\n\nvar assign = require('./Object.assign');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n// To avoid a cyclic dependency, we create the final class in this module\nvar ReactCompositeComponentWrapper = function () {};\nassign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {\n  _instantiateReactComponent: instantiateReactComponent\n});\n\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Check if the type reference is a known internal type. I.e. not a user\n * provided composite type.\n *\n * @param {function} type\n * @return {boolean} Returns true if this is a valid internal type.\n */\nfunction isInternalComponentType(type) {\n  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';\n}\n\n/**\n * Given a ReactNode, create an instance that will actually be mounted.\n *\n * @param {ReactNode} node\n * @return {object} A new instance of the element's constructor.\n * @protected\n */\nfunction instantiateReactComponent(node) {\n  var instance;\n\n  if (node === null || node === false) {\n    instance = new ReactEmptyComponent(instantiateReactComponent);\n  } else if (typeof node === 'object') {\n    var element = node;\n    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) ' + 'or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : invariant(false) : undefined;\n\n    // Special case string values\n    if (typeof element.type === 'string') {\n      instance = ReactNativeComponent.createInternalComponent(element);\n    } else if (isInternalComponentType(element.type)) {\n      // This is temporarily available for custom components that are not string\n      // representations. I.e. ART. Once those are updated to use the string\n      // representation, we can drop this code path.\n      instance = new element.type(element);\n    } else {\n      instance = new ReactCompositeComponentWrapper();\n    }\n  } else if (typeof node === 'string' || typeof node === 'number') {\n    instance = ReactNativeComponent.createInstanceForText(node);\n  } else {\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : invariant(false) : undefined;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(typeof instance.construct === 'function' && typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : undefined;\n  }\n\n  // Sets up the instance. This can probably just move into the constructor now.\n  instance.construct(node);\n\n  // These two fields are used by the DOM and ART diffing algorithms\n  // respectively. Instead of using expandos on components, we should be\n  // storing the state needed by the diffing algorithms elsewhere.\n  instance._mountIndex = 0;\n  instance._mountImage = null;\n\n  if (process.env.NODE_ENV !== 'production') {\n    instance._isOwnerNecessary = false;\n    instance._warnedAboutRefsInRender = false;\n  }\n\n  // Internal instances should fully constructed at this point, so they should\n  // not get any new fields added to them at this point.\n  if (process.env.NODE_ENV !== 'production') {\n    if (Object.preventExtensions) {\n      Object.preventExtensions(instance);\n    }\n  }\n\n  return instance;\n}\n\nmodule.exports = instantiateReactComponent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/instantiateReactComponent.js\n ** module id = 48\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule isEventSupported\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar useHasFeature;\nif (ExecutionEnvironment.canUseDOM) {\n  useHasFeature = document.implementation && document.implementation.hasFeature &&\n  // always returns true in newer browsers as per the standard.\n  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n  document.implementation.hasFeature('', '') !== true;\n}\n\n/**\n * Checks if an event is supported in the current execution environment.\n *\n * NOTE: This will not work correctly for non-generic events such as `change`,\n * `reset`, `load`, `error`, and `select`.\n *\n * Borrows from Modernizr.\n *\n * @param {string} eventNameSuffix Event name, e.g. \"click\".\n * @param {?boolean} capture Check if the capture phase is supported.\n * @return {boolean} True if the event is supported.\n * @internal\n * @license Modernizr 3.0.0pre (Custom Build) | MIT\n */\nfunction isEventSupported(eventNameSuffix, capture) {\n  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {\n    return false;\n  }\n\n  var eventName = 'on' + eventNameSuffix;\n  var isSupported = (eventName in document);\n\n  if (!isSupported) {\n    var element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\n\nmodule.exports = isEventSupported;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/isEventSupported.js\n ** module id = 49\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule setTextContent\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\nvar setInnerHTML = require('./setInnerHTML');\n\n/**\n * Set the textContent property of a node, ensuring that whitespace is preserved\n * even in IE8. innerText is a poor substitute for textContent and, among many\n * issues, inserts <br> instead of the literal newline chars. innerHTML behaves\n * as it should.\n *\n * @param {DOMElement} node\n * @param {string} text\n * @internal\n */\nvar setTextContent = function (node, text) {\n  node.textContent = text;\n};\n\nif (ExecutionEnvironment.canUseDOM) {\n  if (!('textContent' in document.documentElement)) {\n    setTextContent = function (node, text) {\n      setInnerHTML(node, escapeTextContentForBrowser(text));\n    };\n  }\n}\n\nmodule.exports = setTextContent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/setTextContent.js\n ** module id = 50\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule shouldUpdateReactComponent\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Given a `prevElement` and `nextElement`, determines if the existing\n * instance should be updated as opposed to being destroyed or replaced by a new\n * instance. Both arguments are elements. This ensures that this logic can\n * operate on stateless trees without any backing instance.\n *\n * @param {?object} prevElement\n * @param {?object} nextElement\n * @return {boolean} True if the existing instance should be updated.\n * @protected\n */\nfunction shouldUpdateReactComponent(prevElement, nextElement) {\n  var prevEmpty = prevElement === null || prevElement === false;\n  var nextEmpty = nextElement === null || nextElement === false;\n  if (prevEmpty || nextEmpty) {\n    return prevEmpty === nextEmpty;\n  }\n\n  var prevType = typeof prevElement;\n  var nextType = typeof nextElement;\n  if (prevType === 'string' || prevType === 'number') {\n    return nextType === 'string' || nextType === 'number';\n  } else {\n    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;\n  }\n  return false;\n}\n\nmodule.exports = shouldUpdateReactComponent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/shouldUpdateReactComponent.js\n ** module id = 51\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule traverseAllChildren\n */\n\n'use strict';\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactElement = require('./ReactElement');\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\n\nvar getIteratorFn = require('./getIteratorFn');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar SEPARATOR = ReactInstanceHandles.SEPARATOR;\nvar SUBSEPARATOR = ':';\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar userProvidedKeyEscaperLookup = {\n  '=': '=0',\n  '.': '=1',\n  ':': '=2'\n};\n\nvar userProvidedKeyEscapeRegex = /[=.:]/g;\n\nvar didWarnAboutMaps = false;\n\nfunction userProvidedKeyEscaper(match) {\n  return userProvidedKeyEscaperLookup[match];\n}\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  if (component && component.key != null) {\n    // Explicit key\n    return wrapUserProvidedKey(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\n/**\n * Escape a component key so that it is safe to use in a reactid.\n *\n * @param {*} text Component key to be escaped.\n * @return {string} An escaped string.\n */\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(userProvidedKeyEscapeRegex, userProvidedKeyEscaper);\n}\n\n/**\n * Wrap a `key` value explicitly provided by the user to distinguish it from\n * implicitly-generated keys generated by a component's index in its parent.\n *\n * @param {string} key Value of a user-provided `key` attribute\n * @return {string}\n */\nfunction wrapUserProvidedKey(key) {\n  return '$' + escapeUserProvidedKey(key);\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {\n    callback(traverseContext, children,\n    // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (iteratorFn) {\n      var iterator = iteratorFn.call(children);\n      var step;\n      if (iteratorFn !== children.entries) {\n        var ii = 0;\n        while (!(step = iterator.next()).done) {\n          child = step.value;\n          nextName = nextNamePrefix + getComponentKey(child, ii++);\n          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n        }\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.') : undefined;\n          didWarnAboutMaps = true;\n        }\n        // Iterator will provide entry [k,v] tuples rather than values.\n        while (!(step = iterator.next()).done) {\n          var entry = step.value;\n          if (entry) {\n            child = entry[1];\n            nextName = nextNamePrefix + wrapUserProvidedKey(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);\n            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n          }\n        }\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n      if (process.env.NODE_ENV !== 'production') {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';\n        if (children._isReactElement) {\n          addendum = ' It looks like you\\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';\n        }\n        if (ReactCurrentOwner.current) {\n          var name = ReactCurrentOwner.current.getName();\n          if (name) {\n            addendum += ' Check the render method of `' + name + '`.';\n          }\n        }\n      }\n      var childrenString = String(children);\n      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : invariant(false) : undefined;\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n\nmodule.exports = traverseAllChildren;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/traverseAllChildren.js\n ** module id = 52\n ** module chunks = 0\n **/","/**\n * Copyright 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule validateDOMNesting\n */\n\n'use strict';\n\nvar assign = require('./Object.assign');\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar warning = require('fbjs/lib/warning');\n\nvar validateDOMNesting = emptyFunction;\n\nif (process.env.NODE_ENV !== 'production') {\n  // This validation code was written based on the HTML5 parsing spec:\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n  //\n  // Note: this does not catch all invalid nesting, nor does it try to (as it's\n  // not clear what practical benefit doing so provides); instead, we warn only\n  // for cases where the parser will give a parse tree differing from what React\n  // intended. For example, <b><div></div></b> is invalid but we don't warn\n  // because it still parses correctly; we do warn for other cases like nested\n  // <p> tags where the beginning of the second element implicitly closes the\n  // first, causing a confusing mess.\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#special\n  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point\n  // TODO: Distinguish by namespace here -- for <title>, including it here\n  // errs on the side of fewer warnings\n  'foreignObject', 'desc', 'title'];\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope\n  var buttonScopeTags = inScopeTags.concat(['button']);\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags\n  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];\n\n  var emptyAncestorInfo = {\n    parentTag: null,\n\n    formTag: null,\n    aTagInScope: null,\n    buttonTagInScope: null,\n    nobrTagInScope: null,\n    pTagInButtonScope: null,\n\n    listItemTagAutoclosing: null,\n    dlItemTagAutoclosing: null\n  };\n\n  var updatedAncestorInfo = function (oldInfo, tag, instance) {\n    var ancestorInfo = assign({}, oldInfo || emptyAncestorInfo);\n    var info = { tag: tag, instance: instance };\n\n    if (inScopeTags.indexOf(tag) !== -1) {\n      ancestorInfo.aTagInScope = null;\n      ancestorInfo.buttonTagInScope = null;\n      ancestorInfo.nobrTagInScope = null;\n    }\n    if (buttonScopeTags.indexOf(tag) !== -1) {\n      ancestorInfo.pTagInButtonScope = null;\n    }\n\n    // See rules for 'li', 'dd', 'dt' start tags in\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {\n      ancestorInfo.listItemTagAutoclosing = null;\n      ancestorInfo.dlItemTagAutoclosing = null;\n    }\n\n    ancestorInfo.parentTag = info;\n\n    if (tag === 'form') {\n      ancestorInfo.formTag = info;\n    }\n    if (tag === 'a') {\n      ancestorInfo.aTagInScope = info;\n    }\n    if (tag === 'button') {\n      ancestorInfo.buttonTagInScope = info;\n    }\n    if (tag === 'nobr') {\n      ancestorInfo.nobrTagInScope = info;\n    }\n    if (tag === 'p') {\n      ancestorInfo.pTagInButtonScope = info;\n    }\n    if (tag === 'li') {\n      ancestorInfo.listItemTagAutoclosing = info;\n    }\n    if (tag === 'dd' || tag === 'dt') {\n      ancestorInfo.dlItemTagAutoclosing = info;\n    }\n\n    return ancestorInfo;\n  };\n\n  /**\n   * Returns whether\n   */\n  var isTagValidWithParent = function (tag, parentTag) {\n    // First, let's check if we're in an unusual parsing mode...\n    switch (parentTag) {\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect\n      case 'select':\n        return tag === 'option' || tag === 'optgroup' || tag === '#text';\n      case 'optgroup':\n        return tag === 'option' || tag === '#text';\n      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>\n      // but\n      case 'option':\n        return tag === '#text';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption\n      // No special behavior since these rules fall back to \"in body\" mode for\n      // all except special table nodes which cause bad parsing behavior anyway.\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr\n      case 'tr':\n        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody\n      case 'tbody':\n      case 'thead':\n      case 'tfoot':\n        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup\n      case 'colgroup':\n        return tag === 'col' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable\n      case 'table':\n        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead\n      case 'head':\n        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element\n      case 'html':\n        return tag === 'head' || tag === 'body';\n    }\n\n    // Probably in the \"in body\" parsing mode, so we outlaw only tag combos\n    // where the parsing rules cause implicit opens or closes to be added.\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n    switch (tag) {\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'h5':\n      case 'h6':\n        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';\n\n      case 'rp':\n      case 'rt':\n        return impliedEndTags.indexOf(parentTag) === -1;\n\n      case 'caption':\n      case 'col':\n      case 'colgroup':\n      case 'frame':\n      case 'head':\n      case 'tbody':\n      case 'td':\n      case 'tfoot':\n      case 'th':\n      case 'thead':\n      case 'tr':\n        // These tags are only valid with a few parents that have special child\n        // parsing rules -- if we're down here, then none of those matched and\n        // so we allow it only if we don't know what the parent is, as all other\n        // cases are invalid.\n        return parentTag == null;\n    }\n\n    return true;\n  };\n\n  /**\n   * Returns whether\n   */\n  var findInvalidAncestorForTag = function (tag, ancestorInfo) {\n    switch (tag) {\n      case 'address':\n      case 'article':\n      case 'aside':\n      case 'blockquote':\n      case 'center':\n      case 'details':\n      case 'dialog':\n      case 'dir':\n      case 'div':\n      case 'dl':\n      case 'fieldset':\n      case 'figcaption':\n      case 'figure':\n      case 'footer':\n      case 'header':\n      case 'hgroup':\n      case 'main':\n      case 'menu':\n      case 'nav':\n      case 'ol':\n      case 'p':\n      case 'section':\n      case 'summary':\n      case 'ul':\n\n      case 'pre':\n      case 'listing':\n\n      case 'table':\n\n      case 'hr':\n\n      case 'xmp':\n\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'h5':\n      case 'h6':\n        return ancestorInfo.pTagInButtonScope;\n\n      case 'form':\n        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;\n\n      case 'li':\n        return ancestorInfo.listItemTagAutoclosing;\n\n      case 'dd':\n      case 'dt':\n        return ancestorInfo.dlItemTagAutoclosing;\n\n      case 'button':\n        return ancestorInfo.buttonTagInScope;\n\n      case 'a':\n        // Spec says something about storing a list of markers, but it sounds\n        // equivalent to this check.\n        return ancestorInfo.aTagInScope;\n\n      case 'nobr':\n        return ancestorInfo.nobrTagInScope;\n    }\n\n    return null;\n  };\n\n  /**\n   * Given a ReactCompositeComponent instance, return a list of its recursive\n   * owners, starting at the root and ending with the instance itself.\n   */\n  var findOwnerStack = function (instance) {\n    if (!instance) {\n      return [];\n    }\n\n    var stack = [];\n    /*eslint-disable space-after-keywords */\n    do {\n      /*eslint-enable space-after-keywords */\n      stack.push(instance);\n    } while (instance = instance._currentElement._owner);\n    stack.reverse();\n    return stack;\n  };\n\n  var didWarn = {};\n\n  validateDOMNesting = function (childTag, childInstance, ancestorInfo) {\n    ancestorInfo = ancestorInfo || emptyAncestorInfo;\n    var parentInfo = ancestorInfo.parentTag;\n    var parentTag = parentInfo && parentInfo.tag;\n\n    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;\n    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);\n    var problematic = invalidParent || invalidAncestor;\n\n    if (problematic) {\n      var ancestorTag = problematic.tag;\n      var ancestorInstance = problematic.instance;\n\n      var childOwner = childInstance && childInstance._currentElement._owner;\n      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;\n\n      var childOwners = findOwnerStack(childOwner);\n      var ancestorOwners = findOwnerStack(ancestorOwner);\n\n      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);\n      var i;\n\n      var deepestCommon = -1;\n      for (i = 0; i < minStackLen; i++) {\n        if (childOwners[i] === ancestorOwners[i]) {\n          deepestCommon = i;\n        } else {\n          break;\n        }\n      }\n\n      var UNKNOWN = '(unknown)';\n      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {\n        return inst.getName() || UNKNOWN;\n      });\n      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {\n        return inst.getName() || UNKNOWN;\n      });\n      var ownerInfo = [].concat(\n      // If the parent and child instances have a common owner ancestor, start\n      // with that -- otherwise we just start with the parent's owners.\n      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,\n      // If we're warning about an invalid (non-parent) ancestry, add '...'\n      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');\n\n      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;\n      if (didWarn[warnKey]) {\n        return;\n      }\n      didWarn[warnKey] = true;\n\n      if (invalidParent) {\n        var info = '';\n        if (ancestorTag === 'table' && childTag === 'tr') {\n          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';\n        }\n        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): <%s> cannot appear as a child of <%s>. ' + 'See %s.%s', childTag, ancestorTag, ownerInfo, info) : undefined;\n      } else {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): <%s> cannot appear as a descendant of ' + '<%s>. See %s.', childTag, ancestorTag, ownerInfo) : undefined;\n      }\n    }\n  };\n\n  validateDOMNesting.ancestorInfoContextKey = '__validateDOMNesting_ancestorInfo$' + Math.random().toString(36).slice(2);\n\n  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;\n\n  // For testing\n  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {\n    ancestorInfo = ancestorInfo || emptyAncestorInfo;\n    var parentInfo = ancestorInfo.parentTag;\n    var parentTag = parentInfo && parentInfo.tag;\n    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);\n  };\n}\n\nmodule.exports = validateDOMNesting;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/validateDOMNesting.js\n ** module id = 53\n ** module chunks = 0\n **/","{any, curry, evolve, keys, merge, over, pick, prop, props} = require 'ramda' #auto_require:ramda\n{cc, yforEach} = require 'ramda-extras'\nlo = require 'lodash'\nReact = require 'react'\n\n# Evolves the state of the component according to spec (optional cb)\nevolveState = (component, spec, cb) ->\n\tstate = pick keys(spec), component.state\n\tcomponent.setState evolve(spec, state), cb\n\n# Evolves the state of the component according to spec (optional cb)\nmergeState = (component, spec, cb) ->\n\tstateCopy = lo.cloneDeep component.state\n\tcomponent.setState lo.merge(stateCopy, spec), cb\n\nadjustState = (component, f, cb) ->\n\tresult = f component.state\n\tcomponent.setState result, cb\n\n# comp, obj, [comp] -> comp\n# takes care of the React.createFactory dance for you\nbuild = (comp, props, children...) ->\n\treturn React.createElement comp, props, children...\n\n# o -> o -> o -> o\n# Helps implements the \"theme-pattern\" which works as follows:\n# A component typically have a default styling (componentStyle), but\n# you can override this by require-ing it and modify it however you want.\n# You then need to supply the modified object as the 'theme' prop to the\n# component which in turn will use that theme as it's base style instead\n# of its default styling. Any extra style supplied to the component via\n# the 'style' prop will be merged over the base theme.\n# This utility-function helps you to implement this pattern in a component\n# and makes sure there is only one way component implements this pattern.\n# e.g.\tcomponentStyle = require './MyComponent.style'\n#\t\t\t\tpropsToUse = propsUsingTheme componentStyle, @props\napplyTheme = curry (componentStyle, props) ->\n\t# use supplied theme from props or, if not supplied, componentStyle\n\tbaseStyle = props.theme || componentStyle\n\t# merge baseStyle with any special style supplied as prop\n\textraStyle = props.style || {}\n\treturn merge {style: merge(baseStyle, extraStyle)}, props\n\nmodule.exports = {evolveState, mergeState, adjustState, applyTheme, build}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils/react.coffee\n **/","{assoc, dissoc, either, has, identity, ifElse, inc, join, map, pair, remove, toPairs, type, values, without} = R = require 'ramda' #auto_require:ramda\n{cc, isEmptyObj, mergeOrEvolve} = require 'ramda-extras'\n\n# -> {k:v}   # returns current query string as object\n# http://stackoverflow.com/questions/647259/javascript-query-string\ngetQuery = ->\n\tresult = {}\n\tqueryString = location.search.slice(1)\n\tre = /([^&=]+)=([^&]*)/g\n\tm = undefined\n\twhile m = re.exec(queryString)\n\t\tv = decodeURIComponent(m[2])\n\n\t\t# some simple parsing\n\t\tvalue = switch\n\t\t\twhen v == 'true' then true\n\t\t\twhen v == 'false' then false\n\t\t\telse v\n\n\t\tresult[decodeURIComponent(m[1])] = value\n\treturn result\n\n# -> s   # Returns current url without query string\n# http://stackoverflow.com/a/5817566/416797\nurlWithoutQuery = -> [location.protocol, '//', location.host, location.pathname].join('')\n\n# [k, v] -> s\n# Takes a key value pair and returns their query string representation\n_kvToQuery = ([k, v]) -> \"#{k}=#{v}\"\n\n# o -> s\n# Takes an object with key-values and returns it's \"query string equivalent\"\n# e.g. toQueryString {page: 'login', user: 'Max'} returns '?page=login&user=Max'\ntoQueryString = (o) -> '?' + cc join('&'), map(_kvToQuery), toPairs, o\n\n# {f, o, s} -> s\n# Returns an url (string) that for instance can be used in an a-tag as href.\n# The returned url is constructed by applying f to the current query or doing\n# a mergeEvolve on it using spec.\n# e.g.\n#   invoke with function f:\n#    \"remove\":\tcreateUrl dissoc('small')\n#               given '/?stats=true&small=true' returns '/?stats=true' \n#    \"toggle\":\tcreateUrl ifElse(has('small'), dissoc('small'), assoc('small', true))\n#\t\t\t\t\t\t\t\tgiven '/?small=true' returns '/?small=false'\n#\t\t\t\t\t\t\t\tgiven '/?' returns '/?small=true' \n#\n#\t\tinvoke with object spec:\n#     \"inc\":    createUrl {count: inc}\n#               given '/?count=1' returns '/?count=2'\ncreateUrl = ({f, spec, url}) ->\n\turlToUse = url || urlWithoutQuery()\n\tif f\n\t\treturn urlToUse + toQueryString(f(getQuery()))\n\telse if spec\n\t\tnewQuery = mergeOrEvolve spec, getQuery()\n\t\treturn urlToUse + toQueryString(newQuery)\n\telse throw Error 'createUrl must be called with either f or spec'\n\n# (s|f|o) -> s\n# Helper that provides a polymorphic interface to createUrl.\n# Note that if called with a string, this functions assumes you've already\n# constructed the desired url and therefore just returns it. If you whish\n# to use the \"url\" argument of createUrl, use that function directly.\ncreateUrlHelper = (urlOrFnOrObj) ->\n\tif R.is String, urlOrFnOrObj then urlOrFnOrObj\n\telse if R.is Function, urlOrFnOrObj then createUrl {f: urlOrFnOrObj}\n\telse if R.is Object, urlOrFnOrObj then createUrl {spec: urlOrFnOrObj}\n\n# (s|f|o) -> null\n# Does a \"modern\" navigate using pushState and dispatchEvent.\n# For more information on urlOrFnOrObj see createUrlHelper.\nnavigate = (urlOrFnOrObj) ->\n\turl = createUrlHelper urlOrFnOrObj\n\t# idea from https://github.com/larrymyers/react-mini-router/blob/master/lib/navigate.js\n\twindow.history.pushState {}, '', url\n\twindow.dispatchEvent new window.Event('popstate')\n\treturn null # return null to work around warning, see navigateCallback\n\n\n##### CALLBACK UTILS ##########################################################\n\n# o -> bool\t # returns true if user clicked using left mouse\n# stolen from https://github.com/rackt/react-router/blob/master/modules/Link.js\n_isLeftClickEvent = (e) -> e.button == 0\n\n# o -> bool\t # returns true if user clicked while modifier was pressed\n_isModifiedEvent = (e) -> !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)\n\n# o -> undefined\t Shorthand to stop propagation\nstop = (e) -> e.stopPropagation()\n\n# (s|f|o) -> f(e) -> e\n# Returns a callback to use for onClick in a(href) elements. Does a \"modern\"\n# navigate using pushState.\n# For more information on urlOrFnOrObj see createUrlHelper.\nnav = (urlOrFnOrObj) -> (e) ->\n\t# if a user clicks with the mouse-wheel or using e.g. cmd + click\n\t# we have to abord and let the browser open that link in a new tab / window\n\tif _isModifiedEvent(e) || !_isLeftClickEvent(e) then return e\n\n\tnavigate createUrlHelper urlOrFnOrObj \n\te.preventDefault()\n\t# if we return false or true we get error msg from react\n\t# 'Warning: Returning `false` from an event handler is deprecated'\n\treturn e # ..so we're returning the event\n\n# (s|f|o) -> f(e) -> null\n# NOTE: To get standard web behaviour, you should use links and the nav function.\n#\t\t\t\tIf you anyway want to navigate somewhere when clicking a button or similar,\n#\t\t\t\tthis function could be used as some kind of onClick handler.\n# Does a \"modern\" navigate using pushState and dispatchEvent.\n# For more information on urlOrFnOrObj see createUrlHelper.\nnav2 = (urlOrFnOrObj) -> (e) ->\n\te.stopPropagation()\n\tnavigate createUrlHelper urlOrFnOrObj \n\treturn null # return null to work around warning, see navigateCallback\n\nmodule.exports = {getQuery, urlWithoutQuery, createUrl, createUrlHelper, navigate,\nnav, nav2, stop}\n\n## ideas that were removed but might be used later: ----------------------------------------\n# # :: {url, f} -> {k:v}\n# # returns a new url based on passed url or current url and f applied to current query\n# adjustUrl = ({url, f}) ->\n# \turlToUse = url || urlWithoutQuery()\n# \tif f then newQuery = cc toQueryString, f, getQuery()\n# \treturn urlToUse + (newQuery || getQuery())\n\n\n# # (s|f|o) -> s\n# # Returns an url (string) that for instance can be used in an a-tag as href.\n# # Note that this doesn't do anything with push-state, it just returns a string.\n# # urlOrFnOrObj can be called with either a string, a function or an object and\n# # simply speaking does an \"identity\", \"function application\" or \"mergeOrEvolve\"\n# # e.g.\n# # \tinvoke with string:   href '/profile'    returns '/profile'\n# #\n# #   invoke with function:\n# #    \"remove\":\thref dissoc('small')\n# #               returns '/?stats=true' given '/?stats=true&small=true'\n# #    \"toggle\":\thref ifElse(has('small'), dissoc('small'), assoc('small', true))\n# #\t\t\t\t\t\t\t\treturns '/?small=false' given '/?small=true'\n# #\t\t\t\t\t\t\t\treturns '/?small=true' given '/?'\n# #\n# #\t\tinvoke with object: \n# #     \"inc\":    href {count: inc}\n# #               returns '/?count=2' given '/?count=1'\n# # TODO: ta bort fallet sträng. I det fallet får man inse det själv och inte kalla på den här funktionen, kanske något sånt här\n# # createUrl = ({f, spec, url}) -> dvs, en blandning mellan det här och adjustUrl\n# createUrl = (urlOrFnOrObj) ->\n# \tif R.is String, urlOrFnOrObj then return urlOrFnOrObj\n# \tif R.is Function, urlOrFnOrObj\n# \t\tnewQuery = urlOrFnOrObj getQuery()\n# \t\treturn urlWithoutQuery() + (toQueryString(newQuery) || '')\n# \telse if R.is Object, urlOrFnOrObj\n# \t\tnewQuery = mergeOrEvolve urlOrFnOrObj, getQuery()\n# \t\treturn urlWithoutQuery() + (toQueryString(newQuery) || '')\n# \telse throw Error \"navigate must be called with arg of type\n# \t(str | obj | func), got #{typeof urlOrFnOrObj}\"\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils/url.coffee\n **/","{PropTypes: {string, func, object, oneOfType}} = React = require 'react'\nRadium = require 'radium'\n{all, any, merge, omit, props} = require 'ramda' #auto_require:ramda\n{cc} = require 'ramda-extras'\n{a} = React.DOM\n{createUrlHelper, nav} = require '../utils/url'\n{applyTheme} = require '../utils/react'\n\n\nLink = Radium React.createClass\n\tdisplayName: 'Link'\n\n\tpropTypes:\n\t\tto: oneOfType([func, object, string])\n\t\thref: string # if href is used, will behave like a \"dumb\" link\n\t\ttheme: object\n\t\t# NOTE: this component will transfer all props you supply to it's child\n\n\trender: ->\n\t\t{to, href} = @props\n\t\tomitSpecialProps = omit ['to', 'theme']\n\t\t# null supplied since Link doesn't have any default component style\n\t\totherProps = cc applyTheme(null), omitSpecialProps, @props\n\t\tif href then return a otherProps\n\t\t\n\t\thref = createUrlHelper to\n\t\tlinkProps = {href, onClick: nav(href)}\n\t\ta merge(linkProps, otherProps)\n\nmodule.exports = Link\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/views/Link.coffee\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CSSProperty\n */\n\n'use strict';\n\n/**\n * CSS properties which accept numbers but are not in units of \"px\".\n */\nvar isUnitlessNumber = {\n  animationIterationCount: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n\n  // SVG-related properties\n  fillOpacity: true,\n  stopOpacity: true,\n  strokeDashoffset: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n\n/**\n * @param {string} prefix vendor-specific prefix, eg: Webkit\n * @param {string} key style name, eg: transitionDuration\n * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\n * WebkitTransitionDuration\n */\nfunction prefixKey(prefix, key) {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n}\n\n/**\n * Support style names that may come passed in prefixed by adding permutations\n * of vendor prefixes.\n */\nvar prefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\n// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\n// infinite loop, because it iterates over the newly added props too.\nObject.keys(isUnitlessNumber).forEach(function (prop) {\n  prefixes.forEach(function (prefix) {\n    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\n  });\n});\n\n/**\n * Most style properties can be unset by doing .style[prop] = '' but IE8\n * doesn't like doing that with shorthand properties so for the properties that\n * IE8 breaks on, which are listed here, we instead unset each of the\n * individual properties. See http://bugs.jquery.com/ticket/12385.\n * The 4-value 'clock' properties like margin, padding, border-width seem to\n * behave without any problems. Curiously, list-style works too without any\n * special prodding.\n */\nvar shorthandPropertyExpansions = {\n  background: {\n    backgroundAttachment: true,\n    backgroundColor: true,\n    backgroundImage: true,\n    backgroundPositionX: true,\n    backgroundPositionY: true,\n    backgroundRepeat: true\n  },\n  backgroundPosition: {\n    backgroundPositionX: true,\n    backgroundPositionY: true\n  },\n  border: {\n    borderWidth: true,\n    borderStyle: true,\n    borderColor: true\n  },\n  borderBottom: {\n    borderBottomWidth: true,\n    borderBottomStyle: true,\n    borderBottomColor: true\n  },\n  borderLeft: {\n    borderLeftWidth: true,\n    borderLeftStyle: true,\n    borderLeftColor: true\n  },\n  borderRight: {\n    borderRightWidth: true,\n    borderRightStyle: true,\n    borderRightColor: true\n  },\n  borderTop: {\n    borderTopWidth: true,\n    borderTopStyle: true,\n    borderTopColor: true\n  },\n  font: {\n    fontStyle: true,\n    fontVariant: true,\n    fontWeight: true,\n    fontSize: true,\n    lineHeight: true,\n    fontFamily: true\n  },\n  outline: {\n    outlineWidth: true,\n    outlineStyle: true,\n    outlineColor: true\n  }\n};\n\nvar CSSProperty = {\n  isUnitlessNumber: isUnitlessNumber,\n  shorthandPropertyExpansions: shorthandPropertyExpansions\n};\n\nmodule.exports = CSSProperty;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/CSSProperty.js\n ** module id = 57\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMChildrenOperations\n * @typechecks static-only\n */\n\n'use strict';\n\nvar Danger = require('./Danger');\nvar ReactMultiChildUpdateTypes = require('./ReactMultiChildUpdateTypes');\nvar ReactPerf = require('./ReactPerf');\n\nvar setInnerHTML = require('./setInnerHTML');\nvar setTextContent = require('./setTextContent');\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Inserts `childNode` as a child of `parentNode` at the `index`.\n *\n * @param {DOMElement} parentNode Parent node in which to insert.\n * @param {DOMElement} childNode Child node to insert.\n * @param {number} index Index at which to insert the child.\n * @internal\n */\nfunction insertChildAt(parentNode, childNode, index) {\n  // By exploiting arrays returning `undefined` for an undefined index, we can\n  // rely exclusively on `insertBefore(node, null)` instead of also using\n  // `appendChild(node)`. However, using `undefined` is not allowed by all\n  // browsers so we must replace it with `null`.\n\n  // fix render order error in safari\n  // IE8 will throw error when index out of list size.\n  var beforeChild = index >= parentNode.childNodes.length ? null : parentNode.childNodes.item(index);\n\n  parentNode.insertBefore(childNode, beforeChild);\n}\n\n/**\n * Operations for updating with DOM children.\n */\nvar DOMChildrenOperations = {\n\n  dangerouslyReplaceNodeWithMarkup: Danger.dangerouslyReplaceNodeWithMarkup,\n\n  updateTextContent: setTextContent,\n\n  /**\n   * Updates a component's children by processing a series of updates. The\n   * update configurations are each expected to have a `parentNode` property.\n   *\n   * @param {array<object>} updates List of update configurations.\n   * @param {array<string>} markupList List of markup strings.\n   * @internal\n   */\n  processUpdates: function (updates, markupList) {\n    var update;\n    // Mapping from parent IDs to initial child orderings.\n    var initialChildren = null;\n    // List of children that will be moved or removed.\n    var updatedChildren = null;\n\n    for (var i = 0; i < updates.length; i++) {\n      update = updates[i];\n      if (update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING || update.type === ReactMultiChildUpdateTypes.REMOVE_NODE) {\n        var updatedIndex = update.fromIndex;\n        var updatedChild = update.parentNode.childNodes[updatedIndex];\n        var parentID = update.parentID;\n\n        !updatedChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processUpdates(): Unable to find child %s of element. This ' + 'probably means the DOM was unexpectedly mutated (e.g., by the ' + 'browser), usually due to forgetting a <tbody> when using tables, ' + 'nesting tags like <form>, <p>, or <a>, or using non-SVG elements ' + 'in an <svg> parent. Try inspecting the child nodes of the element ' + 'with React ID `%s`.', updatedIndex, parentID) : invariant(false) : undefined;\n\n        initialChildren = initialChildren || {};\n        initialChildren[parentID] = initialChildren[parentID] || [];\n        initialChildren[parentID][updatedIndex] = updatedChild;\n\n        updatedChildren = updatedChildren || [];\n        updatedChildren.push(updatedChild);\n      }\n    }\n\n    var renderedMarkup;\n    // markupList is either a list of markup or just a list of elements\n    if (markupList.length && typeof markupList[0] === 'string') {\n      renderedMarkup = Danger.dangerouslyRenderMarkup(markupList);\n    } else {\n      renderedMarkup = markupList;\n    }\n\n    // Remove updated children first so that `toIndex` is consistent.\n    if (updatedChildren) {\n      for (var j = 0; j < updatedChildren.length; j++) {\n        updatedChildren[j].parentNode.removeChild(updatedChildren[j]);\n      }\n    }\n\n    for (var k = 0; k < updates.length; k++) {\n      update = updates[k];\n      switch (update.type) {\n        case ReactMultiChildUpdateTypes.INSERT_MARKUP:\n          insertChildAt(update.parentNode, renderedMarkup[update.markupIndex], update.toIndex);\n          break;\n        case ReactMultiChildUpdateTypes.MOVE_EXISTING:\n          insertChildAt(update.parentNode, initialChildren[update.parentID][update.fromIndex], update.toIndex);\n          break;\n        case ReactMultiChildUpdateTypes.SET_MARKUP:\n          setInnerHTML(update.parentNode, update.content);\n          break;\n        case ReactMultiChildUpdateTypes.TEXT_CONTENT:\n          setTextContent(update.parentNode, update.content);\n          break;\n        case ReactMultiChildUpdateTypes.REMOVE_NODE:\n          // Already removed by the for-loop above.\n          break;\n      }\n    }\n  }\n\n};\n\nReactPerf.measureMethods(DOMChildrenOperations, 'DOMChildrenOperations', {\n  updateTextContent: 'updateTextContent'\n});\n\nmodule.exports = DOMChildrenOperations;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/DOMChildrenOperations.js\n ** module id = 58\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPluginRegistry\n * @typechecks static-only\n */\n\n'use strict';\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Injectable ordering of event plugins.\n */\nvar EventPluginOrder = null;\n\n/**\n * Injectable mapping from names to event plugin modules.\n */\nvar namesToPlugins = {};\n\n/**\n * Recomputes the plugin list using the injected plugins and plugin ordering.\n *\n * @private\n */\nfunction recomputePluginOrdering() {\n  if (!EventPluginOrder) {\n    // Wait until an `EventPluginOrder` is injected.\n    return;\n  }\n  for (var pluginName in namesToPlugins) {\n    var PluginModule = namesToPlugins[pluginName];\n    var pluginIndex = EventPluginOrder.indexOf(pluginName);\n    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in ' + 'the plugin ordering, `%s`.', pluginName) : invariant(false) : undefined;\n    if (EventPluginRegistry.plugins[pluginIndex]) {\n      continue;\n    }\n    !PluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` ' + 'method, but `%s` does not.', pluginName) : invariant(false) : undefined;\n    EventPluginRegistry.plugins[pluginIndex] = PluginModule;\n    var publishedEvents = PluginModule.eventTypes;\n    for (var eventName in publishedEvents) {\n      !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : invariant(false) : undefined;\n    }\n  }\n}\n\n/**\n * Publishes an event so that it can be dispatched by the supplied plugin.\n *\n * @param {object} dispatchConfig Dispatch configuration for the event.\n * @param {object} PluginModule Plugin publishing the event.\n * @return {boolean} True if the event was successfully published.\n * @private\n */\nfunction publishEventForPlugin(dispatchConfig, PluginModule, eventName) {\n  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'event name, `%s`.', eventName) : invariant(false) : undefined;\n  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;\n\n  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n  if (phasedRegistrationNames) {\n    for (var phaseName in phasedRegistrationNames) {\n      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {\n        var phasedRegistrationName = phasedRegistrationNames[phaseName];\n        publishRegistrationName(phasedRegistrationName, PluginModule, eventName);\n      }\n    }\n    return true;\n  } else if (dispatchConfig.registrationName) {\n    publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Publishes a registration name that is used to identify dispatched events and\n * can be used with `EventPluginHub.putListener` to register listeners.\n *\n * @param {string} registrationName Registration name to add.\n * @param {object} PluginModule Plugin publishing the event.\n * @private\n */\nfunction publishRegistrationName(registrationName, PluginModule, eventName) {\n  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'registration name, `%s`.', registrationName) : invariant(false) : undefined;\n  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;\n  EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;\n}\n\n/**\n * Registers plugins so that they can extract and dispatch events.\n *\n * @see {EventPluginHub}\n */\nvar EventPluginRegistry = {\n\n  /**\n   * Ordered list of injected plugins.\n   */\n  plugins: [],\n\n  /**\n   * Mapping from event name to dispatch config\n   */\n  eventNameDispatchConfigs: {},\n\n  /**\n   * Mapping from registration name to plugin module\n   */\n  registrationNameModules: {},\n\n  /**\n   * Mapping from registration name to event name\n   */\n  registrationNameDependencies: {},\n\n  /**\n   * Injects an ordering of plugins (by plugin name). This allows the ordering\n   * to be decoupled from injection of the actual plugins so that ordering is\n   * always deterministic regardless of packaging, on-the-fly injection, etc.\n   *\n   * @param {array} InjectedEventPluginOrder\n   * @internal\n   * @see {EventPluginHub.injection.injectEventPluginOrder}\n   */\n  injectEventPluginOrder: function (InjectedEventPluginOrder) {\n    !!EventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than ' + 'once. You are likely trying to load more than one copy of React.') : invariant(false) : undefined;\n    // Clone the ordering so it cannot be dynamically mutated.\n    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);\n    recomputePluginOrdering();\n  },\n\n  /**\n   * Injects plugins to be used by `EventPluginHub`. The plugin names must be\n   * in the ordering injected by `injectEventPluginOrder`.\n   *\n   * Plugins can be injected as part of page initialization or on-the-fly.\n   *\n   * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n   * @internal\n   * @see {EventPluginHub.injection.injectEventPluginsByName}\n   */\n  injectEventPluginsByName: function (injectedNamesToPlugins) {\n    var isOrderingDirty = false;\n    for (var pluginName in injectedNamesToPlugins) {\n      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {\n        continue;\n      }\n      var PluginModule = injectedNamesToPlugins[pluginName];\n      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {\n        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins ' + 'using the same name, `%s`.', pluginName) : invariant(false) : undefined;\n        namesToPlugins[pluginName] = PluginModule;\n        isOrderingDirty = true;\n      }\n    }\n    if (isOrderingDirty) {\n      recomputePluginOrdering();\n    }\n  },\n\n  /**\n   * Looks up the plugin for the supplied event.\n   *\n   * @param {object} event A synthetic event.\n   * @return {?object} The plugin that created the supplied event.\n   * @internal\n   */\n  getPluginModuleForEvent: function (event) {\n    var dispatchConfig = event.dispatchConfig;\n    if (dispatchConfig.registrationName) {\n      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;\n    }\n    for (var phase in dispatchConfig.phasedRegistrationNames) {\n      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {\n        continue;\n      }\n      var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];\n      if (PluginModule) {\n        return PluginModule;\n      }\n    }\n    return null;\n  },\n\n  /**\n   * Exposed for unit testing.\n   * @private\n   */\n  _resetEventPlugins: function () {\n    EventPluginOrder = null;\n    for (var pluginName in namesToPlugins) {\n      if (namesToPlugins.hasOwnProperty(pluginName)) {\n        delete namesToPlugins[pluginName];\n      }\n    }\n    EventPluginRegistry.plugins.length = 0;\n\n    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;\n    for (var eventName in eventNameDispatchConfigs) {\n      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {\n        delete eventNameDispatchConfigs[eventName];\n      }\n    }\n\n    var registrationNameModules = EventPluginRegistry.registrationNameModules;\n    for (var registrationName in registrationNameModules) {\n      if (registrationNameModules.hasOwnProperty(registrationName)) {\n        delete registrationNameModules[registrationName];\n      }\n    }\n  }\n\n};\n\nmodule.exports = EventPluginRegistry;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/EventPluginRegistry.js\n ** module id = 59\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactChildren\n */\n\n'use strict';\n\nvar PooledClass = require('./PooledClass');\nvar ReactElement = require('./ReactElement');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar traverseAllChildren = require('./traverseAllChildren');\n\nvar twoArgumentPooler = PooledClass.twoArgumentPooler;\nvar fourArgumentPooler = PooledClass.fourArgumentPooler;\n\nvar userProvidedKeyEscapeRegex = /\\/(?!\\/)/g;\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(userProvidedKeyEscapeRegex, '//');\n}\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * traversal. Allows avoiding binding callbacks.\n *\n * @constructor ForEachBookKeeping\n * @param {!function} forEachFunction Function to perform traversal with.\n * @param {?*} forEachContext Context to perform context with.\n */\nfunction ForEachBookKeeping(forEachFunction, forEachContext) {\n  this.func = forEachFunction;\n  this.context = forEachContext;\n  this.count = 0;\n}\nForEachBookKeeping.prototype.destructor = function () {\n  this.func = null;\n  this.context = null;\n  this.count = 0;\n};\nPooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);\n\nfunction forEachSingleChild(bookKeeping, child, name) {\n  var func = bookKeeping.func;\n  var context = bookKeeping.context;\n\n  func.call(context, child, bookKeeping.count++);\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  ForEachBookKeeping.release(traverseContext);\n}\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * mapping. Allows avoiding binding callbacks.\n *\n * @constructor MapBookKeeping\n * @param {!*} mapResult Object containing the ordered map of results.\n * @param {!function} mapFunction Function to perform mapping with.\n * @param {?*} mapContext Context to perform mapping with.\n */\nfunction MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {\n  this.result = mapResult;\n  this.keyPrefix = keyPrefix;\n  this.func = mapFunction;\n  this.context = mapContext;\n  this.count = 0;\n}\nMapBookKeeping.prototype.destructor = function () {\n  this.result = null;\n  this.keyPrefix = null;\n  this.func = null;\n  this.context = null;\n  this.count = 0;\n};\nPooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);\n\nfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\n  var result = bookKeeping.result;\n  var keyPrefix = bookKeeping.keyPrefix;\n  var func = bookKeeping.func;\n  var context = bookKeeping.context;\n\n  var mappedChild = func.call(context, child, bookKeeping.count++);\n  if (Array.isArray(mappedChild)) {\n    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);\n  } else if (mappedChild != null) {\n    if (ReactElement.isValidElement(mappedChild)) {\n      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,\n      // Keep both the (mapped) and old keys if they differ, just as\n      // traverseAllChildren used to do for objects as children\n      keyPrefix + (mappedChild !== child ? escapeUserProvidedKey(mappedChild.key || '') + '/' : '') + childKey);\n    }\n    result.push(mappedChild);\n  }\n}\n\nfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n  var escapedPrefix = '';\n  if (prefix != null) {\n    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n  }\n  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  MapBookKeeping.release(traverseContext);\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n  return result;\n}\n\nfunction forEachSingleChildDummy(traverseContext, child, name) {\n  return null;\n}\n\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\nfunction countChildren(children, context) {\n  return traverseAllChildren(children, forEachSingleChildDummy, null);\n}\n\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n */\nfunction toArray(children) {\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);\n  return result;\n}\n\nvar ReactChildren = {\n  forEach: forEachChildren,\n  map: mapChildren,\n  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,\n  count: countChildren,\n  toArray: toArray\n};\n\nmodule.exports = ReactChildren;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactChildren.js\n ** module id = 60\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactClass\n */\n\n'use strict';\n\nvar ReactComponent = require('./ReactComponent');\nvar ReactElement = require('./ReactElement');\nvar ReactPropTypeLocations = require('./ReactPropTypeLocations');\nvar ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');\nvar ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');\n\nvar assign = require('./Object.assign');\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar keyMirror = require('fbjs/lib/keyMirror');\nvar keyOf = require('fbjs/lib/keyOf');\nvar warning = require('fbjs/lib/warning');\n\nvar MIXINS_KEY = keyOf({ mixins: null });\n\n/**\n * Policies that describe methods in `ReactClassInterface`.\n */\nvar SpecPolicy = keyMirror({\n  /**\n   * These methods may be defined only once by the class specification or mixin.\n   */\n  DEFINE_ONCE: null,\n  /**\n   * These methods may be defined by both the class specification and mixins.\n   * Subsequent definitions will be chained. These methods must return void.\n   */\n  DEFINE_MANY: null,\n  /**\n   * These methods are overriding the base class.\n   */\n  OVERRIDE_BASE: null,\n  /**\n   * These methods are similar to DEFINE_MANY, except we assume they return\n   * objects. We try to merge the keys of the return values of all the mixed in\n   * functions. If there is a key conflict we throw.\n   */\n  DEFINE_MANY_MERGED: null\n});\n\nvar injectedMixins = [];\n\nvar warnedSetProps = false;\nfunction warnSetProps() {\n  if (!warnedSetProps) {\n    warnedSetProps = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'setProps(...) and replaceProps(...) are deprecated. ' + 'Instead, call render again at the top level.') : undefined;\n  }\n}\n\n/**\n * Composite components are higher-level components that compose other composite\n * or native components.\n *\n * To create a new type of `ReactClass`, pass a specification of\n * your new class to `React.createClass`. The only requirement of your class\n * specification is that you implement a `render` method.\n *\n *   var MyComponent = React.createClass({\n *     render: function() {\n *       return <div>Hello World</div>;\n *     }\n *   });\n *\n * The class specification supports a specific protocol of methods that have\n * special meaning (e.g. `render`). See `ReactClassInterface` for\n * more the comprehensive protocol. Any other properties and methods in the\n * class specification will be available on the prototype.\n *\n * @interface ReactClassInterface\n * @internal\n */\nvar ReactClassInterface = {\n\n  /**\n   * An array of Mixin objects to include when defining your component.\n   *\n   * @type {array}\n   * @optional\n   */\n  mixins: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * An object containing properties and methods that should be defined on\n   * the component's constructor instead of its prototype (static methods).\n   *\n   * @type {object}\n   * @optional\n   */\n  statics: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Definition of prop types for this component.\n   *\n   * @type {object}\n   * @optional\n   */\n  propTypes: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Definition of context types for this component.\n   *\n   * @type {object}\n   * @optional\n   */\n  contextTypes: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Definition of context types this component sets for its children.\n   *\n   * @type {object}\n   * @optional\n   */\n  childContextTypes: SpecPolicy.DEFINE_MANY,\n\n  // ==== Definition methods ====\n\n  /**\n   * Invoked when the component is mounted. Values in the mapping will be set on\n   * `this.props` if that prop is not specified (i.e. using an `in` check).\n   *\n   * This method is invoked before `getInitialState` and therefore cannot rely\n   * on `this.state` or use `this.setState`.\n   *\n   * @return {object}\n   * @optional\n   */\n  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,\n\n  /**\n   * Invoked once before the component is mounted. The return value will be used\n   * as the initial value of `this.state`.\n   *\n   *   getInitialState: function() {\n   *     return {\n   *       isOn: false,\n   *       fooBaz: new BazFoo()\n   *     }\n   *   }\n   *\n   * @return {object}\n   * @optional\n   */\n  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,\n\n  /**\n   * @return {object}\n   * @optional\n   */\n  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,\n\n  /**\n   * Uses props from `this.props` and state from `this.state` to render the\n   * structure of the component.\n   *\n   * No guarantees are made about when or how often this method is invoked, so\n   * it must not have side effects.\n   *\n   *   render: function() {\n   *     var name = this.props.name;\n   *     return <div>Hello, {name}!</div>;\n   *   }\n   *\n   * @return {ReactComponent}\n   * @nosideeffects\n   * @required\n   */\n  render: SpecPolicy.DEFINE_ONCE,\n\n  // ==== Delegate methods ====\n\n  /**\n   * Invoked when the component is initially created and about to be mounted.\n   * This may have side effects, but any external subscriptions or data created\n   * by this method must be cleaned up in `componentWillUnmount`.\n   *\n   * @optional\n   */\n  componentWillMount: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked when the component has been mounted and has a DOM representation.\n   * However, there is no guarantee that the DOM node is in the document.\n   *\n   * Use this as an opportunity to operate on the DOM when the component has\n   * been mounted (initialized and rendered) for the first time.\n   *\n   * @param {DOMElement} rootNode DOM element representing the component.\n   * @optional\n   */\n  componentDidMount: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked before the component receives new props.\n   *\n   * Use this as an opportunity to react to a prop transition by updating the\n   * state using `this.setState`. Current props are accessed via `this.props`.\n   *\n   *   componentWillReceiveProps: function(nextProps, nextContext) {\n   *     this.setState({\n   *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n   *     });\n   *   }\n   *\n   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n   * transition may cause a state change, but the opposite is not true. If you\n   * need it, you are probably looking for `componentWillUpdate`.\n   *\n   * @param {object} nextProps\n   * @optional\n   */\n  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked while deciding if the component should be updated as a result of\n   * receiving new props, state and/or context.\n   *\n   * Use this as an opportunity to `return false` when you're certain that the\n   * transition to the new props/state/context will not require a component\n   * update.\n   *\n   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n   *     return !equal(nextProps, this.props) ||\n   *       !equal(nextState, this.state) ||\n   *       !equal(nextContext, this.context);\n   *   }\n   *\n   * @param {object} nextProps\n   * @param {?object} nextState\n   * @param {?object} nextContext\n   * @return {boolean} True if the component should update.\n   * @optional\n   */\n  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,\n\n  /**\n   * Invoked when the component is about to update due to a transition from\n   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n   * and `nextContext`.\n   *\n   * Use this as an opportunity to perform preparation before an update occurs.\n   *\n   * NOTE: You **cannot** use `this.setState()` in this method.\n   *\n   * @param {object} nextProps\n   * @param {?object} nextState\n   * @param {?object} nextContext\n   * @param {ReactReconcileTransaction} transaction\n   * @optional\n   */\n  componentWillUpdate: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked when the component's DOM representation has been updated.\n   *\n   * Use this as an opportunity to operate on the DOM when the component has\n   * been updated.\n   *\n   * @param {object} prevProps\n   * @param {?object} prevState\n   * @param {?object} prevContext\n   * @param {DOMElement} rootNode DOM element representing the component.\n   * @optional\n   */\n  componentDidUpdate: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked when the component is about to be removed from its parent and have\n   * its DOM representation destroyed.\n   *\n   * Use this as an opportunity to deallocate any external resources.\n   *\n   * NOTE: There is no `componentDidUnmount` since your component will have been\n   * destroyed by that point.\n   *\n   * @optional\n   */\n  componentWillUnmount: SpecPolicy.DEFINE_MANY,\n\n  // ==== Advanced methods ====\n\n  /**\n   * Updates the component's currently mounted DOM representation.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   * @overridable\n   */\n  updateComponent: SpecPolicy.OVERRIDE_BASE\n\n};\n\n/**\n * Mapping from class specification keys to special processing functions.\n *\n * Although these are declared like instance properties in the specification\n * when defining classes using `React.createClass`, they are actually static\n * and are accessible on the constructor instead of the prototype. Despite\n * being static, they must be defined outside of the \"statics\" key under\n * which all other static methods are defined.\n */\nvar RESERVED_SPEC_KEYS = {\n  displayName: function (Constructor, displayName) {\n    Constructor.displayName = displayName;\n  },\n  mixins: function (Constructor, mixins) {\n    if (mixins) {\n      for (var i = 0; i < mixins.length; i++) {\n        mixSpecIntoComponent(Constructor, mixins[i]);\n      }\n    }\n  },\n  childContextTypes: function (Constructor, childContextTypes) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);\n    }\n    Constructor.childContextTypes = assign({}, Constructor.childContextTypes, childContextTypes);\n  },\n  contextTypes: function (Constructor, contextTypes) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);\n    }\n    Constructor.contextTypes = assign({}, Constructor.contextTypes, contextTypes);\n  },\n  /**\n   * Special case getDefaultProps which should move into statics but requires\n   * automatic merging.\n   */\n  getDefaultProps: function (Constructor, getDefaultProps) {\n    if (Constructor.getDefaultProps) {\n      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);\n    } else {\n      Constructor.getDefaultProps = getDefaultProps;\n    }\n  },\n  propTypes: function (Constructor, propTypes) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);\n    }\n    Constructor.propTypes = assign({}, Constructor.propTypes, propTypes);\n  },\n  statics: function (Constructor, statics) {\n    mixStaticSpecIntoComponent(Constructor, statics);\n  },\n  autobind: function () {} };\n\n// noop\nfunction validateTypeDef(Constructor, typeDef, location) {\n  for (var propName in typeDef) {\n    if (typeDef.hasOwnProperty(propName)) {\n      // use a warning instead of an invariant so components\n      // don't show up in prod but not in __DEV__\n      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : undefined;\n    }\n  }\n}\n\nfunction validateMethodOverride(proto, name) {\n  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;\n\n  // Disallow overriding of base class methods unless explicitly allowed.\n  if (ReactClassMixin.hasOwnProperty(name)) {\n    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override ' + '`%s` from your class specification. Ensure that your method names ' + 'do not overlap with React methods.', name) : invariant(false) : undefined;\n  }\n\n  // Disallow defining methods more than once unless explicitly allowed.\n  if (proto.hasOwnProperty(name)) {\n    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define ' + '`%s` on your component more than once. This conflict may be due ' + 'to a mixin.', name) : invariant(false) : undefined;\n  }\n}\n\n/**\n * Mixin helper which handles policy validation and reserved\n * specification keys when building React classses.\n */\nfunction mixSpecIntoComponent(Constructor, spec) {\n  if (!spec) {\n    return;\n  }\n\n  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\\'re attempting to ' + 'use a component class as a mixin. Instead, just use a regular object.') : invariant(false) : undefined;\n  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\\'re attempting to ' + 'use a component as a mixin. Instead, just use a regular object.') : invariant(false) : undefined;\n\n  var proto = Constructor.prototype;\n\n  // By handling mixins before any other properties, we ensure the same\n  // chaining order is applied to methods with DEFINE_MANY policy, whether\n  // mixins are listed before or after these methods in the spec.\n  if (spec.hasOwnProperty(MIXINS_KEY)) {\n    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n  }\n\n  for (var name in spec) {\n    if (!spec.hasOwnProperty(name)) {\n      continue;\n    }\n\n    if (name === MIXINS_KEY) {\n      // We have already handled mixins in a special case above.\n      continue;\n    }\n\n    var property = spec[name];\n    validateMethodOverride(proto, name);\n\n    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n      RESERVED_SPEC_KEYS[name](Constructor, property);\n    } else {\n      // Setup methods on prototype:\n      // The following member methods should not be automatically bound:\n      // 1. Expected ReactClass methods (in the \"interface\").\n      // 2. Overridden methods (that were mixed in).\n      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);\n      var isAlreadyDefined = proto.hasOwnProperty(name);\n      var isFunction = typeof property === 'function';\n      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;\n\n      if (shouldAutoBind) {\n        if (!proto.__reactAutoBindMap) {\n          proto.__reactAutoBindMap = {};\n        }\n        proto.__reactAutoBindMap[name] = property;\n        proto[name] = property;\n      } else {\n        if (isAlreadyDefined) {\n          var specPolicy = ReactClassInterface[name];\n\n          // These cases should already be caught by validateMethodOverride.\n          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s ' + 'when mixing in component specs.', specPolicy, name) : invariant(false) : undefined;\n\n          // For methods which are defined more than once, call the existing\n          // methods before calling the new property, merging if appropriate.\n          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {\n            proto[name] = createMergedResultFunction(proto[name], property);\n          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {\n            proto[name] = createChainedFunction(proto[name], property);\n          }\n        } else {\n          proto[name] = property;\n          if (process.env.NODE_ENV !== 'production') {\n            // Add verbose displayName to the function, which helps when looking\n            // at profiling tools.\n            if (typeof property === 'function' && spec.displayName) {\n              proto[name].displayName = spec.displayName + '_' + name;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction mixStaticSpecIntoComponent(Constructor, statics) {\n  if (!statics) {\n    return;\n  }\n  for (var name in statics) {\n    var property = statics[name];\n    if (!statics.hasOwnProperty(name)) {\n      continue;\n    }\n\n    var isReserved = (name in RESERVED_SPEC_KEYS);\n    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved ' + 'property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it ' + 'as an instance property instead; it will still be accessible on the ' + 'constructor.', name) : invariant(false) : undefined;\n\n    var isInherited = (name in Constructor);\n    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define ' + '`%s` on your component more than once. This conflict may be ' + 'due to a mixin.', name) : invariant(false) : undefined;\n    Constructor[name] = property;\n  }\n}\n\n/**\n * Merge two objects, but throw if both contain the same key.\n *\n * @param {object} one The first object, which is mutated.\n * @param {object} two The second object\n * @return {object} one after it has been mutated to contain everything in two.\n */\nfunction mergeIntoWithNoDuplicateKeys(one, two) {\n  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : invariant(false) : undefined;\n\n  for (var key in two) {\n    if (two.hasOwnProperty(key)) {\n      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): ' + 'Tried to merge two objects with the same key: `%s`. This conflict ' + 'may be due to a mixin; in particular, this may be caused by two ' + 'getInitialState() or getDefaultProps() methods returning objects ' + 'with clashing keys.', key) : invariant(false) : undefined;\n      one[key] = two[key];\n    }\n  }\n  return one;\n}\n\n/**\n * Creates a function that invokes two functions and merges their return values.\n *\n * @param {function} one Function to invoke first.\n * @param {function} two Function to invoke second.\n * @return {function} Function that invokes the two argument functions.\n * @private\n */\nfunction createMergedResultFunction(one, two) {\n  return function mergedResult() {\n    var a = one.apply(this, arguments);\n    var b = two.apply(this, arguments);\n    if (a == null) {\n      return b;\n    } else if (b == null) {\n      return a;\n    }\n    var c = {};\n    mergeIntoWithNoDuplicateKeys(c, a);\n    mergeIntoWithNoDuplicateKeys(c, b);\n    return c;\n  };\n}\n\n/**\n * Creates a function that invokes two functions and ignores their return vales.\n *\n * @param {function} one Function to invoke first.\n * @param {function} two Function to invoke second.\n * @return {function} Function that invokes the two argument functions.\n * @private\n */\nfunction createChainedFunction(one, two) {\n  return function chainedFunction() {\n    one.apply(this, arguments);\n    two.apply(this, arguments);\n  };\n}\n\n/**\n * Binds a method to the component.\n *\n * @param {object} component Component whose method is going to be bound.\n * @param {function} method Method to be bound.\n * @return {function} The bound method.\n */\nfunction bindAutoBindMethod(component, method) {\n  var boundMethod = method.bind(component);\n  if (process.env.NODE_ENV !== 'production') {\n    boundMethod.__reactBoundContext = component;\n    boundMethod.__reactBoundMethod = method;\n    boundMethod.__reactBoundArguments = null;\n    var componentName = component.constructor.displayName;\n    var _bind = boundMethod.bind;\n    /* eslint-disable block-scoped-var, no-undef */\n    boundMethod.bind = function (newThis) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      // User is trying to bind() an autobound method; we effectively will\n      // ignore the value of \"this\" that the user is trying to use, so\n      // let's warn.\n      if (newThis !== component && newThis !== null) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : undefined;\n      } else if (!args.length) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : undefined;\n        return boundMethod;\n      }\n      var reboundMethod = _bind.apply(boundMethod, arguments);\n      reboundMethod.__reactBoundContext = component;\n      reboundMethod.__reactBoundMethod = method;\n      reboundMethod.__reactBoundArguments = args;\n      return reboundMethod;\n      /* eslint-enable */\n    };\n  }\n  return boundMethod;\n}\n\n/**\n * Binds all auto-bound methods in a component.\n *\n * @param {object} component Component whose method is going to be bound.\n */\nfunction bindAutoBindMethods(component) {\n  for (var autoBindKey in component.__reactAutoBindMap) {\n    if (component.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {\n      var method = component.__reactAutoBindMap[autoBindKey];\n      component[autoBindKey] = bindAutoBindMethod(component, method);\n    }\n  }\n}\n\n/**\n * Add more to the ReactClass base class. These are all legacy features and\n * therefore not already part of the modern ReactComponent.\n */\nvar ReactClassMixin = {\n\n  /**\n   * TODO: This will be deprecated because state should always keep a consistent\n   * type signature and the only use case for this, is to avoid that.\n   */\n  replaceState: function (newState, callback) {\n    this.updater.enqueueReplaceState(this, newState);\n    if (callback) {\n      this.updater.enqueueCallback(this, callback);\n    }\n  },\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function () {\n    return this.updater.isMounted(this);\n  },\n\n  /**\n   * Sets a subset of the props.\n   *\n   * @param {object} partialProps Subset of the next props.\n   * @param {?function} callback Called after props are updated.\n   * @final\n   * @public\n   * @deprecated\n   */\n  setProps: function (partialProps, callback) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnSetProps();\n    }\n    this.updater.enqueueSetProps(this, partialProps);\n    if (callback) {\n      this.updater.enqueueCallback(this, callback);\n    }\n  },\n\n  /**\n   * Replace all the props.\n   *\n   * @param {object} newProps Subset of the next props.\n   * @param {?function} callback Called after props are updated.\n   * @final\n   * @public\n   * @deprecated\n   */\n  replaceProps: function (newProps, callback) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnSetProps();\n    }\n    this.updater.enqueueReplaceProps(this, newProps);\n    if (callback) {\n      this.updater.enqueueCallback(this, callback);\n    }\n  }\n};\n\nvar ReactClassComponent = function () {};\nassign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);\n\n/**\n * Module for creating composite components.\n *\n * @class ReactClass\n */\nvar ReactClass = {\n\n  /**\n   * Creates a composite component class given a class specification.\n   *\n   * @param {object} spec Class specification (which must define `render`).\n   * @return {function} Component constructor function.\n   * @public\n   */\n  createClass: function (spec) {\n    var Constructor = function (props, context, updater) {\n      // This constructor is overridden by mocks. The argument is used\n      // by mocks to assert on what gets mounted.\n\n      if (process.env.NODE_ENV !== 'production') {\n        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : undefined;\n      }\n\n      // Wire up auto-binding\n      if (this.__reactAutoBindMap) {\n        bindAutoBindMethods(this);\n      }\n\n      this.props = props;\n      this.context = context;\n      this.refs = emptyObject;\n      this.updater = updater || ReactNoopUpdateQueue;\n\n      this.state = null;\n\n      // ReactClasses doesn't have constructors. Instead, they use the\n      // getInitialState and componentWillMount methods for initialization.\n\n      var initialState = this.getInitialState ? this.getInitialState() : null;\n      if (process.env.NODE_ENV !== 'production') {\n        // We allow auto-mocks to proceed as if they're returning null.\n        if (typeof initialState === 'undefined' && this.getInitialState._isMockFunction) {\n          // This is probably bad practice. Consider warning here and\n          // deprecating this convenience.\n          initialState = null;\n        }\n      }\n      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : invariant(false) : undefined;\n\n      this.state = initialState;\n    };\n    Constructor.prototype = new ReactClassComponent();\n    Constructor.prototype.constructor = Constructor;\n\n    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));\n\n    mixSpecIntoComponent(Constructor, spec);\n\n    // Initialize the defaultProps property after all mixins have been merged.\n    if (Constructor.getDefaultProps) {\n      Constructor.defaultProps = Constructor.getDefaultProps();\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // This is a tag to indicate that the use of these method names is ok,\n      // since it's used with createClass. If it's not, then it's likely a\n      // mistake so we'll warn you to use the static property, property\n      // initializer or constructor respectively.\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps.isReactClassApproved = {};\n      }\n      if (Constructor.prototype.getInitialState) {\n        Constructor.prototype.getInitialState.isReactClassApproved = {};\n      }\n    }\n\n    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : invariant(false) : undefined;\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : undefined;\n      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : undefined;\n    }\n\n    // Reduce time spent doing lookups by setting these on the prototype.\n    for (var methodName in ReactClassInterface) {\n      if (!Constructor.prototype[methodName]) {\n        Constructor.prototype[methodName] = null;\n      }\n    }\n\n    return Constructor;\n  },\n\n  injection: {\n    injectMixin: function (mixin) {\n      injectedMixins.push(mixin);\n    }\n  }\n\n};\n\nmodule.exports = ReactClass;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactClass.js\n ** module id = 61\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponent\n */\n\n'use strict';\n\nvar ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');\n\nvar canDefineProperty = require('./canDefineProperty');\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction ReactComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nReactComponent.prototype.isReactComponent = {};\n\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\nReactComponent.prototype.setState = function (partialState, callback) {\n  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.') : invariant(false) : undefined;\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : undefined;\n  }\n  this.updater.enqueueSetState(this, partialState);\n  if (callback) {\n    this.updater.enqueueCallback(this, callback);\n  }\n};\n\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\nReactComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this);\n  if (callback) {\n    this.updater.enqueueCallback(this, callback);\n  }\n};\n\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\nif (process.env.NODE_ENV !== 'production') {\n  var deprecatedAPIs = {\n    getDOMNode: ['getDOMNode', 'Use ReactDOM.findDOMNode(component) instead.'],\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceProps: ['replaceProps', 'Instead, call render again at the top level.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).'],\n    setProps: ['setProps', 'Instead, call render again at the top level.']\n  };\n  var defineDeprecationWarning = function (methodName, info) {\n    if (canDefineProperty) {\n      Object.defineProperty(ReactComponent.prototype, methodName, {\n        get: function () {\n          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : undefined;\n          return undefined;\n        }\n      });\n    }\n  };\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nmodule.exports = ReactComponent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactComponent.js\n ** module id = 62\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOM\n */\n\n/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/\n\n'use strict';\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactDOMTextComponent = require('./ReactDOMTextComponent');\nvar ReactDefaultInjection = require('./ReactDefaultInjection');\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\nvar ReactMount = require('./ReactMount');\nvar ReactPerf = require('./ReactPerf');\nvar ReactReconciler = require('./ReactReconciler');\nvar ReactUpdates = require('./ReactUpdates');\nvar ReactVersion = require('./ReactVersion');\n\nvar findDOMNode = require('./findDOMNode');\nvar renderSubtreeIntoContainer = require('./renderSubtreeIntoContainer');\nvar warning = require('fbjs/lib/warning');\n\nReactDefaultInjection.inject();\n\nvar render = ReactPerf.measure('React', 'render', ReactMount.render);\n\nvar React = {\n  findDOMNode: findDOMNode,\n  render: render,\n  unmountComponentAtNode: ReactMount.unmountComponentAtNode,\n  version: ReactVersion,\n\n  /* eslint-disable camelcase */\n  unstable_batchedUpdates: ReactUpdates.batchedUpdates,\n  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer\n};\n\n// Inject the runtime into a devtools global hook regardless of browser.\n// Allows for debugging when the hook is injected on the page.\n/* eslint-enable camelcase */\nif (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({\n    CurrentOwner: ReactCurrentOwner,\n    InstanceHandles: ReactInstanceHandles,\n    Mount: ReactMount,\n    Reconciler: ReactReconciler,\n    TextComponent: ReactDOMTextComponent\n  });\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {\n\n    // First check if devtools is not installed\n    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n      // If we're in Chrome or Firefox, provide a download link if not installed.\n      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {\n        console.debug('Download the React DevTools for a better development experience: ' + 'https://fb.me/react-devtools');\n      }\n    }\n\n    // If we're in IE8, check to see if we are in compatibility mode and provide\n    // information on preventing compatibility mode\n    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;\n\n    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />') : undefined;\n\n    var expectedFeatures = [\n    // shims\n    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim,\n\n    // shams\n    Object.create, Object.freeze];\n\n    for (var i = 0; i < expectedFeatures.length; i++) {\n      if (!expectedFeatures[i]) {\n        console.error('One or more ES5 shim/shams expected by React are not available: ' + 'https://fb.me/react-warning-polyfills');\n        break;\n      }\n    }\n  }\n}\n\nmodule.exports = React;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOM.js\n ** module id = 63\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMFeatureFlags\n */\n\n'use strict';\n\nvar ReactDOMFeatureFlags = {\n  useCreateElement: false\n};\n\nmodule.exports = ReactDOMFeatureFlags;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMFeatureFlags.js\n ** module id = 64\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMSelect\n */\n\n'use strict';\n\nvar LinkedValueUtils = require('./LinkedValueUtils');\nvar ReactMount = require('./ReactMount');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar assign = require('./Object.assign');\nvar warning = require('fbjs/lib/warning');\n\nvar valueContextKey = '__ReactDOMSelect_value$' + Math.random().toString(36).slice(2);\n\nfunction updateOptionsIfPendingUpdateAndMounted() {\n  if (this._rootNodeID && this._wrapperState.pendingUpdate) {\n    this._wrapperState.pendingUpdate = false;\n\n    var props = this._currentElement.props;\n    var value = LinkedValueUtils.getValue(props);\n\n    if (value != null) {\n      updateOptions(this, Boolean(props.multiple), value);\n    }\n  }\n}\n\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\nvar valuePropNames = ['value', 'defaultValue'];\n\n/**\n * Validation function for `value` and `defaultValue`.\n * @private\n */\nfunction checkSelectPropTypes(inst, props) {\n  var owner = inst._currentElement._owner;\n  LinkedValueUtils.checkPropTypes('select', props, owner);\n\n  for (var i = 0; i < valuePropNames.length; i++) {\n    var propName = valuePropNames[i];\n    if (props[propName] == null) {\n      continue;\n    }\n    if (props.multiple) {\n      process.env.NODE_ENV !== 'production' ? warning(Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : undefined;\n    } else {\n      process.env.NODE_ENV !== 'production' ? warning(!Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : undefined;\n    }\n  }\n}\n\n/**\n * @param {ReactDOMComponent} inst\n * @param {boolean} multiple\n * @param {*} propValue A stringable (with `multiple`, a list of stringables).\n * @private\n */\nfunction updateOptions(inst, multiple, propValue) {\n  var selectedValue, i;\n  var options = ReactMount.getNode(inst._rootNodeID).options;\n\n  if (multiple) {\n    selectedValue = {};\n    for (i = 0; i < propValue.length; i++) {\n      selectedValue['' + propValue[i]] = true;\n    }\n    for (i = 0; i < options.length; i++) {\n      var selected = selectedValue.hasOwnProperty(options[i].value);\n      if (options[i].selected !== selected) {\n        options[i].selected = selected;\n      }\n    }\n  } else {\n    // Do not set `select.value` as exact behavior isn't consistent across all\n    // browsers for all cases.\n    selectedValue = '' + propValue;\n    for (i = 0; i < options.length; i++) {\n      if (options[i].value === selectedValue) {\n        options[i].selected = true;\n        return;\n      }\n    }\n    if (options.length) {\n      options[0].selected = true;\n    }\n  }\n}\n\n/**\n * Implements a <select> native component that allows optionally setting the\n * props `value` and `defaultValue`. If `multiple` is false, the prop must be a\n * stringable. If `multiple` is true, the prop must be an array of stringables.\n *\n * If `value` is not supplied (or null/undefined), user actions that change the\n * selected option will trigger updates to the rendered options.\n *\n * If it is supplied (and not null/undefined), the rendered options will not\n * update in response to user actions. Instead, the `value` prop must change in\n * order for the rendered options to update.\n *\n * If `defaultValue` is provided, any options with the supplied values will be\n * selected.\n */\nvar ReactDOMSelect = {\n  valueContextKey: valueContextKey,\n\n  getNativeProps: function (inst, props, context) {\n    return assign({}, props, {\n      onChange: inst._wrapperState.onChange,\n      value: undefined\n    });\n  },\n\n  mountWrapper: function (inst, props) {\n    if (process.env.NODE_ENV !== 'production') {\n      checkSelectPropTypes(inst, props);\n    }\n\n    var value = LinkedValueUtils.getValue(props);\n    inst._wrapperState = {\n      pendingUpdate: false,\n      initialValue: value != null ? value : props.defaultValue,\n      onChange: _handleChange.bind(inst),\n      wasMultiple: Boolean(props.multiple)\n    };\n  },\n\n  processChildContext: function (inst, props, context) {\n    // Pass down initial value so initial generated markup has correct\n    // `selected` attributes\n    var childContext = assign({}, context);\n    childContext[valueContextKey] = inst._wrapperState.initialValue;\n    return childContext;\n  },\n\n  postUpdateWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    // After the initial mount, we control selected-ness manually so don't pass\n    // the context value down\n    inst._wrapperState.initialValue = undefined;\n\n    var wasMultiple = inst._wrapperState.wasMultiple;\n    inst._wrapperState.wasMultiple = Boolean(props.multiple);\n\n    var value = LinkedValueUtils.getValue(props);\n    if (value != null) {\n      inst._wrapperState.pendingUpdate = false;\n      updateOptions(inst, Boolean(props.multiple), value);\n    } else if (wasMultiple !== Boolean(props.multiple)) {\n      // For simplicity, reapply `defaultValue` if `multiple` is toggled.\n      if (props.defaultValue != null) {\n        updateOptions(inst, Boolean(props.multiple), props.defaultValue);\n      } else {\n        // Revert the select back to its default unselected state.\n        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');\n      }\n    }\n  }\n};\n\nfunction _handleChange(event) {\n  var props = this._currentElement.props;\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\n  this._wrapperState.pendingUpdate = true;\n  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);\n  return returnValue;\n}\n\nmodule.exports = ReactDOMSelect;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMSelect.js\n ** module id = 65\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMTextComponent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar DOMChildrenOperations = require('./DOMChildrenOperations');\nvar DOMPropertyOperations = require('./DOMPropertyOperations');\nvar ReactComponentBrowserEnvironment = require('./ReactComponentBrowserEnvironment');\nvar ReactMount = require('./ReactMount');\n\nvar assign = require('./Object.assign');\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\nvar setTextContent = require('./setTextContent');\nvar validateDOMNesting = require('./validateDOMNesting');\n\n/**\n * Text nodes violate a couple assumptions that React makes about components:\n *\n *  - When mounting text into the DOM, adjacent text nodes are merged.\n *  - Text nodes cannot be assigned a React root ID.\n *\n * This component is used to wrap strings in elements so that they can undergo\n * the same reconciliation that is applied to elements.\n *\n * TODO: Investigate representing React components in the DOM with text nodes.\n *\n * @class ReactDOMTextComponent\n * @extends ReactComponent\n * @internal\n */\nvar ReactDOMTextComponent = function (props) {\n  // This constructor and its argument is currently used by mocks.\n};\n\nassign(ReactDOMTextComponent.prototype, {\n\n  /**\n   * @param {ReactText} text\n   * @internal\n   */\n  construct: function (text) {\n    // TODO: This is really a ReactText (ReactNode), not a ReactElement\n    this._currentElement = text;\n    this._stringText = '' + text;\n\n    // Properties\n    this._rootNodeID = null;\n    this._mountIndex = 0;\n  },\n\n  /**\n   * Creates the markup for this text node. This node is not intended to have\n   * any features besides containing text content.\n   *\n   * @param {string} rootID DOM ID of the root node.\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {string} Markup for this text node.\n   * @internal\n   */\n  mountComponent: function (rootID, transaction, context) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (context[validateDOMNesting.ancestorInfoContextKey]) {\n        validateDOMNesting('span', null, context[validateDOMNesting.ancestorInfoContextKey]);\n      }\n    }\n\n    this._rootNodeID = rootID;\n    if (transaction.useCreateElement) {\n      var ownerDocument = context[ReactMount.ownerDocumentContextKey];\n      var el = ownerDocument.createElement('span');\n      DOMPropertyOperations.setAttributeForID(el, rootID);\n      // Populate node cache\n      ReactMount.getID(el);\n      setTextContent(el, this._stringText);\n      return el;\n    } else {\n      var escapedText = escapeTextContentForBrowser(this._stringText);\n\n      if (transaction.renderToStaticMarkup) {\n        // Normally we'd wrap this in a `span` for the reasons stated above, but\n        // since this is a situation where React won't take over (static pages),\n        // we can simply return the text as it is.\n        return escapedText;\n      }\n\n      return '<span ' + DOMPropertyOperations.createMarkupForID(rootID) + '>' + escapedText + '</span>';\n    }\n  },\n\n  /**\n   * Updates this component by updating the text content.\n   *\n   * @param {ReactText} nextText The next text content\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  receiveComponent: function (nextText, transaction) {\n    if (nextText !== this._currentElement) {\n      this._currentElement = nextText;\n      var nextStringText = '' + nextText;\n      if (nextStringText !== this._stringText) {\n        // TODO: Save this as pending props and use performUpdateIfNecessary\n        // and/or updateComponent to do the actual update for consistency with\n        // other component types?\n        this._stringText = nextStringText;\n        var node = ReactMount.getNode(this._rootNodeID);\n        DOMChildrenOperations.updateTextContent(node, nextStringText);\n      }\n    }\n  },\n\n  unmountComponent: function () {\n    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);\n  }\n\n});\n\nmodule.exports = ReactDOMTextComponent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMTextComponent.js\n ** module id = 66\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultBatchingStrategy\n */\n\n'use strict';\n\nvar ReactUpdates = require('./ReactUpdates');\nvar Transaction = require('./Transaction');\n\nvar assign = require('./Object.assign');\nvar emptyFunction = require('fbjs/lib/emptyFunction');\n\nvar RESET_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: function () {\n    ReactDefaultBatchingStrategy.isBatchingUpdates = false;\n  }\n};\n\nvar FLUSH_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)\n};\n\nvar TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];\n\nfunction ReactDefaultBatchingStrategyTransaction() {\n  this.reinitializeTransaction();\n}\n\nassign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  }\n});\n\nvar transaction = new ReactDefaultBatchingStrategyTransaction();\n\nvar ReactDefaultBatchingStrategy = {\n  isBatchingUpdates: false,\n\n  /**\n   * Call the provided function in a context within which calls to `setState`\n   * and friends are batched such that components aren't updated unnecessarily.\n   */\n  batchedUpdates: function (callback, a, b, c, d, e) {\n    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;\n\n    ReactDefaultBatchingStrategy.isBatchingUpdates = true;\n\n    // The code is written this way to avoid extra allocations\n    if (alreadyBatchingUpdates) {\n      callback(a, b, c, d, e);\n    } else {\n      transaction.perform(callback, null, a, b, c, d, e);\n    }\n  }\n};\n\nmodule.exports = ReactDefaultBatchingStrategy;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDefaultBatchingStrategy.js\n ** module id = 67\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultInjection\n */\n\n'use strict';\n\nvar BeforeInputEventPlugin = require('./BeforeInputEventPlugin');\nvar ChangeEventPlugin = require('./ChangeEventPlugin');\nvar ClientReactRootIndex = require('./ClientReactRootIndex');\nvar DefaultEventPluginOrder = require('./DefaultEventPluginOrder');\nvar EnterLeaveEventPlugin = require('./EnterLeaveEventPlugin');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar HTMLDOMPropertyConfig = require('./HTMLDOMPropertyConfig');\nvar ReactBrowserComponentMixin = require('./ReactBrowserComponentMixin');\nvar ReactComponentBrowserEnvironment = require('./ReactComponentBrowserEnvironment');\nvar ReactDefaultBatchingStrategy = require('./ReactDefaultBatchingStrategy');\nvar ReactDOMComponent = require('./ReactDOMComponent');\nvar ReactDOMTextComponent = require('./ReactDOMTextComponent');\nvar ReactEventListener = require('./ReactEventListener');\nvar ReactInjection = require('./ReactInjection');\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\nvar ReactMount = require('./ReactMount');\nvar ReactReconcileTransaction = require('./ReactReconcileTransaction');\nvar SelectEventPlugin = require('./SelectEventPlugin');\nvar ServerReactRootIndex = require('./ServerReactRootIndex');\nvar SimpleEventPlugin = require('./SimpleEventPlugin');\nvar SVGDOMPropertyConfig = require('./SVGDOMPropertyConfig');\n\nvar alreadyInjected = false;\n\nfunction inject() {\n  if (alreadyInjected) {\n    // TODO: This is currently true because these injections are shared between\n    // the client and the server package. They should be built independently\n    // and not share any injection state. Then this problem will be solved.\n    return;\n  }\n  alreadyInjected = true;\n\n  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);\n\n  /**\n   * Inject modules for resolving DOM hierarchy and plugin ordering.\n   */\n  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);\n  ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);\n  ReactInjection.EventPluginHub.injectMount(ReactMount);\n\n  /**\n   * Some important event plugins included by default (without having to require\n   * them).\n   */\n  ReactInjection.EventPluginHub.injectEventPluginsByName({\n    SimpleEventPlugin: SimpleEventPlugin,\n    EnterLeaveEventPlugin: EnterLeaveEventPlugin,\n    ChangeEventPlugin: ChangeEventPlugin,\n    SelectEventPlugin: SelectEventPlugin,\n    BeforeInputEventPlugin: BeforeInputEventPlugin\n  });\n\n  ReactInjection.NativeComponent.injectGenericComponentClass(ReactDOMComponent);\n\n  ReactInjection.NativeComponent.injectTextComponentClass(ReactDOMTextComponent);\n\n  ReactInjection.Class.injectMixin(ReactBrowserComponentMixin);\n\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);\n\n  ReactInjection.EmptyComponent.injectEmptyComponent('noscript');\n\n  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);\n  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);\n\n  ReactInjection.RootIndex.injectCreateReactRootIndex(ExecutionEnvironment.canUseDOM ? ClientReactRootIndex.createReactRootIndex : ServerReactRootIndex.createReactRootIndex);\n\n  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);\n\n  if (process.env.NODE_ENV !== 'production') {\n    var url = ExecutionEnvironment.canUseDOM && window.location.href || '';\n    if (/[?&]react_perf\\b/.test(url)) {\n      var ReactDefaultPerf = require('./ReactDefaultPerf');\n      ReactDefaultPerf.start();\n    }\n  }\n}\n\nmodule.exports = {\n  inject: inject\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDefaultInjection.js\n ** module id = 68\n ** module chunks = 0\n **/","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactElementValidator\n */\n\n/**\n * ReactElementValidator provides a wrapper around a element factory\n * which validates the props passed to the element. This is intended to be\n * used only in DEV and could be replaced by a static type checker for languages\n * that support it.\n */\n\n'use strict';\n\nvar ReactElement = require('./ReactElement');\nvar ReactPropTypeLocations = require('./ReactPropTypeLocations');\nvar ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\n\nvar canDefineProperty = require('./canDefineProperty');\nvar getIteratorFn = require('./getIteratorFn');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = ReactCurrentOwner.current.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\nvar ownerHasKeyUseWarning = {};\n\nvar loggedTypeFailures = {};\n\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n  element._store.validated = true;\n\n  var addenda = getAddendaForKeyUse('uniqueKey', element, parentType);\n  if (addenda === null) {\n    // we already showed the warning\n    return;\n  }\n  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique \"key\" prop.' + '%s%s%s', addenda.parentOrOwner || '', addenda.childOwner || '', addenda.url || '') : undefined;\n}\n\n/**\n * Shared warning and monitoring code for the key warnings.\n *\n * @internal\n * @param {string} messageType A key used for de-duping warnings.\n * @param {ReactElement} element Component that requires a key.\n * @param {*} parentType element's parent's type.\n * @returns {?object} A set of addenda to use in the warning message, or null\n * if the warning has already been shown before (and shouldn't be shown again).\n */\nfunction getAddendaForKeyUse(messageType, element, parentType) {\n  var addendum = getDeclarationErrorAddendum();\n  if (!addendum) {\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n    if (parentName) {\n      addendum = ' Check the top-level render call using <' + parentName + '>.';\n    }\n  }\n\n  var memoizer = ownerHasKeyUseWarning[messageType] || (ownerHasKeyUseWarning[messageType] = {});\n  if (memoizer[addendum]) {\n    return null;\n  }\n  memoizer[addendum] = true;\n\n  var addenda = {\n    parentOrOwner: addendum,\n    url: ' See https://fb.me/react-warning-keys for more information.',\n    childOwner: null\n  };\n\n  // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n    // Give the component that originally created this child.\n    addenda.childOwner = ' It was passed a child from ' + element._owner.getName() + '.';\n  }\n\n  return addenda;\n}\n\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n  if (Array.isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n      if (ReactElement.isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (ReactElement.isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n    // Entry iterators provide implicit keys.\n    if (iteratorFn) {\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n        while (!(step = iterator.next()).done) {\n          if (ReactElement.isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * Assert that the props are valid\n *\n * @param {string} componentName Name of the component for error messages.\n * @param {object} propTypes Map of prop name to a ReactPropType\n * @param {object} props\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @private\n */\nfunction checkPropTypes(componentName, propTypes, props, location) {\n  for (var propName in propTypes) {\n    if (propTypes.hasOwnProperty(propName)) {\n      var error;\n      // Prop type validation may throw. In case they do, we don't want to\n      // fail the render phase where it didn't fail before. So we log it.\n      // After these have been cleaned up, we'll let them throw.\n      try {\n        // This is intentionally an invariant that gets caught. It's the same\n        // behavior as without this statement except with a better message.\n        !(typeof propTypes[propName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : undefined;\n        error = propTypes[propName](props, propName, componentName, location);\n      } catch (ex) {\n        error = ex;\n      }\n      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], propName, typeof error) : undefined;\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n\n        var addendum = getDeclarationErrorAddendum();\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed propType: %s%s', error.message, addendum) : undefined;\n      }\n    }\n  }\n}\n\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\nfunction validatePropTypes(element) {\n  var componentClass = element.type;\n  if (typeof componentClass !== 'function') {\n    return;\n  }\n  var name = componentClass.displayName || componentClass.name;\n  if (componentClass.propTypes) {\n    checkPropTypes(name, componentClass.propTypes, element.props, ReactPropTypeLocations.prop);\n  }\n  if (typeof componentClass.getDefaultProps === 'function') {\n    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : undefined;\n  }\n}\n\nvar ReactElementValidator = {\n\n  createElement: function (type, props, children) {\n    var validType = typeof type === 'string' || typeof type === 'function';\n    // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n    process.env.NODE_ENV !== 'production' ? warning(validType, 'React.createElement: type should not be null, undefined, boolean, or ' + 'number. It should be a string (for DOM elements) or a ReactClass ' + '(for composite components).%s', getDeclarationErrorAddendum()) : undefined;\n\n    var element = ReactElement.createElement.apply(this, arguments);\n\n    // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n    if (element == null) {\n      return element;\n    }\n\n    // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n    if (validType) {\n      for (var i = 2; i < arguments.length; i++) {\n        validateChildKeys(arguments[i], type);\n      }\n    }\n\n    validatePropTypes(element);\n\n    return element;\n  },\n\n  createFactory: function (type) {\n    var validatedFactory = ReactElementValidator.createElement.bind(null, type);\n    // Legacy hook TODO: Warn if this is accessed\n    validatedFactory.type = type;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (canDefineProperty) {\n        Object.defineProperty(validatedFactory, 'type', {\n          enumerable: false,\n          get: function () {\n            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : undefined;\n            Object.defineProperty(this, 'type', {\n              value: type\n            });\n            return type;\n          }\n        });\n      }\n    }\n\n    return validatedFactory;\n  },\n\n  cloneElement: function (element, props, children) {\n    var newElement = ReactElement.cloneElement.apply(this, arguments);\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], newElement.type);\n    }\n    validatePropTypes(newElement);\n    return newElement;\n  }\n\n};\n\nmodule.exports = ReactElementValidator;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactElementValidator.js\n ** module id = 69\n ** module chunks = 0\n **/","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEmptyComponent\n */\n\n'use strict';\n\nvar ReactElement = require('./ReactElement');\nvar ReactEmptyComponentRegistry = require('./ReactEmptyComponentRegistry');\nvar ReactReconciler = require('./ReactReconciler');\n\nvar assign = require('./Object.assign');\n\nvar placeholderElement;\n\nvar ReactEmptyComponentInjection = {\n  injectEmptyComponent: function (component) {\n    placeholderElement = ReactElement.createElement(component);\n  }\n};\n\nfunction registerNullComponentID() {\n  ReactEmptyComponentRegistry.registerNullComponentID(this._rootNodeID);\n}\n\nvar ReactEmptyComponent = function (instantiate) {\n  this._currentElement = null;\n  this._rootNodeID = null;\n  this._renderedComponent = instantiate(placeholderElement);\n};\nassign(ReactEmptyComponent.prototype, {\n  construct: function (element) {},\n  mountComponent: function (rootID, transaction, context) {\n    transaction.getReactMountReady().enqueue(registerNullComponentID, this);\n    this._rootNodeID = rootID;\n    return ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, context);\n  },\n  receiveComponent: function () {},\n  unmountComponent: function (rootID, transaction, context) {\n    ReactReconciler.unmountComponent(this._renderedComponent);\n    ReactEmptyComponentRegistry.deregisterNullComponentID(this._rootNodeID);\n    this._rootNodeID = null;\n    this._renderedComponent = null;\n  }\n});\n\nReactEmptyComponent.injection = ReactEmptyComponentInjection;\n\nmodule.exports = ReactEmptyComponent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactEmptyComponent.js\n ** module id = 70\n ** module chunks = 0\n **/","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEmptyComponentRegistry\n */\n\n'use strict';\n\n// This registry keeps track of the React IDs of the components that rendered to\n// `null` (in reality a placeholder such as `noscript`)\nvar nullComponentIDsRegistry = {};\n\n/**\n * @param {string} id Component's `_rootNodeID`.\n * @return {boolean} True if the component is rendered to null.\n */\nfunction isNullComponentID(id) {\n  return !!nullComponentIDsRegistry[id];\n}\n\n/**\n * Mark the component as having rendered to null.\n * @param {string} id Component's `_rootNodeID`.\n */\nfunction registerNullComponentID(id) {\n  nullComponentIDsRegistry[id] = true;\n}\n\n/**\n * Unmark the component as having rendered to null: it renders to something now.\n * @param {string} id Component's `_rootNodeID`.\n */\nfunction deregisterNullComponentID(id) {\n  delete nullComponentIDsRegistry[id];\n}\n\nvar ReactEmptyComponentRegistry = {\n  isNullComponentID: isNullComponentID,\n  registerNullComponentID: registerNullComponentID,\n  deregisterNullComponentID: deregisterNullComponentID\n};\n\nmodule.exports = ReactEmptyComponentRegistry;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactEmptyComponentRegistry.js\n ** module id = 71\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactErrorUtils\n * @typechecks\n */\n\n'use strict';\n\nvar caughtError = null;\n\n/**\n * Call a function while guarding against errors that happens within it.\n *\n * @param {?String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} a First argument\n * @param {*} b Second argument\n */\nfunction invokeGuardedCallback(name, func, a, b) {\n  try {\n    return func(a, b);\n  } catch (x) {\n    if (caughtError === null) {\n      caughtError = x;\n    }\n    return undefined;\n  }\n}\n\nvar ReactErrorUtils = {\n  invokeGuardedCallback: invokeGuardedCallback,\n\n  /**\n   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event\n   * handler are sure to be rethrown by rethrowCaughtError.\n   */\n  invokeGuardedCallbackWithCatch: invokeGuardedCallback,\n\n  /**\n   * During execution of guarded functions we will capture the first error which\n   * we will rethrow to be handled by the top level error handler.\n   */\n  rethrowCaughtError: function () {\n    if (caughtError) {\n      var error = caughtError;\n      caughtError = null;\n      throw error;\n    }\n  }\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  /**\n   * To help development we can get better devtools integration by simulating a\n   * real browser event.\n   */\n  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {\n    var fakeNode = document.createElement('react');\n    ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {\n      var boundFunc = func.bind(null, a, b);\n      var evtType = 'react-' + name;\n      fakeNode.addEventListener(evtType, boundFunc, false);\n      var evt = document.createEvent('Event');\n      evt.initEvent(evtType, false, false);\n      fakeNode.dispatchEvent(evt);\n      fakeNode.removeEventListener(evtType, boundFunc, false);\n    };\n  }\n}\n\nmodule.exports = ReactErrorUtils;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactErrorUtils.js\n ** module id = 72\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInputSelection\n */\n\n'use strict';\n\nvar ReactDOMSelection = require('./ReactDOMSelection');\n\nvar containsNode = require('fbjs/lib/containsNode');\nvar focusNode = require('fbjs/lib/focusNode');\nvar getActiveElement = require('fbjs/lib/getActiveElement');\n\nfunction isInDocument(node) {\n  return containsNode(document.documentElement, node);\n}\n\n/**\n * @ReactInputSelection: React input selection module. Based on Selection.js,\n * but modified to be suitable for react and has a couple of bug fixes (doesn't\n * assume buttons have range selections allowed).\n * Input selection module for React.\n */\nvar ReactInputSelection = {\n\n  hasSelectionCapabilities: function (elem) {\n    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');\n  },\n\n  getSelectionInformation: function () {\n    var focusedElem = getActiveElement();\n    return {\n      focusedElem: focusedElem,\n      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null\n    };\n  },\n\n  /**\n   * @restoreSelection: If any selection information was potentially lost,\n   * restore it. This is useful when performing operations that could remove dom\n   * nodes and place them back in, resulting in focus being lost.\n   */\n  restoreSelection: function (priorSelectionInformation) {\n    var curFocusedElem = getActiveElement();\n    var priorFocusedElem = priorSelectionInformation.focusedElem;\n    var priorSelectionRange = priorSelectionInformation.selectionRange;\n    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {\n      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {\n        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);\n      }\n      focusNode(priorFocusedElem);\n    }\n  },\n\n  /**\n   * @getSelection: Gets the selection bounds of a focused textarea, input or\n   * contentEditable node.\n   * -@input: Look up selection bounds of this input\n   * -@return {start: selectionStart, end: selectionEnd}\n   */\n  getSelection: function (input) {\n    var selection;\n\n    if ('selectionStart' in input) {\n      // Modern browser with input or textarea.\n      selection = {\n        start: input.selectionStart,\n        end: input.selectionEnd\n      };\n    } else if (document.selection && (input.nodeName && input.nodeName.toLowerCase() === 'input')) {\n      // IE8 input.\n      var range = document.selection.createRange();\n      // There can only be one selection per document in IE, so it must\n      // be in our element.\n      if (range.parentElement() === input) {\n        selection = {\n          start: -range.moveStart('character', -input.value.length),\n          end: -range.moveEnd('character', -input.value.length)\n        };\n      }\n    } else {\n      // Content editable or old IE textarea.\n      selection = ReactDOMSelection.getOffsets(input);\n    }\n\n    return selection || { start: 0, end: 0 };\n  },\n\n  /**\n   * @setSelection: Sets the selection bounds of a textarea or input and focuses\n   * the input.\n   * -@input     Set selection bounds of this input or textarea\n   * -@offsets   Object of same form that is returned from get*\n   */\n  setSelection: function (input, offsets) {\n    var start = offsets.start;\n    var end = offsets.end;\n    if (typeof end === 'undefined') {\n      end = start;\n    }\n\n    if ('selectionStart' in input) {\n      input.selectionStart = start;\n      input.selectionEnd = Math.min(end, input.value.length);\n    } else if (document.selection && (input.nodeName && input.nodeName.toLowerCase() === 'input')) {\n      var range = input.createTextRange();\n      range.collapse(true);\n      range.moveStart('character', start);\n      range.moveEnd('character', end - start);\n      range.select();\n    } else {\n      ReactDOMSelection.setOffsets(input, offsets);\n    }\n  }\n};\n\nmodule.exports = ReactInputSelection;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactInputSelection.js\n ** module id = 73\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMarkupChecksum\n */\n\n'use strict';\n\nvar adler32 = require('./adler32');\n\nvar TAG_END = /\\/?>/;\n\nvar ReactMarkupChecksum = {\n  CHECKSUM_ATTR_NAME: 'data-react-checksum',\n\n  /**\n   * @param {string} markup Markup string\n   * @return {string} Markup string with checksum attribute attached\n   */\n  addChecksumToMarkup: function (markup) {\n    var checksum = adler32(markup);\n\n    // Add checksum (handle both parent tags and self-closing tags)\n    return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '=\"' + checksum + '\"$&');\n  },\n\n  /**\n   * @param {string} markup to use\n   * @param {DOMElement} element root React element\n   * @returns {boolean} whether or not the markup is the same\n   */\n  canReuseMarkup: function (markup, element) {\n    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);\n    var markupChecksum = adler32(markup);\n    return markupChecksum === existingChecksum;\n  }\n};\n\nmodule.exports = ReactMarkupChecksum;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactMarkupChecksum.js\n ** module id = 74\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMultiChildUpdateTypes\n */\n\n'use strict';\n\nvar keyMirror = require('fbjs/lib/keyMirror');\n\n/**\n * When a component's children are updated, a series of update configuration\n * objects are created in order to batch and serialize the required changes.\n *\n * Enumerates all the possible types of update configurations.\n *\n * @internal\n */\nvar ReactMultiChildUpdateTypes = keyMirror({\n  INSERT_MARKUP: null,\n  MOVE_EXISTING: null,\n  REMOVE_NODE: null,\n  SET_MARKUP: null,\n  TEXT_CONTENT: null\n});\n\nmodule.exports = ReactMultiChildUpdateTypes;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactMultiChildUpdateTypes.js\n ** module id = 75\n ** module chunks = 0\n **/","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactNativeComponent\n */\n\n'use strict';\n\nvar assign = require('./Object.assign');\nvar invariant = require('fbjs/lib/invariant');\n\nvar autoGenerateWrapperClass = null;\nvar genericComponentClass = null;\n// This registry keeps track of wrapper classes around native tags.\nvar tagToComponentClass = {};\nvar textComponentClass = null;\n\nvar ReactNativeComponentInjection = {\n  // This accepts a class that receives the tag string. This is a catch all\n  // that can render any kind of tag.\n  injectGenericComponentClass: function (componentClass) {\n    genericComponentClass = componentClass;\n  },\n  // This accepts a text component class that takes the text string to be\n  // rendered as props.\n  injectTextComponentClass: function (componentClass) {\n    textComponentClass = componentClass;\n  },\n  // This accepts a keyed object with classes as values. Each key represents a\n  // tag. That particular tag will use this class instead of the generic one.\n  injectComponentClasses: function (componentClasses) {\n    assign(tagToComponentClass, componentClasses);\n  }\n};\n\n/**\n * Get a composite component wrapper class for a specific tag.\n *\n * @param {ReactElement} element The tag for which to get the class.\n * @return {function} The React class constructor function.\n */\nfunction getComponentClassForElement(element) {\n  if (typeof element.type === 'function') {\n    return element.type;\n  }\n  var tag = element.type;\n  var componentClass = tagToComponentClass[tag];\n  if (componentClass == null) {\n    tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);\n  }\n  return componentClass;\n}\n\n/**\n * Get a native internal component class for a specific tag.\n *\n * @param {ReactElement} element The element to create.\n * @return {function} The internal class constructor function.\n */\nfunction createInternalComponent(element) {\n  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : invariant(false) : undefined;\n  return new genericComponentClass(element.type, element.props);\n}\n\n/**\n * @param {ReactText} text\n * @return {ReactComponent}\n */\nfunction createInstanceForText(text) {\n  return new textComponentClass(text);\n}\n\n/**\n * @param {ReactComponent} component\n * @return {boolean}\n */\nfunction isTextComponent(component) {\n  return component instanceof textComponentClass;\n}\n\nvar ReactNativeComponent = {\n  getComponentClassForElement: getComponentClassForElement,\n  createInternalComponent: createInternalComponent,\n  createInstanceForText: createInstanceForText,\n  isTextComponent: isTextComponent,\n  injection: ReactNativeComponentInjection\n};\n\nmodule.exports = ReactNativeComponent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactNativeComponent.js\n ** module id = 76\n ** module chunks = 0\n **/","/**\n * Copyright 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactNoopUpdateQueue\n */\n\n'use strict';\n\nvar warning = require('fbjs/lib/warning');\n\nfunction warnTDZ(publicInstance, callerName) {\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor && publicInstance.constructor.displayName || '') : undefined;\n  }\n}\n\n/**\n * This is the abstract API for an update queue.\n */\nvar ReactNoopUpdateQueue = {\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Enqueue a callback that will be executed after all the pending updates\n   * have processed.\n   *\n   * @param {ReactClass} publicInstance The instance to use as `this` context.\n   * @param {?function} callback Called after state is updated.\n   * @internal\n   */\n  enqueueCallback: function (publicInstance, callback) {},\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance) {\n    warnTDZ(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState) {\n    warnTDZ(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState) {\n    warnTDZ(publicInstance, 'setState');\n  },\n\n  /**\n   * Sets a subset of the props.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialProps Subset of the next props.\n   * @internal\n   */\n  enqueueSetProps: function (publicInstance, partialProps) {\n    warnTDZ(publicInstance, 'setProps');\n  },\n\n  /**\n   * Replaces all of the props.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} props New props.\n   * @internal\n   */\n  enqueueReplaceProps: function (publicInstance, props) {\n    warnTDZ(publicInstance, 'replaceProps');\n  }\n\n};\n\nmodule.exports = ReactNoopUpdateQueue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactNoopUpdateQueue.js\n ** module id = 77\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPropTypes\n */\n\n'use strict';\n\nvar ReactElement = require('./ReactElement');\nvar ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar getIteratorFn = require('./getIteratorFn');\n\n/**\n * Collection of methods that allow declaration and validation of props that are\n * supplied to React components. Example usage:\n *\n *   var Props = require('ReactPropTypes');\n *   var MyArticle = React.createClass({\n *     propTypes: {\n *       // An optional string prop named \"description\".\n *       description: Props.string,\n *\n *       // A required enum prop named \"category\".\n *       category: Props.oneOf(['News','Photos']).isRequired,\n *\n *       // A prop named \"dialog\" that requires an instance of Dialog.\n *       dialog: Props.instanceOf(Dialog).isRequired\n *     },\n *     render: function() { ... }\n *   });\n *\n * A more formal specification of how these methods are used:\n *\n *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n *   decl := ReactPropTypes.{type}(.isRequired)?\n *\n * Each and every declaration produces a function with the same signature. This\n * allows the creation of custom validation functions. For example:\n *\n *  var MyLink = React.createClass({\n *    propTypes: {\n *      // An optional string or URI prop named \"href\".\n *      href: function(props, propName, componentName) {\n *        var propValue = props[propName];\n *        if (propValue != null && typeof propValue !== 'string' &&\n *            !(propValue instanceof URI)) {\n *          return new Error(\n *            'Expected a string or an URI for ' + propName + ' in ' +\n *            componentName\n *          );\n *        }\n *      }\n *    },\n *    render: function() {...}\n *  });\n *\n * @internal\n */\n\nvar ANONYMOUS = '<<anonymous>>';\n\nvar ReactPropTypes = {\n  array: createPrimitiveTypeChecker('array'),\n  bool: createPrimitiveTypeChecker('boolean'),\n  func: createPrimitiveTypeChecker('function'),\n  number: createPrimitiveTypeChecker('number'),\n  object: createPrimitiveTypeChecker('object'),\n  string: createPrimitiveTypeChecker('string'),\n\n  any: createAnyTypeChecker(),\n  arrayOf: createArrayOfTypeChecker,\n  element: createElementTypeChecker(),\n  instanceOf: createInstanceTypeChecker,\n  node: createNodeChecker(),\n  objectOf: createObjectOfTypeChecker,\n  oneOf: createEnumTypeChecker,\n  oneOfType: createUnionTypeChecker,\n  shape: createShapeTypeChecker\n};\n\nfunction createChainableTypeChecker(validate) {\n  function checkType(isRequired, props, propName, componentName, location, propFullName) {\n    componentName = componentName || ANONYMOUS;\n    propFullName = propFullName || propName;\n    if (props[propName] == null) {\n      var locationName = ReactPropTypeLocationNames[location];\n      if (isRequired) {\n        return new Error('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));\n      }\n      return null;\n    } else {\n      return validate(props, propName, componentName, location, propFullName);\n    }\n  }\n\n  var chainedCheckType = checkType.bind(null, false);\n  chainedCheckType.isRequired = checkType.bind(null, true);\n\n  return chainedCheckType;\n}\n\nfunction createPrimitiveTypeChecker(expectedType) {\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== expectedType) {\n      var locationName = ReactPropTypeLocationNames[location];\n      // `propValue` being instance of, say, date/regexp, pass the 'object'\n      // check, but we can offer a more precise error message here rather than\n      // 'of type `object`'.\n      var preciseType = getPreciseType(propValue);\n\n      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createAnyTypeChecker() {\n  return createChainableTypeChecker(emptyFunction.thatReturns(null));\n}\n\nfunction createArrayOfTypeChecker(typeChecker) {\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    if (!Array.isArray(propValue)) {\n      var locationName = ReactPropTypeLocationNames[location];\n      var propType = getPropType(propValue);\n      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n    }\n    for (var i = 0; i < propValue.length; i++) {\n      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']');\n      if (error instanceof Error) {\n        return error;\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createElementTypeChecker() {\n  function validate(props, propName, componentName, location, propFullName) {\n    if (!ReactElement.isValidElement(props[propName])) {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a single ReactElement.'));\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createInstanceTypeChecker(expectedClass) {\n  function validate(props, propName, componentName, location, propFullName) {\n    if (!(props[propName] instanceof expectedClass)) {\n      var locationName = ReactPropTypeLocationNames[location];\n      var expectedClassName = expectedClass.name || ANONYMOUS;\n      var actualClassName = getClassName(props[propName]);\n      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createEnumTypeChecker(expectedValues) {\n  if (!Array.isArray(expectedValues)) {\n    return createChainableTypeChecker(function () {\n      return new Error('Invalid argument supplied to oneOf, expected an instance of array.');\n    });\n  }\n\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    for (var i = 0; i < expectedValues.length; i++) {\n      if (propValue === expectedValues[i]) {\n        return null;\n      }\n    }\n\n    var locationName = ReactPropTypeLocationNames[location];\n    var valuesString = JSON.stringify(expectedValues);\n    return new Error('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createObjectOfTypeChecker(typeChecker) {\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== 'object') {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n    }\n    for (var key in propValue) {\n      if (propValue.hasOwnProperty(key)) {\n        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createUnionTypeChecker(arrayOfTypeCheckers) {\n  if (!Array.isArray(arrayOfTypeCheckers)) {\n    return createChainableTypeChecker(function () {\n      return new Error('Invalid argument supplied to oneOfType, expected an instance of array.');\n    });\n  }\n\n  function validate(props, propName, componentName, location, propFullName) {\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (checker(props, propName, componentName, location, propFullName) == null) {\n        return null;\n      }\n    }\n\n    var locationName = ReactPropTypeLocationNames[location];\n    return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createNodeChecker() {\n  function validate(props, propName, componentName, location, propFullName) {\n    if (!isNode(props[propName])) {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createShapeTypeChecker(shapeTypes) {\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== 'object') {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n    }\n    for (var key in shapeTypes) {\n      var checker = shapeTypes[key];\n      if (!checker) {\n        continue;\n      }\n      var error = checker(propValue, key, componentName, location, propFullName + '.' + key);\n      if (error) {\n        return error;\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction isNode(propValue) {\n  switch (typeof propValue) {\n    case 'number':\n    case 'string':\n    case 'undefined':\n      return true;\n    case 'boolean':\n      return !propValue;\n    case 'object':\n      if (Array.isArray(propValue)) {\n        return propValue.every(isNode);\n      }\n      if (propValue === null || ReactElement.isValidElement(propValue)) {\n        return true;\n      }\n\n      var iteratorFn = getIteratorFn(propValue);\n      if (iteratorFn) {\n        var iterator = iteratorFn.call(propValue);\n        var step;\n        if (iteratorFn !== propValue.entries) {\n          while (!(step = iterator.next()).done) {\n            if (!isNode(step.value)) {\n              return false;\n            }\n          }\n        } else {\n          // Iterator will provide entry [k,v] tuples rather than values.\n          while (!(step = iterator.next()).done) {\n            var entry = step.value;\n            if (entry) {\n              if (!isNode(entry[1])) {\n                return false;\n              }\n            }\n          }\n        }\n      } else {\n        return false;\n      }\n\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Equivalent of `typeof` but with special handling for array and regexp.\nfunction getPropType(propValue) {\n  var propType = typeof propValue;\n  if (Array.isArray(propValue)) {\n    return 'array';\n  }\n  if (propValue instanceof RegExp) {\n    // Old webkits (at least until Android 4.0) return 'function' rather than\n    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n    // passes PropTypes.object.\n    return 'object';\n  }\n  return propType;\n}\n\n// This handles more types than `getPropType`. Only used for error messages.\n// See `createPrimitiveTypeChecker`.\nfunction getPreciseType(propValue) {\n  var propType = getPropType(propValue);\n  if (propType === 'object') {\n    if (propValue instanceof Date) {\n      return 'date';\n    } else if (propValue instanceof RegExp) {\n      return 'regexp';\n    }\n  }\n  return propType;\n}\n\n// Returns class name of the object, if any.\nfunction getClassName(propValue) {\n  if (!propValue.constructor || !propValue.constructor.name) {\n    return '<<anonymous>>';\n  }\n  return propValue.constructor.name;\n}\n\nmodule.exports = ReactPropTypes;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactPropTypes.js\n ** module id = 78\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactRootIndex\n * @typechecks\n */\n\n'use strict';\n\nvar ReactRootIndexInjection = {\n  /**\n   * @param {function} _createReactRootIndex\n   */\n  injectCreateReactRootIndex: function (_createReactRootIndex) {\n    ReactRootIndex.createReactRootIndex = _createReactRootIndex;\n  }\n};\n\nvar ReactRootIndex = {\n  createReactRootIndex: null,\n  injection: ReactRootIndexInjection\n};\n\nmodule.exports = ReactRootIndex;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactRootIndex.js\n ** module id = 79\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ViewportMetrics\n */\n\n'use strict';\n\nvar ViewportMetrics = {\n\n  currentScrollLeft: 0,\n\n  currentScrollTop: 0,\n\n  refreshScrollValues: function (scrollPosition) {\n    ViewportMetrics.currentScrollLeft = scrollPosition.x;\n    ViewportMetrics.currentScrollTop = scrollPosition.y;\n  }\n\n};\n\nmodule.exports = ViewportMetrics;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ViewportMetrics.js\n ** module id = 80\n ** module chunks = 0\n **/","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule accumulateInto\n */\n\n'use strict';\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n *\n * Accumulates items that must not be null or undefined into the first one. This\n * is used to conserve memory by avoiding array allocations, and thus sacrifices\n * API cleanness. Since `current` can be null before being passed in and not\n * null after this function, make sure to assign it back to `current`:\n *\n * `a = accumulateInto(a, b);`\n *\n * This API should be sparingly used. Try `accumulate` for something cleaner.\n *\n * @return {*|array<*>} An accumulation of items.\n */\n\nfunction accumulateInto(current, next) {\n  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : invariant(false) : undefined;\n  if (current == null) {\n    return next;\n  }\n\n  // Both are not empty. Warning: Never call x.concat(y) when you are not\n  // certain that x is an Array (x could be a string with concat method).\n  var currentIsArray = Array.isArray(current);\n  var nextIsArray = Array.isArray(next);\n\n  if (currentIsArray && nextIsArray) {\n    current.push.apply(current, next);\n    return current;\n  }\n\n  if (currentIsArray) {\n    current.push(next);\n    return current;\n  }\n\n  if (nextIsArray) {\n    // A bit too dangerous to mutate `next`.\n    return [current].concat(next);\n  }\n\n  return [current, next];\n}\n\nmodule.exports = accumulateInto;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/accumulateInto.js\n ** module id = 81\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule forEachAccumulated\n */\n\n'use strict';\n\n/**\n * @param {array} arr an \"accumulation\" of items which is either an Array or\n * a single item. Useful when paired with the `accumulate` module. This is a\n * simple utility that allows us to reason about a collection of items, but\n * handling the case when there is exactly one item (and we do not need to\n * allocate an array).\n */\nvar forEachAccumulated = function (arr, cb, scope) {\n  if (Array.isArray(arr)) {\n    arr.forEach(cb, scope);\n  } else if (arr) {\n    cb.call(scope, arr);\n  }\n};\n\nmodule.exports = forEachAccumulated;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/forEachAccumulated.js\n ** module id = 82\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getTextContentAccessor\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar contentKey = null;\n\n/**\n * Gets the key used to access text content on a DOM node.\n *\n * @return {?string} Key used to access text content.\n * @internal\n */\nfunction getTextContentAccessor() {\n  if (!contentKey && ExecutionEnvironment.canUseDOM) {\n    // Prefer textContent to innerText because many browsers support both but\n    // SVG <text> elements don't support innerText even when <div> does.\n    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';\n  }\n  return contentKey;\n}\n\nmodule.exports = getTextContentAccessor;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/getTextContentAccessor.js\n ** module id = 83\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule isTextInputElement\n */\n\n'use strict';\n\n/**\n * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\n */\nvar supportedInputTypes = {\n  'color': true,\n  'date': true,\n  'datetime': true,\n  'datetime-local': true,\n  'email': true,\n  'month': true,\n  'number': true,\n  'password': true,\n  'range': true,\n  'search': true,\n  'tel': true,\n  'text': true,\n  'time': true,\n  'url': true,\n  'week': true\n};\n\nfunction isTextInputElement(elem) {\n  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n  return nodeName && (nodeName === 'input' && supportedInputTypes[elem.type] || nodeName === 'textarea');\n}\n\nmodule.exports = isTextInputElement;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/isTextInputElement.js\n ** module id = 84\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule EventListener\n * @typechecks\n */\n\n'use strict';\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Upstream version of event listener. Does not take into account specific\n * nature of platform.\n */\nvar EventListener = {\n  /**\n   * Listen to DOM events during the bubble phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  listen: function (target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, false);\n      return {\n        remove: function () {\n          target.removeEventListener(eventType, callback, false);\n        }\n      };\n    } else if (target.attachEvent) {\n      target.attachEvent('on' + eventType, callback);\n      return {\n        remove: function () {\n          target.detachEvent('on' + eventType, callback);\n        }\n      };\n    }\n  },\n\n  /**\n   * Listen to DOM events during the capture phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  capture: function (target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, true);\n      return {\n        remove: function () {\n          target.removeEventListener(eventType, callback, true);\n        }\n      };\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');\n      }\n      return {\n        remove: emptyFunction\n      };\n    }\n  },\n\n  registerDefault: function () {}\n};\n\nmodule.exports = EventListener;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/EventListener.js\n ** module id = 85\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule containsNode\n * @typechecks\n */\n\n'use strict';\n\nvar isTextNode = require('./isTextNode');\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n *\n * @param {?DOMNode} outerNode Outer DOM node.\n * @param {?DOMNode} innerNode Inner DOM node.\n * @return {boolean} True if `outerNode` contains or is `innerNode`.\n */\nfunction containsNode(_x, _x2) {\n  var _again = true;\n\n  _function: while (_again) {\n    var outerNode = _x,\n        innerNode = _x2;\n    _again = false;\n\n    if (!outerNode || !innerNode) {\n      return false;\n    } else if (outerNode === innerNode) {\n      return true;\n    } else if (isTextNode(outerNode)) {\n      return false;\n    } else if (isTextNode(innerNode)) {\n      _x = outerNode;\n      _x2 = innerNode.parentNode;\n      _again = true;\n      continue _function;\n    } else if (outerNode.contains) {\n      return outerNode.contains(innerNode);\n    } else if (outerNode.compareDocumentPosition) {\n      return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n    } else {\n      return false;\n    }\n  }\n}\n\nmodule.exports = containsNode;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/containsNode.js\n ** module id = 86\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule focusNode\n */\n\n'use strict';\n\n/**\n * @param {DOMElement} node input/textarea to focus\n */\nfunction focusNode(node) {\n  // IE8 can throw \"Can't move focus to the control because it is invisible,\n  // not enabled, or of a type that does not accept the focus.\" for all kinds of\n  // reasons that are too expensive and fragile to test.\n  try {\n    node.focus();\n  } catch (e) {}\n}\n\nmodule.exports = focusNode;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/focusNode.js\n ** module id = 87\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getActiveElement\n * @typechecks\n */\n\n/* eslint-disable fb-www/typeof-undefined */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n */\n'use strict';\n\nfunction getActiveElement() /*?DOMElement*/{\n  if (typeof document === 'undefined') {\n    return null;\n  }\n  try {\n    return document.activeElement || document.body;\n  } catch (e) {\n    return document.body;\n  }\n}\n\nmodule.exports = getActiveElement;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/getActiveElement.js\n ** module id = 88\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getMarkupWrap\n */\n\n/*eslint-disable fb-www/unsafe-html */\n\n'use strict';\n\nvar ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar invariant = require('./invariant');\n\n/**\n * Dummy container used to detect which wraps are necessary.\n */\nvar dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\n/**\n * Some browsers cannot use `innerHTML` to render certain elements standalone,\n * so we wrap them, render the wrapped nodes, then extract the desired node.\n *\n * In IE8, certain elements cannot render alone, so wrap all elements ('*').\n */\n\nvar shouldWrap = {};\n\nvar selectWrap = [1, '<select multiple=\"true\">', '</select>'];\nvar tableWrap = [1, '<table>', '</table>'];\nvar trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nvar svgWrap = [1, '<svg xmlns=\"http://www.w3.org/2000/svg\">', '</svg>'];\n\nvar markupWrap = {\n  '*': [1, '?<div>', '</div>'],\n\n  'area': [1, '<map>', '</map>'],\n  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  'legend': [1, '<fieldset>', '</fieldset>'],\n  'param': [1, '<object>', '</object>'],\n  'tr': [2, '<table><tbody>', '</tbody></table>'],\n\n  'optgroup': selectWrap,\n  'option': selectWrap,\n\n  'caption': tableWrap,\n  'colgroup': tableWrap,\n  'tbody': tableWrap,\n  'tfoot': tableWrap,\n  'thead': tableWrap,\n\n  'td': trWrap,\n  'th': trWrap\n};\n\n// Initialize the SVG elements since we know they'll always need to be wrapped\n// consistently. If they are created inside a <div> they will be initialized in\n// the wrong namespace (and will not display).\nvar svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];\nsvgElements.forEach(function (nodeName) {\n  markupWrap[nodeName] = svgWrap;\n  shouldWrap[nodeName] = true;\n});\n\n/**\n * Gets the markup wrap configuration for the supplied `nodeName`.\n *\n * NOTE: This lazily detects which wraps are necessary for the current browser.\n *\n * @param {string} nodeName Lowercase `nodeName`.\n * @return {?array} Markup wrap configuration, if applicable.\n */\nfunction getMarkupWrap(nodeName) {\n  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : undefined;\n  if (!markupWrap.hasOwnProperty(nodeName)) {\n    nodeName = '*';\n  }\n  if (!shouldWrap.hasOwnProperty(nodeName)) {\n    if (nodeName === '*') {\n      dummyNode.innerHTML = '<link />';\n    } else {\n      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';\n    }\n    shouldWrap[nodeName] = !dummyNode.firstChild;\n  }\n  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;\n}\n\nmodule.exports = getMarkupWrap;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/getMarkupWrap.js\n ** module id = 89\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule shallowEqual\n * @typechecks\n * \n */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  var bHasOwnProperty = hasOwnProperty.bind(objB);\n  for (var i = 0; i < keysA.length; i++) {\n    if (!bHasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/shallowEqual.js\n ** module id = 90\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_91__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"radium\"\n ** module id = 91\n ** module chunks = 0\n **/","Link = require '../views/Link'\n\nmodule.exports = {Link}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/themes/ThemeDefault.coffee\n **/","React = require 'react'\nRadium = require 'radium'\n{merge, none, props, test} = require 'ramda' #auto_require:ramda\n{a} = React.DOM\n\n\n# COMPONENTS ##################################################################\n\nbuild = (comp, props, children...) ->\n\treturn React.createElement comp, props, children...\n\n##### LINK \nLink_ = React.createFactory require '../views/Link'\n# Link_ = require '../views/Link'\n\nLinkStyle =\n\tcolor: 'red'\n\t\nLink = Radium React.createClass\n\tdisplayName: 'LinkThemeMaterialDesign'\n\trender: ->\n\t\t# a {}, 'test2'\n\t\tLink_ merge({theme: LinkStyle}, @props), @props.children\n\t\t# build Link_, {theme: LinkStyle}, @props.children\n\n# Link.style = LinkStyle\n\nDialog = require '../views/Dialog'\n\n# GLOBAL ##################################################################\nmodernElement =\n\tdisplay: 'flex'\n\tposition: 'relative'\n\tflexDirection: 'column'\n\tflexShrink: 0 # weird behaviour with right margin on rootView on small screens\n\tuserSelect: 'none'\n\tmargin: 0\n\tpadding: 0\n\talignItems: 'stretch'\n\nGlobalRules =\n\tbody: merge modernElement,\n\t\tmargin: 0,\n\t\tpadding: 0\n\t\tfontFamily: 'proxima-nova, Helvetica Neue, Helvetica, Arial, sans-serif'\n\t\tcolor: '#464646'\n\t\tfontSize: '0.9em'\n\thtml: merge modernElement,\n\t\tmargin: 0,\n\t\tpadding: 0\n\t\tbackground: '#EDEDE5'\n\t'*':\n\t\tboxSizing: 'border-box'\n\n\tbutton: modernElement\n\theader: modernElement\n\tsection: modernElement\n\tnav: modernElement\n\tli: modernElement\n\tdiv: modernElement\n\n\th1:\n\t\tfontWeight: 600\n\t\tfontSize: '1.30rem'\n\t\tmarginTop: 0\n\t\tcolor: '#4D4D4D'\n\n\th3:\n\t\tfontWeight: 500\n\t\tfontSize: '1.0rem'\n\t\tmarginTop: 0\n\t\tcolor: '#666666'\n\n\t# Common util classes\n\t'.no-scroll':\n\t\toverflow: 'hidden'\n\nmodule.exports = {Link, Dialog, GlobalRules}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/themes/ThemeMaterialDesign.coffee\n **/","React = require 'react'\n{bool} = React.PropTypes\n{} = require 'ramda' #auto_require:ramda\n{div} = React.DOM\nPortal = React.createFactory require './Portal'\n\nstyle =\n\tposition: 'fixed'\n\tzIndex: 99999\n\ttop: 0\n\tdisplay: 'flex'\n\tjustifyContent: 'center'\n\talignItems: 'center'\n\twidth: '100%'\n\theight: '100%'\n\tbackground: 'rgba(0, 0, 0, 0.32)'\n\nDialog = React.createClass\n\tpropTypes:\n\t\tisOpen: bool\n\n\trenderLayer: ->\n\t\tdiv {style},\n\t\t\t@props.children\n\n\trender: ->\n\t\t{isOpen} = @props\n\t\tif !isOpen then return null\n\t\t# div {}, 'vad är detta?'\n\t\tPortal {renderFn: @renderLayer}\n\nmodule.exports = Dialog\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/views/Dialog.coffee\n **/","React = require 'react'\n{func} = React.PropTypes\nReactDOM = require 'react-dom'\n{div} = React.DOM\n{any, isNil} = require 'ramda' #auto_require:ramda\n\n# much inspired by https://github.com/callemall/material-ui/blob/master/src/internal/RenderToLayer.js\n\nPortal = React.createClass\n\tpropTypes:\n\t\trenderFn: func.isRequired\n\n\tcomponentDidMount: ->\n\t\t@renderLayer()\n\n\tcomponentDidUpdate: ->\n\t\t@renderLayer()\n\n\tcomponentWillUnmount: ->\n\t\t@unrenderLayer()\n\n\trender: -> null\n\n\trenderLayer: ->\n\t\t{renderFn} = @props\n\n\t\tif !@layer\n\t\t\t@layer = document.createElement 'div'\n\t\t\t# important to have position initial since if it is relative any node\n\t\t\t# returned from renderFn() that is absolute position will be absolute\n\t\t\t# relative to the @layer div and since that is added to the end\n\t\t\t# of the body node, the absolute node will be at the very bottom of\n\t\t\t# the page\n\t\t\t@layer.style.position = 'initial'\n\t\t\tdocument.body.appendChild @layer\n\n\t\t\t# By calling this method in componentDidMount() and\n\t\t\t# componentDidUpdate(), you're effectively creating a \"wormhole\" that\n\t\t\t# funnels React's hierarchical updates through to a DOM node on an\n\t\t\t# entirely different part of the page.\n\n\t\tlayerElement = renderFn()\n\n\t\tif isNil layerElement\n\t\t\t# comments on unstable_renderSubtreeIntoContainer\n\t\t\t# https://twitter.com/sebmarkbage/status/694285706827399168\n\t\t\t# https://twitter.com/soprano/status/679814652172189696\n\t\t\t@layerElement = ReactDOM.unstable_renderSubtreeIntoContainer @, null, @layer\n\t\telse\n\t\t\t@layerElement = ReactDOM.unstable_renderSubtreeIntoContainer @, layerElement, @layer\n\n\tunrenderLayer: ->\n\t\tif !@layer then return\n\n\t\tReactDOM.unmountComponentAtNode @layer\n\t\tdocument.body.removeChild @layer\n\t\t@layer = null\n\n\tgetLayer: -> @layer\n\nmodule.exports = Portal\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/views/Portal.coffee\n **/","ThemeDefault = require './themes/ThemeDefault'\nThemeMaterialDesign = require './themes/ThemeMaterialDesign'\nurl = require './utils/url'\nreact = require './utils/react'\n\na = {ThemeDefault, ThemeMaterialDesign, url, react}\nconsole.log 'a', a\nmodule.exports = a\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/yun.coffee\n **/","/**\n * @license\n * lodash 4.3.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash -d -o ./foo/lodash.js`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.3.0';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256,\n      FLIP_FLAG = 512;\n\n  /** Used to compose bitmasks for comparison styles. */\n  var UNORDERED_COMPARE_FLAG = 1,\n      PARTIAL_COMPARE_FLAG = 2;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]/g;\n\n  /** Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns). */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0x/i;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari > 5). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsQuoteRange = '\\\\u2018\\\\u2019\\\\u201c\\\\u201d',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsQuoteRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasComplexSymbol = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\n  /** Used to match non-compound words composed of alphanumeric characters. */\n  var reBasicWord = /[a-zA-Z0-9]+/g;\n\n  /** Used to match complex or compound words. */\n  var reComplexWord = RegExp([\n    rsUpper + '?' + rsLower + '+(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsUpperMisc + '+(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n    rsUpper + '?' + rsLowerMisc + '+',\n    rsUpper + '+',\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasComplexWord = /[a-z][A-Z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Reflect', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap', '_',\n    'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n  cloneableTags[mapTag] = cloneableTags[numberTag] =\n  cloneableTags[objectTag] = cloneableTags[regexpTag] =\n  cloneableTags[setTag] = cloneableTags[stringTag] =\n  cloneableTags[symbolTag] = cloneableTags[uint8Tag] =\n  cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] =\n  cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `exports`. */\n  var freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType) ? exports : null;\n\n  /** Detect free variable `module`. */\n  var freeModule = (objectTypes[typeof module] && module && !module.nodeType) ? module : null;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = checkGlobal(freeExports && freeModule && typeof global == 'object' && global);\n\n  /** Detect free variable `self`. */\n  var freeSelf = checkGlobal(objectTypes[typeof self] && self);\n\n  /** Detect free variable `window`. */\n  var freeWindow = checkGlobal(objectTypes[typeof window] && window);\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = (freeModule && freeModule.exports === freeExports) ? freeExports : null;\n\n  /** Detect `this` as the global object. */\n  var thisGlobal = checkGlobal(objectTypes[typeof this] && this);\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it's the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = freeGlobal || ((freeWindow !== (thisGlobal && thisGlobal.window)) && freeWindow) || freeSelf || thisGlobal || Function('return this')();\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {...*} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    var length = args.length;\n    switch (length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * Creates a new array concatenating `array` with `other`.\n   *\n   * @private\n   * @param {Array} array The first array to concatenate.\n   * @param {Array} other The second array to concatenate.\n   * @returns {Array} Returns the new concatenated array.\n   */\n  function arrayConcat(array, other) {\n    var index = -1,\n        length = array.length,\n        othIndex = -1,\n        othLength = other.length,\n        result = Array(length + othLength);\n\n    while (++index < length) {\n      result[index] = array[index];\n    }\n    while (++othIndex < othLength) {\n      result[index++] = other[othIndex];\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check, else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[++resIndex] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    return !!array.length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * A specialized version of `_.includesWith` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * The base implementation of methods like `_.max` and `_.min` which accepts a\n   * `comparator` to determine the extremum value.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The iteratee invoked per iteration.\n   * @param {Function} comparator The comparator used to compare values.\n   * @returns {*} Returns the extremum value.\n   */\n  function baseExtremum(array, iteratee, comparator) {\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var value = array[index],\n          current = iteratee(value);\n\n      if (current != null && (computed === undefined\n            ? current === current\n            : comparator(current, computed)\n          )) {\n        var computed = current,\n            result = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of methods like `_.find` and `_.findKey`, without\n   * support for iteratee shorthands, which iterates over `collection` using\n   * `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @param {boolean} [retKey] Specify returning the key of the found element instead of the element itself.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFind(collection, predicate, eachFunc, retKey) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = retKey ? key : value;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromRight) {\n    var length = array.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define\n   * the sort order of `array` and replaces criteria objects with their\n   * corresponding values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the new array of key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing wrapper metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Checks if `value` is a global object.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {null|Object} Returns `value` if it's a global object, else `null`.\n   */\n  function checkGlobal(value) {\n    return (value && value.Object === Object) ? value : null;\n  }\n\n  /**\n   * Compares values to sort them in ascending order.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function compareAscending(value, other) {\n    if (value !== other) {\n      var valIsNull = value === null,\n          valIsUndef = value === undefined,\n          valIsReflexive = value === value;\n\n      var othIsNull = other === null,\n          othIsUndef = other === undefined,\n          othIsReflexive = other === other;\n\n      if ((value > other && !othIsNull) || !valIsReflexive ||\n          (valIsNull && !othIsUndef && othIsReflexive) ||\n          (valIsUndef && othIsReflexive)) {\n        return 1;\n      }\n      if ((value < other && !valIsNull) || !othIsReflexive ||\n          (othIsNull && !valIsUndef && valIsReflexive) ||\n          (othIsUndef && valIsReflexive)) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * Used by `_.orderBy` to compare multiple properties of a value to another\n   * and stable sort them.\n   *\n   * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n   * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n   * of corresponding values.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {boolean[]|string[]} orders The order to sort by for each property.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareMultiple(object, other, orders) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length,\n        ordersLength = orders.length;\n\n    while (++index < length) {\n      var result = compareAscending(objCriteria[index], othCriteria[index]);\n      if (result) {\n        if (index >= ordersLength) {\n          return result;\n        }\n        var order = orders[index];\n        return result * (order == 'desc' ? -1 : 1);\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 0 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is a host object in IE < 9.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n   */\n  function isHostObject(value) {\n    // Many host objects are `Object` objects that can coerce to strings\n    // despite having improperly defined `toString` methods.\n    var result = false;\n    if (value != null && typeof value.toString != 'function') {\n      try {\n        result = !!(value + '');\n      } catch (e) {}\n    }\n    return result;\n  }\n\n  /**\n   * Checks if `value` is a valid array-like index.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n   */\n  function isIndex(value, length) {\n    value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n    length = length == null ? MAX_SAFE_INTEGER : length;\n    return value > -1 && value % 1 == 0 && value < length;\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to an array.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      if (array[index] === placeholder) {\n        array[index] = PLACEHOLDER;\n        result[++resIndex] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    if (!(string && reHasComplexSymbol.test(string))) {\n      return string.length;\n    }\n    var result = reComplexSymbol.lastIndex = 0;\n    while (reComplexSymbol.test(string)) {\n      result++;\n    }\n    return result;\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return string.match(reComplexSymbol);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Use `context` to mock `Date#getTime` use in `_.now`.\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    context = context ? _.defaults({}, context, _.pick(root, contextProps)) : root;\n\n    /** Built-in constructor references. */\n    var Date = context.Date,\n        Error = context.Error,\n        Math = context.Math,\n        RegExp = context.RegExp,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = context.Array.prototype,\n        objectProto = context.Object.prototype;\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = context.Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /**\n     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objectToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Reflect = context.Reflect,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        clearTimeout = context.clearTimeout,\n        enumerate = Reflect ? Reflect.enumerate : undefined,\n        getPrototypeOf = Object.getPrototypeOf,\n        getOwnPropertySymbols = Object.getOwnPropertySymbols,\n        iteratorSymbol = typeof (iteratorSymbol = Symbol && Symbol.iterator) == 'symbol' ? iteratorSymbol : undefined,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = Object.keys,\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var Map = getNative(context, 'Map'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var mapCtorString = Map ? funcToString.call(Map) : '',\n        setCtorString = Set ? funcToString.call(Set) : '',\n        weakMapCtorString = WeakMap ? funcToString.call(WeakMap) : '';\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = Symbol ? symbolProto.valueOf : undefined,\n        symbolToString = Symbol ? symbolProto.toString : undefined;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chaining. Methods that operate on and return arrays, collections, and\n     * functions can be chained together. Methods that retrieve a single value or\n     * may return a primitive value will automatically end the chain sequence and\n     * return the unwrapped value. Otherwise, the value must be unwrapped with\n     * `_#value`.\n     *\n     * Explicit chaining, which must be unwrapped with `_#value` in all cases,\n     * may be enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization to merge iteratee calls; this avoids the creation\n     * of intermediate arrays and can greatly reduce the number of iteratee executions.\n     * Sections of a chain sequence qualify for shortcut fusion if the section is\n     * applied to an array of at least two hundred elements and any iteratees\n     * accept only one argument. The heuristic for whether a section qualifies\n     * for shortcut fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`,\n     * `at`, `before`, `bind`, `bindAll`, `bindKey`, `chain`, `chunk`, `commit`,\n     * `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`, `curry`,\n     * `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`, `difference`,\n     * `differenceBy`, `differenceWith`, `drop`, `dropRight`, `dropRightWhile`,\n     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flip`, `flow`,\n     * `flowRight`, `fromPairs`, `functions`, `functionsIn`, `groupBy`, `initial`,\n     * `intersection`, `intersectionBy`, `intersectionWith`, `invert`, `invertBy`,\n     * `invokeMap`, `iteratee`, `keyBy`, `keys`, `keysIn`, `map`, `mapKeys`,\n     * `mapValues`, `matches`, `matchesProperty`, `memoize`, `merge`, `mergeWith`,\n     * `method`, `methodOf`, `mixin`, `negate`, `nthArg`, `omit`, `omitBy`, `once`,\n     * `orderBy`, `over`, `overArgs`, `overEvery`, `overSome`, `partial`,\n     * `partialRight`, `partition`, `pick`, `pickBy`, `plant`, `property`,\n     * `propertyOf`, `pull`, `pullAll`, `pullAllBy`, `pullAt`, `push`, `range`,\n     * `rangeRight`, `rearg`, `reject`, `remove`, `rest`, `reverse`, `sampleSize`,\n     * `set`, `setWith`, `shuffle`, `slice`, `sort`, `sortBy`, `splice`, `spread`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `tap`, `throttle`,\n     * `thru`, `toArray`, `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`,\n     * `transform`, `unary`, `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`,\n     * `uniqWith`, `unset`, `unshift`, `unzip`, `unzipWith`, `values`, `valuesIn`,\n     * `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`, `zipObject`,\n     * `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `deburr`, `endsWith`, `eq`,\n     * `escape`, `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`,\n     * `findLast`, `findLastIndex`, `findLastKey`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayLike`, `isArrayLikeObject`, `isBoolean`,\n     * `isDate`, `isElement`, `isEmpty`, `isEqual`, `isEqualWith`, `isError`,\n     * `isFinite`, `isFunction`, `isInteger`, `isLength`, `isMatch`, `isMatchWith`,\n     * `isNaN`, `isNative`, `isNil`, `isNull`, `isNumber`, `isObject`, `isObjectLike`,\n     * `isPlainObject`, `isRegExp`, `isSafeInteger`, `isString`, `isUndefined`,\n     * `isTypedArray`, `join`, `kebabCase`, `last`, `lastIndexOf`, `lowerCase`,\n     * `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `min`, `minBy`,\n     * `noConflict`, `noop`, `now`, `pad`, `padEnd`, `padStart`, `parseInt`,\n     * `pop`, `random`, `reduce`, `reduceRight`, `repeat`, `result`, `round`,\n     * `runInContext`, `sample`, `shift`, `size`, `snakeCase`, `some`, `sortedIndex`,\n     * `sortedIndexBy`, `sortedLastIndex`, `sortedLastIndexBy`, `startCase`,\n     * `startsWith`, `subtract`, `sum`, `sumBy`, `template`, `times`, `toLower`,\n     * `toInteger`, `toLength`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`,\n     * `trim`, `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`,\n     * `upperCase`, `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype all chaining wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE || (arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an hash object.\n     *\n     * @private\n     * @returns {Object} Returns the new hash object.\n     */\n    function Hash() {}\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(hash, key) {\n      return hashHas(hash, key) && delete hash[key];\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @param {Object} hash The hash to query.\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(hash, key) {\n      if (nativeCreate) {\n        var result = hash[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(hash, key) ? hash[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @param {Object} hash The hash to query.\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(hash, key) {\n      return nativeCreate ? hash[key] !== undefined : hasOwnProperty.call(hash, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     */\n    function hashSet(hash, key, value) {\n      hash[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n    function MapCache(values) {\n      var index = -1,\n          length = values ? values.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = values[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapClear() {\n      this.__data__ = { 'hash': new Hash, 'map': Map ? new Map : [], 'string': new Hash };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapDelete(key) {\n      var data = this.__data__;\n      if (isKeyable(key)) {\n        return hashDelete(typeof key == 'string' ? data.string : data.hash, key);\n      }\n      return Map ? data.map['delete'](key) : assocDelete(data.map, key);\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapGet(key) {\n      var data = this.__data__;\n      if (isKeyable(key)) {\n        return hashGet(typeof key == 'string' ? data.string : data.hash, key);\n      }\n      return Map ? data.map.get(key) : assocGet(data.map, key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapHas(key) {\n      var data = this.__data__;\n      if (isKeyable(key)) {\n        return hashHas(typeof key == 'string' ? data.string : data.hash, key);\n      }\n      return Map ? data.map.has(key) : assocHas(data.map, key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache object.\n     */\n    function mapSet(key, value) {\n      var data = this.__data__;\n      if (isKeyable(key)) {\n        hashSet(typeof key == 'string' ? data.string : data.hash, key, value);\n      } else if (Map) {\n        data.map.set(key, value);\n      } else {\n        assocSet(data.map, key, value);\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a set cache object to store unique values.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values ? values.length : 0;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.push(values[index]);\n      }\n    }\n\n    /**\n     * Checks if `value` is in `cache`.\n     *\n     * @private\n     * @param {Object} cache The set cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function cacheHas(cache, value) {\n      var map = cache.__data__;\n      if (isKeyable(value)) {\n        var data = map.__data__,\n            hash = typeof value == 'string' ? data.string : data.hash;\n\n        return hash[value] === HASH_UNDEFINED;\n      }\n      return map.has(value);\n    }\n\n    /**\n     * Adds `value` to the set cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n    function cachePush(value) {\n      var map = this.__data__;\n      if (isKeyable(value)) {\n        var data = map.__data__,\n            hash = typeof value == 'string' ? data.string : data.hash;\n\n        hash[value] = HASH_UNDEFINED;\n      }\n      else {\n        map.set(value, HASH_UNDEFINED);\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n    function Stack(values) {\n      var index = -1,\n          length = values ? values.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = values[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = { 'array': [], 'map': null };\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          array = data.array;\n\n      return array ? assocDelete(array, key) : data.map['delete'](key);\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      var data = this.__data__,\n          array = data.array;\n\n      return array ? assocGet(array, key) : data.map.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      var data = this.__data__,\n          array = data.array;\n\n      return array ? assocHas(array, key) : data.map.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache object.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__,\n          array = data.array;\n\n      if (array) {\n        if (array.length < (LARGE_ARRAY_SIZE - 1)) {\n          assocSet(array, key, value);\n        } else {\n          data.array = null;\n          data.map = new MapCache(array);\n        }\n      }\n      var map = data.map;\n      if (map) {\n        map.set(key, value);\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Removes `key` and its value from the associative array.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function assocDelete(array, key) {\n      var index = assocIndexOf(array, key);\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = array.length - 1;\n      if (index == lastIndex) {\n        array.pop();\n      } else {\n        splice.call(array, index, 1);\n      }\n      return true;\n    }\n\n    /**\n     * Gets the associative array value for `key`.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function assocGet(array, key) {\n      var index = assocIndexOf(array, key);\n      return index < 0 ? undefined : array[index][1];\n    }\n\n    /**\n     * Checks if an associative array value for `key` exists.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function assocHas(array, key) {\n      return assocIndexOf(array, key) > -1;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `key` is found in `array`\n     * of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to search.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Sets the associative array `key` to `value`.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     */\n    function assocSet(array, key, value) {\n      var index = assocIndexOf(array, key);\n      if (index < 0) {\n        array.push([key, value]);\n      } else {\n        array[index][1] = value;\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function assignInDefaults(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (typeof key == 'number' && value === undefined && !(key in object))) {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if ((!eq(objValue, value) ||\n            (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) ||\n          (value === undefined && !(key in object))) {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          isNil = object == null,\n          length = paths.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = isNil ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments to numbers.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, customizer, key, object, stack) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          if (isHostObject(value)) {\n            return object ? value : {};\n          }\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          return cloneableTags[tag]\n            ? initCloneByTag(value, tag, isDeep)\n            : (object ? value : {});\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      // Recursively populate clone (susceptible to call stack limits).\n      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n        assignValue(result, key, baseClone(subValue, isDeep, customizer, key, value, stack));\n      });\n      return isArr ? result : copySymbols(value, result);\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new function.\n     */\n    function baseConforms(source) {\n      var props = keys(source),\n          length = props.length;\n\n      return function(object) {\n        if (object == null) {\n          return !length;\n        }\n        var index = length;\n        while (index--) {\n          var key = props[index],\n              predicate = source[key],\n              value = object[key];\n\n          if ((value === undefined && !(key in Object(object))) || !predicate(value)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(prototype) {\n        if (isObject(prototype)) {\n          object.prototype = prototype;\n          var result = new object;\n          object.prototype = undefined;\n        }\n        return result || {};\n      };\n    }());\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an array\n     * of `func` arguments.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments to provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support for\n     * excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check, else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, isDeep, isStrict, result) {\n      result || (result = []);\n\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index];\n        if (isArrayLikeObject(value) &&\n            (isStrict || isArray(value) || isArguments(value))) {\n          if (isDeep) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, isDeep, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iteratee functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forIn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForIn(object, iteratee) {\n      return object == null ? object : baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = isKey(path, object) ? [path + ''] : baseToPath(path);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[path[index++]];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,\n      // that are composed entirely of index properties, return `false` for\n      // `hasOwnProperty` checks of them.\n      return hasOwnProperty.call(object, key) ||\n        (typeof object == 'object' && key in object && getPrototypeOf(object) === null);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments to numbers.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        caches[othIndex] = !comparator && (iteratee || array.length >= 120)\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          length = array.length,\n          seen = caches[0];\n\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!(seen ? cacheHas(seen, computed) : includes(result, computed, comparator))) {\n          var othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache ? cacheHas(cache, computed) : includes(arrays[othIndex], computed, comparator))) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      if (!isKey(path, object)) {\n        path = baseToPath(path);\n        object = parent(object, path);\n        path = last(path);\n      }\n      var func = object == null ? object : object[path];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {boolean} [bitmask] The bitmask of comparison flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - Unordered comparison\n     *     2 - Partial comparison\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, bitmask, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = getTag(object);\n        if (objTag == argsTag) {\n          objTag = objectTag;\n        } else if (objTag != objectTag) {\n          objIsArr = isTypedArray(object);\n        }\n      }\n      if (!othIsArr) {\n        othTag = getTag(other);\n        if (othTag == argsTag) {\n          othTag = objectTag;\n        } else if (othTag != objectTag) {\n          othIsArr = isTypedArray(other);\n        }\n      }\n      var objIsObj = objTag == objectTag && !isHostObject(object),\n          othIsObj = othTag == objectTag && !isHostObject(other),\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !(objIsArr || objIsObj)) {\n        return equalByTag(object, other, objTag, equalFunc, customizer, bitmask);\n      }\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n      if (!isPartial) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, bitmask, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, bitmask, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack,\n              result = customizer ? customizer(objValue, srcValue, key, object, source, stack) : undefined;\n\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      var type = typeof value;\n      if (type == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (type == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't skip the constructor\n     * property of prototypes or treat sparse arrays as dense.\n     *\n     * @private\n     * @type Function\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      return nativeKeys(Object(object));\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't skip the constructor\n     * property of prototypes or treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      object = object == null ? object : Object(object);\n\n      var result = [];\n      for (var key in object) {\n        result.push(key);\n      }\n      return result;\n    }\n\n    // Fallback for IE < 9 with es6-shim.\n    if (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {\n      baseKeysIn = function(object) {\n        return iteratorToArray(enumerate(object));\n      };\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        var key = matchData[0][0],\n            value = matchData[0][1];\n\n        return function(object) {\n          if (object == null) {\n            return false;\n          }\n          return object[key] === value &&\n            (value !== undefined || (key in Object(object)));\n        };\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      var props = (isArray(source) || isTypedArray(source)) ? undefined : keysIn(source);\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer ? customizer(object[key], srcValue, (key + ''), object, source, stack) : undefined;\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      });\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer ? customizer(objValue, srcValue, (key + ''), object, source, stack) : undefined,\n          isCommon = newValue === undefined;\n\n      if (isCommon) {\n        newValue = srcValue;\n        if (isArray(srcValue) || isTypedArray(srcValue)) {\n          if (isArray(objValue)) {\n            newValue = srcIndex ? copyArray(objValue) : objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else {\n            isCommon = false;\n            newValue = baseClone(srcValue);\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            isCommon = false;\n            newValue = baseClone(srcValue);\n          }\n          else {\n            newValue = srcIndex ? baseClone(objValue) : objValue;\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      stack.set(srcValue, newValue);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1,\n          toIteratee = getIteratee();\n\n      iteratees = arrayMap(iteratees.length ? iteratees : Array(1), function(iteratee) {\n        return toIteratee(iteratee);\n      });\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property names.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, props) {\n      object = Object(object);\n      return arrayReduce(props, function(result, key) {\n        if (key in object) {\n          result[key] = object[key];\n        }\n        return result;\n      }, {});\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, predicate) {\n      var result = {};\n      baseForIn(object, function(value, key) {\n        if (predicate(value, key)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAll`.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values) {\n      return basePullAllBy(array, values);\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAllBy(array, values, iteratee) {\n      var index = -1,\n          length = values.length,\n          seen = array;\n\n      if (iteratee) {\n        seen = arrayMap(array, function(value) { return iteratee(value); });\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = baseIndexOf(seen, computed, fromIndex)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (lastIndex == length || index != previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          }\n          else if (!isKey(index, array)) {\n            var path = baseToPath(index),\n                object = parent(array, path);\n\n            if (object != null) {\n              delete object[last(path)];\n            }\n          }\n          else {\n            delete array[index];\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments to numbers.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the new array of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      path = isKey(path, object) ? [path + ''] : baseToPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = path[index];\n        if (isObject(nested)) {\n          var newValue = value;\n          if (index != lastIndex) {\n            var objValue = nested[key];\n            newValue = customizer ? customizer(objValue, key, nested) : undefined;\n            if (newValue === undefined) {\n              newValue = objValue == null ? (isIndex(path[index + 1]) ? [] : {}) : objValue;\n            }\n          }\n          assignValue(nested, key, newValue);\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsUndef = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isDef = computed !== undefined,\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsNull) {\n          setLow = isReflexive && isDef && (retHighest || computed != null);\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || isDef);\n        } else if (computed == null) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq`.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array) {\n      return baseSortedUniqBy(array);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniqBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniqBy(array, iteratee) {\n      var index = 0,\n          length = array.length,\n          value = array[0],\n          computed = iteratee ? iteratee(value) : value,\n          seen = computed,\n          resIndex = 0,\n          result = [value];\n\n      while (++index < length) {\n        value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n        if (!eq(computed, seen)) {\n          seen = computed;\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toPath` which only converts `value` to a\n     * path if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array} Returns the property path array.\n     */\n    function baseToPath(value) {\n      return isArray(value) ? value : stringToPath(value);\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = isKey(path, object) ? [path + ''] : baseToPath(path);\n      object = parent(object, path);\n      var key = last(path);\n      return (object != null && has(object, key)) ? delete object[key] : true;\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var index = -1,\n          length = arrays.length;\n\n      while (++index < length) {\n        var result = result\n          ? arrayPush(\n              baseDifference(result, arrays[index], iteratee, comparator),\n              baseDifference(arrays[index], result, iteratee, comparator)\n            )\n          : arrays[index];\n      }\n      return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property names.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        assignFunc(result, props[index], index < valsLength ? values[index] : undefined);\n      }\n      return result;\n    }\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var Ctor = buffer.constructor,\n          result = new Ctor(buffer.length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var Ctor = arrayBuffer.constructor,\n          result = new Ctor(arrayBuffer.byteLength),\n          view = new Uint8Array(result);\n\n      view.set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map) {\n      var Ctor = map.constructor;\n      return arrayReduce(mapToArray(map), addMapEntry, new Ctor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var Ctor = regexp.constructor,\n          result = new Ctor(regexp.source, reFlags.exec(regexp));\n\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set) {\n      var Ctor = set.constructor;\n      return arrayReduce(setToArray(set), addSetEntry, new Ctor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return Symbol ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = typedArray.buffer,\n          Ctor = typedArray.constructor;\n\n      return new Ctor(isDeep ? cloneArrayBuffer(buffer) : buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders) {\n      var holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          leftIndex = -1,\n          leftLength = partials.length,\n          result = Array(leftLength + argsLength);\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        result[holders[argsIndex]] = args[argsIndex];\n      }\n      while (argsLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders) {\n      var holdersIndex = -1,\n          holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          rightIndex = -1,\n          rightLength = partials.length,\n          result = Array(argsLength + rightLength);\n\n      while (++argsIndex < argsLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        result[offset + holders[holdersIndex]] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property names to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object) {\n      return copyObjectWith(source, props, object);\n    }\n\n    /**\n     * This function is like `copyObject` except that it accepts a function to\n     * customize copied values.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property names to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObjectWith(source, props, object, customizer) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index],\n            newValue = customizer ? customizer(object[key], source[key], key, object, source) : source[key];\n\n        assignValue(object, key, newValue);\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbol properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return rest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = typeof customizer == 'function' ? (length--, customizer) : undefined;\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBaseWrapper(func, bitmask, thisArg) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = reHasComplexSymbol.test(string) ? stringToArray(string) : undefined,\n            chr = strSymbols ? strSymbols[0] : string.charAt(0),\n            trailing = strSymbols ? strSymbols.slice(1).join('') : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string)), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors.\n        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurryWrapper(func, bitmask, arity) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            index = length,\n            args = Array(length),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func,\n            placeholder = lodash.placeholder || wrapper.placeholder;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        return length < arity\n          ? createRecurryWrapper(func, bitmask, createHybridWrapper, placeholder, undefined, args, holders, undefined, undefined, arity - length)\n          : apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return rest(function(funcs) {\n        funcs = baseFlatten(funcs);\n\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurry = bitmask & CURRY_FLAG,\n          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n          isFlip = bitmask & FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight);\n        }\n        if (isCurry || isCurryRight) {\n          var placeholder = lodash.placeholder || wrapper.placeholder,\n              argsHolders = replaceHolders(args, placeholder);\n\n          length -= argsHolders.length;\n          if (length < arity) {\n            return createRecurryWrapper(func, bitmask, createHybridWrapper, placeholder, thisArg, args, argsHolders, argPos, ary, arity - length);\n          }\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && args.length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < args.length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtorWrapper(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new invoker function.\n     */\n    function createOver(arrayFunc) {\n      return rest(function(iteratees) {\n        iteratees = arrayMap(baseFlatten(iteratees), getIteratee());\n        return rest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(string, length, chars) {\n      length = toInteger(length);\n\n      var strLength = stringSize(string);\n      if (!length || strLength >= length) {\n        return '';\n      }\n      var padLength = length - strLength;\n      chars = chars === undefined ? ' ' : (chars + '');\n\n      var result = repeat(chars, nativeCeil(padLength / stringSize(chars)));\n      return reHasComplexSymbol.test(chars)\n        ? stringToArray(result).slice(0, padLength).join('')\n        : result.slice(0, padLength);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toNumber(start);\n        start = start === start ? start : 0;\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toNumber(end) || 0;\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : (toNumber(step) || 0);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder to replace.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurryWrapper(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & CURRY_FLAG,\n          newArgPos = argPos ? copyArray(argPos) : undefined,\n          newsHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n      if (!(bitmask & CURRY_BOUND_FLAG)) {\n        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n      }\n      var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, arity],\n          result = wrapFunc.apply(undefined, newData);\n\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = toInteger(precision);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && new Set([1, 2]).size === 2) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func),\n          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] == null\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == BIND_FLAG) {\n        var result = createBaseWrapper(func, bitmask, thisArg);\n      } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {\n        result = createCurryWrapper(func, bitmask, arity);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {\n        result = createPartialWrapper(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n     * @param {Object} [stack] Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n      var index = -1,\n          isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n          isUnordered = bitmask & UNORDERED_COMPARE_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(array, other);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (isUnordered) {\n          if (!arraySome(other, function(othValue) {\n                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack);\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, equalFunc, customizer, bitmask) {\n      switch (tag) {\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object) ? other != +other : object == +other;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n          convert || (convert = setToArray);\n\n          // Recursively compare objects (susceptible to call stack limits).\n          return (isPartial || object.size == other.size) &&\n            equalFunc(convert(object), convert(other), customizer, bitmask | UNORDERED_COMPARE_FLAG);\n\n        case symbolTag:\n          return !!Symbol && (symbolValueOf.call(object) == symbolValueOf.call(other));\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n          objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : baseHas(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      return result;\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If the `_.iteratee` method is\n     * customized this function returns the custom method, otherwise it returns\n     * `baseIteratee`. If arguments are provided the chosen function is invoked\n     * with them and its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = toPairs(object),\n          length = result.length;\n\n      while (length--) {\n        result[length][2] = isStrictComparable(result[length][1]);\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = object == null ? undefined : object[key];\n      return isNative(value) ? value : undefined;\n    }\n\n    /**\n     * Creates an array of the own symbol properties of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = getOwnPropertySymbols || function() {\n      return [];\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function getTag(value) {\n      return objectToString.call(value);\n    }\n\n    // Fallback for IE 11 providing `toStringTag` values for maps, sets, and weakmaps.\n    if ((Map && getTag(new Map) != mapTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = objectToString.call(value),\n            Ctor = result == objectTag ? value.constructor : null,\n            ctorString = typeof Ctor == 'function' ? funcToString.call(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case mapCtorString: return mapTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      if (object == null) {\n        return false;\n      }\n      var result = hasFunc(object, path);\n      if (!result && !isKey(path)) {\n        path = baseToPath(path);\n        object = parent(object, path);\n        if (object != null) {\n          path = last(path);\n          result = hasFunc(object, path);\n        }\n      }\n      var length = object ? object.length : undefined;\n      return result || (\n        !!length && isLength(length) && isIndex(path, length) &&\n        (isArray(object) || isString(object) || isArguments(object))\n      );\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      if (isPrototype(object)) {\n        return {};\n      }\n      var Ctor = object.constructor;\n      return baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Creates an array of index keys for `object` values of arrays,\n     * `arguments` objects, and strings, otherwise `null` is returned.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array|null} Returns index keys, else `null`.\n     */\n    function indexKeys(object) {\n      var length = object ? object.length : undefined;\n      if (isLength(length) &&\n          (isArray(object) || isString(object) || isArguments(object))) {\n        return baseTimes(length, String);\n      }\n      return null;\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n          ? (isArrayLike(object) && isIndex(index, object.length))\n          : (type == 'string' && index in object)) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (typeof value == 'number') {\n        return true;\n      }\n      return !isArray(value) &&\n        (reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n          (object != null && value in Object(object)));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return type == 'number' || type == 'boolean' ||\n        (type == 'string' && value !== '__proto__') || value == null;\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * modify function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * combined case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);\n\n      var isCombo =\n        (srcBitmask == ARY_FLAG && (bitmask == CURRY_FLAG)) ||\n        (srcBitmask == ARY_FLAG && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||\n        (srcBitmask == (ARY_FLAG | REARG_FLAG) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : copyArray(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : copyArray(source[4]);\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : copyArray(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : copyArray(source[6]);\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = copyArray(value);\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function mergeDefaults(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack);\n      }\n      return objValue;\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length == 1 ? object : get(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    function stringToPath(string) {\n      var result = [];\n      toString(string).replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    }\n\n    /**\n     * Converts `value` to an array-like object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array} Returns the array-like object.\n     */\n    function toArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Converts `value` to a function if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Function} Returns the function.\n     */\n    function toFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=0] The length of each chunk.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size) {\n      size = nativeMax(toInteger(size), 0);\n\n      var length = array ? array.length : 0;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = -1,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[++resIndex] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    var concat = rest(function(array, values) {\n      if (!isArray(array)) {\n        array = array == null ? [] : [Object(array)];\n      }\n      values = baseFlatten(values);\n      return arrayConcat(array, values);\n    });\n\n    /**\n     * Creates an array of unique `array` values not included in the other\n     * given arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([3, 2, 1], [4, 2]);\n     * // => [3, 1]\n     */\n    var difference = rest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, false, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which uniqueness is computed. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([3.1, 2.2, 1.3], [4.4, 2.5], Math.floor);\n     * // => [3.1, 1.3]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = rest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, false, true), getIteratee(iteratee))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = rest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, false, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate) {\n      return (array && array.length)\n        ? baseFindIndex(array, getIteratee(predicate, 3))\n        : -1;\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate) {\n      return (array && array.length)\n        ? baseFindIndex(array, getIteratee(predicate, 3), true)\n        : -1;\n    }\n\n    /**\n     * Flattens `array` a single level.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, [4]]\n     */\n    function flatten(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array) : [];\n    }\n\n    /**\n     * This method is like `_.flatten` except that it recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to recursively flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, 4]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, true) : [];\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs ? pairs.length : 0,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return array ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the offset\n     * from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      fromIndex = toInteger(fromIndex);\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return baseIndexOf(array, value, fromIndex);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     *\n     * _.intersection([2, 1], [4, 2], [1, 2]);\n     * // => [2]\n     */\n    var intersection = rest(function(arrays) {\n      var mapped = arrayMap(arrays, toArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which uniqueness is computed. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [4.3, 2.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = rest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, toArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = rest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, toArrayLikeObject);\n\n      if (comparator === last(mapped)) {\n        comparator = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array ? nativeJoin.call(array, separator) : '';\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = (index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1)) + 1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    var pull = rest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pullAll(array, [2, 3]);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which uniqueness is computed. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAllBy(array, values, getIteratee(iteratee))\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified individually or in arrays.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, 1, 3);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n    var pullAt = rest(function(array, indexes) {\n      indexes = arrayMap(baseFlatten(indexes), String);\n\n      var result = baseAt(array, indexes);\n      basePullAt(array, indexes.sort(compareAscending));\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array ? nativeReverse.call(array) : array;\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of [`Array#slice`](https://mdn.io/Array/slice)\n     * to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 5], 4);\n     * // => 0\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n     * @example\n     *\n     * var dict = { 'thirty': 30, 'forty': 40, 'fifty': 50 };\n     *\n     * _.sortedIndexBy(['thirty', 'fifty'], 'forty', _.propertyOf(dict));\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy([{ 'x': 4 }, { 'x': 5 }], { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([1, 1, 2, 2], 2);\n     * // => 2\n     */\n    function sortedIndexOf(array, value) {\n      var length = array ? array.length : 0;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5], 4);\n     * // => 1\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted into `array`.\n     * @example\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy([{ 'x': 4 }, { 'x': 5 }], { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([1, 1, 2, 2], 2);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array ? array.length : 0;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniqBy(array, getIteratee(iteratee))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with three\n     * arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2, 1], [4, 2], [1, 2]);\n     * // => [2, 1, 4]\n     */\n    var union = rest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, false, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by which\n     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1, 1.2], [4.3, 2.4], Math.floor);\n     * // => [2.1, 1.2, 4.3]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = rest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, false, true), getIteratee(iteratee));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = rest(function(arrays) {\n      var comparator = last(arrays);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, false, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length)\n        ? baseUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseUniq(array, getIteratee(iteratee))\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The comparator is invoked with\n     * two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 },  { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      return (array && array.length)\n        ? baseUniq(array, undefined, comparator)\n        : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 3], 1, 2);\n     * // => [3]\n     */\n    var without = rest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([2, 1], [4, 2]);\n     * // => [1, 4]\n     */\n    var xor = rest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by which\n     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [4.3, 2.4], Math.floor);\n     * // => [1.2, 4.3]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = rest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The comparator is invoked with\n     * two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = rest(function(arrays) {\n      var comparator = last(arrays);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    var zip = rest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property names and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} [props=[]] The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} [props=[]] The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = rest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method chaining enabled.\n     * The result of such method chaining must be unwrapped with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths of elements to pick,\n     *  specified individually or in arrays.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     *\n     * _(['a', 'b', 'c']).at(0, 2).value();\n     * // => ['a', 'c']\n     */\n    var wrapperAt = rest(function(paths) {\n      paths = baseFlatten(paths);\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length || !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chained sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * This method is the wrapper version of `_.flatMap`.\n     *\n     * @name flatMap\n     * @memberOf _\n     * @category Seq\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _([1, 2]).flatMap(duplicate).value();\n     * // => [1, 1, 2, 2]\n     */\n    function wrapperFlatMap(iteratee) {\n      return this.map(iteratee).flatten();\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({ 'func': thru, 'args': [reverse], 'thisArg': undefined });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check, else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': false },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    function find(collection, predicate) {\n      predicate = getIteratee(predicate, 3);\n      if (isArray(collection)) {\n        var index = baseFindIndex(collection, predicate);\n        return index > -1 ? collection[index] : undefined;\n      }\n      return baseFind(collection, predicate, baseEach);\n    }\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    function findLast(collection, predicate) {\n      predicate = getIteratee(predicate, 3);\n      if (isArray(collection)) {\n        var index = baseFindIndex(collection, predicate, true);\n        return index > -1 ? collection[index] : undefined;\n      }\n      return baseFind(collection, predicate, baseEachRight);\n    }\n\n    /**\n     * Creates an array of flattened values by running each element in `collection`\n     * through `iteratee` and concating its result to the other mapped values.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee));\n    }\n\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n     * are iterated like arrays. To avoid this behavior use `_.forIn` or `_.forOwn`\n     * for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEach(function(value) {\n     *   console.log(value);\n     * });\n     * // => logs `1` then `2`\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' then 'b' (iteration order is not guaranteed)\n     */\n    function forEach(collection, iteratee) {\n      return (typeof iteratee == 'function' && isArray(collection))\n        ? arrayEach(collection, iteratee)\n        : baseEach(collection, toFunction(iteratee));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => logs `2` then `1`\n     */\n    function forEachRight(collection, iteratee) {\n      return (typeof iteratee == 'function' && isArray(collection))\n        ? arrayEachRight(collection, iteratee)\n        : baseEachRight(collection, toFunction(iteratee));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of elements responsible for generating the key.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string it's checked\n     * for a substring of `value`, otherwise [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function it's\n     * invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = rest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? apply(func, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `curry`, `curryRight`, `drop`, `dropRight`, `every`, `fill`,\n     * `invert`, `parseInt`, `random`, `range`, `rangeRight`, `slice`, `some`,\n     * `sortBy`, `take`, `takeRight`, `template`, `trim`, `trimEnd`, `trimStart`,\n     * and `words`\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} [iteratees=[_.identity]] The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getIteratee(predicate, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var array = isArrayLike(collection) ? collection : values(collection),\n          length = array.length;\n\n      return length > 0 ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=0] The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n) {\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      n = baseClamp(toInteger(n), 0, length);\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sampleSize(collection, MAX_ARRAY_LENGTH);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        var result = collection.length;\n        return (result && isString(collection)) ? stringSize(collection) : result;\n      }\n      return keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[]|Object|Object[]|string|string[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by, specified individually or in arrays.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, function(o) { return o.user; });\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n     *\n     * _.sortBy(users, 'user', function(o) {\n     *   return Math.floor(o.age / 10);\n     * });\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    var sortBy = rest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees.length = 1;\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n    var now = Date.now;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that accepts up to `n` arguments, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = rest(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var placeholder = lodash.placeholder || bind.placeholder,\n            holders = replaceHolders(partials, placeholder);\n\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = rest(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var placeholder = lodash.placeholder || bindKey.placeholder,\n            holders = replaceHolders(partials, placeholder);\n\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrapper(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = lodash.placeholder || curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrapper(func, CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = lodash.placeholder || curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide an options object to indicate whether `func` should be invoked on\n     * the leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent calls\n     * to the debounced function return the result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it's invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          leading = false,\n          maxWait = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxWait = 'maxWait' in options && nativeMax(toNumber(options.maxWait) || 0, wait);\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n        lastCalled = 0;\n        args = maxTimeoutId = thisArg = timeoutId = trailingCall = undefined;\n      }\n\n      function complete(isCalled, id) {\n        if (id) {\n          clearTimeout(id);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (isCalled) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = undefined;\n          }\n        }\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0 || remaining > wait) {\n          complete(trailingCall, maxTimeoutId);\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function flush() {\n        if ((timeoutId && trailingCall) || (maxTimeoutId && trailing)) {\n          result = func.apply(thisArg, args);\n        }\n        cancel();\n        return result;\n      }\n\n      function maxDelayed() {\n        complete(trailing, timeoutId);\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!lastCalled && !maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0 || remaining > maxWait;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = undefined;\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => logs 'deferred' after one or more milliseconds\n     */\n    var defer = rest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    var delay = rest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrapper(func, FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new memoize.Cache;\n      return memoized;\n    }\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with arguments transformed by\n     * corresponding `transforms`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms] The functions to transform\n     * arguments, specified individually or in arrays.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, square, doubled);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = rest(function(func, transforms) {\n      transforms = arrayMap(baseFlatten(transforms), getIteratee());\n\n      var funcsLength = transforms.length;\n      return rest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = rest(function(func, partials) {\n      var placeholder = lodash.placeholder || partial.placeholder,\n          holders = replaceHolders(partials, placeholder);\n\n      return createWrapper(func, PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = rest(function(func, partials) {\n      var placeholder = lodash.placeholder || partialRight.placeholder,\n          holders = replaceHolders(partials, placeholder);\n\n      return createWrapper(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified individually or in arrays.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = rest(function(func, indexes) {\n      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as an array.\n     *\n     * **Note:** This method is based on the [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(start === undefined ? (func.length - 1) : toInteger(start), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, array);\n          case 1: return func.call(this, args[0], array);\n          case 2: return func.call(this, args[0], args[1], array);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = array;\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the created\n     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n     *\n     * **Note:** This method is based on the [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n      return rest(function(args) {\n        var array = args[start],\n            otherArgs = args.slice(0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide an options object to indicate whether\n     * `func` should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, { 'leading': leading, 'maxWait': wait, 'trailing': trailing });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return partial(wrapper, value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      return baseClone(value, false, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, true);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      return baseClone(value, true, customizer);\n    }\n\n    /**\n     * Performs a [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    function gt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    function gte(value, other) {\n      return value >= other;\n    }\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    function isArrayBuffer(value) {\n      return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;\n    }\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null &&\n        !(typeof value == 'function' && isFunction(value)) && isLength(getLength(value));\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @type Function\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object, else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && objectToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = !Buffer ? constant(false) : function(value) {\n      return value instanceof Buffer;\n    };\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return isObjectLike(value) && objectToString.call(value) == dateTag;\n    }\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is empty. A value is considered empty unless it's an\n     * `arguments` object, array, string, or jQuery-like collection with a length\n     * greater than `0` or an object with own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (isArrayLike(value) &&\n          (isArray(value) || isString(value) || isFunction(value.splice) || isArguments(value))) {\n        return !value.length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are **not** supported.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which is\n     * invoked to compare values. If `customizer` returns `undefined` comparisons are\n     * handled by the method instead. The `customizer` is invoked with up to six arguments:\n     * (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      return isObjectLike(value) &&\n        typeof value.message == 'string' && objectToString.call(value) == errorTag;\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MAX_VALUE);\n     * // => true\n     *\n     * _.isFinite(3.14);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 8 which returns 'object' for typed array constructors, and\n      // PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n      var tag = isObject(value) ? objectToString.call(value) : '';\n      return tag == funcTag || tag == genTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is loosely based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return !!value && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    function isMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * Performs a deep comparison between `object` and `source` to determine if\n     * `object` contains equivalent property values.\n     *\n     * **Note:** This method supports comparing the same values as `_.isEqual`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined` comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n     * which returns `true` for `undefined` and other non-numeric values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n      if (isFunction(value)) {\n        return reIsNative.test(funcToString.call(value));\n      }\n      return isObjectLike(value) &&\n        (isHostObject(value) ? reIsNative : reIsHostCtor).test(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && objectToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || objectToString.call(value) != objectTag || isHostObject(value)) {\n        return false;\n      }\n      var proto = objectProto;\n      if (typeof value.constructor == 'function') {\n        proto = getPrototypeOf(value);\n      }\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = proto.constructor;\n      return (typeof Ctor == 'function' &&\n        Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return isObject(value) && objectToString.call(value) == regexpTag;\n    }\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    function isSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && objectToString.call(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    function lt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    function lte(value, other) {\n      return value <= other;\n    }\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (iteratorSymbol && value[iteratorSymbol]) {\n        return iteratorToArray(value[iteratorSymbol]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This function is loosely based on [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3');\n     * // => 3\n     */\n    function toInteger(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      var remainder = value % 1;\n      return value === value ? (remainder ? value - remainder : value) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3);\n     * // => 3\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3');\n     * // => 3\n     */\n    function toNumber(value) {\n      if (isObject(value)) {\n        var other = isFunction(value.valueOf) ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n    }\n\n    /**\n     * Converts `value` to a string if it's not one. An empty string is returned\n     * for `null` and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (value == null) {\n        return '';\n      }\n      if (isSymbol(value)) {\n        return Symbol ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable properties of source objects to the destination\n     * object. Source objects are applied from left to right. Subsequent sources\n     * overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.c = 3;\n     * }\n     *\n     * function Bar() {\n     *   this.e = 5;\n     * }\n     *\n     * Foo.prototype.d = 4;\n     * Bar.prototype.f = 6;\n     *\n     * _.assign({ 'a': 1 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3, 'e': 5 }\n     */\n    var assign = createAssigner(function(object, source) {\n      copyObject(source, keys(source), object);\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * function Bar() {\n     *   this.d = 4;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     * Bar.prototype.e = 5;\n     *\n     * _.assignIn({ 'a': 1 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer` which\n     * is invoked to produce the assigned values. If `customizer` returns `undefined`\n     * assignment is handled by the method instead. The `customizer` is invoked\n     * with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObjectWith(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer` which\n     * is invoked to produce the assigned values. If `customizer` returns `undefined`\n     * assignment is handled by the method instead. The `customizer` is invoked\n     * with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObjectWith(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths of elements to pick,\n     *  specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     *\n     * _.at(['a', 'b', 'c'], 0, 2);\n     * // => ['a', 'c']\n     */\n    var at = rest(function(object, paths) {\n      return baseAt(object, baseFlatten(paths));\n    });\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a `properties`\n     * object is given its own enumerable properties are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own and inherited enumerable properties of source objects to the\n     * destination object for all destination properties that resolve to `undefined`.\n     * Source objects are applied from left to right. Once a property is set,\n     * additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var defaults = rest(function(args) {\n      args.push(undefined, assignInDefaults);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n     *\n     */\n    var defaultsDeep = rest(function(args) {\n      args.push(undefined, mergeDefaults);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFind(object, getIteratee(predicate, 3), baseForOwn, true);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFind(object, getIteratee(predicate, 3), baseForOwnRight, true);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The iteratee is invoked with three arguments:\n     * (value, key, object). Iteratee functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', then 'c' (iteration order is not guaranteed)\n     */\n    function forIn(object, iteratee) {\n      return object == null ? object : baseFor(object, toFunction(iteratee), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'\n     */\n    function forInRight(object, iteratee) {\n      return object == null ? object : baseForRight(object, toFunction(iteratee), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The iteratee is invoked with three arguments:\n     * (value, key, object). Iteratee functions may exit iteration early by\n     * explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' then 'b' (iteration order is not guaranteed)\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, toFunction(iteratee));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, toFunction(iteratee));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': { 'c': 3 } } };\n     * var other = _.create({ 'a': _.create({ 'b': _.create({ 'c': 3 }) }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b.c');\n     * // => true\n     *\n     * _.has(object, ['a', 'b', 'c']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': _.create({ 'c': 3 }) }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b.c');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b', 'c']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` through `iteratee`.\n     * The corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = rest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      var isProto = isPrototype(object);\n      if (!(isProto || isArrayLike(object))) {\n        return baseKeys(object);\n      }\n      var indexes = indexKeys(object),\n          skipIndexes = !!indexes,\n          result = indexes || [],\n          length = result.length;\n\n      for (var key in object) {\n        if (baseHas(object, key) &&\n            !(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n            !(isProto && key == 'constructor')) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      var index = -1,\n          isProto = isPrototype(object),\n          props = baseKeysIn(object),\n          propsLength = props.length,\n          indexes = indexKeys(object),\n          skipIndexes = !!indexes,\n          result = indexes || [],\n          length = result.length;\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if (!(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * property of `object` through `iteratee`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        result[iteratee(value, key, object)] = value;\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee function is invoked with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        result[key] = iteratee(value, key, object);\n      });\n      return result;\n    }\n\n    /**\n     * Recursively merges own and inherited enumerable properties of source\n     * objects into the destination object, skipping source properties that resolve\n     * to `undefined`. Array and plain object properties are merged recursively.\n     * Other objects and value types are overridden by assignment. Source objects\n     * are applied from left to right. Subsequent sources overwrite property\n     * assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined` merging is handled by the\n     * method instead. The `customizer` is invoked with seven arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [props] The property names to omit, specified\n     *  individually or in arrays..\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = rest(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      props = arrayMap(baseFlatten(props), String);\n      return basePick(object, baseDifference(keysIn(object), props));\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that `predicate`\n     * doesn't return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      predicate = getIteratee(predicate, 2);\n      return basePickBy(object, function(value, key) {\n        return !predicate(value, key);\n      });\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [props] The property names to pick, specified\n     *  individually or in arrays.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = rest(function(object, props) {\n      return object == null ? {} : basePick(object, baseFlatten(props));\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      return object == null ? {} : basePickBy(object, getIteratee(predicate, 2));\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a function\n     * it's invoked with the `this` binding of its parent object and its result\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      if (!isKey(path, object)) {\n        path = baseToPath(path);\n        var result = get(object, path);\n        object = parent(object, path);\n      } else {\n        result = object == null ? undefined : object[path];\n      }\n      if (result === undefined) {\n        result = defaultValue;\n      }\n      return isFunction(result) ? result.call(object) : result;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, 'x[0].y.z', 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.setWith({ '0': { 'length': 2 } }, '[0][1][2]', 3, Object);\n     * // => { '0': { '1': { '2': 3 }, 'length': 2 } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable key-value pairs for `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    function toPairs(object) {\n      return baseToPairs(object, keys(object));\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable key-value pairs for `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 1]] (iteration order is not guaranteed)\n     */\n    function toPairsIn(object) {\n      return baseToPairs(object, keysIn(object));\n    }\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The iteratee is invoked with four arguments:\n     * (accumulator, value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getIteratee(iteratee, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object ? baseValues(object, keys(object)) : [];\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? baseValues(object, keysIn(object)) : [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to but not including, `end`. If\n     * `end` is not specified it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toNumber(start) || 0;\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toNumber(end) || 0;\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are floats,\n     * a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toNumber(lower) || 0;\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toNumber(upper) || 0;\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = typeof target == 'string' ? target : (target + '');\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\" in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in IE < 9, they can break out of\n     * attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n     * for more details.\n     *\n     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n     * to reduce XSS vectors.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = stringSize(string);\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2,\n          leftLength = nativeFloor(mid),\n          rightLength = nativeCeil(mid);\n\n      return createPadding('', leftLength, chars) + string + createPadding('', rightLength, chars);\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      return string + createPadding(string, length, chars);\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      return createPadding(string, length, chars) + string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#x15.1.2.2)\n     * of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      // Chrome fails to trim leading <BOM> whitespace characters.\n      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      string = toString(string).replace(reTrim, '');\n      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n) {\n      string = toString(string);\n      n = toInteger(n);\n\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the new array of string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      return toString(string).split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + capitalize(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = baseClamp(toInteger(position), 0, string.length);\n      return string.lastIndexOf(target, position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES delimiter as an alternative to the default \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, assignInDefaults);\n\n      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar');\n     * // => '--foo-bar'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar');\n     * // => '--FOO-BAR'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard || chars === undefined) {\n        return string.replace(reTrim, '');\n      }\n      chars = (chars + '');\n      if (!chars) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars);\n\n      return strSymbols.slice(charsStartIndex(strSymbols, chrSymbols), charsEndIndex(strSymbols, chrSymbols) + 1).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard || chars === undefined) {\n        return string.replace(reTrimEnd, '');\n      }\n      chars = (chars + '');\n      if (!chars) {\n        return string;\n      }\n      var strSymbols = stringToArray(string);\n      return strSymbols.slice(0, charsEndIndex(strSymbols, stringToArray(chars)) + 1).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard || chars === undefined) {\n        return string.replace(reTrimStart, '');\n      }\n      chars = (chars + '');\n      if (!chars) {\n        return string;\n      }\n      var strSymbols = stringToArray(string);\n      return strSymbols.slice(charsStartIndex(strSymbols, stringToArray(chars))).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? toString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (reHasComplexSymbol.test(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? strSymbols.slice(0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        pattern = reHasComplexWord.test(string) ? reComplexWord : reBasicWord;\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = rest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isObject(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind,\n     *  specified individually or in arrays.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, 'onClick');\n     * jQuery(element).on('click', view.onClick);\n     * // => logs 'clicked docs' when clicked\n     */\n    var bindAll = rest(function(object, methodNames) {\n      arrayEach(baseFlatten(methodNames), function(key) {\n        object[key] = bind(object[key], object);\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` invoking the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.constant(true),                _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs ? pairs.length : 0,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return rest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.filter(users, _.conforms({ 'age': _.partial(_.gt, _, 38) }));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     *\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(_.add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, _.add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument given to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name the created callback returns the\n     * property value for a given element. If `func` is an object the created\n     * callback returns `true` for elements that contain the equivalent object properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(callback, func) {\n     *   var p = /^(\\S+)\\s*([<>])\\s*(\\S+)$/.exec(func);\n     *   return !p ? callback(func) : function(object) {\n     *     return (p[2] == '>' ? object[p[1]] > p[3] : object[p[1]] < p[3]);\n     *   };\n     * });\n     *\n     * _.filter(users, 'age > 36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, true));\n    }\n\n    /**\n     * Creates a function that performs a deep partial comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** This method supports comparing the same values as `_.isEqual`.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that performs a deep partial comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** This method supports comparing the same values as `_.isEqual`.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.invokeMap(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    var method = rest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = rest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = (isObject(options) && 'chain' in options) ? options.chain : true,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * A no-operation function that returns `undefined` regardless of the\n     * arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that returns its nth argument.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     *\n     * func('a', 'b', 'c');\n     * // => 'b'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return function() {\n        return arguments[n];\n      };\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments provided\n     * to the created function and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} iteratees The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over(Math.max, Math.min);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments provided to the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} predicates The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery(Boolean, isFinite);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments provided to the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} predicates The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome(Boolean, isFinite);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': 2 } } },\n     *   { 'a': { 'b': { 'c': 1 } } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * Invokes the iteratee function `n` times, returning an array of the results\n     * of each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(true));\n     * // => [true, true, true, true]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = toFunction(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     *\n     * var path = ['a', 'b', 'c'],\n     *     newPath = _.toPath(path);\n     *\n     * console.log(newPath);\n     * // => ['a', 'b', 'c']\n     *\n     * console.log(path === newPath);\n     * // => false\n     */\n    function toPath(value) {\n      return isArray(value) ? arrayMap(value, String) : stringToPath(value);\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    function add(augend, addend) {\n      var result;\n      if (augend === undefined && addend === undefined) {\n        return 0;\n      }\n      if (augend !== undefined) {\n        result = augend;\n      }\n      if (addend !== undefined) {\n        result = result === undefined ? addend : (result + addend);\n      }\n      return result;\n    }\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey\n     * `undefined` is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, gt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee), gt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return sum(array) / (array ? array.length : 0);\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey\n     * `undefined` is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, lt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee), lt)\n        : undefined;\n    }\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    function subtract(minuend, subtrahend) {\n      var result;\n      if (minuend === undefined && subtrahend === undefined) {\n        return 0;\n      }\n      if (minuend !== undefined) {\n        result = minuend;\n      }\n      if (subtrahend !== undefined) {\n        result = result === undefined ? subtrahend : (result - subtrahend);\n      }\n      return result;\n    }\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    // Avoid inheriting from `Object.prototype` when possible.\n    Hash.prototype = nativeCreate ? nativeCreate(null) : objectProto;\n\n    // Add functions to the `MapCache`.\n    MapCache.prototype.clear = mapClear;\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet;\n\n    // Add functions to the `SetCache`.\n    SetCache.prototype.push = cachePush;\n\n    // Add functions to the `Stack` cache.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    // Add functions that return wrapped values when chaining.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add functions to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions that return unwrapped values when chaining.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({ 'size': nativeMin(n, MAX_ARRAY_LENGTH), 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({ 'iteratee': getIteratee(iteratee, 3), 'type': type });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = rest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      predicate = getIteratee(predicate, 3);\n      return this.filter(function(value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` and `String` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(value, args);\n        });\n      };\n    });\n\n    // Map minified function names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': undefined }];\n\n    // Add functions to the lazy wrapper.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chaining functions to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.flatMap = wrapperFlatMap;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    if (iteratorSymbol) {\n      lodash.prototype[iteratorSymbol] = wrapperToIterator;\n    }\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Expose lodash on the free variable `window` or `self` when available. This\n  // prevents errors in cases where lodash is loaded by a script tag in the presence\n  // of an AMD loader. See http://requirejs.org/docs/errors.html#mismatch for more details.\n  (freeWindow || freeSelf || {})._ = _;\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js.\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/lodash.js\n ** module id = 97\n ** module chunks = 0\n **/","'use strict';\n\nmodule.exports = require('react/lib/ReactDOM');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react-dom/index.js\n ** module id = 98\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule AutoFocusUtils\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactMount = require('./ReactMount');\n\nvar findDOMNode = require('./findDOMNode');\nvar focusNode = require('fbjs/lib/focusNode');\n\nvar Mixin = {\n  componentDidMount: function () {\n    if (this.props.autoFocus) {\n      focusNode(findDOMNode(this));\n    }\n  }\n};\n\nvar AutoFocusUtils = {\n  Mixin: Mixin,\n\n  focusDOMComponent: function () {\n    focusNode(ReactMount.getNode(this._rootNodeID));\n  }\n};\n\nmodule.exports = AutoFocusUtils;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/AutoFocusUtils.js\n ** module id = 99\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015 Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule BeforeInputEventPlugin\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar EventPropagators = require('./EventPropagators');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar FallbackCompositionState = require('./FallbackCompositionState');\nvar SyntheticCompositionEvent = require('./SyntheticCompositionEvent');\nvar SyntheticInputEvent = require('./SyntheticInputEvent');\n\nvar keyOf = require('fbjs/lib/keyOf');\n\nvar END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space\nvar START_KEYCODE = 229;\n\nvar canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;\n\nvar documentMode = null;\nif (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {\n  documentMode = document.documentMode;\n}\n\n// Webkit offers a very useful `textInput` event that can be used to\n// directly represent `beforeInput`. The IE `textinput` event is not as\n// useful, so we don't use it.\nvar canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();\n\n// In IE9+, we have access to composition events, but the data supplied\n// by the native compositionend event may be incorrect. Japanese ideographic\n// spaces, for instance (\\u3000) are not recorded correctly.\nvar useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);\n\n/**\n * Opera <= 12 includes TextEvent in window, but does not fire\n * text input events. Rely on keypress instead.\n */\nfunction isPresto() {\n  var opera = window.opera;\n  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;\n}\n\nvar SPACEBAR_CODE = 32;\nvar SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\n// Events and their corresponding property names.\nvar eventTypes = {\n  beforeInput: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onBeforeInput: null }),\n      captured: keyOf({ onBeforeInputCapture: null })\n    },\n    dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]\n  },\n  compositionEnd: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onCompositionEnd: null }),\n      captured: keyOf({ onCompositionEndCapture: null })\n    },\n    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]\n  },\n  compositionStart: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onCompositionStart: null }),\n      captured: keyOf({ onCompositionStartCapture: null })\n    },\n    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]\n  },\n  compositionUpdate: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onCompositionUpdate: null }),\n      captured: keyOf({ onCompositionUpdateCapture: null })\n    },\n    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]\n  }\n};\n\n// Track whether we've ever handled a keypress on the space key.\nvar hasSpaceKeypress = false;\n\n/**\n * Return whether a native keypress event is assumed to be a command.\n * This is required because Firefox fires `keypress` events for key commands\n * (cut, copy, select-all, etc.) even though no character is inserted.\n */\nfunction isKeypressCommand(nativeEvent) {\n  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&\n  // ctrlKey && altKey is equivalent to AltGr, and is not a command.\n  !(nativeEvent.ctrlKey && nativeEvent.altKey);\n}\n\n/**\n * Translate native top level events into event types.\n *\n * @param {string} topLevelType\n * @return {object}\n */\nfunction getCompositionEventType(topLevelType) {\n  switch (topLevelType) {\n    case topLevelTypes.topCompositionStart:\n      return eventTypes.compositionStart;\n    case topLevelTypes.topCompositionEnd:\n      return eventTypes.compositionEnd;\n    case topLevelTypes.topCompositionUpdate:\n      return eventTypes.compositionUpdate;\n  }\n}\n\n/**\n * Does our fallback best-guess model think this event signifies that\n * composition has begun?\n *\n * @param {string} topLevelType\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isFallbackCompositionStart(topLevelType, nativeEvent) {\n  return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;\n}\n\n/**\n * Does our fallback mode think that this event is the end of composition?\n *\n * @param {string} topLevelType\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isFallbackCompositionEnd(topLevelType, nativeEvent) {\n  switch (topLevelType) {\n    case topLevelTypes.topKeyUp:\n      // Command keys insert or clear IME input.\n      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;\n    case topLevelTypes.topKeyDown:\n      // Expect IME keyCode on each keydown. If we get any other\n      // code we must have exited earlier.\n      return nativeEvent.keyCode !== START_KEYCODE;\n    case topLevelTypes.topKeyPress:\n    case topLevelTypes.topMouseDown:\n    case topLevelTypes.topBlur:\n      // Events are not possible without cancelling IME.\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Google Input Tools provides composition data via a CustomEvent,\n * with the `data` property populated in the `detail` object. If this\n * is available on the event object, use it. If not, this is a plain\n * composition event and we have nothing special to extract.\n *\n * @param {object} nativeEvent\n * @return {?string}\n */\nfunction getDataFromCustomEvent(nativeEvent) {\n  var detail = nativeEvent.detail;\n  if (typeof detail === 'object' && 'data' in detail) {\n    return detail.data;\n  }\n  return null;\n}\n\n// Track the current IME composition fallback object, if any.\nvar currentComposition = null;\n\n/**\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {DOMEventTarget} topLevelTarget The listening component root node.\n * @param {string} topLevelTargetID ID of `topLevelTarget`.\n * @param {object} nativeEvent Native browser event.\n * @return {?object} A SyntheticCompositionEvent.\n */\nfunction extractCompositionEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n  var eventType;\n  var fallbackData;\n\n  if (canUseCompositionEvent) {\n    eventType = getCompositionEventType(topLevelType);\n  } else if (!currentComposition) {\n    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {\n      eventType = eventTypes.compositionStart;\n    }\n  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n    eventType = eventTypes.compositionEnd;\n  }\n\n  if (!eventType) {\n    return null;\n  }\n\n  if (useFallbackCompositionData) {\n    // The current composition is stored statically and must not be\n    // overwritten while composition continues.\n    if (!currentComposition && eventType === eventTypes.compositionStart) {\n      currentComposition = FallbackCompositionState.getPooled(topLevelTarget);\n    } else if (eventType === eventTypes.compositionEnd) {\n      if (currentComposition) {\n        fallbackData = currentComposition.getData();\n      }\n    }\n  }\n\n  var event = SyntheticCompositionEvent.getPooled(eventType, topLevelTargetID, nativeEvent, nativeEventTarget);\n\n  if (fallbackData) {\n    // Inject data generated from fallback path into the synthetic event.\n    // This matches the property of native CompositionEventInterface.\n    event.data = fallbackData;\n  } else {\n    var customData = getDataFromCustomEvent(nativeEvent);\n    if (customData !== null) {\n      event.data = customData;\n    }\n  }\n\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n  return event;\n}\n\n/**\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {object} nativeEvent Native browser event.\n * @return {?string} The string corresponding to this `beforeInput` event.\n */\nfunction getNativeBeforeInputChars(topLevelType, nativeEvent) {\n  switch (topLevelType) {\n    case topLevelTypes.topCompositionEnd:\n      return getDataFromCustomEvent(nativeEvent);\n    case topLevelTypes.topKeyPress:\n      /**\n       * If native `textInput` events are available, our goal is to make\n       * use of them. However, there is a special case: the spacebar key.\n       * In Webkit, preventing default on a spacebar `textInput` event\n       * cancels character insertion, but it *also* causes the browser\n       * to fall back to its default spacebar behavior of scrolling the\n       * page.\n       *\n       * Tracking at:\n       * https://code.google.com/p/chromium/issues/detail?id=355103\n       *\n       * To avoid this issue, use the keypress event as if no `textInput`\n       * event is available.\n       */\n      var which = nativeEvent.which;\n      if (which !== SPACEBAR_CODE) {\n        return null;\n      }\n\n      hasSpaceKeypress = true;\n      return SPACEBAR_CHAR;\n\n    case topLevelTypes.topTextInput:\n      // Record the characters to be added to the DOM.\n      var chars = nativeEvent.data;\n\n      // If it's a spacebar character, assume that we have already handled\n      // it at the keypress level and bail immediately. Android Chrome\n      // doesn't give us keycodes, so we need to blacklist it.\n      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {\n        return null;\n      }\n\n      return chars;\n\n    default:\n      // For other native event types, do nothing.\n      return null;\n  }\n}\n\n/**\n * For browsers that do not provide the `textInput` event, extract the\n * appropriate string to use for SyntheticInputEvent.\n *\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {object} nativeEvent Native browser event.\n * @return {?string} The fallback string for this `beforeInput` event.\n */\nfunction getFallbackBeforeInputChars(topLevelType, nativeEvent) {\n  // If we are currently composing (IME) and using a fallback to do so,\n  // try to extract the composed characters from the fallback object.\n  if (currentComposition) {\n    if (topLevelType === topLevelTypes.topCompositionEnd || isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n      var chars = currentComposition.getData();\n      FallbackCompositionState.release(currentComposition);\n      currentComposition = null;\n      return chars;\n    }\n    return null;\n  }\n\n  switch (topLevelType) {\n    case topLevelTypes.topPaste:\n      // If a paste event occurs after a keypress, throw out the input\n      // chars. Paste events should not lead to BeforeInput events.\n      return null;\n    case topLevelTypes.topKeyPress:\n      /**\n       * As of v27, Firefox may fire keypress events even when no character\n       * will be inserted. A few possibilities:\n       *\n       * - `which` is `0`. Arrow keys, Esc key, etc.\n       *\n       * - `which` is the pressed key code, but no char is available.\n       *   Ex: 'AltGr + d` in Polish. There is no modified character for\n       *   this key combination and no character is inserted into the\n       *   document, but FF fires the keypress for char code `100` anyway.\n       *   No `input` event will occur.\n       *\n       * - `which` is the pressed key code, but a command combination is\n       *   being used. Ex: `Cmd+C`. No character is inserted, and no\n       *   `input` event will occur.\n       */\n      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {\n        return String.fromCharCode(nativeEvent.which);\n      }\n      return null;\n    case topLevelTypes.topCompositionEnd:\n      return useFallbackCompositionData ? null : nativeEvent.data;\n    default:\n      return null;\n  }\n}\n\n/**\n * Extract a SyntheticInputEvent for `beforeInput`, based on either native\n * `textInput` or fallback behavior.\n *\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {DOMEventTarget} topLevelTarget The listening component root node.\n * @param {string} topLevelTargetID ID of `topLevelTarget`.\n * @param {object} nativeEvent Native browser event.\n * @return {?object} A SyntheticInputEvent.\n */\nfunction extractBeforeInputEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n  var chars;\n\n  if (canUseTextInputEvent) {\n    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);\n  } else {\n    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);\n  }\n\n  // If no characters are being inserted, no BeforeInput event should\n  // be fired.\n  if (!chars) {\n    return null;\n  }\n\n  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, topLevelTargetID, nativeEvent, nativeEventTarget);\n\n  event.data = chars;\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n  return event;\n}\n\n/**\n * Create an `onBeforeInput` event to match\n * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.\n *\n * This event plugin is based on the native `textInput` event\n * available in Chrome, Safari, Opera, and IE. This event fires after\n * `onKeyPress` and `onCompositionEnd`, but before `onInput`.\n *\n * `beforeInput` is spec'd but not implemented in any browsers, and\n * the `input` event does not provide any useful information about what has\n * actually been added, contrary to the spec. Thus, `textInput` is the best\n * available event to identify the characters that have actually been inserted\n * into the target node.\n *\n * This plugin is also responsible for emitting `composition` events, thus\n * allowing us to share composition fallback code for both `beforeInput` and\n * `composition` event types.\n */\nvar BeforeInputEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n    return [extractCompositionEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget)];\n  }\n};\n\nmodule.exports = BeforeInputEventPlugin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/BeforeInputEventPlugin.js\n ** module id = 100\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CSSPropertyOperations\n * @typechecks static-only\n */\n\n'use strict';\n\nvar CSSProperty = require('./CSSProperty');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar ReactPerf = require('./ReactPerf');\n\nvar camelizeStyleName = require('fbjs/lib/camelizeStyleName');\nvar dangerousStyleValue = require('./dangerousStyleValue');\nvar hyphenateStyleName = require('fbjs/lib/hyphenateStyleName');\nvar memoizeStringOnly = require('fbjs/lib/memoizeStringOnly');\nvar warning = require('fbjs/lib/warning');\n\nvar processStyleName = memoizeStringOnly(function (styleName) {\n  return hyphenateStyleName(styleName);\n});\n\nvar hasShorthandPropertyBug = false;\nvar styleFloatAccessor = 'cssFloat';\nif (ExecutionEnvironment.canUseDOM) {\n  var tempStyle = document.createElement('div').style;\n  try {\n    // IE8 throws \"Invalid argument.\" if resetting shorthand style properties.\n    tempStyle.font = '';\n  } catch (e) {\n    hasShorthandPropertyBug = true;\n  }\n  // IE8 only supports accessing cssFloat (standard) as styleFloat\n  if (document.documentElement.style.cssFloat === undefined) {\n    styleFloatAccessor = 'styleFloat';\n  }\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  // 'msTransform' is correct, but the other prefixes should be capitalized\n  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\n\n  // style values shouldn't contain a semicolon\n  var badStyleValueWithSemicolonPattern = /;\\s*$/;\n\n  var warnedStyleNames = {};\n  var warnedStyleValues = {};\n\n  var warnHyphenatedStyleName = function (name) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?', name, camelizeStyleName(name)) : undefined;\n  };\n\n  var warnBadVendoredStyleName = function (name) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1)) : undefined;\n  };\n\n  var warnStyleValueWithSemicolon = function (name, value) {\n    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\n      return;\n    }\n\n    warnedStyleValues[value] = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\\'t contain a semicolon. ' + 'Try \"%s: %s\" instead.', name, value.replace(badStyleValueWithSemicolonPattern, '')) : undefined;\n  };\n\n  /**\n   * @param {string} name\n   * @param {*} value\n   */\n  var warnValidStyle = function (name, value) {\n    if (name.indexOf('-') > -1) {\n      warnHyphenatedStyleName(name);\n    } else if (badVendoredStyleNamePattern.test(name)) {\n      warnBadVendoredStyleName(name);\n    } else if (badStyleValueWithSemicolonPattern.test(value)) {\n      warnStyleValueWithSemicolon(name, value);\n    }\n  };\n}\n\n/**\n * Operations for dealing with CSS properties.\n */\nvar CSSPropertyOperations = {\n\n  /**\n   * Serializes a mapping of style properties for use as inline styles:\n   *\n   *   > createMarkupForStyles({width: '200px', height: 0})\n   *   \"width:200px;height:0;\"\n   *\n   * Undefined values are ignored so that declarative programming is easier.\n   * The result should be HTML-escaped before insertion into the DOM.\n   *\n   * @param {object} styles\n   * @return {?string}\n   */\n  createMarkupForStyles: function (styles) {\n    var serialized = '';\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      var styleValue = styles[styleName];\n      if (process.env.NODE_ENV !== 'production') {\n        warnValidStyle(styleName, styleValue);\n      }\n      if (styleValue != null) {\n        serialized += processStyleName(styleName) + ':';\n        serialized += dangerousStyleValue(styleName, styleValue) + ';';\n      }\n    }\n    return serialized || null;\n  },\n\n  /**\n   * Sets the value for multiple styles on a node.  If a value is specified as\n   * '' (empty string), the corresponding style property will be unset.\n   *\n   * @param {DOMElement} node\n   * @param {object} styles\n   */\n  setValueForStyles: function (node, styles) {\n    var style = node.style;\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        warnValidStyle(styleName, styles[styleName]);\n      }\n      var styleValue = dangerousStyleValue(styleName, styles[styleName]);\n      if (styleName === 'float') {\n        styleName = styleFloatAccessor;\n      }\n      if (styleValue) {\n        style[styleName] = styleValue;\n      } else {\n        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];\n        if (expansion) {\n          // Shorthand property that IE8 won't like unsetting, so unset each\n          // component to placate it\n          for (var individualStyleName in expansion) {\n            style[individualStyleName] = '';\n          }\n        } else {\n          style[styleName] = '';\n        }\n      }\n    }\n  }\n\n};\n\nReactPerf.measureMethods(CSSPropertyOperations, 'CSSPropertyOperations', {\n  setValueForStyles: 'setValueForStyles'\n});\n\nmodule.exports = CSSPropertyOperations;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/CSSPropertyOperations.js\n ** module id = 101\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ChangeEventPlugin\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar EventPluginHub = require('./EventPluginHub');\nvar EventPropagators = require('./EventPropagators');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar ReactUpdates = require('./ReactUpdates');\nvar SyntheticEvent = require('./SyntheticEvent');\n\nvar getEventTarget = require('./getEventTarget');\nvar isEventSupported = require('./isEventSupported');\nvar isTextInputElement = require('./isTextInputElement');\nvar keyOf = require('fbjs/lib/keyOf');\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nvar eventTypes = {\n  change: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onChange: null }),\n      captured: keyOf({ onChangeCapture: null })\n    },\n    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]\n  }\n};\n\n/**\n * For IE shims\n */\nvar activeElement = null;\nvar activeElementID = null;\nvar activeElementValue = null;\nvar activeElementValueProp = null;\n\n/**\n * SECTION: handle `change` event\n */\nfunction shouldUseChangeEvent(elem) {\n  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();\n  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';\n}\n\nvar doesChangeEventBubble = false;\nif (ExecutionEnvironment.canUseDOM) {\n  // See `handleChange` comment below\n  doesChangeEventBubble = isEventSupported('change') && (!('documentMode' in document) || document.documentMode > 8);\n}\n\nfunction manualDispatchChangeEvent(nativeEvent) {\n  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementID, nativeEvent, getEventTarget(nativeEvent));\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n\n  // If change and propertychange bubbled, we'd just bind to it like all the\n  // other events and have it go through ReactBrowserEventEmitter. Since it\n  // doesn't, we manually listen for the events and so we have to enqueue and\n  // process the abstract event manually.\n  //\n  // Batching is necessary here in order to ensure that all event handlers run\n  // before the next rerender (including event handlers attached to ancestor\n  // elements instead of directly on the input). Without this, controlled\n  // components don't work properly in conjunction with event bubbling because\n  // the component is rerendered and the value reverted before all the event\n  // handlers can run. See https://github.com/facebook/react/issues/708.\n  ReactUpdates.batchedUpdates(runEventInBatch, event);\n}\n\nfunction runEventInBatch(event) {\n  EventPluginHub.enqueueEvents(event);\n  EventPluginHub.processEventQueue(false);\n}\n\nfunction startWatchingForChangeEventIE8(target, targetID) {\n  activeElement = target;\n  activeElementID = targetID;\n  activeElement.attachEvent('onchange', manualDispatchChangeEvent);\n}\n\nfunction stopWatchingForChangeEventIE8() {\n  if (!activeElement) {\n    return;\n  }\n  activeElement.detachEvent('onchange', manualDispatchChangeEvent);\n  activeElement = null;\n  activeElementID = null;\n}\n\nfunction getTargetIDForChangeEvent(topLevelType, topLevelTarget, topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topChange) {\n    return topLevelTargetID;\n  }\n}\nfunction handleEventsForChangeEventIE8(topLevelType, topLevelTarget, topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topFocus) {\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForChangeEventIE8();\n    startWatchingForChangeEventIE8(topLevelTarget, topLevelTargetID);\n  } else if (topLevelType === topLevelTypes.topBlur) {\n    stopWatchingForChangeEventIE8();\n  }\n}\n\n/**\n * SECTION: handle `input` event\n */\nvar isInputEventSupported = false;\nif (ExecutionEnvironment.canUseDOM) {\n  // IE9 claims to support the input event but fails to trigger it when\n  // deleting text, so we ignore its input events\n  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 9);\n}\n\n/**\n * (For old IE.) Replacement getter/setter for the `value` property that gets\n * set on the active element.\n */\nvar newValueProp = {\n  get: function () {\n    return activeElementValueProp.get.call(this);\n  },\n  set: function (val) {\n    // Cast to a string so we can do equality checks.\n    activeElementValue = '' + val;\n    activeElementValueProp.set.call(this, val);\n  }\n};\n\n/**\n * (For old IE.) Starts tracking propertychange events on the passed-in element\n * and override the value property so that we can distinguish user events from\n * value changes in JS.\n */\nfunction startWatchingForValueChange(target, targetID) {\n  activeElement = target;\n  activeElementID = targetID;\n  activeElementValue = target.value;\n  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');\n\n  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only\n  // on DOM elements\n  Object.defineProperty(activeElement, 'value', newValueProp);\n  activeElement.attachEvent('onpropertychange', handlePropertyChange);\n}\n\n/**\n * (For old IE.) Removes the event listeners from the currently-tracked element,\n * if any exists.\n */\nfunction stopWatchingForValueChange() {\n  if (!activeElement) {\n    return;\n  }\n\n  // delete restores the original property definition\n  delete activeElement.value;\n  activeElement.detachEvent('onpropertychange', handlePropertyChange);\n\n  activeElement = null;\n  activeElementID = null;\n  activeElementValue = null;\n  activeElementValueProp = null;\n}\n\n/**\n * (For old IE.) Handles a propertychange event, sending a `change` event if\n * the value of the active element has changed.\n */\nfunction handlePropertyChange(nativeEvent) {\n  if (nativeEvent.propertyName !== 'value') {\n    return;\n  }\n  var value = nativeEvent.srcElement.value;\n  if (value === activeElementValue) {\n    return;\n  }\n  activeElementValue = value;\n\n  manualDispatchChangeEvent(nativeEvent);\n}\n\n/**\n * If a `change` event should be fired, returns the target's ID.\n */\nfunction getTargetIDForInputEvent(topLevelType, topLevelTarget, topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topInput) {\n    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly\n    // what we want so fall through here and trigger an abstract event\n    return topLevelTargetID;\n  }\n}\n\n// For IE8 and IE9.\nfunction handleEventsForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topFocus) {\n    // In IE8, we can capture almost all .value changes by adding a\n    // propertychange handler and looking for events with propertyName\n    // equal to 'value'\n    // In IE9, propertychange fires for most input events but is buggy and\n    // doesn't fire when text is deleted, but conveniently, selectionchange\n    // appears to fire in all of the remaining cases so we catch those and\n    // forward the event if the value has changed\n    // In either case, we don't want to call the event handler if the value\n    // is changed from JS so we redefine a setter for `.value` that updates\n    // our activeElementValue variable, allowing us to ignore those changes\n    //\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForValueChange();\n    startWatchingForValueChange(topLevelTarget, topLevelTargetID);\n  } else if (topLevelType === topLevelTypes.topBlur) {\n    stopWatchingForValueChange();\n  }\n}\n\n// For IE8 and IE9.\nfunction getTargetIDForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {\n    // On the selectionchange event, the target is just document which isn't\n    // helpful for us so just check activeElement instead.\n    //\n    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire\n    // propertychange on the first input event after setting `value` from a\n    // script and fires only keydown, keypress, keyup. Catching keyup usually\n    // gets it and catching keydown lets us fire an event for the first\n    // keystroke if user does a key repeat (it'll be a little delayed: right\n    // before the second keystroke). Other input methods (e.g., paste) seem to\n    // fire selectionchange normally.\n    if (activeElement && activeElement.value !== activeElementValue) {\n      activeElementValue = activeElement.value;\n      return activeElementID;\n    }\n  }\n}\n\n/**\n * SECTION: handle `click` event\n */\nfunction shouldUseClickEvent(elem) {\n  // Use the `click` event to detect changes to checkbox and radio inputs.\n  // This approach works across all browsers, whereas `change` does not fire\n  // until `blur` in IE8.\n  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');\n}\n\nfunction getTargetIDForClickEvent(topLevelType, topLevelTarget, topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topClick) {\n    return topLevelTargetID;\n  }\n}\n\n/**\n * This plugin creates an `onChange` event that normalizes change events\n * across form elements. This event fires at a time when it's possible to\n * change the element's value without seeing a flicker.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - select\n */\nvar ChangeEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n\n    var getTargetIDFunc, handleEventFunc;\n    if (shouldUseChangeEvent(topLevelTarget)) {\n      if (doesChangeEventBubble) {\n        getTargetIDFunc = getTargetIDForChangeEvent;\n      } else {\n        handleEventFunc = handleEventsForChangeEventIE8;\n      }\n    } else if (isTextInputElement(topLevelTarget)) {\n      if (isInputEventSupported) {\n        getTargetIDFunc = getTargetIDForInputEvent;\n      } else {\n        getTargetIDFunc = getTargetIDForInputEventIE;\n        handleEventFunc = handleEventsForInputEventIE;\n      }\n    } else if (shouldUseClickEvent(topLevelTarget)) {\n      getTargetIDFunc = getTargetIDForClickEvent;\n    }\n\n    if (getTargetIDFunc) {\n      var targetID = getTargetIDFunc(topLevelType, topLevelTarget, topLevelTargetID);\n      if (targetID) {\n        var event = SyntheticEvent.getPooled(eventTypes.change, targetID, nativeEvent, nativeEventTarget);\n        event.type = 'change';\n        EventPropagators.accumulateTwoPhaseDispatches(event);\n        return event;\n      }\n    }\n\n    if (handleEventFunc) {\n      handleEventFunc(topLevelType, topLevelTarget, topLevelTargetID);\n    }\n  }\n\n};\n\nmodule.exports = ChangeEventPlugin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ChangeEventPlugin.js\n ** module id = 102\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ClientReactRootIndex\n * @typechecks\n */\n\n'use strict';\n\nvar nextReactRootIndex = 0;\n\nvar ClientReactRootIndex = {\n  createReactRootIndex: function () {\n    return nextReactRootIndex++;\n  }\n};\n\nmodule.exports = ClientReactRootIndex;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ClientReactRootIndex.js\n ** module id = 103\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Danger\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar createNodesFromMarkup = require('fbjs/lib/createNodesFromMarkup');\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar getMarkupWrap = require('fbjs/lib/getMarkupWrap');\nvar invariant = require('fbjs/lib/invariant');\n\nvar OPEN_TAG_NAME_EXP = /^(<[^ \\/>]+)/;\nvar RESULT_INDEX_ATTR = 'data-danger-index';\n\n/**\n * Extracts the `nodeName` from a string of markup.\n *\n * NOTE: Extracting the `nodeName` does not require a regular expression match\n * because we make assumptions about React-generated markup (i.e. there are no\n * spaces surrounding the opening tag and there is at least one attribute).\n *\n * @param {string} markup String of markup.\n * @return {string} Node name of the supplied markup.\n * @see http://jsperf.com/extract-nodename\n */\nfunction getNodeName(markup) {\n  return markup.substring(1, markup.indexOf(' '));\n}\n\nvar Danger = {\n\n  /**\n   * Renders markup into an array of nodes. The markup is expected to render\n   * into a list of root nodes. Also, the length of `resultList` and\n   * `markupList` should be the same.\n   *\n   * @param {array<string>} markupList List of markup strings to render.\n   * @return {array<DOMElement>} List of rendered nodes.\n   * @internal\n   */\n  dangerouslyRenderMarkup: function (markupList) {\n    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Cannot render markup in a worker ' + 'thread. Make sure `window` and `document` are available globally ' + 'before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString for server rendering.') : invariant(false) : undefined;\n    var nodeName;\n    var markupByNodeName = {};\n    // Group markup by `nodeName` if a wrap is necessary, else by '*'.\n    for (var i = 0; i < markupList.length; i++) {\n      !markupList[i] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Missing markup.') : invariant(false) : undefined;\n      nodeName = getNodeName(markupList[i]);\n      nodeName = getMarkupWrap(nodeName) ? nodeName : '*';\n      markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];\n      markupByNodeName[nodeName][i] = markupList[i];\n    }\n    var resultList = [];\n    var resultListAssignmentCount = 0;\n    for (nodeName in markupByNodeName) {\n      if (!markupByNodeName.hasOwnProperty(nodeName)) {\n        continue;\n      }\n      var markupListByNodeName = markupByNodeName[nodeName];\n\n      // This for-in loop skips the holes of the sparse array. The order of\n      // iteration should follow the order of assignment, which happens to match\n      // numerical index order, but we don't rely on that.\n      var resultIndex;\n      for (resultIndex in markupListByNodeName) {\n        if (markupListByNodeName.hasOwnProperty(resultIndex)) {\n          var markup = markupListByNodeName[resultIndex];\n\n          // Push the requested markup with an additional RESULT_INDEX_ATTR\n          // attribute.  If the markup does not start with a < character, it\n          // will be discarded below (with an appropriate console.error).\n          markupListByNodeName[resultIndex] = markup.replace(OPEN_TAG_NAME_EXP,\n          // This index will be parsed back out below.\n          '$1 ' + RESULT_INDEX_ATTR + '=\"' + resultIndex + '\" ');\n        }\n      }\n\n      // Render each group of markup with similar wrapping `nodeName`.\n      var renderNodes = createNodesFromMarkup(markupListByNodeName.join(''), emptyFunction // Do nothing special with <script> tags.\n      );\n\n      for (var j = 0; j < renderNodes.length; ++j) {\n        var renderNode = renderNodes[j];\n        if (renderNode.hasAttribute && renderNode.hasAttribute(RESULT_INDEX_ATTR)) {\n\n          resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);\n          renderNode.removeAttribute(RESULT_INDEX_ATTR);\n\n          !!resultList.hasOwnProperty(resultIndex) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Assigning to an already-occupied result index.') : invariant(false) : undefined;\n\n          resultList[resultIndex] = renderNode;\n\n          // This should match resultList.length and markupList.length when\n          // we're done.\n          resultListAssignmentCount += 1;\n        } else if (process.env.NODE_ENV !== 'production') {\n          console.error('Danger: Discarding unexpected node:', renderNode);\n        }\n      }\n    }\n\n    // Although resultList was populated out of order, it should now be a dense\n    // array.\n    !(resultListAssignmentCount === resultList.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Did not assign to every index of resultList.') : invariant(false) : undefined;\n\n    !(resultList.length === markupList.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Expected markup to render %s nodes, but rendered %s.', markupList.length, resultList.length) : invariant(false) : undefined;\n\n    return resultList;\n  },\n\n  /**\n   * Replaces a node with a string of markup at its current position within its\n   * parent. The markup must render into a single root node.\n   *\n   * @param {DOMElement} oldChild Child node to replace.\n   * @param {string} markup Markup to render in place of the child node.\n   * @internal\n   */\n  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {\n    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' + 'worker thread. Make sure `window` and `document` are available ' + 'globally before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString() for server rendering.') : invariant(false) : undefined;\n    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(false) : undefined;\n    !(oldChild.tagName.toLowerCase() !== 'html') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' + '<html> node. This is because browser quirks make this unreliable ' + 'and/or slow. If you want to render to the root you must use ' + 'server rendering. See ReactDOMServer.renderToString().') : invariant(false) : undefined;\n\n    var newChild;\n    if (typeof markup === 'string') {\n      newChild = createNodesFromMarkup(markup, emptyFunction)[0];\n    } else {\n      newChild = markup;\n    }\n    oldChild.parentNode.replaceChild(newChild, oldChild);\n  }\n\n};\n\nmodule.exports = Danger;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/Danger.js\n ** module id = 104\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DefaultEventPluginOrder\n */\n\n'use strict';\n\nvar keyOf = require('fbjs/lib/keyOf');\n\n/**\n * Module that is injectable into `EventPluginHub`, that specifies a\n * deterministic ordering of `EventPlugin`s. A convenient way to reason about\n * plugins, without having to package every one of them. This is better than\n * having plugins be ordered in the same order that they are injected because\n * that ordering would be influenced by the packaging order.\n * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that\n * preventing default on events is convenient in `SimpleEventPlugin` handlers.\n */\nvar DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];\n\nmodule.exports = DefaultEventPluginOrder;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/DefaultEventPluginOrder.js\n ** module id = 105\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EnterLeaveEventPlugin\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar EventPropagators = require('./EventPropagators');\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\n\nvar ReactMount = require('./ReactMount');\nvar keyOf = require('fbjs/lib/keyOf');\n\nvar topLevelTypes = EventConstants.topLevelTypes;\nvar getFirstReactDOM = ReactMount.getFirstReactDOM;\n\nvar eventTypes = {\n  mouseEnter: {\n    registrationName: keyOf({ onMouseEnter: null }),\n    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]\n  },\n  mouseLeave: {\n    registrationName: keyOf({ onMouseLeave: null }),\n    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]\n  }\n};\n\nvar extractedEvents = [null, null];\n\nvar EnterLeaveEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * For almost every interaction we care about, there will be both a top-level\n   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\n   * we do not extract duplicate events. However, moving the mouse into the\n   * browser from outside will not fire a `mouseout` event. In this case, we use\n   * the `mouseover` top-level event.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {\n      return null;\n    }\n    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {\n      // Must not be a mouse in or mouse out - ignoring.\n      return null;\n    }\n\n    var win;\n    if (topLevelTarget.window === topLevelTarget) {\n      // `topLevelTarget` is probably a window object.\n      win = topLevelTarget;\n    } else {\n      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n      var doc = topLevelTarget.ownerDocument;\n      if (doc) {\n        win = doc.defaultView || doc.parentWindow;\n      } else {\n        win = window;\n      }\n    }\n\n    var from;\n    var to;\n    var fromID = '';\n    var toID = '';\n    if (topLevelType === topLevelTypes.topMouseOut) {\n      from = topLevelTarget;\n      fromID = topLevelTargetID;\n      to = getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement);\n      if (to) {\n        toID = ReactMount.getID(to);\n      } else {\n        to = win;\n      }\n      to = to || win;\n    } else {\n      from = win;\n      to = topLevelTarget;\n      toID = topLevelTargetID;\n    }\n\n    if (from === to) {\n      // Nothing pertains to our managed components.\n      return null;\n    }\n\n    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, fromID, nativeEvent, nativeEventTarget);\n    leave.type = 'mouseleave';\n    leave.target = from;\n    leave.relatedTarget = to;\n\n    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, toID, nativeEvent, nativeEventTarget);\n    enter.type = 'mouseenter';\n    enter.target = to;\n    enter.relatedTarget = from;\n\n    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);\n\n    extractedEvents[0] = leave;\n    extractedEvents[1] = enter;\n\n    return extractedEvents;\n  }\n\n};\n\nmodule.exports = EnterLeaveEventPlugin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/EnterLeaveEventPlugin.js\n ** module id = 106\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPluginUtils\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar ReactErrorUtils = require('./ReactErrorUtils');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Injected dependencies:\n */\n\n/**\n * - `Mount`: [required] Module that can convert between React dom IDs and\n *   actual node references.\n */\nvar injection = {\n  Mount: null,\n  injectMount: function (InjectedMount) {\n    injection.Mount = InjectedMount;\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(InjectedMount && InjectedMount.getNode && InjectedMount.getID, 'EventPluginUtils.injection.injectMount(...): Injected Mount ' + 'module is missing getNode or getID.') : undefined;\n    }\n  }\n};\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nfunction isEndish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;\n}\n\nfunction isMoveish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;\n}\nfunction isStartish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;\n}\n\nvar validateEventDispatches;\nif (process.env.NODE_ENV !== 'production') {\n  validateEventDispatches = function (event) {\n    var dispatchListeners = event._dispatchListeners;\n    var dispatchIDs = event._dispatchIDs;\n\n    var listenersIsArr = Array.isArray(dispatchListeners);\n    var idsIsArr = Array.isArray(dispatchIDs);\n    var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;\n    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;\n\n    process.env.NODE_ENV !== 'production' ? warning(idsIsArr === listenersIsArr && IDsLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : undefined;\n  };\n}\n\n/**\n * Dispatch the event to the listener.\n * @param {SyntheticEvent} event SyntheticEvent to handle\n * @param {boolean} simulated If the event is simulated (changes exn behavior)\n * @param {function} listener Application-level callback\n * @param {string} domID DOM id to pass to the callback.\n */\nfunction executeDispatch(event, simulated, listener, domID) {\n  var type = event.type || 'unknown-event';\n  event.currentTarget = injection.Mount.getNode(domID);\n  if (simulated) {\n    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event, domID);\n  } else {\n    ReactErrorUtils.invokeGuardedCallback(type, listener, event, domID);\n  }\n  event.currentTarget = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches.\n */\nfunction executeDispatchesInOrder(event, simulated) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchIDs = event._dispatchIDs;\n  if (process.env.NODE_ENV !== 'production') {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and IDs are two parallel arrays that are always in sync.\n      executeDispatch(event, simulated, dispatchListeners[i], dispatchIDs[i]);\n    }\n  } else if (dispatchListeners) {\n    executeDispatch(event, simulated, dispatchListeners, dispatchIDs);\n  }\n  event._dispatchListeners = null;\n  event._dispatchIDs = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches, but stops\n * at the first dispatch execution returning true, and returns that id.\n *\n * @return {?string} id of the first dispatch execution who's listener returns\n * true, or null if no listener returned true.\n */\nfunction executeDispatchesInOrderStopAtTrueImpl(event) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchIDs = event._dispatchIDs;\n  if (process.env.NODE_ENV !== 'production') {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and IDs are two parallel arrays that are always in sync.\n      if (dispatchListeners[i](event, dispatchIDs[i])) {\n        return dispatchIDs[i];\n      }\n    }\n  } else if (dispatchListeners) {\n    if (dispatchListeners(event, dispatchIDs)) {\n      return dispatchIDs;\n    }\n  }\n  return null;\n}\n\n/**\n * @see executeDispatchesInOrderStopAtTrueImpl\n */\nfunction executeDispatchesInOrderStopAtTrue(event) {\n  var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n  event._dispatchIDs = null;\n  event._dispatchListeners = null;\n  return ret;\n}\n\n/**\n * Execution of a \"direct\" dispatch - there must be at most one dispatch\n * accumulated on the event or it is considered an error. It doesn't really make\n * sense for an event with multiple dispatches (bubbled) to keep track of the\n * return values at each dispatch execution, but it does tend to make sense when\n * dealing with \"direct\" dispatches.\n *\n * @return {*} The return value of executing the single dispatch.\n */\nfunction executeDirectDispatch(event) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateEventDispatches(event);\n  }\n  var dispatchListener = event._dispatchListeners;\n  var dispatchID = event._dispatchIDs;\n  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : invariant(false) : undefined;\n  var res = dispatchListener ? dispatchListener(event, dispatchID) : null;\n  event._dispatchListeners = null;\n  event._dispatchIDs = null;\n  return res;\n}\n\n/**\n * @param {SyntheticEvent} event\n * @return {boolean} True iff number of dispatches accumulated is greater than 0.\n */\nfunction hasDispatches(event) {\n  return !!event._dispatchListeners;\n}\n\n/**\n * General utilities that are useful in creating custom Event Plugins.\n */\nvar EventPluginUtils = {\n  isEndish: isEndish,\n  isMoveish: isMoveish,\n  isStartish: isStartish,\n\n  executeDirectDispatch: executeDirectDispatch,\n  executeDispatchesInOrder: executeDispatchesInOrder,\n  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,\n  hasDispatches: hasDispatches,\n\n  getNode: function (id) {\n    return injection.Mount.getNode(id);\n  },\n  getID: function (node) {\n    return injection.Mount.getID(node);\n  },\n\n  injection: injection\n};\n\nmodule.exports = EventPluginUtils;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/EventPluginUtils.js\n ** module id = 107\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule FallbackCompositionState\n * @typechecks static-only\n */\n\n'use strict';\n\nvar PooledClass = require('./PooledClass');\n\nvar assign = require('./Object.assign');\nvar getTextContentAccessor = require('./getTextContentAccessor');\n\n/**\n * This helper class stores information about text content of a target node,\n * allowing comparison of content before and after a given event.\n *\n * Identify the node where selection currently begins, then observe\n * both its text content and its current position in the DOM. Since the\n * browser may natively replace the target node during composition, we can\n * use its position to find its replacement.\n *\n * @param {DOMEventTarget} root\n */\nfunction FallbackCompositionState(root) {\n  this._root = root;\n  this._startText = this.getText();\n  this._fallbackText = null;\n}\n\nassign(FallbackCompositionState.prototype, {\n  destructor: function () {\n    this._root = null;\n    this._startText = null;\n    this._fallbackText = null;\n  },\n\n  /**\n   * Get current text of input.\n   *\n   * @return {string}\n   */\n  getText: function () {\n    if ('value' in this._root) {\n      return this._root.value;\n    }\n    return this._root[getTextContentAccessor()];\n  },\n\n  /**\n   * Determine the differing substring between the initially stored\n   * text content and the current content.\n   *\n   * @return {string}\n   */\n  getData: function () {\n    if (this._fallbackText) {\n      return this._fallbackText;\n    }\n\n    var start;\n    var startValue = this._startText;\n    var startLength = startValue.length;\n    var end;\n    var endValue = this.getText();\n    var endLength = endValue.length;\n\n    for (start = 0; start < startLength; start++) {\n      if (startValue[start] !== endValue[start]) {\n        break;\n      }\n    }\n\n    var minEnd = startLength - start;\n    for (end = 1; end <= minEnd; end++) {\n      if (startValue[startLength - end] !== endValue[endLength - end]) {\n        break;\n      }\n    }\n\n    var sliceTail = end > 1 ? 1 - end : undefined;\n    this._fallbackText = endValue.slice(start, sliceTail);\n    return this._fallbackText;\n  }\n});\n\nPooledClass.addPoolingTo(FallbackCompositionState);\n\nmodule.exports = FallbackCompositionState;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/FallbackCompositionState.js\n ** module id = 108\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule HTMLDOMPropertyConfig\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;\nvar MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;\nvar HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;\nvar HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;\nvar HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;\nvar HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;\nvar HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;\n\nvar hasSVG;\nif (ExecutionEnvironment.canUseDOM) {\n  var implementation = document.implementation;\n  hasSVG = implementation && implementation.hasFeature && implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1');\n}\n\nvar HTMLDOMPropertyConfig = {\n  isCustomAttribute: RegExp.prototype.test.bind(/^(data|aria)-[a-z_][a-z\\d_.\\-]*$/),\n  Properties: {\n    /**\n     * Standard Properties\n     */\n    accept: null,\n    acceptCharset: null,\n    accessKey: null,\n    action: null,\n    allowFullScreen: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    allowTransparency: MUST_USE_ATTRIBUTE,\n    alt: null,\n    async: HAS_BOOLEAN_VALUE,\n    autoComplete: null,\n    // autoFocus is polyfilled/normalized by AutoFocusUtils\n    // autoFocus: HAS_BOOLEAN_VALUE,\n    autoPlay: HAS_BOOLEAN_VALUE,\n    capture: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    cellPadding: null,\n    cellSpacing: null,\n    charSet: MUST_USE_ATTRIBUTE,\n    challenge: MUST_USE_ATTRIBUTE,\n    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    classID: MUST_USE_ATTRIBUTE,\n    // To set className on SVG elements, it's necessary to use .setAttribute;\n    // this works on HTML elements too in all browsers except IE8. Conveniently,\n    // IE8 doesn't support SVG and so we can simply use the attribute in\n    // browsers that support SVG and the property in browsers that don't,\n    // regardless of whether the element is HTML or SVG.\n    className: hasSVG ? MUST_USE_ATTRIBUTE : MUST_USE_PROPERTY,\n    cols: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,\n    colSpan: null,\n    content: null,\n    contentEditable: null,\n    contextMenu: MUST_USE_ATTRIBUTE,\n    controls: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    coords: null,\n    crossOrigin: null,\n    data: null, // For `<object />` acts as `src`.\n    dateTime: MUST_USE_ATTRIBUTE,\n    'default': HAS_BOOLEAN_VALUE,\n    defer: HAS_BOOLEAN_VALUE,\n    dir: null,\n    disabled: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    download: HAS_OVERLOADED_BOOLEAN_VALUE,\n    draggable: null,\n    encType: null,\n    form: MUST_USE_ATTRIBUTE,\n    formAction: MUST_USE_ATTRIBUTE,\n    formEncType: MUST_USE_ATTRIBUTE,\n    formMethod: MUST_USE_ATTRIBUTE,\n    formNoValidate: HAS_BOOLEAN_VALUE,\n    formTarget: MUST_USE_ATTRIBUTE,\n    frameBorder: MUST_USE_ATTRIBUTE,\n    headers: null,\n    height: MUST_USE_ATTRIBUTE,\n    hidden: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    high: null,\n    href: null,\n    hrefLang: null,\n    htmlFor: null,\n    httpEquiv: null,\n    icon: null,\n    id: MUST_USE_PROPERTY,\n    inputMode: MUST_USE_ATTRIBUTE,\n    integrity: null,\n    is: MUST_USE_ATTRIBUTE,\n    keyParams: MUST_USE_ATTRIBUTE,\n    keyType: MUST_USE_ATTRIBUTE,\n    kind: null,\n    label: null,\n    lang: null,\n    list: MUST_USE_ATTRIBUTE,\n    loop: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    low: null,\n    manifest: MUST_USE_ATTRIBUTE,\n    marginHeight: null,\n    marginWidth: null,\n    max: null,\n    maxLength: MUST_USE_ATTRIBUTE,\n    media: MUST_USE_ATTRIBUTE,\n    mediaGroup: null,\n    method: null,\n    min: null,\n    minLength: MUST_USE_ATTRIBUTE,\n    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    name: null,\n    nonce: MUST_USE_ATTRIBUTE,\n    noValidate: HAS_BOOLEAN_VALUE,\n    open: HAS_BOOLEAN_VALUE,\n    optimum: null,\n    pattern: null,\n    placeholder: null,\n    poster: null,\n    preload: null,\n    radioGroup: null,\n    readOnly: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    rel: null,\n    required: HAS_BOOLEAN_VALUE,\n    reversed: HAS_BOOLEAN_VALUE,\n    role: MUST_USE_ATTRIBUTE,\n    rows: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,\n    rowSpan: null,\n    sandbox: null,\n    scope: null,\n    scoped: HAS_BOOLEAN_VALUE,\n    scrolling: null,\n    seamless: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    shape: null,\n    size: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,\n    sizes: MUST_USE_ATTRIBUTE,\n    span: HAS_POSITIVE_NUMERIC_VALUE,\n    spellCheck: null,\n    src: null,\n    srcDoc: MUST_USE_PROPERTY,\n    srcLang: null,\n    srcSet: MUST_USE_ATTRIBUTE,\n    start: HAS_NUMERIC_VALUE,\n    step: null,\n    style: null,\n    summary: null,\n    tabIndex: null,\n    target: null,\n    title: null,\n    type: null,\n    useMap: null,\n    value: MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,\n    width: MUST_USE_ATTRIBUTE,\n    wmode: MUST_USE_ATTRIBUTE,\n    wrap: null,\n\n    /**\n     * RDFa Properties\n     */\n    about: MUST_USE_ATTRIBUTE,\n    datatype: MUST_USE_ATTRIBUTE,\n    inlist: MUST_USE_ATTRIBUTE,\n    prefix: MUST_USE_ATTRIBUTE,\n    // property is also supported for OpenGraph in meta tags.\n    property: MUST_USE_ATTRIBUTE,\n    resource: MUST_USE_ATTRIBUTE,\n    'typeof': MUST_USE_ATTRIBUTE,\n    vocab: MUST_USE_ATTRIBUTE,\n\n    /**\n     * Non-standard Properties\n     */\n    // autoCapitalize and autoCorrect are supported in Mobile Safari for\n    // keyboard hints.\n    autoCapitalize: MUST_USE_ATTRIBUTE,\n    autoCorrect: MUST_USE_ATTRIBUTE,\n    // autoSave allows WebKit/Blink to persist values of input fields on page reloads\n    autoSave: null,\n    // color is for Safari mask-icon link\n    color: null,\n    // itemProp, itemScope, itemType are for\n    // Microdata support. See http://schema.org/docs/gs.html\n    itemProp: MUST_USE_ATTRIBUTE,\n    itemScope: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    itemType: MUST_USE_ATTRIBUTE,\n    // itemID and itemRef are for Microdata support as well but\n    // only specified in the the WHATWG spec document. See\n    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api\n    itemID: MUST_USE_ATTRIBUTE,\n    itemRef: MUST_USE_ATTRIBUTE,\n    // results show looking glass icon and recent searches on input\n    // search fields in WebKit/Blink\n    results: null,\n    // IE-only attribute that specifies security restrictions on an iframe\n    // as an alternative to the sandbox attribute on IE<10\n    security: MUST_USE_ATTRIBUTE,\n    // IE-only attribute that controls focus behavior\n    unselectable: MUST_USE_ATTRIBUTE\n  },\n  DOMAttributeNames: {\n    acceptCharset: 'accept-charset',\n    className: 'class',\n    htmlFor: 'for',\n    httpEquiv: 'http-equiv'\n  },\n  DOMPropertyNames: {\n    autoComplete: 'autocomplete',\n    autoFocus: 'autofocus',\n    autoPlay: 'autoplay',\n    autoSave: 'autosave',\n    // `encoding` is equivalent to `enctype`, IE8 lacks an `enctype` setter.\n    // http://www.w3.org/TR/html5/forms.html#dom-fs-encoding\n    encType: 'encoding',\n    hrefLang: 'hreflang',\n    radioGroup: 'radiogroup',\n    spellCheck: 'spellcheck',\n    srcDoc: 'srcdoc',\n    srcSet: 'srcset'\n  }\n};\n\nmodule.exports = HTMLDOMPropertyConfig;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/HTMLDOMPropertyConfig.js\n ** module id = 109\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule React\n */\n\n'use strict';\n\nvar ReactDOM = require('./ReactDOM');\nvar ReactDOMServer = require('./ReactDOMServer');\nvar ReactIsomorphic = require('./ReactIsomorphic');\n\nvar assign = require('./Object.assign');\nvar deprecated = require('./deprecated');\n\n// `version` will be added here by ReactIsomorphic.\nvar React = {};\n\nassign(React, ReactIsomorphic);\n\nassign(React, {\n  // ReactDOM\n  findDOMNode: deprecated('findDOMNode', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.findDOMNode),\n  render: deprecated('render', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.render),\n  unmountComponentAtNode: deprecated('unmountComponentAtNode', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.unmountComponentAtNode),\n\n  // ReactDOMServer\n  renderToString: deprecated('renderToString', 'ReactDOMServer', 'react-dom/server', ReactDOMServer, ReactDOMServer.renderToString),\n  renderToStaticMarkup: deprecated('renderToStaticMarkup', 'ReactDOMServer', 'react-dom/server', ReactDOMServer, ReactDOMServer.renderToStaticMarkup)\n});\n\nReact.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOM;\nReact.__SECRET_DOM_SERVER_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOMServer;\n\nmodule.exports = React;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/React.js\n ** module id = 110\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactBrowserComponentMixin\n */\n\n'use strict';\n\nvar ReactInstanceMap = require('./ReactInstanceMap');\n\nvar findDOMNode = require('./findDOMNode');\nvar warning = require('fbjs/lib/warning');\n\nvar didWarnKey = '_getDOMNodeDidWarn';\n\nvar ReactBrowserComponentMixin = {\n  /**\n   * Returns the DOM node rendered by this component.\n   *\n   * @return {DOMElement} The root node of this component.\n   * @final\n   * @protected\n   */\n  getDOMNode: function () {\n    process.env.NODE_ENV !== 'production' ? warning(this.constructor[didWarnKey], '%s.getDOMNode(...) is deprecated. Please use ' + 'ReactDOM.findDOMNode(instance) instead.', ReactInstanceMap.get(this).getName() || this.tagName || 'Unknown') : undefined;\n    this.constructor[didWarnKey] = true;\n    return findDOMNode(this);\n  }\n};\n\nmodule.exports = ReactBrowserComponentMixin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactBrowserComponentMixin.js\n ** module id = 111\n ** module chunks = 0\n **/","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactChildReconciler\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactReconciler = require('./ReactReconciler');\n\nvar instantiateReactComponent = require('./instantiateReactComponent');\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\nvar traverseAllChildren = require('./traverseAllChildren');\nvar warning = require('fbjs/lib/warning');\n\nfunction instantiateChild(childInstances, child, name) {\n  // We found a component instance.\n  var keyUnique = childInstances[name] === undefined;\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : undefined;\n  }\n  if (child != null && keyUnique) {\n    childInstances[name] = instantiateReactComponent(child, null);\n  }\n}\n\n/**\n * ReactChildReconciler provides helpers for initializing or updating a set of\n * children. Its output is suitable for passing it onto ReactMultiChild which\n * does diffed reordering and insertion.\n */\nvar ReactChildReconciler = {\n  /**\n   * Generates a \"mount image\" for each of the supplied children. In the case\n   * of `ReactDOMComponent`, a mount image is a string of markup.\n   *\n   * @param {?object} nestedChildNodes Nested child maps.\n   * @return {?object} A set of child instances.\n   * @internal\n   */\n  instantiateChildren: function (nestedChildNodes, transaction, context) {\n    if (nestedChildNodes == null) {\n      return null;\n    }\n    var childInstances = {};\n    traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);\n    return childInstances;\n  },\n\n  /**\n   * Updates the rendered children and returns a new set of children.\n   *\n   * @param {?object} prevChildren Previously initialized set of children.\n   * @param {?object} nextChildren Flat child element maps.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   * @return {?object} A new set of child instances.\n   * @internal\n   */\n  updateChildren: function (prevChildren, nextChildren, transaction, context) {\n    // We currently don't have a way to track moves here but if we use iterators\n    // instead of for..in we can zip the iterators and check if an item has\n    // moved.\n    // TODO: If nothing has changed, return the prevChildren object so that we\n    // can quickly bailout if nothing has changed.\n    if (!nextChildren && !prevChildren) {\n      return null;\n    }\n    var name;\n    for (name in nextChildren) {\n      if (!nextChildren.hasOwnProperty(name)) {\n        continue;\n      }\n      var prevChild = prevChildren && prevChildren[name];\n      var prevElement = prevChild && prevChild._currentElement;\n      var nextElement = nextChildren[name];\n      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {\n        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);\n        nextChildren[name] = prevChild;\n      } else {\n        if (prevChild) {\n          ReactReconciler.unmountComponent(prevChild, name);\n        }\n        // The child must be instantiated before it's mounted.\n        var nextChildInstance = instantiateReactComponent(nextElement, null);\n        nextChildren[name] = nextChildInstance;\n      }\n    }\n    // Unmount children that are no longer present.\n    for (name in prevChildren) {\n      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {\n        ReactReconciler.unmountComponent(prevChildren[name]);\n      }\n    }\n    return nextChildren;\n  },\n\n  /**\n   * Unmounts all rendered children. This should be used to clean up children\n   * when this component is unmounted.\n   *\n   * @param {?object} renderedChildren Previously initialized set of children.\n   * @internal\n   */\n  unmountChildren: function (renderedChildren) {\n    for (var name in renderedChildren) {\n      if (renderedChildren.hasOwnProperty(name)) {\n        var renderedChild = renderedChildren[name];\n        ReactReconciler.unmountComponent(renderedChild);\n      }\n    }\n  }\n\n};\n\nmodule.exports = ReactChildReconciler;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactChildReconciler.js\n ** module id = 112\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactCompositeComponent\n */\n\n'use strict';\n\nvar ReactComponentEnvironment = require('./ReactComponentEnvironment');\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactElement = require('./ReactElement');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactPerf = require('./ReactPerf');\nvar ReactPropTypeLocations = require('./ReactPropTypeLocations');\nvar ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');\nvar ReactReconciler = require('./ReactReconciler');\nvar ReactUpdateQueue = require('./ReactUpdateQueue');\n\nvar assign = require('./Object.assign');\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\nvar warning = require('fbjs/lib/warning');\n\nfunction getDeclarationErrorAddendum(component) {\n  var owner = component._currentElement._owner || null;\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\nfunction StatelessComponent(Component) {}\nStatelessComponent.prototype.render = function () {\n  var Component = ReactInstanceMap.get(this)._currentElement.type;\n  return Component(this.props, this.context, this.updater);\n};\n\n/**\n * ------------------ The Life-Cycle of a Composite Component ------------------\n *\n * - constructor: Initialization of state. The instance is now retained.\n *   - componentWillMount\n *   - render\n *   - [children's constructors]\n *     - [children's componentWillMount and render]\n *     - [children's componentDidMount]\n *     - componentDidMount\n *\n *       Update Phases:\n *       - componentWillReceiveProps (only called if parent updated)\n *       - shouldComponentUpdate\n *         - componentWillUpdate\n *           - render\n *           - [children's constructors or receive props phases]\n *         - componentDidUpdate\n *\n *     - componentWillUnmount\n *     - [children's componentWillUnmount]\n *   - [children destroyed]\n * - (destroyed): The instance is now blank, released by React and ready for GC.\n *\n * -----------------------------------------------------------------------------\n */\n\n/**\n * An incrementing ID assigned to each component when it is mounted. This is\n * used to enforce the order in which `ReactUpdates` updates dirty components.\n *\n * @private\n */\nvar nextMountID = 1;\n\n/**\n * @lends {ReactCompositeComponent.prototype}\n */\nvar ReactCompositeComponentMixin = {\n\n  /**\n   * Base constructor for all composite component.\n   *\n   * @param {ReactElement} element\n   * @final\n   * @internal\n   */\n  construct: function (element) {\n    this._currentElement = element;\n    this._rootNodeID = null;\n    this._instance = null;\n\n    // See ReactUpdateQueue\n    this._pendingElement = null;\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n\n    this._renderedComponent = null;\n\n    this._context = null;\n    this._mountOrder = 0;\n    this._topLevelWrapper = null;\n\n    // See ReactUpdates and ReactUpdateQueue.\n    this._pendingCallbacks = null;\n  },\n\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {string} rootID DOM ID of the root node.\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function (rootID, transaction, context) {\n    this._context = context;\n    this._mountOrder = nextMountID++;\n    this._rootNodeID = rootID;\n\n    var publicProps = this._processProps(this._currentElement.props);\n    var publicContext = this._processContext(context);\n\n    var Component = this._currentElement.type;\n\n    // Initialize the public class\n    var inst;\n    var renderedElement;\n\n    // This is a way to detect if Component is a stateless arrow function\n    // component, which is not newable. It might not be 100% reliable but is\n    // something we can do until we start detecting that Component extends\n    // React.Component. We already assume that typeof Component === 'function'.\n    var canInstantiate = ('prototype' in Component);\n\n    if (canInstantiate) {\n      if (process.env.NODE_ENV !== 'production') {\n        ReactCurrentOwner.current = this;\n        try {\n          inst = new Component(publicProps, publicContext, ReactUpdateQueue);\n        } finally {\n          ReactCurrentOwner.current = null;\n        }\n      } else {\n        inst = new Component(publicProps, publicContext, ReactUpdateQueue);\n      }\n    }\n\n    if (!canInstantiate || inst === null || inst === false || ReactElement.isValidElement(inst)) {\n      renderedElement = inst;\n      inst = new StatelessComponent(Component);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // This will throw later in _renderValidatedComponent, but add an early\n      // warning now to help debugging\n      if (inst.render == null) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`, returned ' + 'null/false from a stateless component, or tried to render an ' + 'element whose type is a function that isn\\'t a React component.', Component.displayName || Component.name || 'Component') : undefined;\n      } else {\n        // We support ES6 inheriting from React.Component, the module pattern,\n        // and stateless components, but not ES6 classes that don't extend\n        process.env.NODE_ENV !== 'production' ? warning(Component.prototype && Component.prototype.isReactComponent || !canInstantiate || !(inst instanceof Component), '%s(...): React component classes must extend React.Component.', Component.displayName || Component.name || 'Component') : undefined;\n      }\n    }\n\n    // These should be set up in the constructor, but as a convenience for\n    // simpler class abstractions, we set them up after the fact.\n    inst.props = publicProps;\n    inst.context = publicContext;\n    inst.refs = emptyObject;\n    inst.updater = ReactUpdateQueue;\n\n    this._instance = inst;\n\n    // Store a reference from the instance back to the internal representation\n    ReactInstanceMap.set(inst, this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Since plain JS classes are defined without any special initialization\n      // logic, we can not catch common errors early. Therefore, we have to\n      // catch them here, at initialization time, instead.\n      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : undefined;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : undefined;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : undefined;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : undefined;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : undefined;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : undefined;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : undefined;\n    }\n\n    var initialState = inst.state;\n    if (initialState === undefined) {\n      inst.state = initialState = null;\n    }\n    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;\n\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n\n    if (inst.componentWillMount) {\n      inst.componentWillMount();\n      // When mounting, calls to `setState` by `componentWillMount` will set\n      // `this._pendingStateQueue` without triggering a re-render.\n      if (this._pendingStateQueue) {\n        inst.state = this._processPendingState(inst.props, inst.context);\n      }\n    }\n\n    // If not a stateless component, we now render\n    if (renderedElement === undefined) {\n      renderedElement = this._renderValidatedComponent();\n    }\n\n    this._renderedComponent = this._instantiateReactComponent(renderedElement);\n\n    var markup = ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, this._processChildContext(context));\n    if (inst.componentDidMount) {\n      transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);\n    }\n\n    return markup;\n  },\n\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function () {\n    var inst = this._instance;\n\n    if (inst.componentWillUnmount) {\n      inst.componentWillUnmount();\n    }\n\n    ReactReconciler.unmountComponent(this._renderedComponent);\n    this._renderedComponent = null;\n    this._instance = null;\n\n    // Reset pending fields\n    // Even if this component is scheduled for another update in ReactUpdates,\n    // it would still be ignored because these fields are reset.\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n    this._pendingCallbacks = null;\n    this._pendingElement = null;\n\n    // These fields do not really need to be reset since this object is no\n    // longer accessible.\n    this._context = null;\n    this._rootNodeID = null;\n    this._topLevelWrapper = null;\n\n    // Delete the reference from the instance to this internal representation\n    // which allow the internals to be properly cleaned up even if the user\n    // leaks a reference to the public instance.\n    ReactInstanceMap.remove(inst);\n\n    // Some existing components rely on inst.props even after they've been\n    // destroyed (in event handlers).\n    // TODO: inst.props = null;\n    // TODO: inst.state = null;\n    // TODO: inst.context = null;\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _maskContext: function (context) {\n    var maskedContext = null;\n    var Component = this._currentElement.type;\n    var contextTypes = Component.contextTypes;\n    if (!contextTypes) {\n      return emptyObject;\n    }\n    maskedContext = {};\n    for (var contextName in contextTypes) {\n      maskedContext[contextName] = context[contextName];\n    }\n    return maskedContext;\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`, and asserts that they are valid.\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _processContext: function (context) {\n    var maskedContext = this._maskContext(context);\n    if (process.env.NODE_ENV !== 'production') {\n      var Component = this._currentElement.type;\n      if (Component.contextTypes) {\n        this._checkPropTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);\n      }\n    }\n    return maskedContext;\n  },\n\n  /**\n   * @param {object} currentContext\n   * @return {object}\n   * @private\n   */\n  _processChildContext: function (currentContext) {\n    var Component = this._currentElement.type;\n    var inst = this._instance;\n    var childContext = inst.getChildContext && inst.getChildContext();\n    if (childContext) {\n      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;\n      if (process.env.NODE_ENV !== 'production') {\n        this._checkPropTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);\n      }\n      for (var name in childContext) {\n        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key \"%s\" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : invariant(false) : undefined;\n      }\n      return assign({}, currentContext, childContext);\n    }\n    return currentContext;\n  },\n\n  /**\n   * Processes props by setting default values for unspecified props and\n   * asserting that the props are valid. Does not mutate its argument; returns\n   * a new props object with defaults merged in.\n   *\n   * @param {object} newProps\n   * @return {object}\n   * @private\n   */\n  _processProps: function (newProps) {\n    if (process.env.NODE_ENV !== 'production') {\n      var Component = this._currentElement.type;\n      if (Component.propTypes) {\n        this._checkPropTypes(Component.propTypes, newProps, ReactPropTypeLocations.prop);\n      }\n    }\n    return newProps;\n  },\n\n  /**\n   * Assert that the props are valid\n   *\n   * @param {object} propTypes Map of prop name to a ReactPropType\n   * @param {object} props\n   * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n   * @private\n   */\n  _checkPropTypes: function (propTypes, props, location) {\n    // TODO: Stop validating prop types here and only use the element\n    // validation.\n    var componentName = this.getName();\n    for (var propName in propTypes) {\n      if (propTypes.hasOwnProperty(propName)) {\n        var error;\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          !(typeof propTypes[propName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually ' + 'from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : undefined;\n          error = propTypes[propName](props, propName, componentName, location);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error instanceof Error) {\n          // We may want to extend this logic for similar errors in\n          // top-level render calls, so I'm abstracting it away into\n          // a function to minimize refactoring in the future\n          var addendum = getDeclarationErrorAddendum(this);\n\n          if (location === ReactPropTypeLocations.prop) {\n            // Preface gives us something to blacklist in warning module\n            process.env.NODE_ENV !== 'production' ? warning(false, 'Failed Composite propType: %s%s', error.message, addendum) : undefined;\n          } else {\n            process.env.NODE_ENV !== 'production' ? warning(false, 'Failed Context Types: %s%s', error.message, addendum) : undefined;\n          }\n        }\n      }\n    }\n  },\n\n  receiveComponent: function (nextElement, transaction, nextContext) {\n    var prevElement = this._currentElement;\n    var prevContext = this._context;\n\n    this._pendingElement = null;\n\n    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);\n  },\n\n  /**\n   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`\n   * is set, update the component.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function (transaction) {\n    if (this._pendingElement != null) {\n      ReactReconciler.receiveComponent(this, this._pendingElement || this._currentElement, transaction, this._context);\n    }\n\n    if (this._pendingStateQueue !== null || this._pendingForceUpdate) {\n      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);\n    }\n  },\n\n  /**\n   * Perform an update to a mounted component. The componentWillReceiveProps and\n   * shouldComponentUpdate methods are called, then (assuming the update isn't\n   * skipped) the remaining update lifecycle methods are called and the DOM\n   * representation is updated.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @param {ReactElement} prevParentElement\n   * @param {ReactElement} nextParentElement\n   * @internal\n   * @overridable\n   */\n  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {\n    var inst = this._instance;\n\n    var nextContext = this._context === nextUnmaskedContext ? inst.context : this._processContext(nextUnmaskedContext);\n    var nextProps;\n\n    // Distinguish between a props update versus a simple state update\n    if (prevParentElement === nextParentElement) {\n      // Skip checking prop types again -- we don't read inst.props to avoid\n      // warning for DOM component props in this upgrade\n      nextProps = nextParentElement.props;\n    } else {\n      nextProps = this._processProps(nextParentElement.props);\n      // An update here will schedule an update but immediately set\n      // _pendingStateQueue which will ensure that any state updates gets\n      // immediately reconciled instead of waiting for the next batch.\n\n      if (inst.componentWillReceiveProps) {\n        inst.componentWillReceiveProps(nextProps, nextContext);\n      }\n    }\n\n    var nextState = this._processPendingState(nextProps, nextContext);\n\n    var shouldUpdate = this._pendingForceUpdate || !inst.shouldComponentUpdate || inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(typeof shouldUpdate !== 'undefined', '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : undefined;\n    }\n\n    if (shouldUpdate) {\n      this._pendingForceUpdate = false;\n      // Will set `this.props`, `this.state` and `this.context`.\n      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);\n    } else {\n      // If it's determined that a component should not update, we still want\n      // to set props and state but we shortcut the rest of the update.\n      this._currentElement = nextParentElement;\n      this._context = nextUnmaskedContext;\n      inst.props = nextProps;\n      inst.state = nextState;\n      inst.context = nextContext;\n    }\n  },\n\n  _processPendingState: function (props, context) {\n    var inst = this._instance;\n    var queue = this._pendingStateQueue;\n    var replace = this._pendingReplaceState;\n    this._pendingReplaceState = false;\n    this._pendingStateQueue = null;\n\n    if (!queue) {\n      return inst.state;\n    }\n\n    if (replace && queue.length === 1) {\n      return queue[0];\n    }\n\n    var nextState = assign({}, replace ? queue[0] : inst.state);\n    for (var i = replace ? 1 : 0; i < queue.length; i++) {\n      var partial = queue[i];\n      assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);\n    }\n\n    return nextState;\n  },\n\n  /**\n   * Merges new props and state, notifies delegate methods of update and\n   * performs update.\n   *\n   * @param {ReactElement} nextElement Next element\n   * @param {object} nextProps Next public object to set as properties.\n   * @param {?object} nextState Next object to set as state.\n   * @param {?object} nextContext Next public object to set as context.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {?object} unmaskedContext\n   * @private\n   */\n  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {\n    var inst = this._instance;\n\n    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);\n    var prevProps;\n    var prevState;\n    var prevContext;\n    if (hasComponentDidUpdate) {\n      prevProps = inst.props;\n      prevState = inst.state;\n      prevContext = inst.context;\n    }\n\n    if (inst.componentWillUpdate) {\n      inst.componentWillUpdate(nextProps, nextState, nextContext);\n    }\n\n    this._currentElement = nextElement;\n    this._context = unmaskedContext;\n    inst.props = nextProps;\n    inst.state = nextState;\n    inst.context = nextContext;\n\n    this._updateRenderedComponent(transaction, unmaskedContext);\n\n    if (hasComponentDidUpdate) {\n      transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);\n    }\n  },\n\n  /**\n   * Call the component's `render` method and update the DOM accordingly.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  _updateRenderedComponent: function (transaction, context) {\n    var prevComponentInstance = this._renderedComponent;\n    var prevRenderedElement = prevComponentInstance._currentElement;\n    var nextRenderedElement = this._renderValidatedComponent();\n    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {\n      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));\n    } else {\n      // These two IDs are actually the same! But nothing should rely on that.\n      var thisID = this._rootNodeID;\n      var prevComponentID = prevComponentInstance._rootNodeID;\n      ReactReconciler.unmountComponent(prevComponentInstance);\n\n      this._renderedComponent = this._instantiateReactComponent(nextRenderedElement);\n      var nextMarkup = ReactReconciler.mountComponent(this._renderedComponent, thisID, transaction, this._processChildContext(context));\n      this._replaceNodeWithMarkupByID(prevComponentID, nextMarkup);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  _replaceNodeWithMarkupByID: function (prevComponentID, nextMarkup) {\n    ReactComponentEnvironment.replaceNodeWithMarkupByID(prevComponentID, nextMarkup);\n  },\n\n  /**\n   * @protected\n   */\n  _renderValidatedComponentWithoutOwnerOrContext: function () {\n    var inst = this._instance;\n    var renderedComponent = inst.render();\n    if (process.env.NODE_ENV !== 'production') {\n      // We allow auto-mocks to proceed as if they're returning null.\n      if (typeof renderedComponent === 'undefined' && inst.render._isMockFunction) {\n        // This is probably bad practice. Consider warning here and\n        // deprecating this convenience.\n        renderedComponent = null;\n      }\n    }\n\n    return renderedComponent;\n  },\n\n  /**\n   * @private\n   */\n  _renderValidatedComponent: function () {\n    var renderedComponent;\n    ReactCurrentOwner.current = this;\n    try {\n      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();\n    } finally {\n      ReactCurrentOwner.current = null;\n    }\n    !(\n    // TODO: An `isValidNode` function would probably be more appropriate\n    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid ReactComponent must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;\n    return renderedComponent;\n  },\n\n  /**\n   * Lazily allocates the refs object and stores `component` as `ref`.\n   *\n   * @param {string} ref Reference name.\n   * @param {component} component Component to store as `ref`.\n   * @final\n   * @private\n   */\n  attachRef: function (ref, component) {\n    var inst = this.getPublicInstance();\n    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : invariant(false) : undefined;\n    var publicComponentInstance = component.getPublicInstance();\n    if (process.env.NODE_ENV !== 'production') {\n      var componentName = component && component.getName ? component.getName() : 'a component';\n      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null, 'Stateless function components cannot be given refs ' + '(See ref \"%s\" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : undefined;\n    }\n    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;\n    refs[ref] = publicComponentInstance;\n  },\n\n  /**\n   * Detaches a reference name.\n   *\n   * @param {string} ref Name to dereference.\n   * @final\n   * @private\n   */\n  detachRef: function (ref) {\n    var refs = this.getPublicInstance().refs;\n    delete refs[ref];\n  },\n\n  /**\n   * Get a text description of the component that can be used to identify it\n   * in error messages.\n   * @return {string} The name or null.\n   * @internal\n   */\n  getName: function () {\n    var type = this._currentElement.type;\n    var constructor = this._instance && this._instance.constructor;\n    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;\n  },\n\n  /**\n   * Get the publicly accessible representation of this component - i.e. what\n   * is exposed by refs and returned by render. Can be null for stateless\n   * components.\n   *\n   * @return {ReactComponent} the public component instance.\n   * @internal\n   */\n  getPublicInstance: function () {\n    var inst = this._instance;\n    if (inst instanceof StatelessComponent) {\n      return null;\n    }\n    return inst;\n  },\n\n  // Stub\n  _instantiateReactComponent: null\n\n};\n\nReactPerf.measureMethods(ReactCompositeComponentMixin, 'ReactCompositeComponent', {\n  mountComponent: 'mountComponent',\n  updateComponent: 'updateComponent',\n  _renderValidatedComponent: '_renderValidatedComponent'\n});\n\nvar ReactCompositeComponent = {\n\n  Mixin: ReactCompositeComponentMixin\n\n};\n\nmodule.exports = ReactCompositeComponent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactCompositeComponent.js\n ** module id = 113\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMButton\n */\n\n'use strict';\n\nvar mouseListenerNames = {\n  onClick: true,\n  onDoubleClick: true,\n  onMouseDown: true,\n  onMouseMove: true,\n  onMouseUp: true,\n\n  onClickCapture: true,\n  onDoubleClickCapture: true,\n  onMouseDownCapture: true,\n  onMouseMoveCapture: true,\n  onMouseUpCapture: true\n};\n\n/**\n * Implements a <button> native component that does not receive mouse events\n * when `disabled` is set.\n */\nvar ReactDOMButton = {\n  getNativeProps: function (inst, props, context) {\n    if (!props.disabled) {\n      return props;\n    }\n\n    // Copy the props, except the mouse listeners\n    var nativeProps = {};\n    for (var key in props) {\n      if (props.hasOwnProperty(key) && !mouseListenerNames[key]) {\n        nativeProps[key] = props[key];\n      }\n    }\n\n    return nativeProps;\n  }\n};\n\nmodule.exports = ReactDOMButton;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMButton.js\n ** module id = 114\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMComponent\n * @typechecks static-only\n */\n\n/* global hasOwnProperty:true */\n\n'use strict';\n\nvar AutoFocusUtils = require('./AutoFocusUtils');\nvar CSSPropertyOperations = require('./CSSPropertyOperations');\nvar DOMProperty = require('./DOMProperty');\nvar DOMPropertyOperations = require('./DOMPropertyOperations');\nvar EventConstants = require('./EventConstants');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactComponentBrowserEnvironment = require('./ReactComponentBrowserEnvironment');\nvar ReactDOMButton = require('./ReactDOMButton');\nvar ReactDOMInput = require('./ReactDOMInput');\nvar ReactDOMOption = require('./ReactDOMOption');\nvar ReactDOMSelect = require('./ReactDOMSelect');\nvar ReactDOMTextarea = require('./ReactDOMTextarea');\nvar ReactMount = require('./ReactMount');\nvar ReactMultiChild = require('./ReactMultiChild');\nvar ReactPerf = require('./ReactPerf');\nvar ReactUpdateQueue = require('./ReactUpdateQueue');\n\nvar assign = require('./Object.assign');\nvar canDefineProperty = require('./canDefineProperty');\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\nvar invariant = require('fbjs/lib/invariant');\nvar isEventSupported = require('./isEventSupported');\nvar keyOf = require('fbjs/lib/keyOf');\nvar setInnerHTML = require('./setInnerHTML');\nvar setTextContent = require('./setTextContent');\nvar shallowEqual = require('fbjs/lib/shallowEqual');\nvar validateDOMNesting = require('./validateDOMNesting');\nvar warning = require('fbjs/lib/warning');\n\nvar deleteListener = ReactBrowserEventEmitter.deleteListener;\nvar listenTo = ReactBrowserEventEmitter.listenTo;\nvar registrationNameModules = ReactBrowserEventEmitter.registrationNameModules;\n\n// For quickly matching children type, to test if can be treated as content.\nvar CONTENT_TYPES = { 'string': true, 'number': true };\n\nvar CHILDREN = keyOf({ children: null });\nvar STYLE = keyOf({ style: null });\nvar HTML = keyOf({ __html: null });\n\nvar ELEMENT_NODE_TYPE = 1;\n\nfunction getDeclarationErrorAddendum(internalInstance) {\n  if (internalInstance) {\n    var owner = internalInstance._currentElement._owner || null;\n    if (owner) {\n      var name = owner.getName();\n      if (name) {\n        return ' This DOM node was rendered by `' + name + '`.';\n      }\n    }\n  }\n  return '';\n}\n\nvar legacyPropsDescriptor;\nif (process.env.NODE_ENV !== 'production') {\n  legacyPropsDescriptor = {\n    props: {\n      enumerable: false,\n      get: function () {\n        var component = this._reactInternalComponent;\n        process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .props of a DOM node; instead, ' + 'recreate the props as `render` did originally or read the DOM ' + 'properties/attributes directly from this node (e.g., ' + 'this.refs.box.className).%s', getDeclarationErrorAddendum(component)) : undefined;\n        return component._currentElement.props;\n      }\n    }\n  };\n}\n\nfunction legacyGetDOMNode() {\n  if (process.env.NODE_ENV !== 'production') {\n    var component = this._reactInternalComponent;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .getDOMNode() of a DOM node; ' + 'instead, use the node directly.%s', getDeclarationErrorAddendum(component)) : undefined;\n  }\n  return this;\n}\n\nfunction legacyIsMounted() {\n  var component = this._reactInternalComponent;\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .isMounted() of a DOM node.%s', getDeclarationErrorAddendum(component)) : undefined;\n  }\n  return !!component;\n}\n\nfunction legacySetStateEtc() {\n  if (process.env.NODE_ENV !== 'production') {\n    var component = this._reactInternalComponent;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .setState(), .replaceState(), or ' + '.forceUpdate() of a DOM node. This is a no-op.%s', getDeclarationErrorAddendum(component)) : undefined;\n  }\n}\n\nfunction legacySetProps(partialProps, callback) {\n  var component = this._reactInternalComponent;\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .setProps() of a DOM node. ' + 'Instead, call ReactDOM.render again at the top level.%s', getDeclarationErrorAddendum(component)) : undefined;\n  }\n  if (!component) {\n    return;\n  }\n  ReactUpdateQueue.enqueueSetPropsInternal(component, partialProps);\n  if (callback) {\n    ReactUpdateQueue.enqueueCallbackInternal(component, callback);\n  }\n}\n\nfunction legacyReplaceProps(partialProps, callback) {\n  var component = this._reactInternalComponent;\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .replaceProps() of a DOM node. ' + 'Instead, call ReactDOM.render again at the top level.%s', getDeclarationErrorAddendum(component)) : undefined;\n  }\n  if (!component) {\n    return;\n  }\n  ReactUpdateQueue.enqueueReplacePropsInternal(component, partialProps);\n  if (callback) {\n    ReactUpdateQueue.enqueueCallbackInternal(component, callback);\n  }\n}\n\nfunction friendlyStringify(obj) {\n  if (typeof obj === 'object') {\n    if (Array.isArray(obj)) {\n      return '[' + obj.map(friendlyStringify).join(', ') + ']';\n    } else {\n      var pairs = [];\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var keyEscaped = /^[a-z$_][\\w$_]*$/i.test(key) ? key : JSON.stringify(key);\n          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));\n        }\n      }\n      return '{' + pairs.join(', ') + '}';\n    }\n  } else if (typeof obj === 'string') {\n    return JSON.stringify(obj);\n  } else if (typeof obj === 'function') {\n    return '[function object]';\n  }\n  // Differs from JSON.stringify in that undefined becauses undefined and that\n  // inf and nan don't become null\n  return String(obj);\n}\n\nvar styleMutationWarning = {};\n\nfunction checkAndWarnForMutatedStyle(style1, style2, component) {\n  if (style1 == null || style2 == null) {\n    return;\n  }\n  if (shallowEqual(style1, style2)) {\n    return;\n  }\n\n  var componentName = component._tag;\n  var owner = component._currentElement._owner;\n  var ownerName;\n  if (owner) {\n    ownerName = owner.getName();\n  }\n\n  var hash = ownerName + '|' + componentName;\n\n  if (styleMutationWarning.hasOwnProperty(hash)) {\n    return;\n  }\n\n  styleMutationWarning[hash] = true;\n\n  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : undefined;\n}\n\n/**\n * @param {object} component\n * @param {?object} props\n */\nfunction assertValidProps(component, props) {\n  if (!props) {\n    return;\n  }\n  // Note the use of `==` which checks for null or undefined.\n  if (process.env.NODE_ENV !== 'production') {\n    if (voidElementTags[component._tag]) {\n      process.env.NODE_ENV !== 'production' ? warning(props.children == null && props.dangerouslySetInnerHTML == null, '%s is a void element tag and must not have `children` or ' + 'use `props.dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : undefined;\n    }\n  }\n  if (props.dangerouslySetInnerHTML != null) {\n    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : invariant(false) : undefined;\n    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' + 'Please visit https://fb.me/react-invariant-dangerously-set-inner-html ' + 'for more information.') : invariant(false) : undefined;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : undefined;\n    process.env.NODE_ENV !== 'production' ? warning(!props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : undefined;\n  }\n  !(props.style == null || typeof props.style === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, ' + 'not a string. For example, style={{marginRight: spacing + \\'em\\'}} when ' + 'using JSX.%s', getDeclarationErrorAddendum(component)) : invariant(false) : undefined;\n}\n\nfunction enqueuePutListener(id, registrationName, listener, transaction) {\n  if (process.env.NODE_ENV !== 'production') {\n    // IE8 has no API for event capturing and the `onScroll` event doesn't\n    // bubble.\n    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\\'t support the `onScroll` event') : undefined;\n  }\n  var container = ReactMount.findReactContainerForID(id);\n  if (container) {\n    var doc = container.nodeType === ELEMENT_NODE_TYPE ? container.ownerDocument : container;\n    listenTo(registrationName, doc);\n  }\n  transaction.getReactMountReady().enqueue(putListener, {\n    id: id,\n    registrationName: registrationName,\n    listener: listener\n  });\n}\n\nfunction putListener() {\n  var listenerToPut = this;\n  ReactBrowserEventEmitter.putListener(listenerToPut.id, listenerToPut.registrationName, listenerToPut.listener);\n}\n\n// There are so many media events, it makes sense to just\n// maintain a list rather than create a `trapBubbledEvent` for each\nvar mediaEvents = {\n  topAbort: 'abort',\n  topCanPlay: 'canplay',\n  topCanPlayThrough: 'canplaythrough',\n  topDurationChange: 'durationchange',\n  topEmptied: 'emptied',\n  topEncrypted: 'encrypted',\n  topEnded: 'ended',\n  topError: 'error',\n  topLoadedData: 'loadeddata',\n  topLoadedMetadata: 'loadedmetadata',\n  topLoadStart: 'loadstart',\n  topPause: 'pause',\n  topPlay: 'play',\n  topPlaying: 'playing',\n  topProgress: 'progress',\n  topRateChange: 'ratechange',\n  topSeeked: 'seeked',\n  topSeeking: 'seeking',\n  topStalled: 'stalled',\n  topSuspend: 'suspend',\n  topTimeUpdate: 'timeupdate',\n  topVolumeChange: 'volumechange',\n  topWaiting: 'waiting'\n};\n\nfunction trapBubbledEventsLocal() {\n  var inst = this;\n  // If a component renders to null or if another component fatals and causes\n  // the state of the tree to be corrupted, `node` here can be null.\n  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : invariant(false) : undefined;\n  var node = ReactMount.getNode(inst._rootNodeID);\n  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : invariant(false) : undefined;\n\n  switch (inst._tag) {\n    case 'iframe':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];\n      break;\n    case 'video':\n    case 'audio':\n\n      inst._wrapperState.listeners = [];\n      // create listener for each media event\n      for (var event in mediaEvents) {\n        if (mediaEvents.hasOwnProperty(event)) {\n          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));\n        }\n      }\n\n      break;\n    case 'img':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];\n      break;\n    case 'form':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];\n      break;\n  }\n}\n\nfunction mountReadyInputWrapper() {\n  ReactDOMInput.mountReadyWrapper(this);\n}\n\nfunction postUpdateSelectWrapper() {\n  ReactDOMSelect.postUpdateWrapper(this);\n}\n\n// For HTML, certain tags should omit their close tag. We keep a whitelist for\n// those special cased tags.\n\nvar omittedCloseTags = {\n  'area': true,\n  'base': true,\n  'br': true,\n  'col': true,\n  'embed': true,\n  'hr': true,\n  'img': true,\n  'input': true,\n  'keygen': true,\n  'link': true,\n  'meta': true,\n  'param': true,\n  'source': true,\n  'track': true,\n  'wbr': true\n};\n\n// NOTE: menuitem's close tag should be omitted, but that causes problems.\nvar newlineEatingTags = {\n  'listing': true,\n  'pre': true,\n  'textarea': true\n};\n\n// For HTML, certain tags cannot have children. This has the same purpose as\n// `omittedCloseTags` except that `menuitem` should still have its closing tag.\n\nvar voidElementTags = assign({\n  'menuitem': true\n}, omittedCloseTags);\n\n// We accept any tag to be rendered but since this gets injected into arbitrary\n// HTML, we want to make sure that it's a safe tag.\n// http://www.w3.org/TR/REC-xml/#NT-Name\n\nvar VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\\.\\-\\d]*$/; // Simplified subset\nvar validatedTagCache = {};\nvar hasOwnProperty = ({}).hasOwnProperty;\n\nfunction validateDangerousTag(tag) {\n  if (!hasOwnProperty.call(validatedTagCache, tag)) {\n    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : invariant(false) : undefined;\n    validatedTagCache[tag] = true;\n  }\n}\n\nfunction processChildContextDev(context, inst) {\n  // Pass down our tag name to child components for validation purposes\n  context = assign({}, context);\n  var info = context[validateDOMNesting.ancestorInfoContextKey];\n  context[validateDOMNesting.ancestorInfoContextKey] = validateDOMNesting.updatedAncestorInfo(info, inst._tag, inst);\n  return context;\n}\n\nfunction isCustomComponent(tagName, props) {\n  return tagName.indexOf('-') >= 0 || props.is != null;\n}\n\n/**\n * Creates a new React class that is idempotent and capable of containing other\n * React components. It accepts event listeners and DOM properties that are\n * valid according to `DOMProperty`.\n *\n *  - Event listeners: `onClick`, `onMouseDown`, etc.\n *  - DOM properties: `className`, `name`, `title`, etc.\n *\n * The `style` property functions differently from the DOM API. It accepts an\n * object mapping of style properties to values.\n *\n * @constructor ReactDOMComponent\n * @extends ReactMultiChild\n */\nfunction ReactDOMComponent(tag) {\n  validateDangerousTag(tag);\n  this._tag = tag.toLowerCase();\n  this._renderedChildren = null;\n  this._previousStyle = null;\n  this._previousStyleCopy = null;\n  this._rootNodeID = null;\n  this._wrapperState = null;\n  this._topLevelWrapper = null;\n  this._nodeWithLegacyProperties = null;\n  if (process.env.NODE_ENV !== 'production') {\n    this._unprocessedContextDev = null;\n    this._processedContextDev = null;\n  }\n}\n\nReactDOMComponent.displayName = 'ReactDOMComponent';\n\nReactDOMComponent.Mixin = {\n\n  construct: function (element) {\n    this._currentElement = element;\n  },\n\n  /**\n   * Generates root tag markup then recurses. This method has side effects and\n   * is not idempotent.\n   *\n   * @internal\n   * @param {string} rootID The root DOM ID for this node.\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {object} context\n   * @return {string} The computed markup.\n   */\n  mountComponent: function (rootID, transaction, context) {\n    this._rootNodeID = rootID;\n\n    var props = this._currentElement.props;\n\n    switch (this._tag) {\n      case 'iframe':\n      case 'img':\n      case 'form':\n      case 'video':\n      case 'audio':\n        this._wrapperState = {\n          listeners: null\n        };\n        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n        break;\n      case 'button':\n        props = ReactDOMButton.getNativeProps(this, props, context);\n        break;\n      case 'input':\n        ReactDOMInput.mountWrapper(this, props, context);\n        props = ReactDOMInput.getNativeProps(this, props, context);\n        break;\n      case 'option':\n        ReactDOMOption.mountWrapper(this, props, context);\n        props = ReactDOMOption.getNativeProps(this, props, context);\n        break;\n      case 'select':\n        ReactDOMSelect.mountWrapper(this, props, context);\n        props = ReactDOMSelect.getNativeProps(this, props, context);\n        context = ReactDOMSelect.processChildContext(this, props, context);\n        break;\n      case 'textarea':\n        ReactDOMTextarea.mountWrapper(this, props, context);\n        props = ReactDOMTextarea.getNativeProps(this, props, context);\n        break;\n    }\n\n    assertValidProps(this, props);\n    if (process.env.NODE_ENV !== 'production') {\n      if (context[validateDOMNesting.ancestorInfoContextKey]) {\n        validateDOMNesting(this._tag, this, context[validateDOMNesting.ancestorInfoContextKey]);\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      this._unprocessedContextDev = context;\n      this._processedContextDev = processChildContextDev(context, this);\n      context = this._processedContextDev;\n    }\n\n    var mountImage;\n    if (transaction.useCreateElement) {\n      var ownerDocument = context[ReactMount.ownerDocumentContextKey];\n      var el = ownerDocument.createElement(this._currentElement.type);\n      DOMPropertyOperations.setAttributeForID(el, this._rootNodeID);\n      // Populate node cache\n      ReactMount.getID(el);\n      this._updateDOMProperties({}, props, transaction, el);\n      this._createInitialChildren(transaction, props, context, el);\n      mountImage = el;\n    } else {\n      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);\n      var tagContent = this._createContentMarkup(transaction, props, context);\n      if (!tagContent && omittedCloseTags[this._tag]) {\n        mountImage = tagOpen + '/>';\n      } else {\n        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';\n      }\n    }\n\n    switch (this._tag) {\n      case 'input':\n        transaction.getReactMountReady().enqueue(mountReadyInputWrapper, this);\n      // falls through\n      case 'button':\n      case 'select':\n      case 'textarea':\n        if (props.autoFocus) {\n          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n        }\n        break;\n    }\n\n    return mountImage;\n  },\n\n  /**\n   * Creates markup for the open tag and all attributes.\n   *\n   * This method has side effects because events get registered.\n   *\n   * Iterating over object properties is faster than iterating over arrays.\n   * @see http://jsperf.com/obj-vs-arr-iteration\n   *\n   * @private\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {object} props\n   * @return {string} Markup of opening tag.\n   */\n  _createOpenTagMarkupAndPutListeners: function (transaction, props) {\n    var ret = '<' + this._currentElement.type;\n\n    for (var propKey in props) {\n      if (!props.hasOwnProperty(propKey)) {\n        continue;\n      }\n      var propValue = props[propKey];\n      if (propValue == null) {\n        continue;\n      }\n      if (registrationNameModules.hasOwnProperty(propKey)) {\n        if (propValue) {\n          enqueuePutListener(this._rootNodeID, propKey, propValue, transaction);\n        }\n      } else {\n        if (propKey === STYLE) {\n          if (propValue) {\n            if (process.env.NODE_ENV !== 'production') {\n              // See `_updateDOMProperties`. style block\n              this._previousStyle = propValue;\n            }\n            propValue = this._previousStyleCopy = assign({}, props.style);\n          }\n          propValue = CSSPropertyOperations.createMarkupForStyles(propValue);\n        }\n        var markup = null;\n        if (this._tag != null && isCustomComponent(this._tag, props)) {\n          if (propKey !== CHILDREN) {\n            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);\n          }\n        } else {\n          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);\n        }\n        if (markup) {\n          ret += ' ' + markup;\n        }\n      }\n    }\n\n    // For static pages, no need to put React ID and checksum. Saves lots of\n    // bytes.\n    if (transaction.renderToStaticMarkup) {\n      return ret;\n    }\n\n    var markupForID = DOMPropertyOperations.createMarkupForID(this._rootNodeID);\n    return ret + ' ' + markupForID;\n  },\n\n  /**\n   * Creates markup for the content between the tags.\n   *\n   * @private\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {object} props\n   * @param {object} context\n   * @return {string} Content markup.\n   */\n  _createContentMarkup: function (transaction, props, context) {\n    var ret = '';\n\n    // Intentional use of != to avoid catching zero/false.\n    var innerHTML = props.dangerouslySetInnerHTML;\n    if (innerHTML != null) {\n      if (innerHTML.__html != null) {\n        ret = innerHTML.__html;\n      }\n    } else {\n      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;\n      var childrenToUse = contentToUse != null ? null : props.children;\n      if (contentToUse != null) {\n        // TODO: Validate that text is allowed as a child of this node\n        ret = escapeTextContentForBrowser(contentToUse);\n      } else if (childrenToUse != null) {\n        var mountImages = this.mountChildren(childrenToUse, transaction, context);\n        ret = mountImages.join('');\n      }\n    }\n    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\\n') {\n      // text/html ignores the first character in these tags if it's a newline\n      // Prefer to break application/xml over text/html (for now) by adding\n      // a newline specifically to get eaten by the parser. (Alternately for\n      // textareas, replacing \"^\\n\" with \"\\r\\n\" doesn't get eaten, and the first\n      // \\r is normalized out by HTMLTextAreaElement#value.)\n      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>\n      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>\n      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>\n      // See: Parsing of \"textarea\" \"listing\" and \"pre\" elements\n      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>\n      return '\\n' + ret;\n    } else {\n      return ret;\n    }\n  },\n\n  _createInitialChildren: function (transaction, props, context, el) {\n    // Intentional use of != to avoid catching zero/false.\n    var innerHTML = props.dangerouslySetInnerHTML;\n    if (innerHTML != null) {\n      if (innerHTML.__html != null) {\n        setInnerHTML(el, innerHTML.__html);\n      }\n    } else {\n      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;\n      var childrenToUse = contentToUse != null ? null : props.children;\n      if (contentToUse != null) {\n        // TODO: Validate that text is allowed as a child of this node\n        setTextContent(el, contentToUse);\n      } else if (childrenToUse != null) {\n        var mountImages = this.mountChildren(childrenToUse, transaction, context);\n        for (var i = 0; i < mountImages.length; i++) {\n          el.appendChild(mountImages[i]);\n        }\n      }\n    }\n  },\n\n  /**\n   * Receives a next element and updates the component.\n   *\n   * @internal\n   * @param {ReactElement} nextElement\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {object} context\n   */\n  receiveComponent: function (nextElement, transaction, context) {\n    var prevElement = this._currentElement;\n    this._currentElement = nextElement;\n    this.updateComponent(transaction, prevElement, nextElement, context);\n  },\n\n  /**\n   * Updates a native DOM component after it has already been allocated and\n   * attached to the DOM. Reconciles the root DOM node, then recurses.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @param {ReactElement} prevElement\n   * @param {ReactElement} nextElement\n   * @internal\n   * @overridable\n   */\n  updateComponent: function (transaction, prevElement, nextElement, context) {\n    var lastProps = prevElement.props;\n    var nextProps = this._currentElement.props;\n\n    switch (this._tag) {\n      case 'button':\n        lastProps = ReactDOMButton.getNativeProps(this, lastProps);\n        nextProps = ReactDOMButton.getNativeProps(this, nextProps);\n        break;\n      case 'input':\n        ReactDOMInput.updateWrapper(this);\n        lastProps = ReactDOMInput.getNativeProps(this, lastProps);\n        nextProps = ReactDOMInput.getNativeProps(this, nextProps);\n        break;\n      case 'option':\n        lastProps = ReactDOMOption.getNativeProps(this, lastProps);\n        nextProps = ReactDOMOption.getNativeProps(this, nextProps);\n        break;\n      case 'select':\n        lastProps = ReactDOMSelect.getNativeProps(this, lastProps);\n        nextProps = ReactDOMSelect.getNativeProps(this, nextProps);\n        break;\n      case 'textarea':\n        ReactDOMTextarea.updateWrapper(this);\n        lastProps = ReactDOMTextarea.getNativeProps(this, lastProps);\n        nextProps = ReactDOMTextarea.getNativeProps(this, nextProps);\n        break;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // If the context is reference-equal to the old one, pass down the same\n      // processed object so the update bailout in ReactReconciler behaves\n      // correctly (and identically in dev and prod). See #5005.\n      if (this._unprocessedContextDev !== context) {\n        this._unprocessedContextDev = context;\n        this._processedContextDev = processChildContextDev(context, this);\n      }\n      context = this._processedContextDev;\n    }\n\n    assertValidProps(this, nextProps);\n    this._updateDOMProperties(lastProps, nextProps, transaction, null);\n    this._updateDOMChildren(lastProps, nextProps, transaction, context);\n\n    if (!canDefineProperty && this._nodeWithLegacyProperties) {\n      this._nodeWithLegacyProperties.props = nextProps;\n    }\n\n    if (this._tag === 'select') {\n      // <select> value update needs to occur after <option> children\n      // reconciliation\n      transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);\n    }\n  },\n\n  /**\n   * Reconciles the properties by detecting differences in property values and\n   * updating the DOM as necessary. This function is probably the single most\n   * critical path for performance optimization.\n   *\n   * TODO: Benchmark whether checking for changed values in memory actually\n   *       improves performance (especially statically positioned elements).\n   * TODO: Benchmark the effects of putting this at the top since 99% of props\n   *       do not change for a given reconciliation.\n   * TODO: Benchmark areas that can be improved with caching.\n   *\n   * @private\n   * @param {object} lastProps\n   * @param {object} nextProps\n   * @param {ReactReconcileTransaction} transaction\n   * @param {?DOMElement} node\n   */\n  _updateDOMProperties: function (lastProps, nextProps, transaction, node) {\n    var propKey;\n    var styleName;\n    var styleUpdates;\n    for (propKey in lastProps) {\n      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey)) {\n        continue;\n      }\n      if (propKey === STYLE) {\n        var lastStyle = this._previousStyleCopy;\n        for (styleName in lastStyle) {\n          if (lastStyle.hasOwnProperty(styleName)) {\n            styleUpdates = styleUpdates || {};\n            styleUpdates[styleName] = '';\n          }\n        }\n        this._previousStyleCopy = null;\n      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n        if (lastProps[propKey]) {\n          // Only call deleteListener if there was a listener previously or\n          // else willDeleteListener gets called when there wasn't actually a\n          // listener (e.g., onClick={null})\n          deleteListener(this._rootNodeID, propKey);\n        }\n      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {\n        if (!node) {\n          node = ReactMount.getNode(this._rootNodeID);\n        }\n        DOMPropertyOperations.deleteValueForProperty(node, propKey);\n      }\n    }\n    for (propKey in nextProps) {\n      var nextProp = nextProps[propKey];\n      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps[propKey];\n      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp) {\n        continue;\n      }\n      if (propKey === STYLE) {\n        if (nextProp) {\n          if (process.env.NODE_ENV !== 'production') {\n            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);\n            this._previousStyle = nextProp;\n          }\n          nextProp = this._previousStyleCopy = assign({}, nextProp);\n        } else {\n          this._previousStyleCopy = null;\n        }\n        if (lastProp) {\n          // Unset styles on `lastProp` but not on `nextProp`.\n          for (styleName in lastProp) {\n            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {\n              styleUpdates = styleUpdates || {};\n              styleUpdates[styleName] = '';\n            }\n          }\n          // Update styles that changed since `lastProp`.\n          for (styleName in nextProp) {\n            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {\n              styleUpdates = styleUpdates || {};\n              styleUpdates[styleName] = nextProp[styleName];\n            }\n          }\n        } else {\n          // Relies on `updateStylesByID` not mutating `styleUpdates`.\n          styleUpdates = nextProp;\n        }\n      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n        if (nextProp) {\n          enqueuePutListener(this._rootNodeID, propKey, nextProp, transaction);\n        } else if (lastProp) {\n          deleteListener(this._rootNodeID, propKey);\n        }\n      } else if (isCustomComponent(this._tag, nextProps)) {\n        if (!node) {\n          node = ReactMount.getNode(this._rootNodeID);\n        }\n        if (propKey === CHILDREN) {\n          nextProp = null;\n        }\n        DOMPropertyOperations.setValueForAttribute(node, propKey, nextProp);\n      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {\n        if (!node) {\n          node = ReactMount.getNode(this._rootNodeID);\n        }\n        // If we're updating to null or undefined, we should remove the property\n        // from the DOM node instead of inadvertantly setting to a string. This\n        // brings us in line with the same behavior we have on initial render.\n        if (nextProp != null) {\n          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);\n        } else {\n          DOMPropertyOperations.deleteValueForProperty(node, propKey);\n        }\n      }\n    }\n    if (styleUpdates) {\n      if (!node) {\n        node = ReactMount.getNode(this._rootNodeID);\n      }\n      CSSPropertyOperations.setValueForStyles(node, styleUpdates);\n    }\n  },\n\n  /**\n   * Reconciles the children with the various properties that affect the\n   * children content.\n   *\n   * @param {object} lastProps\n   * @param {object} nextProps\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   */\n  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {\n    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;\n    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;\n\n    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;\n    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;\n\n    // Note the use of `!=` which checks for null or undefined.\n    var lastChildren = lastContent != null ? null : lastProps.children;\n    var nextChildren = nextContent != null ? null : nextProps.children;\n\n    // If we're switching from children to content/html or vice versa, remove\n    // the old content\n    var lastHasContentOrHtml = lastContent != null || lastHtml != null;\n    var nextHasContentOrHtml = nextContent != null || nextHtml != null;\n    if (lastChildren != null && nextChildren == null) {\n      this.updateChildren(null, transaction, context);\n    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {\n      this.updateTextContent('');\n    }\n\n    if (nextContent != null) {\n      if (lastContent !== nextContent) {\n        this.updateTextContent('' + nextContent);\n      }\n    } else if (nextHtml != null) {\n      if (lastHtml !== nextHtml) {\n        this.updateMarkup('' + nextHtml);\n      }\n    } else if (nextChildren != null) {\n      this.updateChildren(nextChildren, transaction, context);\n    }\n  },\n\n  /**\n   * Destroys all event registrations for this instance. Does not remove from\n   * the DOM. That must be done by the parent.\n   *\n   * @internal\n   */\n  unmountComponent: function () {\n    switch (this._tag) {\n      case 'iframe':\n      case 'img':\n      case 'form':\n      case 'video':\n      case 'audio':\n        var listeners = this._wrapperState.listeners;\n        if (listeners) {\n          for (var i = 0; i < listeners.length; i++) {\n            listeners[i].remove();\n          }\n        }\n        break;\n      case 'input':\n        ReactDOMInput.unmountWrapper(this);\n        break;\n      case 'html':\n      case 'head':\n      case 'body':\n        /**\n         * Components like <html> <head> and <body> can't be removed or added\n         * easily in a cross-browser way, however it's valuable to be able to\n         * take advantage of React's reconciliation for styling and <title>\n         * management. So we just document it and throw in dangerous cases.\n         */\n        !false ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is ' + 'impossible to unmount some top-level components (eg <html>, ' + '<head>, and <body>) reliably and efficiently. To fix this, have a ' + 'single top-level component that never unmounts render these ' + 'elements.', this._tag) : invariant(false) : undefined;\n        break;\n    }\n\n    this.unmountChildren();\n    ReactBrowserEventEmitter.deleteAllListeners(this._rootNodeID);\n    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);\n    this._rootNodeID = null;\n    this._wrapperState = null;\n    if (this._nodeWithLegacyProperties) {\n      var node = this._nodeWithLegacyProperties;\n      node._reactInternalComponent = null;\n      this._nodeWithLegacyProperties = null;\n    }\n  },\n\n  getPublicInstance: function () {\n    if (!this._nodeWithLegacyProperties) {\n      var node = ReactMount.getNode(this._rootNodeID);\n\n      node._reactInternalComponent = this;\n      node.getDOMNode = legacyGetDOMNode;\n      node.isMounted = legacyIsMounted;\n      node.setState = legacySetStateEtc;\n      node.replaceState = legacySetStateEtc;\n      node.forceUpdate = legacySetStateEtc;\n      node.setProps = legacySetProps;\n      node.replaceProps = legacyReplaceProps;\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (canDefineProperty) {\n          Object.defineProperties(node, legacyPropsDescriptor);\n        } else {\n          // updateComponent will update this property on subsequent renders\n          node.props = this._currentElement.props;\n        }\n      } else {\n        // updateComponent will update this property on subsequent renders\n        node.props = this._currentElement.props;\n      }\n\n      this._nodeWithLegacyProperties = node;\n    }\n    return this._nodeWithLegacyProperties;\n  }\n\n};\n\nReactPerf.measureMethods(ReactDOMComponent, 'ReactDOMComponent', {\n  mountComponent: 'mountComponent',\n  updateComponent: 'updateComponent'\n});\n\nassign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);\n\nmodule.exports = ReactDOMComponent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMComponent.js\n ** module id = 115\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMFactories\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactElement = require('./ReactElement');\nvar ReactElementValidator = require('./ReactElementValidator');\n\nvar mapObject = require('fbjs/lib/mapObject');\n\n/**\n * Create a factory that creates HTML tag elements.\n *\n * @param {string} tag Tag name (e.g. `div`).\n * @private\n */\nfunction createDOMFactory(tag) {\n  if (process.env.NODE_ENV !== 'production') {\n    return ReactElementValidator.createFactory(tag);\n  }\n  return ReactElement.createFactory(tag);\n}\n\n/**\n * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.\n * This is also accessible via `React.DOM`.\n *\n * @public\n */\nvar ReactDOMFactories = mapObject({\n  a: 'a',\n  abbr: 'abbr',\n  address: 'address',\n  area: 'area',\n  article: 'article',\n  aside: 'aside',\n  audio: 'audio',\n  b: 'b',\n  base: 'base',\n  bdi: 'bdi',\n  bdo: 'bdo',\n  big: 'big',\n  blockquote: 'blockquote',\n  body: 'body',\n  br: 'br',\n  button: 'button',\n  canvas: 'canvas',\n  caption: 'caption',\n  cite: 'cite',\n  code: 'code',\n  col: 'col',\n  colgroup: 'colgroup',\n  data: 'data',\n  datalist: 'datalist',\n  dd: 'dd',\n  del: 'del',\n  details: 'details',\n  dfn: 'dfn',\n  dialog: 'dialog',\n  div: 'div',\n  dl: 'dl',\n  dt: 'dt',\n  em: 'em',\n  embed: 'embed',\n  fieldset: 'fieldset',\n  figcaption: 'figcaption',\n  figure: 'figure',\n  footer: 'footer',\n  form: 'form',\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  head: 'head',\n  header: 'header',\n  hgroup: 'hgroup',\n  hr: 'hr',\n  html: 'html',\n  i: 'i',\n  iframe: 'iframe',\n  img: 'img',\n  input: 'input',\n  ins: 'ins',\n  kbd: 'kbd',\n  keygen: 'keygen',\n  label: 'label',\n  legend: 'legend',\n  li: 'li',\n  link: 'link',\n  main: 'main',\n  map: 'map',\n  mark: 'mark',\n  menu: 'menu',\n  menuitem: 'menuitem',\n  meta: 'meta',\n  meter: 'meter',\n  nav: 'nav',\n  noscript: 'noscript',\n  object: 'object',\n  ol: 'ol',\n  optgroup: 'optgroup',\n  option: 'option',\n  output: 'output',\n  p: 'p',\n  param: 'param',\n  picture: 'picture',\n  pre: 'pre',\n  progress: 'progress',\n  q: 'q',\n  rp: 'rp',\n  rt: 'rt',\n  ruby: 'ruby',\n  s: 's',\n  samp: 'samp',\n  script: 'script',\n  section: 'section',\n  select: 'select',\n  small: 'small',\n  source: 'source',\n  span: 'span',\n  strong: 'strong',\n  style: 'style',\n  sub: 'sub',\n  summary: 'summary',\n  sup: 'sup',\n  table: 'table',\n  tbody: 'tbody',\n  td: 'td',\n  textarea: 'textarea',\n  tfoot: 'tfoot',\n  th: 'th',\n  thead: 'thead',\n  time: 'time',\n  title: 'title',\n  tr: 'tr',\n  track: 'track',\n  u: 'u',\n  ul: 'ul',\n  'var': 'var',\n  video: 'video',\n  wbr: 'wbr',\n\n  // SVG\n  circle: 'circle',\n  clipPath: 'clipPath',\n  defs: 'defs',\n  ellipse: 'ellipse',\n  g: 'g',\n  image: 'image',\n  line: 'line',\n  linearGradient: 'linearGradient',\n  mask: 'mask',\n  path: 'path',\n  pattern: 'pattern',\n  polygon: 'polygon',\n  polyline: 'polyline',\n  radialGradient: 'radialGradient',\n  rect: 'rect',\n  stop: 'stop',\n  svg: 'svg',\n  text: 'text',\n  tspan: 'tspan'\n\n}, createDOMFactory);\n\nmodule.exports = ReactDOMFactories;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMFactories.js\n ** module id = 116\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMInput\n */\n\n'use strict';\n\nvar ReactDOMIDOperations = require('./ReactDOMIDOperations');\nvar LinkedValueUtils = require('./LinkedValueUtils');\nvar ReactMount = require('./ReactMount');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar assign = require('./Object.assign');\nvar invariant = require('fbjs/lib/invariant');\n\nvar instancesByReactID = {};\n\nfunction forceUpdateIfMounted() {\n  if (this._rootNodeID) {\n    // DOM component is still mounted; update\n    ReactDOMInput.updateWrapper(this);\n  }\n}\n\n/**\n * Implements an <input> native component that allows setting these optional\n * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.\n *\n * If `checked` or `value` are not supplied (or null/undefined), user actions\n * that affect the checked state or value will trigger updates to the element.\n *\n * If they are supplied (and not null/undefined), the rendered element will not\n * trigger updates to the element. Instead, the props must change in order for\n * the rendered element to be updated.\n *\n * The rendered element will be initialized as unchecked (or `defaultChecked`)\n * with an empty value (or `defaultValue`).\n *\n * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html\n */\nvar ReactDOMInput = {\n  getNativeProps: function (inst, props, context) {\n    var value = LinkedValueUtils.getValue(props);\n    var checked = LinkedValueUtils.getChecked(props);\n\n    var nativeProps = assign({}, props, {\n      defaultChecked: undefined,\n      defaultValue: undefined,\n      value: value != null ? value : inst._wrapperState.initialValue,\n      checked: checked != null ? checked : inst._wrapperState.initialChecked,\n      onChange: inst._wrapperState.onChange\n    });\n\n    return nativeProps;\n  },\n\n  mountWrapper: function (inst, props) {\n    if (process.env.NODE_ENV !== 'production') {\n      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);\n    }\n\n    var defaultValue = props.defaultValue;\n    inst._wrapperState = {\n      initialChecked: props.defaultChecked || false,\n      initialValue: defaultValue != null ? defaultValue : null,\n      onChange: _handleChange.bind(inst)\n    };\n  },\n\n  mountReadyWrapper: function (inst) {\n    // Can't be in mountWrapper or else server rendering leaks.\n    instancesByReactID[inst._rootNodeID] = inst;\n  },\n\n  unmountWrapper: function (inst) {\n    delete instancesByReactID[inst._rootNodeID];\n  },\n\n  updateWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    // TODO: Shouldn't this be getChecked(props)?\n    var checked = props.checked;\n    if (checked != null) {\n      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'checked', checked || false);\n    }\n\n    var value = LinkedValueUtils.getValue(props);\n    if (value != null) {\n      // Cast `value` to a string to ensure the value is set correctly. While\n      // browsers typically do this as necessary, jsdom doesn't.\n      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'value', '' + value);\n    }\n  }\n};\n\nfunction _handleChange(event) {\n  var props = this._currentElement.props;\n\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\n  // Here we use asap to wait until all updates have propagated, which\n  // is important when using controlled components within layers:\n  // https://github.com/facebook/react/issues/1698\n  ReactUpdates.asap(forceUpdateIfMounted, this);\n\n  var name = props.name;\n  if (props.type === 'radio' && name != null) {\n    var rootNode = ReactMount.getNode(this._rootNodeID);\n    var queryRoot = rootNode;\n\n    while (queryRoot.parentNode) {\n      queryRoot = queryRoot.parentNode;\n    }\n\n    // If `rootNode.form` was non-null, then we could try `form.elements`,\n    // but that sometimes behaves strangely in IE8. We could also try using\n    // `form.getElementsByName`, but that will only return direct children\n    // and won't include inputs that use the HTML5 `form=` attribute. Since\n    // the input might not even be in a form, let's just use the global\n    // `querySelectorAll` to ensure we don't miss anything.\n    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type=\"radio\"]');\n\n    for (var i = 0; i < group.length; i++) {\n      var otherNode = group[i];\n      if (otherNode === rootNode || otherNode.form !== rootNode.form) {\n        continue;\n      }\n      // This will throw if radio buttons rendered by different copies of React\n      // and the same name are rendered into the same form (same as #1939).\n      // That's probably okay; we don't support it just as we don't support\n      // mixing React with non-React.\n      var otherID = ReactMount.getID(otherNode);\n      !otherID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the ' + 'same `name` is not supported.') : invariant(false) : undefined;\n      var otherInstance = instancesByReactID[otherID];\n      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Unknown radio button ID %s.', otherID) : invariant(false) : undefined;\n      // If this is a controlled radio button group, forcing the input that\n      // was previously checked to update will cause it to be come re-checked\n      // as appropriate.\n      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);\n    }\n  }\n\n  return returnValue;\n}\n\nmodule.exports = ReactDOMInput;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMInput.js\n ** module id = 117\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMOption\n */\n\n'use strict';\n\nvar ReactChildren = require('./ReactChildren');\nvar ReactDOMSelect = require('./ReactDOMSelect');\n\nvar assign = require('./Object.assign');\nvar warning = require('fbjs/lib/warning');\n\nvar valueContextKey = ReactDOMSelect.valueContextKey;\n\n/**\n * Implements an <option> native component that warns when `selected` is set.\n */\nvar ReactDOMOption = {\n  mountWrapper: function (inst, props, context) {\n    // TODO (yungsters): Remove support for `selected` in <option>.\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : undefined;\n    }\n\n    // Look up whether this option is 'selected' via context\n    var selectValue = context[valueContextKey];\n\n    // If context key is null (e.g., no specified value or after initial mount)\n    // or missing (e.g., for <datalist>), we don't change props.selected\n    var selected = null;\n    if (selectValue != null) {\n      selected = false;\n      if (Array.isArray(selectValue)) {\n        // multiple\n        for (var i = 0; i < selectValue.length; i++) {\n          if ('' + selectValue[i] === '' + props.value) {\n            selected = true;\n            break;\n          }\n        }\n      } else {\n        selected = '' + selectValue === '' + props.value;\n      }\n    }\n\n    inst._wrapperState = { selected: selected };\n  },\n\n  getNativeProps: function (inst, props, context) {\n    var nativeProps = assign({ selected: undefined, children: undefined }, props);\n\n    // Read state only from initial mount because <select> updates value\n    // manually; we need the initial state only for server rendering\n    if (inst._wrapperState.selected != null) {\n      nativeProps.selected = inst._wrapperState.selected;\n    }\n\n    var content = '';\n\n    // Flatten children and warn if they aren't strings or numbers;\n    // invalid types are ignored.\n    ReactChildren.forEach(props.children, function (child) {\n      if (child == null) {\n        return;\n      }\n      if (typeof child === 'string' || typeof child === 'number') {\n        content += child;\n      } else {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : undefined;\n      }\n    });\n\n    if (content) {\n      nativeProps.children = content;\n    }\n\n    return nativeProps;\n  }\n\n};\n\nmodule.exports = ReactDOMOption;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMOption.js\n ** module id = 118\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMSelection\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar getNodeForCharacterOffset = require('./getNodeForCharacterOffset');\nvar getTextContentAccessor = require('./getTextContentAccessor');\n\n/**\n * While `isCollapsed` is available on the Selection object and `collapsed`\n * is available on the Range object, IE11 sometimes gets them wrong.\n * If the anchor/focus nodes and offsets are the same, the range is collapsed.\n */\nfunction isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {\n  return anchorNode === focusNode && anchorOffset === focusOffset;\n}\n\n/**\n * Get the appropriate anchor and focus node/offset pairs for IE.\n *\n * The catch here is that IE's selection API doesn't provide information\n * about whether the selection is forward or backward, so we have to\n * behave as though it's always forward.\n *\n * IE text differs from modern selection in that it behaves as though\n * block elements end with a new line. This means character offsets will\n * differ between the two APIs.\n *\n * @param {DOMElement} node\n * @return {object}\n */\nfunction getIEOffsets(node) {\n  var selection = document.selection;\n  var selectedRange = selection.createRange();\n  var selectedLength = selectedRange.text.length;\n\n  // Duplicate selection so we can move range without breaking user selection.\n  var fromStart = selectedRange.duplicate();\n  fromStart.moveToElementText(node);\n  fromStart.setEndPoint('EndToStart', selectedRange);\n\n  var startOffset = fromStart.text.length;\n  var endOffset = startOffset + selectedLength;\n\n  return {\n    start: startOffset,\n    end: endOffset\n  };\n}\n\n/**\n * @param {DOMElement} node\n * @return {?object}\n */\nfunction getModernOffsets(node) {\n  var selection = window.getSelection && window.getSelection();\n\n  if (!selection || selection.rangeCount === 0) {\n    return null;\n  }\n\n  var anchorNode = selection.anchorNode;\n  var anchorOffset = selection.anchorOffset;\n  var focusNode = selection.focusNode;\n  var focusOffset = selection.focusOffset;\n\n  var currentRange = selection.getRangeAt(0);\n\n  // In Firefox, range.startContainer and range.endContainer can be \"anonymous\n  // divs\", e.g. the up/down buttons on an <input type=\"number\">. Anonymous\n  // divs do not seem to expose properties, triggering a \"Permission denied\n  // error\" if any of its properties are accessed. The only seemingly possible\n  // way to avoid erroring is to access a property that typically works for\n  // non-anonymous divs and catch any error that may otherwise arise. See\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n  try {\n    /* eslint-disable no-unused-expressions */\n    currentRange.startContainer.nodeType;\n    currentRange.endContainer.nodeType;\n    /* eslint-enable no-unused-expressions */\n  } catch (e) {\n    return null;\n  }\n\n  // If the node and offset values are the same, the selection is collapsed.\n  // `Selection.isCollapsed` is available natively, but IE sometimes gets\n  // this value wrong.\n  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);\n\n  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;\n\n  var tempRange = currentRange.cloneRange();\n  tempRange.selectNodeContents(node);\n  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);\n\n  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);\n\n  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;\n  var end = start + rangeLength;\n\n  // Detect whether the selection is backward.\n  var detectionRange = document.createRange();\n  detectionRange.setStart(anchorNode, anchorOffset);\n  detectionRange.setEnd(focusNode, focusOffset);\n  var isBackward = detectionRange.collapsed;\n\n  return {\n    start: isBackward ? end : start,\n    end: isBackward ? start : end\n  };\n}\n\n/**\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setIEOffsets(node, offsets) {\n  var range = document.selection.createRange().duplicate();\n  var start, end;\n\n  if (typeof offsets.end === 'undefined') {\n    start = offsets.start;\n    end = start;\n  } else if (offsets.start > offsets.end) {\n    start = offsets.end;\n    end = offsets.start;\n  } else {\n    start = offsets.start;\n    end = offsets.end;\n  }\n\n  range.moveToElementText(node);\n  range.moveStart('character', start);\n  range.setEndPoint('EndToStart', range);\n  range.moveEnd('character', end - start);\n  range.select();\n}\n\n/**\n * In modern non-IE browsers, we can support both forward and backward\n * selections.\n *\n * Note: IE10+ supports the Selection object, but it does not support\n * the `extend` method, which means that even in modern IE, it's not possible\n * to programatically create a backward selection. Thus, for all IE\n * versions, we use the old IE API to create our selections.\n *\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setModernOffsets(node, offsets) {\n  if (!window.getSelection) {\n    return;\n  }\n\n  var selection = window.getSelection();\n  var length = node[getTextContentAccessor()].length;\n  var start = Math.min(offsets.start, length);\n  var end = typeof offsets.end === 'undefined' ? start : Math.min(offsets.end, length);\n\n  // IE 11 uses modern selection, but doesn't support the extend method.\n  // Flip backward selections, so we can set with a single range.\n  if (!selection.extend && start > end) {\n    var temp = end;\n    end = start;\n    start = temp;\n  }\n\n  var startMarker = getNodeForCharacterOffset(node, start);\n  var endMarker = getNodeForCharacterOffset(node, end);\n\n  if (startMarker && endMarker) {\n    var range = document.createRange();\n    range.setStart(startMarker.node, startMarker.offset);\n    selection.removeAllRanges();\n\n    if (start > end) {\n      selection.addRange(range);\n      selection.extend(endMarker.node, endMarker.offset);\n    } else {\n      range.setEnd(endMarker.node, endMarker.offset);\n      selection.addRange(range);\n    }\n  }\n}\n\nvar useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);\n\nvar ReactDOMSelection = {\n  /**\n   * @param {DOMElement} node\n   */\n  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,\n\n  /**\n   * @param {DOMElement|DOMTextNode} node\n   * @param {object} offsets\n   */\n  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets\n};\n\nmodule.exports = ReactDOMSelection;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMSelection.js\n ** module id = 119\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMServer\n */\n\n'use strict';\n\nvar ReactDefaultInjection = require('./ReactDefaultInjection');\nvar ReactServerRendering = require('./ReactServerRendering');\nvar ReactVersion = require('./ReactVersion');\n\nReactDefaultInjection.inject();\n\nvar ReactDOMServer = {\n  renderToString: ReactServerRendering.renderToString,\n  renderToStaticMarkup: ReactServerRendering.renderToStaticMarkup,\n  version: ReactVersion\n};\n\nmodule.exports = ReactDOMServer;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMServer.js\n ** module id = 120\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMTextarea\n */\n\n'use strict';\n\nvar LinkedValueUtils = require('./LinkedValueUtils');\nvar ReactDOMIDOperations = require('./ReactDOMIDOperations');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar assign = require('./Object.assign');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nfunction forceUpdateIfMounted() {\n  if (this._rootNodeID) {\n    // DOM component is still mounted; update\n    ReactDOMTextarea.updateWrapper(this);\n  }\n}\n\n/**\n * Implements a <textarea> native component that allows setting `value`, and\n * `defaultValue`. This differs from the traditional DOM API because value is\n * usually set as PCDATA children.\n *\n * If `value` is not supplied (or null/undefined), user actions that affect the\n * value will trigger updates to the element.\n *\n * If `value` is supplied (and not null/undefined), the rendered element will\n * not trigger updates to the element. Instead, the `value` prop must change in\n * order for the rendered element to be updated.\n *\n * The rendered element will be initialized with an empty value, the prop\n * `defaultValue` if specified, or the children content (deprecated).\n */\nvar ReactDOMTextarea = {\n  getNativeProps: function (inst, props, context) {\n    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : invariant(false) : undefined;\n\n    // Always set children to the same thing. In IE9, the selection range will\n    // get reset if `textContent` is mutated.\n    var nativeProps = assign({}, props, {\n      defaultValue: undefined,\n      value: undefined,\n      children: inst._wrapperState.initialValue,\n      onChange: inst._wrapperState.onChange\n    });\n\n    return nativeProps;\n  },\n\n  mountWrapper: function (inst, props) {\n    if (process.env.NODE_ENV !== 'production') {\n      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);\n    }\n\n    var defaultValue = props.defaultValue;\n    // TODO (yungsters): Remove support for children content in <textarea>.\n    var children = props.children;\n    if (children != null) {\n      if (process.env.NODE_ENV !== 'production') {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : undefined;\n      }\n      !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : invariant(false) : undefined;\n      if (Array.isArray(children)) {\n        !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : invariant(false) : undefined;\n        children = children[0];\n      }\n\n      defaultValue = '' + children;\n    }\n    if (defaultValue == null) {\n      defaultValue = '';\n    }\n    var value = LinkedValueUtils.getValue(props);\n\n    inst._wrapperState = {\n      // We save the initial value so that `ReactDOMComponent` doesn't update\n      // `textContent` (unnecessary since we update value).\n      // The initial value can be a boolean or object so that's why it's\n      // forced to be a string.\n      initialValue: '' + (value != null ? value : defaultValue),\n      onChange: _handleChange.bind(inst)\n    };\n  },\n\n  updateWrapper: function (inst) {\n    var props = inst._currentElement.props;\n    var value = LinkedValueUtils.getValue(props);\n    if (value != null) {\n      // Cast `value` to a string to ensure the value is set correctly. While\n      // browsers typically do this as necessary, jsdom doesn't.\n      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'value', '' + value);\n    }\n  }\n};\n\nfunction _handleChange(event) {\n  var props = this._currentElement.props;\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n  ReactUpdates.asap(forceUpdateIfMounted, this);\n  return returnValue;\n}\n\nmodule.exports = ReactDOMTextarea;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactDOMTextarea.js\n ** module id = 121\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEventEmitterMixin\n */\n\n'use strict';\n\nvar EventPluginHub = require('./EventPluginHub');\n\nfunction runEventQueueInBatch(events) {\n  EventPluginHub.enqueueEvents(events);\n  EventPluginHub.processEventQueue(false);\n}\n\nvar ReactEventEmitterMixin = {\n\n  /**\n   * Streams a fired top-level event to `EventPluginHub` where plugins have the\n   * opportunity to create `ReactEvent`s to be dispatched.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {object} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native environment event.\n   */\n  handleTopLevel: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n    var events = EventPluginHub.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);\n    runEventQueueInBatch(events);\n  }\n};\n\nmodule.exports = ReactEventEmitterMixin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactEventEmitterMixin.js\n ** module id = 122\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEventListener\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventListener = require('fbjs/lib/EventListener');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar PooledClass = require('./PooledClass');\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\nvar ReactMount = require('./ReactMount');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar assign = require('./Object.assign');\nvar getEventTarget = require('./getEventTarget');\nvar getUnboundedScrollPosition = require('fbjs/lib/getUnboundedScrollPosition');\n\nvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\n/**\n * Finds the parent React component of `node`.\n *\n * @param {*} node\n * @return {?DOMEventTarget} Parent container, or `null` if the specified node\n *                           is not nested.\n */\nfunction findParent(node) {\n  // TODO: It may be a good idea to cache this to prevent unnecessary DOM\n  // traversal, but caching is difficult to do correctly without using a\n  // mutation observer to listen for all DOM changes.\n  var nodeID = ReactMount.getID(node);\n  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);\n  var container = ReactMount.findReactContainerForID(rootID);\n  var parent = ReactMount.getFirstReactDOM(container);\n  return parent;\n}\n\n// Used to store ancestor hierarchy in top level callback\nfunction TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {\n  this.topLevelType = topLevelType;\n  this.nativeEvent = nativeEvent;\n  this.ancestors = [];\n}\nassign(TopLevelCallbackBookKeeping.prototype, {\n  destructor: function () {\n    this.topLevelType = null;\n    this.nativeEvent = null;\n    this.ancestors.length = 0;\n  }\n});\nPooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);\n\nfunction handleTopLevelImpl(bookKeeping) {\n  // TODO: Re-enable event.path handling\n  //\n  // if (bookKeeping.nativeEvent.path && bookKeeping.nativeEvent.path.length > 1) {\n  //   // New browsers have a path attribute on native events\n  //   handleTopLevelWithPath(bookKeeping);\n  // } else {\n  //   // Legacy browsers don't have a path attribute on native events\n  //   handleTopLevelWithoutPath(bookKeeping);\n  // }\n\n  void handleTopLevelWithPath; // temporarily unused\n  handleTopLevelWithoutPath(bookKeeping);\n}\n\n// Legacy browsers don't have a path attribute on native events\nfunction handleTopLevelWithoutPath(bookKeeping) {\n  var topLevelTarget = ReactMount.getFirstReactDOM(getEventTarget(bookKeeping.nativeEvent)) || window;\n\n  // Loop through the hierarchy, in case there's any nested components.\n  // It's important that we build the array of ancestors before calling any\n  // event handlers, because event handlers can modify the DOM, leading to\n  // inconsistencies with ReactMount's node cache. See #1105.\n  var ancestor = topLevelTarget;\n  while (ancestor) {\n    bookKeeping.ancestors.push(ancestor);\n    ancestor = findParent(ancestor);\n  }\n\n  for (var i = 0; i < bookKeeping.ancestors.length; i++) {\n    topLevelTarget = bookKeeping.ancestors[i];\n    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';\n    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, topLevelTarget, topLevelTargetID, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\n  }\n}\n\n// New browsers have a path attribute on native events\nfunction handleTopLevelWithPath(bookKeeping) {\n  var path = bookKeeping.nativeEvent.path;\n  var currentNativeTarget = path[0];\n  var eventsFired = 0;\n  for (var i = 0; i < path.length; i++) {\n    var currentPathElement = path[i];\n    if (currentPathElement.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE) {\n      currentNativeTarget = path[i + 1];\n    }\n    // TODO: slow\n    var reactParent = ReactMount.getFirstReactDOM(currentPathElement);\n    if (reactParent === currentPathElement) {\n      var currentPathElementID = ReactMount.getID(currentPathElement);\n      var newRootID = ReactInstanceHandles.getReactRootIDFromNodeID(currentPathElementID);\n      bookKeeping.ancestors.push(currentPathElement);\n\n      var topLevelTargetID = ReactMount.getID(currentPathElement) || '';\n      eventsFired++;\n      ReactEventListener._handleTopLevel(bookKeeping.topLevelType, currentPathElement, topLevelTargetID, bookKeeping.nativeEvent, currentNativeTarget);\n\n      // Jump to the root of this React render tree\n      while (currentPathElementID !== newRootID) {\n        i++;\n        currentPathElement = path[i];\n        currentPathElementID = ReactMount.getID(currentPathElement);\n      }\n    }\n  }\n  if (eventsFired === 0) {\n    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, window, '', bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\n  }\n}\n\nfunction scrollValueMonitor(cb) {\n  var scrollPosition = getUnboundedScrollPosition(window);\n  cb(scrollPosition);\n}\n\nvar ReactEventListener = {\n  _enabled: true,\n  _handleTopLevel: null,\n\n  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,\n\n  setHandleTopLevel: function (handleTopLevel) {\n    ReactEventListener._handleTopLevel = handleTopLevel;\n  },\n\n  setEnabled: function (enabled) {\n    ReactEventListener._enabled = !!enabled;\n  },\n\n  isEnabled: function () {\n    return ReactEventListener._enabled;\n  },\n\n  /**\n   * Traps top-level events by using event bubbling.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} handle Element on which to attach listener.\n   * @return {?object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {\n    var element = handle;\n    if (!element) {\n      return null;\n    }\n    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  },\n\n  /**\n   * Traps a top-level event by using event capturing.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} handle Element on which to attach listener.\n   * @return {?object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {\n    var element = handle;\n    if (!element) {\n      return null;\n    }\n    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  },\n\n  monitorScrollValue: function (refresh) {\n    var callback = scrollValueMonitor.bind(null, refresh);\n    EventListener.listen(window, 'scroll', callback);\n  },\n\n  dispatchEvent: function (topLevelType, nativeEvent) {\n    if (!ReactEventListener._enabled) {\n      return;\n    }\n\n    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);\n    try {\n      // Event queue being processed in the same cycle allows\n      // `preventDefault`.\n      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);\n    } finally {\n      TopLevelCallbackBookKeeping.release(bookKeeping);\n    }\n  }\n};\n\nmodule.exports = ReactEventListener;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactEventListener.js\n ** module id = 123\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInjection\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\nvar EventPluginHub = require('./EventPluginHub');\nvar ReactComponentEnvironment = require('./ReactComponentEnvironment');\nvar ReactClass = require('./ReactClass');\nvar ReactEmptyComponent = require('./ReactEmptyComponent');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactNativeComponent = require('./ReactNativeComponent');\nvar ReactPerf = require('./ReactPerf');\nvar ReactRootIndex = require('./ReactRootIndex');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar ReactInjection = {\n  Component: ReactComponentEnvironment.injection,\n  Class: ReactClass.injection,\n  DOMProperty: DOMProperty.injection,\n  EmptyComponent: ReactEmptyComponent.injection,\n  EventPluginHub: EventPluginHub.injection,\n  EventEmitter: ReactBrowserEventEmitter.injection,\n  NativeComponent: ReactNativeComponent.injection,\n  Perf: ReactPerf.injection,\n  RootIndex: ReactRootIndex.injection,\n  Updates: ReactUpdates.injection\n};\n\nmodule.exports = ReactInjection;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactInjection.js\n ** module id = 124\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactIsomorphic\n */\n\n'use strict';\n\nvar ReactChildren = require('./ReactChildren');\nvar ReactComponent = require('./ReactComponent');\nvar ReactClass = require('./ReactClass');\nvar ReactDOMFactories = require('./ReactDOMFactories');\nvar ReactElement = require('./ReactElement');\nvar ReactElementValidator = require('./ReactElementValidator');\nvar ReactPropTypes = require('./ReactPropTypes');\nvar ReactVersion = require('./ReactVersion');\n\nvar assign = require('./Object.assign');\nvar onlyChild = require('./onlyChild');\n\nvar createElement = ReactElement.createElement;\nvar createFactory = ReactElement.createFactory;\nvar cloneElement = ReactElement.cloneElement;\n\nif (process.env.NODE_ENV !== 'production') {\n  createElement = ReactElementValidator.createElement;\n  createFactory = ReactElementValidator.createFactory;\n  cloneElement = ReactElementValidator.cloneElement;\n}\n\nvar React = {\n\n  // Modern\n\n  Children: {\n    map: ReactChildren.map,\n    forEach: ReactChildren.forEach,\n    count: ReactChildren.count,\n    toArray: ReactChildren.toArray,\n    only: onlyChild\n  },\n\n  Component: ReactComponent,\n\n  createElement: createElement,\n  cloneElement: cloneElement,\n  isValidElement: ReactElement.isValidElement,\n\n  // Classic\n\n  PropTypes: ReactPropTypes,\n  createClass: ReactClass.createClass,\n  createFactory: createFactory,\n  createMixin: function (mixin) {\n    // Currently a noop. Will be used to validate and trace mixins.\n    return mixin;\n  },\n\n  // This looks DOM specific but these are actually isomorphic helpers\n  // since they are just generating DOM strings.\n  DOM: ReactDOMFactories,\n\n  version: ReactVersion,\n\n  // Hook for JSX spread, don't use this for anything else.\n  __spread: assign\n};\n\nmodule.exports = React;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactIsomorphic.js\n ** module id = 125\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMultiChild\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactComponentEnvironment = require('./ReactComponentEnvironment');\nvar ReactMultiChildUpdateTypes = require('./ReactMultiChildUpdateTypes');\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactReconciler = require('./ReactReconciler');\nvar ReactChildReconciler = require('./ReactChildReconciler');\n\nvar flattenChildren = require('./flattenChildren');\n\n/**\n * Updating children of a component may trigger recursive updates. The depth is\n * used to batch recursive updates to render markup more efficiently.\n *\n * @type {number}\n * @private\n */\nvar updateDepth = 0;\n\n/**\n * Queue of update configuration objects.\n *\n * Each object has a `type` property that is in `ReactMultiChildUpdateTypes`.\n *\n * @type {array<object>}\n * @private\n */\nvar updateQueue = [];\n\n/**\n * Queue of markup to be rendered.\n *\n * @type {array<string>}\n * @private\n */\nvar markupQueue = [];\n\n/**\n * Enqueues markup to be rendered and inserted at a supplied index.\n *\n * @param {string} parentID ID of the parent component.\n * @param {string} markup Markup that renders into an element.\n * @param {number} toIndex Destination index.\n * @private\n */\nfunction enqueueInsertMarkup(parentID, markup, toIndex) {\n  // NOTE: Null values reduce hidden classes.\n  updateQueue.push({\n    parentID: parentID,\n    parentNode: null,\n    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,\n    markupIndex: markupQueue.push(markup) - 1,\n    content: null,\n    fromIndex: null,\n    toIndex: toIndex\n  });\n}\n\n/**\n * Enqueues moving an existing element to another index.\n *\n * @param {string} parentID ID of the parent component.\n * @param {number} fromIndex Source index of the existing element.\n * @param {number} toIndex Destination index of the element.\n * @private\n */\nfunction enqueueMove(parentID, fromIndex, toIndex) {\n  // NOTE: Null values reduce hidden classes.\n  updateQueue.push({\n    parentID: parentID,\n    parentNode: null,\n    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,\n    markupIndex: null,\n    content: null,\n    fromIndex: fromIndex,\n    toIndex: toIndex\n  });\n}\n\n/**\n * Enqueues removing an element at an index.\n *\n * @param {string} parentID ID of the parent component.\n * @param {number} fromIndex Index of the element to remove.\n * @private\n */\nfunction enqueueRemove(parentID, fromIndex) {\n  // NOTE: Null values reduce hidden classes.\n  updateQueue.push({\n    parentID: parentID,\n    parentNode: null,\n    type: ReactMultiChildUpdateTypes.REMOVE_NODE,\n    markupIndex: null,\n    content: null,\n    fromIndex: fromIndex,\n    toIndex: null\n  });\n}\n\n/**\n * Enqueues setting the markup of a node.\n *\n * @param {string} parentID ID of the parent component.\n * @param {string} markup Markup that renders into an element.\n * @private\n */\nfunction enqueueSetMarkup(parentID, markup) {\n  // NOTE: Null values reduce hidden classes.\n  updateQueue.push({\n    parentID: parentID,\n    parentNode: null,\n    type: ReactMultiChildUpdateTypes.SET_MARKUP,\n    markupIndex: null,\n    content: markup,\n    fromIndex: null,\n    toIndex: null\n  });\n}\n\n/**\n * Enqueues setting the text content.\n *\n * @param {string} parentID ID of the parent component.\n * @param {string} textContent Text content to set.\n * @private\n */\nfunction enqueueTextContent(parentID, textContent) {\n  // NOTE: Null values reduce hidden classes.\n  updateQueue.push({\n    parentID: parentID,\n    parentNode: null,\n    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,\n    markupIndex: null,\n    content: textContent,\n    fromIndex: null,\n    toIndex: null\n  });\n}\n\n/**\n * Processes any enqueued updates.\n *\n * @private\n */\nfunction processQueue() {\n  if (updateQueue.length) {\n    ReactComponentEnvironment.processChildrenUpdates(updateQueue, markupQueue);\n    clearQueue();\n  }\n}\n\n/**\n * Clears any enqueued updates.\n *\n * @private\n */\nfunction clearQueue() {\n  updateQueue.length = 0;\n  markupQueue.length = 0;\n}\n\n/**\n * ReactMultiChild are capable of reconciling multiple children.\n *\n * @class ReactMultiChild\n * @internal\n */\nvar ReactMultiChild = {\n\n  /**\n   * Provides common functionality for components that must reconcile multiple\n   * children. This is used by `ReactDOMComponent` to mount, update, and\n   * unmount child components.\n   *\n   * @lends {ReactMultiChild.prototype}\n   */\n  Mixin: {\n\n    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this._currentElement) {\n          try {\n            ReactCurrentOwner.current = this._currentElement._owner;\n            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);\n          } finally {\n            ReactCurrentOwner.current = null;\n          }\n        }\n      }\n      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);\n    },\n\n    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, transaction, context) {\n      var nextChildren;\n      if (process.env.NODE_ENV !== 'production') {\n        if (this._currentElement) {\n          try {\n            ReactCurrentOwner.current = this._currentElement._owner;\n            nextChildren = flattenChildren(nextNestedChildrenElements);\n          } finally {\n            ReactCurrentOwner.current = null;\n          }\n          return ReactChildReconciler.updateChildren(prevChildren, nextChildren, transaction, context);\n        }\n      }\n      nextChildren = flattenChildren(nextNestedChildrenElements);\n      return ReactChildReconciler.updateChildren(prevChildren, nextChildren, transaction, context);\n    },\n\n    /**\n     * Generates a \"mount image\" for each of the supplied children. In the case\n     * of `ReactDOMComponent`, a mount image is a string of markup.\n     *\n     * @param {?object} nestedChildren Nested child maps.\n     * @return {array} An array of mounted representations.\n     * @internal\n     */\n    mountChildren: function (nestedChildren, transaction, context) {\n      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);\n      this._renderedChildren = children;\n      var mountImages = [];\n      var index = 0;\n      for (var name in children) {\n        if (children.hasOwnProperty(name)) {\n          var child = children[name];\n          // Inlined for performance, see `ReactInstanceHandles.createReactID`.\n          var rootID = this._rootNodeID + name;\n          var mountImage = ReactReconciler.mountComponent(child, rootID, transaction, context);\n          child._mountIndex = index++;\n          mountImages.push(mountImage);\n        }\n      }\n      return mountImages;\n    },\n\n    /**\n     * Replaces any rendered children with a text content string.\n     *\n     * @param {string} nextContent String of content.\n     * @internal\n     */\n    updateTextContent: function (nextContent) {\n      updateDepth++;\n      var errorThrown = true;\n      try {\n        var prevChildren = this._renderedChildren;\n        // Remove any rendered children.\n        ReactChildReconciler.unmountChildren(prevChildren);\n        // TODO: The setTextContent operation should be enough\n        for (var name in prevChildren) {\n          if (prevChildren.hasOwnProperty(name)) {\n            this._unmountChild(prevChildren[name]);\n          }\n        }\n        // Set new text content.\n        this.setTextContent(nextContent);\n        errorThrown = false;\n      } finally {\n        updateDepth--;\n        if (!updateDepth) {\n          if (errorThrown) {\n            clearQueue();\n          } else {\n            processQueue();\n          }\n        }\n      }\n    },\n\n    /**\n     * Replaces any rendered children with a markup string.\n     *\n     * @param {string} nextMarkup String of markup.\n     * @internal\n     */\n    updateMarkup: function (nextMarkup) {\n      updateDepth++;\n      var errorThrown = true;\n      try {\n        var prevChildren = this._renderedChildren;\n        // Remove any rendered children.\n        ReactChildReconciler.unmountChildren(prevChildren);\n        for (var name in prevChildren) {\n          if (prevChildren.hasOwnProperty(name)) {\n            this._unmountChildByName(prevChildren[name], name);\n          }\n        }\n        this.setMarkup(nextMarkup);\n        errorThrown = false;\n      } finally {\n        updateDepth--;\n        if (!updateDepth) {\n          if (errorThrown) {\n            clearQueue();\n          } else {\n            processQueue();\n          }\n        }\n      }\n    },\n\n    /**\n     * Updates the rendered children with new children.\n     *\n     * @param {?object} nextNestedChildrenElements Nested child element maps.\n     * @param {ReactReconcileTransaction} transaction\n     * @internal\n     */\n    updateChildren: function (nextNestedChildrenElements, transaction, context) {\n      updateDepth++;\n      var errorThrown = true;\n      try {\n        this._updateChildren(nextNestedChildrenElements, transaction, context);\n        errorThrown = false;\n      } finally {\n        updateDepth--;\n        if (!updateDepth) {\n          if (errorThrown) {\n            clearQueue();\n          } else {\n            processQueue();\n          }\n        }\n      }\n    },\n\n    /**\n     * Improve performance by isolating this hot code path from the try/catch\n     * block in `updateChildren`.\n     *\n     * @param {?object} nextNestedChildrenElements Nested child element maps.\n     * @param {ReactReconcileTransaction} transaction\n     * @final\n     * @protected\n     */\n    _updateChildren: function (nextNestedChildrenElements, transaction, context) {\n      var prevChildren = this._renderedChildren;\n      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, transaction, context);\n      this._renderedChildren = nextChildren;\n      if (!nextChildren && !prevChildren) {\n        return;\n      }\n      var name;\n      // `nextIndex` will increment for each child in `nextChildren`, but\n      // `lastIndex` will be the last index visited in `prevChildren`.\n      var lastIndex = 0;\n      var nextIndex = 0;\n      for (name in nextChildren) {\n        if (!nextChildren.hasOwnProperty(name)) {\n          continue;\n        }\n        var prevChild = prevChildren && prevChildren[name];\n        var nextChild = nextChildren[name];\n        if (prevChild === nextChild) {\n          this.moveChild(prevChild, nextIndex, lastIndex);\n          lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n          prevChild._mountIndex = nextIndex;\n        } else {\n          if (prevChild) {\n            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.\n            lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n            this._unmountChild(prevChild);\n          }\n          // The child must be instantiated before it's mounted.\n          this._mountChildByNameAtIndex(nextChild, name, nextIndex, transaction, context);\n        }\n        nextIndex++;\n      }\n      // Remove children that are no longer present.\n      for (name in prevChildren) {\n        if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {\n          this._unmountChild(prevChildren[name]);\n        }\n      }\n    },\n\n    /**\n     * Unmounts all rendered children. This should be used to clean up children\n     * when this component is unmounted.\n     *\n     * @internal\n     */\n    unmountChildren: function () {\n      var renderedChildren = this._renderedChildren;\n      ReactChildReconciler.unmountChildren(renderedChildren);\n      this._renderedChildren = null;\n    },\n\n    /**\n     * Moves a child component to the supplied index.\n     *\n     * @param {ReactComponent} child Component to move.\n     * @param {number} toIndex Destination index of the element.\n     * @param {number} lastIndex Last index visited of the siblings of `child`.\n     * @protected\n     */\n    moveChild: function (child, toIndex, lastIndex) {\n      // If the index of `child` is less than `lastIndex`, then it needs to\n      // be moved. Otherwise, we do not need to move it because a child will be\n      // inserted or moved before `child`.\n      if (child._mountIndex < lastIndex) {\n        enqueueMove(this._rootNodeID, child._mountIndex, toIndex);\n      }\n    },\n\n    /**\n     * Creates a child component.\n     *\n     * @param {ReactComponent} child Component to create.\n     * @param {string} mountImage Markup to insert.\n     * @protected\n     */\n    createChild: function (child, mountImage) {\n      enqueueInsertMarkup(this._rootNodeID, mountImage, child._mountIndex);\n    },\n\n    /**\n     * Removes a child component.\n     *\n     * @param {ReactComponent} child Child to remove.\n     * @protected\n     */\n    removeChild: function (child) {\n      enqueueRemove(this._rootNodeID, child._mountIndex);\n    },\n\n    /**\n     * Sets this text content string.\n     *\n     * @param {string} textContent Text content to set.\n     * @protected\n     */\n    setTextContent: function (textContent) {\n      enqueueTextContent(this._rootNodeID, textContent);\n    },\n\n    /**\n     * Sets this markup string.\n     *\n     * @param {string} markup Markup to set.\n     * @protected\n     */\n    setMarkup: function (markup) {\n      enqueueSetMarkup(this._rootNodeID, markup);\n    },\n\n    /**\n     * Mounts a child with the supplied name.\n     *\n     * NOTE: This is part of `updateChildren` and is here for readability.\n     *\n     * @param {ReactComponent} child Component to mount.\n     * @param {string} name Name of the child.\n     * @param {number} index Index at which to insert the child.\n     * @param {ReactReconcileTransaction} transaction\n     * @private\n     */\n    _mountChildByNameAtIndex: function (child, name, index, transaction, context) {\n      // Inlined for performance, see `ReactInstanceHandles.createReactID`.\n      var rootID = this._rootNodeID + name;\n      var mountImage = ReactReconciler.mountComponent(child, rootID, transaction, context);\n      child._mountIndex = index;\n      this.createChild(child, mountImage);\n    },\n\n    /**\n     * Unmounts a rendered child.\n     *\n     * NOTE: This is part of `updateChildren` and is here for readability.\n     *\n     * @param {ReactComponent} child Component to unmount.\n     * @private\n     */\n    _unmountChild: function (child) {\n      this.removeChild(child);\n      child._mountIndex = null;\n    }\n\n  }\n\n};\n\nmodule.exports = ReactMultiChild;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactMultiChild.js\n ** module id = 126\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactOwner\n */\n\n'use strict';\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * ReactOwners are capable of storing references to owned components.\n *\n * All components are capable of //being// referenced by owner components, but\n * only ReactOwner components are capable of //referencing// owned components.\n * The named reference is known as a \"ref\".\n *\n * Refs are available when mounted and updated during reconciliation.\n *\n *   var MyComponent = React.createClass({\n *     render: function() {\n *       return (\n *         <div onClick={this.handleClick}>\n *           <CustomComponent ref=\"custom\" />\n *         </div>\n *       );\n *     },\n *     handleClick: function() {\n *       this.refs.custom.handleClick();\n *     },\n *     componentDidMount: function() {\n *       this.refs.custom.initialize();\n *     }\n *   });\n *\n * Refs should rarely be used. When refs are used, they should only be done to\n * control data that is not handled by React's data flow.\n *\n * @class ReactOwner\n */\nvar ReactOwner = {\n\n  /**\n   * @param {?object} object\n   * @return {boolean} True if `object` is a valid owner.\n   * @final\n   */\n  isValidOwner: function (object) {\n    return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');\n  },\n\n  /**\n   * Adds a component by ref to an owner component.\n   *\n   * @param {ReactComponent} component Component to reference.\n   * @param {string} ref Name by which to refer to the component.\n   * @param {ReactOwner} owner Component on which to record the ref.\n   * @final\n   * @internal\n   */\n  addComponentAsRefTo: function (component, ref, owner) {\n    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might ' + 'be adding a ref to a component that was not created inside a component\\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : undefined;\n    owner.attachRef(ref, component);\n  },\n\n  /**\n   * Removes a component by ref from an owner component.\n   *\n   * @param {ReactComponent} component Component to dereference.\n   * @param {string} ref Name of the ref to remove.\n   * @param {ReactOwner} owner Component on which the ref is recorded.\n   * @final\n   * @internal\n   */\n  removeComponentAsRefFrom: function (component, ref, owner) {\n    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might ' + 'be removing a ref to a component that was not created inside a component\\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : undefined;\n    // Check that `component` is still the current ref because we do not want to\n    // detach the ref if another component stole it.\n    if (owner.getPublicInstance().refs[ref] === component.getPublicInstance()) {\n      owner.detachRef(ref);\n    }\n  }\n\n};\n\nmodule.exports = ReactOwner;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactOwner.js\n ** module id = 127\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactReconcileTransaction\n * @typechecks static-only\n */\n\n'use strict';\n\nvar CallbackQueue = require('./CallbackQueue');\nvar PooledClass = require('./PooledClass');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactDOMFeatureFlags = require('./ReactDOMFeatureFlags');\nvar ReactInputSelection = require('./ReactInputSelection');\nvar Transaction = require('./Transaction');\n\nvar assign = require('./Object.assign');\n\n/**\n * Ensures that, when possible, the selection range (currently selected text\n * input) is not disturbed by performing the transaction.\n */\nvar SELECTION_RESTORATION = {\n  /**\n   * @return {Selection} Selection information.\n   */\n  initialize: ReactInputSelection.getSelectionInformation,\n  /**\n   * @param {Selection} sel Selection information returned from `initialize`.\n   */\n  close: ReactInputSelection.restoreSelection\n};\n\n/**\n * Suppresses events (blur/focus) that could be inadvertently dispatched due to\n * high level DOM manipulations (like temporarily removing a text input from the\n * DOM).\n */\nvar EVENT_SUPPRESSION = {\n  /**\n   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before\n   * the reconciliation.\n   */\n  initialize: function () {\n    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();\n    ReactBrowserEventEmitter.setEnabled(false);\n    return currentlyEnabled;\n  },\n\n  /**\n   * @param {boolean} previouslyEnabled Enabled status of\n   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`\n   *   restores the previous value.\n   */\n  close: function (previouslyEnabled) {\n    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);\n  }\n};\n\n/**\n * Provides a queue for collecting `componentDidMount` and\n * `componentDidUpdate` callbacks during the the transaction.\n */\nvar ON_DOM_READY_QUEUEING = {\n  /**\n   * Initializes the internal `onDOMReady` queue.\n   */\n  initialize: function () {\n    this.reactMountReady.reset();\n  },\n\n  /**\n   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.\n   */\n  close: function () {\n    this.reactMountReady.notifyAll();\n  }\n};\n\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\nvar TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];\n\n/**\n * Currently:\n * - The order that these are listed in the transaction is critical:\n * - Suppresses events.\n * - Restores selection range.\n *\n * Future:\n * - Restore document/overflow scroll positions that were unintentionally\n *   modified via DOM insertions above the top viewport boundary.\n * - Implement/integrate with customized constraint based layout system and keep\n *   track of which dimensions must be remeasured.\n *\n * @class ReactReconcileTransaction\n */\nfunction ReactReconcileTransaction(forceHTML) {\n  this.reinitializeTransaction();\n  // Only server-side rendering really needs this option (see\n  // `ReactServerRendering`), but server-side uses\n  // `ReactServerRenderingTransaction` instead. This option is here so that it's\n  // accessible and defaults to false when `ReactDOMComponent` and\n  // `ReactTextComponent` checks it in `mountComponent`.`\n  this.renderToStaticMarkup = false;\n  this.reactMountReady = CallbackQueue.getPooled(null);\n  this.useCreateElement = !forceHTML && ReactDOMFeatureFlags.useCreateElement;\n}\n\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array<object>} List of operation wrap procedures.\n   *   TODO: convert to array<TransactionWrapper>\n   */\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   */\n  getReactMountReady: function () {\n    return this.reactMountReady;\n  },\n\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be reused.\n   */\n  destructor: function () {\n    CallbackQueue.release(this.reactMountReady);\n    this.reactMountReady = null;\n  }\n};\n\nassign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);\n\nPooledClass.addPoolingTo(ReactReconcileTransaction);\n\nmodule.exports = ReactReconcileTransaction;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactReconcileTransaction.js\n ** module id = 128\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactRef\n */\n\n'use strict';\n\nvar ReactOwner = require('./ReactOwner');\n\nvar ReactRef = {};\n\nfunction attachRef(ref, component, owner) {\n  if (typeof ref === 'function') {\n    ref(component.getPublicInstance());\n  } else {\n    // Legacy ref\n    ReactOwner.addComponentAsRefTo(component, ref, owner);\n  }\n}\n\nfunction detachRef(ref, component, owner) {\n  if (typeof ref === 'function') {\n    ref(null);\n  } else {\n    // Legacy ref\n    ReactOwner.removeComponentAsRefFrom(component, ref, owner);\n  }\n}\n\nReactRef.attachRefs = function (instance, element) {\n  if (element === null || element === false) {\n    return;\n  }\n  var ref = element.ref;\n  if (ref != null) {\n    attachRef(ref, instance, element._owner);\n  }\n};\n\nReactRef.shouldUpdateRefs = function (prevElement, nextElement) {\n  // If either the owner or a `ref` has changed, make sure the newest owner\n  // has stored a reference to `this`, and the previous owner (if different)\n  // has forgotten the reference to `this`. We use the element instead\n  // of the public this.props because the post processing cannot determine\n  // a ref. The ref conceptually lives on the element.\n\n  // TODO: Should this even be possible? The owner cannot change because\n  // it's forbidden by shouldUpdateReactComponent. The ref can change\n  // if you swap the keys of but not the refs. Reconsider where this check\n  // is made. It probably belongs where the key checking and\n  // instantiateReactComponent is done.\n\n  var prevEmpty = prevElement === null || prevElement === false;\n  var nextEmpty = nextElement === null || nextElement === false;\n\n  return(\n    // This has a few false positives w/r/t empty components.\n    prevEmpty || nextEmpty || nextElement._owner !== prevElement._owner || nextElement.ref !== prevElement.ref\n  );\n};\n\nReactRef.detachRefs = function (instance, element) {\n  if (element === null || element === false) {\n    return;\n  }\n  var ref = element.ref;\n  if (ref != null) {\n    detachRef(ref, instance, element._owner);\n  }\n};\n\nmodule.exports = ReactRef;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactRef.js\n ** module id = 129\n ** module chunks = 0\n **/","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactServerBatchingStrategy\n * @typechecks\n */\n\n'use strict';\n\nvar ReactServerBatchingStrategy = {\n  isBatchingUpdates: false,\n  batchedUpdates: function (callback) {\n    // Don't do anything here. During the server rendering we don't want to\n    // schedule any updates. We will simply ignore them.\n  }\n};\n\nmodule.exports = ReactServerBatchingStrategy;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactServerBatchingStrategy.js\n ** module id = 130\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks static-only\n * @providesModule ReactServerRendering\n */\n'use strict';\n\nvar ReactDefaultBatchingStrategy = require('./ReactDefaultBatchingStrategy');\nvar ReactElement = require('./ReactElement');\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\nvar ReactMarkupChecksum = require('./ReactMarkupChecksum');\nvar ReactServerBatchingStrategy = require('./ReactServerBatchingStrategy');\nvar ReactServerRenderingTransaction = require('./ReactServerRenderingTransaction');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar instantiateReactComponent = require('./instantiateReactComponent');\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * @param {ReactElement} element\n * @return {string} the HTML markup\n */\nfunction renderToString(element) {\n  !ReactElement.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'renderToString(): You must pass a valid ReactElement.') : invariant(false) : undefined;\n\n  var transaction;\n  try {\n    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);\n\n    var id = ReactInstanceHandles.createReactRootID();\n    transaction = ReactServerRenderingTransaction.getPooled(false);\n\n    return transaction.perform(function () {\n      var componentInstance = instantiateReactComponent(element, null);\n      var markup = componentInstance.mountComponent(id, transaction, emptyObject);\n      return ReactMarkupChecksum.addChecksumToMarkup(markup);\n    }, null);\n  } finally {\n    ReactServerRenderingTransaction.release(transaction);\n    // Revert to the DOM batching strategy since these two renderers\n    // currently share these stateful modules.\n    ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);\n  }\n}\n\n/**\n * @param {ReactElement} element\n * @return {string} the HTML markup, without the extra React ID and checksum\n * (for generating static pages)\n */\nfunction renderToStaticMarkup(element) {\n  !ReactElement.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'renderToStaticMarkup(): You must pass a valid ReactElement.') : invariant(false) : undefined;\n\n  var transaction;\n  try {\n    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);\n\n    var id = ReactInstanceHandles.createReactRootID();\n    transaction = ReactServerRenderingTransaction.getPooled(true);\n\n    return transaction.perform(function () {\n      var componentInstance = instantiateReactComponent(element, null);\n      return componentInstance.mountComponent(id, transaction, emptyObject);\n    }, null);\n  } finally {\n    ReactServerRenderingTransaction.release(transaction);\n    // Revert to the DOM batching strategy since these two renderers\n    // currently share these stateful modules.\n    ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);\n  }\n}\n\nmodule.exports = {\n  renderToString: renderToString,\n  renderToStaticMarkup: renderToStaticMarkup\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactServerRendering.js\n ** module id = 131\n ** module chunks = 0\n **/","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactServerRenderingTransaction\n * @typechecks\n */\n\n'use strict';\n\nvar PooledClass = require('./PooledClass');\nvar CallbackQueue = require('./CallbackQueue');\nvar Transaction = require('./Transaction');\n\nvar assign = require('./Object.assign');\nvar emptyFunction = require('fbjs/lib/emptyFunction');\n\n/**\n * Provides a `CallbackQueue` queue for collecting `onDOMReady` callbacks\n * during the performing of the transaction.\n */\nvar ON_DOM_READY_QUEUEING = {\n  /**\n   * Initializes the internal `onDOMReady` queue.\n   */\n  initialize: function () {\n    this.reactMountReady.reset();\n  },\n\n  close: emptyFunction\n};\n\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\nvar TRANSACTION_WRAPPERS = [ON_DOM_READY_QUEUEING];\n\n/**\n * @class ReactServerRenderingTransaction\n * @param {boolean} renderToStaticMarkup\n */\nfunction ReactServerRenderingTransaction(renderToStaticMarkup) {\n  this.reinitializeTransaction();\n  this.renderToStaticMarkup = renderToStaticMarkup;\n  this.reactMountReady = CallbackQueue.getPooled(null);\n  this.useCreateElement = false;\n}\n\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array} Empty list of operation wrap procedures.\n   */\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   */\n  getReactMountReady: function () {\n    return this.reactMountReady;\n  },\n\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be reused.\n   */\n  destructor: function () {\n    CallbackQueue.release(this.reactMountReady);\n    this.reactMountReady = null;\n  }\n};\n\nassign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);\n\nPooledClass.addPoolingTo(ReactServerRenderingTransaction);\n\nmodule.exports = ReactServerRenderingTransaction;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ReactServerRenderingTransaction.js\n ** module id = 132\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SVGDOMPropertyConfig\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\n\nvar MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;\n\nvar NS = {\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace'\n};\n\nvar SVGDOMPropertyConfig = {\n  Properties: {\n    clipPath: MUST_USE_ATTRIBUTE,\n    cx: MUST_USE_ATTRIBUTE,\n    cy: MUST_USE_ATTRIBUTE,\n    d: MUST_USE_ATTRIBUTE,\n    dx: MUST_USE_ATTRIBUTE,\n    dy: MUST_USE_ATTRIBUTE,\n    fill: MUST_USE_ATTRIBUTE,\n    fillOpacity: MUST_USE_ATTRIBUTE,\n    fontFamily: MUST_USE_ATTRIBUTE,\n    fontSize: MUST_USE_ATTRIBUTE,\n    fx: MUST_USE_ATTRIBUTE,\n    fy: MUST_USE_ATTRIBUTE,\n    gradientTransform: MUST_USE_ATTRIBUTE,\n    gradientUnits: MUST_USE_ATTRIBUTE,\n    markerEnd: MUST_USE_ATTRIBUTE,\n    markerMid: MUST_USE_ATTRIBUTE,\n    markerStart: MUST_USE_ATTRIBUTE,\n    offset: MUST_USE_ATTRIBUTE,\n    opacity: MUST_USE_ATTRIBUTE,\n    patternContentUnits: MUST_USE_ATTRIBUTE,\n    patternUnits: MUST_USE_ATTRIBUTE,\n    points: MUST_USE_ATTRIBUTE,\n    preserveAspectRatio: MUST_USE_ATTRIBUTE,\n    r: MUST_USE_ATTRIBUTE,\n    rx: MUST_USE_ATTRIBUTE,\n    ry: MUST_USE_ATTRIBUTE,\n    spreadMethod: MUST_USE_ATTRIBUTE,\n    stopColor: MUST_USE_ATTRIBUTE,\n    stopOpacity: MUST_USE_ATTRIBUTE,\n    stroke: MUST_USE_ATTRIBUTE,\n    strokeDasharray: MUST_USE_ATTRIBUTE,\n    strokeLinecap: MUST_USE_ATTRIBUTE,\n    strokeOpacity: MUST_USE_ATTRIBUTE,\n    strokeWidth: MUST_USE_ATTRIBUTE,\n    textAnchor: MUST_USE_ATTRIBUTE,\n    transform: MUST_USE_ATTRIBUTE,\n    version: MUST_USE_ATTRIBUTE,\n    viewBox: MUST_USE_ATTRIBUTE,\n    x1: MUST_USE_ATTRIBUTE,\n    x2: MUST_USE_ATTRIBUTE,\n    x: MUST_USE_ATTRIBUTE,\n    xlinkActuate: MUST_USE_ATTRIBUTE,\n    xlinkArcrole: MUST_USE_ATTRIBUTE,\n    xlinkHref: MUST_USE_ATTRIBUTE,\n    xlinkRole: MUST_USE_ATTRIBUTE,\n    xlinkShow: MUST_USE_ATTRIBUTE,\n    xlinkTitle: MUST_USE_ATTRIBUTE,\n    xlinkType: MUST_USE_ATTRIBUTE,\n    xmlBase: MUST_USE_ATTRIBUTE,\n    xmlLang: MUST_USE_ATTRIBUTE,\n    xmlSpace: MUST_USE_ATTRIBUTE,\n    y1: MUST_USE_ATTRIBUTE,\n    y2: MUST_USE_ATTRIBUTE,\n    y: MUST_USE_ATTRIBUTE\n  },\n  DOMAttributeNamespaces: {\n    xlinkActuate: NS.xlink,\n    xlinkArcrole: NS.xlink,\n    xlinkHref: NS.xlink,\n    xlinkRole: NS.xlink,\n    xlinkShow: NS.xlink,\n    xlinkTitle: NS.xlink,\n    xlinkType: NS.xlink,\n    xmlBase: NS.xml,\n    xmlLang: NS.xml,\n    xmlSpace: NS.xml\n  },\n  DOMAttributeNames: {\n    clipPath: 'clip-path',\n    fillOpacity: 'fill-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    gradientTransform: 'gradientTransform',\n    gradientUnits: 'gradientUnits',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    patternContentUnits: 'patternContentUnits',\n    patternUnits: 'patternUnits',\n    preserveAspectRatio: 'preserveAspectRatio',\n    spreadMethod: 'spreadMethod',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strokeDasharray: 'stroke-dasharray',\n    strokeLinecap: 'stroke-linecap',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    textAnchor: 'text-anchor',\n    viewBox: 'viewBox',\n    xlinkActuate: 'xlink:actuate',\n    xlinkArcrole: 'xlink:arcrole',\n    xlinkHref: 'xlink:href',\n    xlinkRole: 'xlink:role',\n    xlinkShow: 'xlink:show',\n    xlinkTitle: 'xlink:title',\n    xlinkType: 'xlink:type',\n    xmlBase: 'xml:base',\n    xmlLang: 'xml:lang',\n    xmlSpace: 'xml:space'\n  }\n};\n\nmodule.exports = SVGDOMPropertyConfig;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SVGDOMPropertyConfig.js\n ** module id = 133\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SelectEventPlugin\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar EventPropagators = require('./EventPropagators');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar ReactInputSelection = require('./ReactInputSelection');\nvar SyntheticEvent = require('./SyntheticEvent');\n\nvar getActiveElement = require('fbjs/lib/getActiveElement');\nvar isTextInputElement = require('./isTextInputElement');\nvar keyOf = require('fbjs/lib/keyOf');\nvar shallowEqual = require('fbjs/lib/shallowEqual');\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nvar skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;\n\nvar eventTypes = {\n  select: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onSelect: null }),\n      captured: keyOf({ onSelectCapture: null })\n    },\n    dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]\n  }\n};\n\nvar activeElement = null;\nvar activeElementID = null;\nvar lastSelection = null;\nvar mouseDown = false;\n\n// Track whether a listener exists for this plugin. If none exist, we do\n// not extract events.\nvar hasListener = false;\nvar ON_SELECT_KEY = keyOf({ onSelect: null });\n\n/**\n * Get an object which is a unique representation of the current selection.\n *\n * The return value will not be consistent across nodes or browsers, but\n * two identical selections on the same node will return identical objects.\n *\n * @param {DOMElement} node\n * @return {object}\n */\nfunction getSelection(node) {\n  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {\n    return {\n      start: node.selectionStart,\n      end: node.selectionEnd\n    };\n  } else if (window.getSelection) {\n    var selection = window.getSelection();\n    return {\n      anchorNode: selection.anchorNode,\n      anchorOffset: selection.anchorOffset,\n      focusNode: selection.focusNode,\n      focusOffset: selection.focusOffset\n    };\n  } else if (document.selection) {\n    var range = document.selection.createRange();\n    return {\n      parentElement: range.parentElement(),\n      text: range.text,\n      top: range.boundingTop,\n      left: range.boundingLeft\n    };\n  }\n}\n\n/**\n * Poll selection to see whether it's changed.\n *\n * @param {object} nativeEvent\n * @return {?SyntheticEvent}\n */\nfunction constructSelectEvent(nativeEvent, nativeEventTarget) {\n  // Ensure we have the right element, and that the user is not dragging a\n  // selection (this matches native `select` event behavior). In HTML5, select\n  // fires only on input and textarea thus if there's no focused element we\n  // won't dispatch.\n  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {\n    return null;\n  }\n\n  // Only fire when selection has actually changed.\n  var currentSelection = getSelection(activeElement);\n  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {\n    lastSelection = currentSelection;\n\n    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementID, nativeEvent, nativeEventTarget);\n\n    syntheticEvent.type = 'select';\n    syntheticEvent.target = activeElement;\n\n    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);\n\n    return syntheticEvent;\n  }\n\n  return null;\n}\n\n/**\n * This plugin creates an `onSelect` event that normalizes select events\n * across form elements.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - contentEditable\n *\n * This differs from native browser implementations in the following ways:\n * - Fires on contentEditable fields as well as inputs.\n * - Fires for collapsed selection.\n * - Fires after user input.\n */\nvar SelectEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n    if (!hasListener) {\n      return null;\n    }\n\n    switch (topLevelType) {\n      // Track the input node that has focus.\n      case topLevelTypes.topFocus:\n        if (isTextInputElement(topLevelTarget) || topLevelTarget.contentEditable === 'true') {\n          activeElement = topLevelTarget;\n          activeElementID = topLevelTargetID;\n          lastSelection = null;\n        }\n        break;\n      case topLevelTypes.topBlur:\n        activeElement = null;\n        activeElementID = null;\n        lastSelection = null;\n        break;\n\n      // Don't fire the event while the user is dragging. This matches the\n      // semantics of the native select event.\n      case topLevelTypes.topMouseDown:\n        mouseDown = true;\n        break;\n      case topLevelTypes.topContextMenu:\n      case topLevelTypes.topMouseUp:\n        mouseDown = false;\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\n\n      // Chrome and IE fire non-standard event when selection is changed (and\n      // sometimes when it hasn't). IE's event fires out of order with respect\n      // to key and input events on deletion, so we discard it.\n      //\n      // Firefox doesn't support selectionchange, so check selection status\n      // after each key entry. The selection changes after keydown and before\n      // keyup, but we check on keydown as well in the case of holding down a\n      // key, when multiple keydown events are fired but only one keyup is.\n      // This is also our approach for IE handling, for the reason above.\n      case topLevelTypes.topSelectionChange:\n        if (skipSelectionChangeEvent) {\n          break;\n        }\n      // falls through\n      case topLevelTypes.topKeyDown:\n      case topLevelTypes.topKeyUp:\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\n    }\n\n    return null;\n  },\n\n  didPutListener: function (id, registrationName, listener) {\n    if (registrationName === ON_SELECT_KEY) {\n      hasListener = true;\n    }\n  }\n};\n\nmodule.exports = SelectEventPlugin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SelectEventPlugin.js\n ** module id = 134\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ServerReactRootIndex\n * @typechecks\n */\n\n'use strict';\n\n/**\n * Size of the reactRoot ID space. We generate random numbers for React root\n * IDs and if there's a collision the events and DOM update system will\n * get confused. In the future we need a way to generate GUIDs but for\n * now this will work on a smaller scale.\n */\nvar GLOBAL_MOUNT_POINT_MAX = Math.pow(2, 53);\n\nvar ServerReactRootIndex = {\n  createReactRootIndex: function () {\n    return Math.ceil(Math.random() * GLOBAL_MOUNT_POINT_MAX);\n  }\n};\n\nmodule.exports = ServerReactRootIndex;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/ServerReactRootIndex.js\n ** module id = 135\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SimpleEventPlugin\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar EventListener = require('fbjs/lib/EventListener');\nvar EventPropagators = require('./EventPropagators');\nvar ReactMount = require('./ReactMount');\nvar SyntheticClipboardEvent = require('./SyntheticClipboardEvent');\nvar SyntheticEvent = require('./SyntheticEvent');\nvar SyntheticFocusEvent = require('./SyntheticFocusEvent');\nvar SyntheticKeyboardEvent = require('./SyntheticKeyboardEvent');\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\nvar SyntheticDragEvent = require('./SyntheticDragEvent');\nvar SyntheticTouchEvent = require('./SyntheticTouchEvent');\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\nvar SyntheticWheelEvent = require('./SyntheticWheelEvent');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar getEventCharCode = require('./getEventCharCode');\nvar invariant = require('fbjs/lib/invariant');\nvar keyOf = require('fbjs/lib/keyOf');\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nvar eventTypes = {\n  abort: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onAbort: true }),\n      captured: keyOf({ onAbortCapture: true })\n    }\n  },\n  blur: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onBlur: true }),\n      captured: keyOf({ onBlurCapture: true })\n    }\n  },\n  canPlay: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onCanPlay: true }),\n      captured: keyOf({ onCanPlayCapture: true })\n    }\n  },\n  canPlayThrough: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onCanPlayThrough: true }),\n      captured: keyOf({ onCanPlayThroughCapture: true })\n    }\n  },\n  click: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onClick: true }),\n      captured: keyOf({ onClickCapture: true })\n    }\n  },\n  contextMenu: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onContextMenu: true }),\n      captured: keyOf({ onContextMenuCapture: true })\n    }\n  },\n  copy: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onCopy: true }),\n      captured: keyOf({ onCopyCapture: true })\n    }\n  },\n  cut: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onCut: true }),\n      captured: keyOf({ onCutCapture: true })\n    }\n  },\n  doubleClick: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDoubleClick: true }),\n      captured: keyOf({ onDoubleClickCapture: true })\n    }\n  },\n  drag: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDrag: true }),\n      captured: keyOf({ onDragCapture: true })\n    }\n  },\n  dragEnd: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDragEnd: true }),\n      captured: keyOf({ onDragEndCapture: true })\n    }\n  },\n  dragEnter: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDragEnter: true }),\n      captured: keyOf({ onDragEnterCapture: true })\n    }\n  },\n  dragExit: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDragExit: true }),\n      captured: keyOf({ onDragExitCapture: true })\n    }\n  },\n  dragLeave: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDragLeave: true }),\n      captured: keyOf({ onDragLeaveCapture: true })\n    }\n  },\n  dragOver: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDragOver: true }),\n      captured: keyOf({ onDragOverCapture: true })\n    }\n  },\n  dragStart: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDragStart: true }),\n      captured: keyOf({ onDragStartCapture: true })\n    }\n  },\n  drop: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDrop: true }),\n      captured: keyOf({ onDropCapture: true })\n    }\n  },\n  durationChange: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDurationChange: true }),\n      captured: keyOf({ onDurationChangeCapture: true })\n    }\n  },\n  emptied: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onEmptied: true }),\n      captured: keyOf({ onEmptiedCapture: true })\n    }\n  },\n  encrypted: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onEncrypted: true }),\n      captured: keyOf({ onEncryptedCapture: true })\n    }\n  },\n  ended: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onEnded: true }),\n      captured: keyOf({ onEndedCapture: true })\n    }\n  },\n  error: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onError: true }),\n      captured: keyOf({ onErrorCapture: true })\n    }\n  },\n  focus: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onFocus: true }),\n      captured: keyOf({ onFocusCapture: true })\n    }\n  },\n  input: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onInput: true }),\n      captured: keyOf({ onInputCapture: true })\n    }\n  },\n  keyDown: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onKeyDown: true }),\n      captured: keyOf({ onKeyDownCapture: true })\n    }\n  },\n  keyPress: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onKeyPress: true }),\n      captured: keyOf({ onKeyPressCapture: true })\n    }\n  },\n  keyUp: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onKeyUp: true }),\n      captured: keyOf({ onKeyUpCapture: true })\n    }\n  },\n  load: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onLoad: true }),\n      captured: keyOf({ onLoadCapture: true })\n    }\n  },\n  loadedData: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onLoadedData: true }),\n      captured: keyOf({ onLoadedDataCapture: true })\n    }\n  },\n  loadedMetadata: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onLoadedMetadata: true }),\n      captured: keyOf({ onLoadedMetadataCapture: true })\n    }\n  },\n  loadStart: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onLoadStart: true }),\n      captured: keyOf({ onLoadStartCapture: true })\n    }\n  },\n  // Note: We do not allow listening to mouseOver events. Instead, use the\n  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.\n  mouseDown: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onMouseDown: true }),\n      captured: keyOf({ onMouseDownCapture: true })\n    }\n  },\n  mouseMove: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onMouseMove: true }),\n      captured: keyOf({ onMouseMoveCapture: true })\n    }\n  },\n  mouseOut: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onMouseOut: true }),\n      captured: keyOf({ onMouseOutCapture: true })\n    }\n  },\n  mouseOver: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onMouseOver: true }),\n      captured: keyOf({ onMouseOverCapture: true })\n    }\n  },\n  mouseUp: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onMouseUp: true }),\n      captured: keyOf({ onMouseUpCapture: true })\n    }\n  },\n  paste: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onPaste: true }),\n      captured: keyOf({ onPasteCapture: true })\n    }\n  },\n  pause: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onPause: true }),\n      captured: keyOf({ onPauseCapture: true })\n    }\n  },\n  play: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onPlay: true }),\n      captured: keyOf({ onPlayCapture: true })\n    }\n  },\n  playing: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onPlaying: true }),\n      captured: keyOf({ onPlayingCapture: true })\n    }\n  },\n  progress: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onProgress: true }),\n      captured: keyOf({ onProgressCapture: true })\n    }\n  },\n  rateChange: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onRateChange: true }),\n      captured: keyOf({ onRateChangeCapture: true })\n    }\n  },\n  reset: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onReset: true }),\n      captured: keyOf({ onResetCapture: true })\n    }\n  },\n  scroll: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onScroll: true }),\n      captured: keyOf({ onScrollCapture: true })\n    }\n  },\n  seeked: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onSeeked: true }),\n      captured: keyOf({ onSeekedCapture: true })\n    }\n  },\n  seeking: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onSeeking: true }),\n      captured: keyOf({ onSeekingCapture: true })\n    }\n  },\n  stalled: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onStalled: true }),\n      captured: keyOf({ onStalledCapture: true })\n    }\n  },\n  submit: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onSubmit: true }),\n      captured: keyOf({ onSubmitCapture: true })\n    }\n  },\n  suspend: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onSuspend: true }),\n      captured: keyOf({ onSuspendCapture: true })\n    }\n  },\n  timeUpdate: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onTimeUpdate: true }),\n      captured: keyOf({ onTimeUpdateCapture: true })\n    }\n  },\n  touchCancel: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onTouchCancel: true }),\n      captured: keyOf({ onTouchCancelCapture: true })\n    }\n  },\n  touchEnd: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onTouchEnd: true }),\n      captured: keyOf({ onTouchEndCapture: true })\n    }\n  },\n  touchMove: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onTouchMove: true }),\n      captured: keyOf({ onTouchMoveCapture: true })\n    }\n  },\n  touchStart: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onTouchStart: true }),\n      captured: keyOf({ onTouchStartCapture: true })\n    }\n  },\n  volumeChange: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onVolumeChange: true }),\n      captured: keyOf({ onVolumeChangeCapture: true })\n    }\n  },\n  waiting: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onWaiting: true }),\n      captured: keyOf({ onWaitingCapture: true })\n    }\n  },\n  wheel: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onWheel: true }),\n      captured: keyOf({ onWheelCapture: true })\n    }\n  }\n};\n\nvar topLevelEventsToDispatchConfig = {\n  topAbort: eventTypes.abort,\n  topBlur: eventTypes.blur,\n  topCanPlay: eventTypes.canPlay,\n  topCanPlayThrough: eventTypes.canPlayThrough,\n  topClick: eventTypes.click,\n  topContextMenu: eventTypes.contextMenu,\n  topCopy: eventTypes.copy,\n  topCut: eventTypes.cut,\n  topDoubleClick: eventTypes.doubleClick,\n  topDrag: eventTypes.drag,\n  topDragEnd: eventTypes.dragEnd,\n  topDragEnter: eventTypes.dragEnter,\n  topDragExit: eventTypes.dragExit,\n  topDragLeave: eventTypes.dragLeave,\n  topDragOver: eventTypes.dragOver,\n  topDragStart: eventTypes.dragStart,\n  topDrop: eventTypes.drop,\n  topDurationChange: eventTypes.durationChange,\n  topEmptied: eventTypes.emptied,\n  topEncrypted: eventTypes.encrypted,\n  topEnded: eventTypes.ended,\n  topError: eventTypes.error,\n  topFocus: eventTypes.focus,\n  topInput: eventTypes.input,\n  topKeyDown: eventTypes.keyDown,\n  topKeyPress: eventTypes.keyPress,\n  topKeyUp: eventTypes.keyUp,\n  topLoad: eventTypes.load,\n  topLoadedData: eventTypes.loadedData,\n  topLoadedMetadata: eventTypes.loadedMetadata,\n  topLoadStart: eventTypes.loadStart,\n  topMouseDown: eventTypes.mouseDown,\n  topMouseMove: eventTypes.mouseMove,\n  topMouseOut: eventTypes.mouseOut,\n  topMouseOver: eventTypes.mouseOver,\n  topMouseUp: eventTypes.mouseUp,\n  topPaste: eventTypes.paste,\n  topPause: eventTypes.pause,\n  topPlay: eventTypes.play,\n  topPlaying: eventTypes.playing,\n  topProgress: eventTypes.progress,\n  topRateChange: eventTypes.rateChange,\n  topReset: eventTypes.reset,\n  topScroll: eventTypes.scroll,\n  topSeeked: eventTypes.seeked,\n  topSeeking: eventTypes.seeking,\n  topStalled: eventTypes.stalled,\n  topSubmit: eventTypes.submit,\n  topSuspend: eventTypes.suspend,\n  topTimeUpdate: eventTypes.timeUpdate,\n  topTouchCancel: eventTypes.touchCancel,\n  topTouchEnd: eventTypes.touchEnd,\n  topTouchMove: eventTypes.touchMove,\n  topTouchStart: eventTypes.touchStart,\n  topVolumeChange: eventTypes.volumeChange,\n  topWaiting: eventTypes.waiting,\n  topWheel: eventTypes.wheel\n};\n\nfor (var type in topLevelEventsToDispatchConfig) {\n  topLevelEventsToDispatchConfig[type].dependencies = [type];\n}\n\nvar ON_CLICK_KEY = keyOf({ onClick: null });\nvar onClickListeners = {};\n\nvar SimpleEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];\n    if (!dispatchConfig) {\n      return null;\n    }\n    var EventConstructor;\n    switch (topLevelType) {\n      case topLevelTypes.topAbort:\n      case topLevelTypes.topCanPlay:\n      case topLevelTypes.topCanPlayThrough:\n      case topLevelTypes.topDurationChange:\n      case topLevelTypes.topEmptied:\n      case topLevelTypes.topEncrypted:\n      case topLevelTypes.topEnded:\n      case topLevelTypes.topError:\n      case topLevelTypes.topInput:\n      case topLevelTypes.topLoad:\n      case topLevelTypes.topLoadedData:\n      case topLevelTypes.topLoadedMetadata:\n      case topLevelTypes.topLoadStart:\n      case topLevelTypes.topPause:\n      case topLevelTypes.topPlay:\n      case topLevelTypes.topPlaying:\n      case topLevelTypes.topProgress:\n      case topLevelTypes.topRateChange:\n      case topLevelTypes.topReset:\n      case topLevelTypes.topSeeked:\n      case topLevelTypes.topSeeking:\n      case topLevelTypes.topStalled:\n      case topLevelTypes.topSubmit:\n      case topLevelTypes.topSuspend:\n      case topLevelTypes.topTimeUpdate:\n      case topLevelTypes.topVolumeChange:\n      case topLevelTypes.topWaiting:\n        // HTML Events\n        // @see http://www.w3.org/TR/html5/index.html#events-0\n        EventConstructor = SyntheticEvent;\n        break;\n      case topLevelTypes.topKeyPress:\n        // FireFox creates a keypress event for function keys too. This removes\n        // the unwanted keypress events. Enter is however both printable and\n        // non-printable. One would expect Tab to be as well (but it isn't).\n        if (getEventCharCode(nativeEvent) === 0) {\n          return null;\n        }\n      /* falls through */\n      case topLevelTypes.topKeyDown:\n      case topLevelTypes.topKeyUp:\n        EventConstructor = SyntheticKeyboardEvent;\n        break;\n      case topLevelTypes.topBlur:\n      case topLevelTypes.topFocus:\n        EventConstructor = SyntheticFocusEvent;\n        break;\n      case topLevelTypes.topClick:\n        // Firefox creates a click event on right mouse clicks. This removes the\n        // unwanted click events.\n        if (nativeEvent.button === 2) {\n          return null;\n        }\n      /* falls through */\n      case topLevelTypes.topContextMenu:\n      case topLevelTypes.topDoubleClick:\n      case topLevelTypes.topMouseDown:\n      case topLevelTypes.topMouseMove:\n      case topLevelTypes.topMouseOut:\n      case topLevelTypes.topMouseOver:\n      case topLevelTypes.topMouseUp:\n        EventConstructor = SyntheticMouseEvent;\n        break;\n      case topLevelTypes.topDrag:\n      case topLevelTypes.topDragEnd:\n      case topLevelTypes.topDragEnter:\n      case topLevelTypes.topDragExit:\n      case topLevelTypes.topDragLeave:\n      case topLevelTypes.topDragOver:\n      case topLevelTypes.topDragStart:\n      case topLevelTypes.topDrop:\n        EventConstructor = SyntheticDragEvent;\n        break;\n      case topLevelTypes.topTouchCancel:\n      case topLevelTypes.topTouchEnd:\n      case topLevelTypes.topTouchMove:\n      case topLevelTypes.topTouchStart:\n        EventConstructor = SyntheticTouchEvent;\n        break;\n      case topLevelTypes.topScroll:\n        EventConstructor = SyntheticUIEvent;\n        break;\n      case topLevelTypes.topWheel:\n        EventConstructor = SyntheticWheelEvent;\n        break;\n      case topLevelTypes.topCopy:\n      case topLevelTypes.topCut:\n      case topLevelTypes.topPaste:\n        EventConstructor = SyntheticClipboardEvent;\n        break;\n    }\n    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : invariant(false) : undefined;\n    var event = EventConstructor.getPooled(dispatchConfig, topLevelTargetID, nativeEvent, nativeEventTarget);\n    EventPropagators.accumulateTwoPhaseDispatches(event);\n    return event;\n  },\n\n  didPutListener: function (id, registrationName, listener) {\n    // Mobile Safari does not fire properly bubble click events on\n    // non-interactive elements, which means delegated click listeners do not\n    // fire. The workaround for this bug involves attaching an empty click\n    // listener on the target node.\n    if (registrationName === ON_CLICK_KEY) {\n      var node = ReactMount.getNode(id);\n      if (!onClickListeners[id]) {\n        onClickListeners[id] = EventListener.listen(node, 'click', emptyFunction);\n      }\n    }\n  },\n\n  willDeleteListener: function (id, registrationName) {\n    if (registrationName === ON_CLICK_KEY) {\n      onClickListeners[id].remove();\n      delete onClickListeners[id];\n    }\n  }\n\n};\n\nmodule.exports = SimpleEventPlugin;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SimpleEventPlugin.js\n ** module id = 136\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticClipboardEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/clipboard-apis/\n */\nvar ClipboardEventInterface = {\n  clipboardData: function (event) {\n    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);\n\nmodule.exports = SyntheticClipboardEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticClipboardEvent.js\n ** module id = 137\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticCompositionEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents\n */\nvar CompositionEventInterface = {\n  data: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);\n\nmodule.exports = SyntheticCompositionEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticCompositionEvent.js\n ** module id = 138\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticDragEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\n\n/**\n * @interface DragEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar DragEventInterface = {\n  dataTransfer: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);\n\nmodule.exports = SyntheticDragEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticDragEvent.js\n ** module id = 139\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticFocusEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\n\n/**\n * @interface FocusEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar FocusEventInterface = {\n  relatedTarget: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);\n\nmodule.exports = SyntheticFocusEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticFocusEvent.js\n ** module id = 140\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticInputEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105\n *      /#events-inputevents\n */\nvar InputEventInterface = {\n  data: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);\n\nmodule.exports = SyntheticInputEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticInputEvent.js\n ** module id = 141\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticKeyboardEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\n\nvar getEventCharCode = require('./getEventCharCode');\nvar getEventKey = require('./getEventKey');\nvar getEventModifierState = require('./getEventModifierState');\n\n/**\n * @interface KeyboardEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar KeyboardEventInterface = {\n  key: getEventKey,\n  location: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  repeat: null,\n  locale: null,\n  getModifierState: getEventModifierState,\n  // Legacy Interface\n  charCode: function (event) {\n    // `charCode` is the result of a KeyPress event and represents the value of\n    // the actual printable character.\n\n    // KeyPress is deprecated, but its replacement is not yet final and not\n    // implemented in any major browser. Only KeyPress has charCode.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n    return 0;\n  },\n  keyCode: function (event) {\n    // `keyCode` is the result of a KeyDown/Up event and represents the value of\n    // physical keyboard key.\n\n    // The actual meaning of the value depends on the users' keyboard layout\n    // which cannot be detected. Assuming that it is a US keyboard layout\n    // provides a surprisingly accurate mapping for US and European users.\n    // Due to this, it is left to the user to implement at this time.\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n    return 0;\n  },\n  which: function (event) {\n    // `which` is an alias for either `keyCode` or `charCode` depending on the\n    // type of the event.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n    return 0;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);\n\nmodule.exports = SyntheticKeyboardEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticKeyboardEvent.js\n ** module id = 142\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticTouchEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\n\nvar getEventModifierState = require('./getEventModifierState');\n\n/**\n * @interface TouchEvent\n * @see http://www.w3.org/TR/touch-events/\n */\nvar TouchEventInterface = {\n  touches: null,\n  targetTouches: null,\n  changedTouches: null,\n  altKey: null,\n  metaKey: null,\n  ctrlKey: null,\n  shiftKey: null,\n  getModifierState: getEventModifierState\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);\n\nmodule.exports = SyntheticTouchEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticTouchEvent.js\n ** module id = 143\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticWheelEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\n\n/**\n * @interface WheelEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar WheelEventInterface = {\n  deltaX: function (event) {\n    return 'deltaX' in event ? event.deltaX :\n    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).\n    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;\n  },\n  deltaY: function (event) {\n    return 'deltaY' in event ? event.deltaY :\n    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).\n    'wheelDeltaY' in event ? -event.wheelDeltaY :\n    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).\n    'wheelDelta' in event ? -event.wheelDelta : 0;\n  },\n  deltaZ: null,\n\n  // Browsers without \"deltaMode\" is reporting in raw wheel delta where one\n  // notch on the scroll is always +/- 120, roughly equivalent to pixels.\n  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or\n  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.\n  deltaMode: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticMouseEvent}\n */\nfunction SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);\n\nmodule.exports = SyntheticWheelEvent;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/SyntheticWheelEvent.js\n ** module id = 144\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule adler32\n */\n\n'use strict';\n\nvar MOD = 65521;\n\n// adler32 is not cryptographically strong, and is only used to sanity check that\n// markup generated on the server matches the markup generated on the client.\n// This implementation (a modified version of the SheetJS version) has been optimized\n// for our use case, at the expense of conforming to the adler32 specification\n// for non-ascii inputs.\nfunction adler32(data) {\n  var a = 1;\n  var b = 0;\n  var i = 0;\n  var l = data.length;\n  var m = l & ~0x3;\n  while (i < m) {\n    for (; i < Math.min(i + 4096, m); i += 4) {\n      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));\n    }\n    a %= MOD;\n    b %= MOD;\n  }\n  for (; i < l; i++) {\n    b += a += data.charCodeAt(i);\n  }\n  a %= MOD;\n  b %= MOD;\n  return a | b << 16;\n}\n\nmodule.exports = adler32;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/adler32.js\n ** module id = 145\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule dangerousStyleValue\n * @typechecks static-only\n */\n\n'use strict';\n\nvar CSSProperty = require('./CSSProperty');\n\nvar isUnitlessNumber = CSSProperty.isUnitlessNumber;\n\n/**\n * Convert a value into the proper css writable value. The style name `name`\n * should be logical (no hyphens), as specified\n * in `CSSProperty.isUnitlessNumber`.\n *\n * @param {string} name CSS property name such as `topMargin`.\n * @param {*} value CSS property value such as `10px`.\n * @return {string} Normalized style value with dimensions applied.\n */\nfunction dangerousStyleValue(name, value) {\n  // Note that we've removed escapeTextForBrowser() calls here since the\n  // whole string will be escaped when the attribute is injected into\n  // the markup. If you provide unsafe user data here they can inject\n  // arbitrary CSS which may be problematic (I couldn't repro this):\n  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\n  // This is not an XSS hole but instead a potential CSS injection issue\n  // which has lead to a greater discussion about how we're going to\n  // trust URLs moving forward. See #2115901\n\n  var isEmpty = value == null || typeof value === 'boolean' || value === '';\n  if (isEmpty) {\n    return '';\n  }\n\n  var isNonNumeric = isNaN(value);\n  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {\n    return '' + value; // cast to string\n  }\n\n  if (typeof value === 'string') {\n    value = value.trim();\n  }\n  return value + 'px';\n}\n\nmodule.exports = dangerousStyleValue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/dangerousStyleValue.js\n ** module id = 146\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule deprecated\n */\n\n'use strict';\n\nvar assign = require('./Object.assign');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * This will log a single deprecation notice per function and forward the call\n * on to the new API.\n *\n * @param {string} fnName The name of the function\n * @param {string} newModule The module that fn will exist in\n * @param {string} newPackage The module that fn will exist in\n * @param {*} ctx The context this forwarded call should run in\n * @param {function} fn The function to forward on to\n * @return {function} The function that will warn once and then call fn\n */\nfunction deprecated(fnName, newModule, newPackage, ctx, fn) {\n  var warned = false;\n  if (process.env.NODE_ENV !== 'production') {\n    var newFn = function () {\n      process.env.NODE_ENV !== 'production' ? warning(warned,\n      // Require examples in this string must be split to prevent React's\n      // build tools from mistaking them for real requires.\n      // Otherwise the build tools will attempt to build a '%s' module.\n      'React.%s is deprecated. Please use %s.%s from require' + '(\\'%s\\') ' + 'instead.', fnName, newModule, fnName, newPackage) : undefined;\n      warned = true;\n      return fn.apply(ctx, arguments);\n    };\n    // We need to make sure all properties of the original fn are copied over.\n    // In particular, this is needed to support PropTypes\n    return assign(newFn, fn);\n  }\n\n  return fn;\n}\n\nmodule.exports = deprecated;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/deprecated.js\n ** module id = 147\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule flattenChildren\n */\n\n'use strict';\n\nvar traverseAllChildren = require('./traverseAllChildren');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * @param {function} traverseContext Context passed through traversal.\n * @param {?ReactComponent} child React child component.\n * @param {!string} name String name of key path to child.\n */\nfunction flattenSingleChildIntoContext(traverseContext, child, name) {\n  // We found a component instance.\n  var result = traverseContext;\n  var keyUnique = result[name] === undefined;\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : undefined;\n  }\n  if (keyUnique && child != null) {\n    result[name] = child;\n  }\n}\n\n/**\n * Flattens children that are typically specified as `props.children`. Any null\n * children will not be included in the resulting object.\n * @return {!object} flattened children keyed by name.\n */\nfunction flattenChildren(children) {\n  if (children == null) {\n    return children;\n  }\n  var result = {};\n  traverseAllChildren(children, flattenSingleChildIntoContext, result);\n  return result;\n}\n\nmodule.exports = flattenChildren;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/flattenChildren.js\n ** module id = 148\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventKey\n * @typechecks static-only\n */\n\n'use strict';\n\nvar getEventCharCode = require('./getEventCharCode');\n\n/**\n * Normalization of deprecated HTML5 `key` values\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nvar normalizeKey = {\n  'Esc': 'Escape',\n  'Spacebar': ' ',\n  'Left': 'ArrowLeft',\n  'Up': 'ArrowUp',\n  'Right': 'ArrowRight',\n  'Down': 'ArrowDown',\n  'Del': 'Delete',\n  'Win': 'OS',\n  'Menu': 'ContextMenu',\n  'Apps': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'MozPrintableKey': 'Unidentified'\n};\n\n/**\n * Translation from legacy `keyCode` to HTML5 `key`\n * Only special keys supported, all others depend on keyboard layout or browser\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nvar translateToKey = {\n  8: 'Backspace',\n  9: 'Tab',\n  12: 'Clear',\n  13: 'Enter',\n  16: 'Shift',\n  17: 'Control',\n  18: 'Alt',\n  19: 'Pause',\n  20: 'CapsLock',\n  27: 'Escape',\n  32: ' ',\n  33: 'PageUp',\n  34: 'PageDown',\n  35: 'End',\n  36: 'Home',\n  37: 'ArrowLeft',\n  38: 'ArrowUp',\n  39: 'ArrowRight',\n  40: 'ArrowDown',\n  45: 'Insert',\n  46: 'Delete',\n  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',\n  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',\n  144: 'NumLock',\n  145: 'ScrollLock',\n  224: 'Meta'\n};\n\n/**\n * @param {object} nativeEvent Native browser event.\n * @return {string} Normalized `key` property.\n */\nfunction getEventKey(nativeEvent) {\n  if (nativeEvent.key) {\n    // Normalize inconsistent values reported by browsers due to\n    // implementations of a working draft specification.\n\n    // FireFox implements `key` but returns `MozPrintableKey` for all\n    // printable characters (normalized to `Unidentified`), ignore it.\n    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n    if (key !== 'Unidentified') {\n      return key;\n    }\n  }\n\n  // Browser does not implement `key`, polyfill as much of it as we can.\n  if (nativeEvent.type === 'keypress') {\n    var charCode = getEventCharCode(nativeEvent);\n\n    // The enter-key is technically both printable and non-printable and can\n    // thus be captured by `keypress`, no other non-printable key should.\n    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);\n  }\n  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {\n    // While user keyboard layout determines the actual meaning of each\n    // `keyCode` value, almost all function keys have a universal value.\n    return translateToKey[nativeEvent.keyCode] || 'Unidentified';\n  }\n  return '';\n}\n\nmodule.exports = getEventKey;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/getEventKey.js\n ** module id = 149\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getNodeForCharacterOffset\n */\n\n'use strict';\n\n/**\n * Given any node return the first leaf node without children.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {DOMElement|DOMTextNode}\n */\nfunction getLeafNode(node) {\n  while (node && node.firstChild) {\n    node = node.firstChild;\n  }\n  return node;\n}\n\n/**\n * Get the next sibling within a container. This will walk up the\n * DOM if a node's siblings have been exhausted.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {?DOMElement|DOMTextNode}\n */\nfunction getSiblingNode(node) {\n  while (node) {\n    if (node.nextSibling) {\n      return node.nextSibling;\n    }\n    node = node.parentNode;\n  }\n}\n\n/**\n * Get object describing the nodes which contain characters at offset.\n *\n * @param {DOMElement|DOMTextNode} root\n * @param {number} offset\n * @return {?object}\n */\nfunction getNodeForCharacterOffset(root, offset) {\n  var node = getLeafNode(root);\n  var nodeStart = 0;\n  var nodeEnd = 0;\n\n  while (node) {\n    if (node.nodeType === 3) {\n      nodeEnd = nodeStart + node.textContent.length;\n\n      if (nodeStart <= offset && nodeEnd >= offset) {\n        return {\n          node: node,\n          offset: offset - nodeStart\n        };\n      }\n\n      nodeStart = nodeEnd;\n    }\n\n    node = getLeafNode(getSiblingNode(node));\n  }\n}\n\nmodule.exports = getNodeForCharacterOffset;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/getNodeForCharacterOffset.js\n ** module id = 150\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule onlyChild\n */\n'use strict';\n\nvar ReactElement = require('./ReactElement');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection. The current implementation of this\n * function assumes that a single child gets passed without a wrapper, but the\n * purpose of this helper function is to abstract away the particular structure\n * of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactComponent} The first and only `ReactComponent` contained in the\n * structure.\n */\nfunction onlyChild(children) {\n  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'onlyChild must be passed a children with exactly one child.') : invariant(false) : undefined;\n  return children;\n}\n\nmodule.exports = onlyChild;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/onlyChild.js\n ** module id = 151\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule quoteAttributeValueForBrowser\n */\n\n'use strict';\n\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\n\n/**\n * Escapes attribute value to prevent scripting attacks.\n *\n * @param {*} value Value to escape.\n * @return {string} An escaped string.\n */\nfunction quoteAttributeValueForBrowser(value) {\n  return '\"' + escapeTextContentForBrowser(value) + '\"';\n}\n\nmodule.exports = quoteAttributeValueForBrowser;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/quoteAttributeValueForBrowser.js\n ** module id = 152\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n* @providesModule renderSubtreeIntoContainer\n*/\n\n'use strict';\n\nvar ReactMount = require('./ReactMount');\n\nmodule.exports = ReactMount.renderSubtreeIntoContainer;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/lib/renderSubtreeIntoContainer.js\n ** module id = 153\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule camelize\n * @typechecks\n */\n\n\"use strict\";\n\nvar _hyphenPattern = /-(.)/g;\n\n/**\n * Camelcases a hyphenated string, for example:\n *\n *   > camelize('background-color')\n *   < \"backgroundColor\"\n *\n * @param {string} string\n * @return {string}\n */\nfunction camelize(string) {\n  return string.replace(_hyphenPattern, function (_, character) {\n    return character.toUpperCase();\n  });\n}\n\nmodule.exports = camelize;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/camelize.js\n ** module id = 154\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule camelizeStyleName\n * @typechecks\n */\n\n'use strict';\n\nvar camelize = require('./camelize');\n\nvar msPattern = /^-ms-/;\n\n/**\n * Camelcases a hyphenated CSS property name, for example:\n *\n *   > camelizeStyleName('background-color')\n *   < \"backgroundColor\"\n *   > camelizeStyleName('-moz-transition')\n *   < \"MozTransition\"\n *   > camelizeStyleName('-ms-transition')\n *   < \"msTransition\"\n *\n * As Andi Smith suggests\n * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix\n * is converted to lowercase `ms`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction camelizeStyleName(string) {\n  return camelize(string.replace(msPattern, 'ms-'));\n}\n\nmodule.exports = camelizeStyleName;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/camelizeStyleName.js\n ** module id = 155\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule createArrayFromMixed\n * @typechecks\n */\n\n'use strict';\n\nvar toArray = require('./toArray');\n\n/**\n * Perform a heuristic test to determine if an object is \"array-like\".\n *\n *   A monk asked Joshu, a Zen master, \"Has a dog Buddha nature?\"\n *   Joshu replied: \"Mu.\"\n *\n * This function determines if its argument has \"array nature\": it returns\n * true if the argument is an actual array, an `arguments' object, or an\n * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).\n *\n * It will return false for other array-like objects like Filelist.\n *\n * @param {*} obj\n * @return {boolean}\n */\nfunction hasArrayNature(obj) {\n  return(\n    // not null/false\n    !!obj && (\n    // arrays are objects, NodeLists are functions in Safari\n    typeof obj == 'object' || typeof obj == 'function') &&\n    // quacks like an array\n    'length' in obj &&\n    // not window\n    !('setInterval' in obj) &&\n    // no DOM node should be considered an array-like\n    // a 'select' element has 'length' and 'item' properties on IE8\n    typeof obj.nodeType != 'number' && (\n    // a real array\n    Array.isArray(obj) ||\n    // arguments\n    'callee' in obj ||\n    // HTMLCollection/NodeList\n    'item' in obj)\n  );\n}\n\n/**\n * Ensure that the argument is an array by wrapping it in an array if it is not.\n * Creates a copy of the argument if it is already an array.\n *\n * This is mostly useful idiomatically:\n *\n *   var createArrayFromMixed = require('createArrayFromMixed');\n *\n *   function takesOneOrMoreThings(things) {\n *     things = createArrayFromMixed(things);\n *     ...\n *   }\n *\n * This allows you to treat `things' as an array, but accept scalars in the API.\n *\n * If you need to convert an array-like object, like `arguments`, into an array\n * use toArray instead.\n *\n * @param {*} obj\n * @return {array}\n */\nfunction createArrayFromMixed(obj) {\n  if (!hasArrayNature(obj)) {\n    return [obj];\n  } else if (Array.isArray(obj)) {\n    return obj.slice();\n  } else {\n    return toArray(obj);\n  }\n}\n\nmodule.exports = createArrayFromMixed;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/createArrayFromMixed.js\n ** module id = 156\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule createNodesFromMarkup\n * @typechecks\n */\n\n/*eslint-disable fb-www/unsafe-html*/\n\n'use strict';\n\nvar ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar createArrayFromMixed = require('./createArrayFromMixed');\nvar getMarkupWrap = require('./getMarkupWrap');\nvar invariant = require('./invariant');\n\n/**\n * Dummy container used to render all markup.\n */\nvar dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\n/**\n * Pattern used by `getNodeName`.\n */\nvar nodeNamePattern = /^\\s*<(\\w+)/;\n\n/**\n * Extracts the `nodeName` of the first element in a string of markup.\n *\n * @param {string} markup String of markup.\n * @return {?string} Node name of the supplied markup.\n */\nfunction getNodeName(markup) {\n  var nodeNameMatch = markup.match(nodeNamePattern);\n  return nodeNameMatch && nodeNameMatch[1].toLowerCase();\n}\n\n/**\n * Creates an array containing the nodes rendered from the supplied markup. The\n * optionally supplied `handleScript` function will be invoked once for each\n * <script> element that is rendered. If no `handleScript` function is supplied,\n * an exception is thrown if any <script> elements are rendered.\n *\n * @param {string} markup A string of valid HTML markup.\n * @param {?function} handleScript Invoked once for each rendered <script>.\n * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.\n */\nfunction createNodesFromMarkup(markup, handleScript) {\n  var node = dummyNode;\n  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : undefined;\n  var nodeName = getNodeName(markup);\n\n  var wrap = nodeName && getMarkupWrap(nodeName);\n  if (wrap) {\n    node.innerHTML = wrap[1] + markup + wrap[2];\n\n    var wrapDepth = wrap[0];\n    while (wrapDepth--) {\n      node = node.lastChild;\n    }\n  } else {\n    node.innerHTML = markup;\n  }\n\n  var scripts = node.getElementsByTagName('script');\n  if (scripts.length) {\n    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : undefined;\n    createArrayFromMixed(scripts).forEach(handleScript);\n  }\n\n  var nodes = createArrayFromMixed(node.childNodes);\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n  return nodes;\n}\n\nmodule.exports = createNodesFromMarkup;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/createNodesFromMarkup.js\n ** module id = 157\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getUnboundedScrollPosition\n * @typechecks\n */\n\n'use strict';\n\n/**\n * Gets the scroll position of the supplied element or window.\n *\n * The return values are unbounded, unlike `getScrollPosition`. This means they\n * may be negative or exceed the element boundaries (which is possible using\n * inertial scrolling).\n *\n * @param {DOMWindow|DOMElement} scrollable\n * @return {object} Map with `x` and `y` keys.\n */\nfunction getUnboundedScrollPosition(scrollable) {\n  if (scrollable === window) {\n    return {\n      x: window.pageXOffset || document.documentElement.scrollLeft,\n      y: window.pageYOffset || document.documentElement.scrollTop\n    };\n  }\n  return {\n    x: scrollable.scrollLeft,\n    y: scrollable.scrollTop\n  };\n}\n\nmodule.exports = getUnboundedScrollPosition;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/getUnboundedScrollPosition.js\n ** module id = 158\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule hyphenate\n * @typechecks\n */\n\n'use strict';\n\nvar _uppercasePattern = /([A-Z])/g;\n\n/**\n * Hyphenates a camelcased string, for example:\n *\n *   > hyphenate('backgroundColor')\n *   < \"background-color\"\n *\n * For CSS style names, use `hyphenateStyleName` instead which works properly\n * with all vendor prefixes, including `ms`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenate(string) {\n  return string.replace(_uppercasePattern, '-$1').toLowerCase();\n}\n\nmodule.exports = hyphenate;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/hyphenate.js\n ** module id = 159\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule hyphenateStyleName\n * @typechecks\n */\n\n'use strict';\n\nvar hyphenate = require('./hyphenate');\n\nvar msPattern = /^ms-/;\n\n/**\n * Hyphenates a camelcased CSS property name, for example:\n *\n *   > hyphenateStyleName('backgroundColor')\n *   < \"background-color\"\n *   > hyphenateStyleName('MozTransition')\n *   < \"-moz-transition\"\n *   > hyphenateStyleName('msTransition')\n *   < \"-ms-transition\"\n *\n * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n * is converted to `-ms-`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenateStyleName(string) {\n  return hyphenate(string).replace(msPattern, '-ms-');\n}\n\nmodule.exports = hyphenateStyleName;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/hyphenateStyleName.js\n ** module id = 160\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule isNode\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\n'use strict';\n\nfunction isNode(object) {\n  return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nmodule.exports = isNode;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/isNode.js\n ** module id = 161\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule isTextNode\n * @typechecks\n */\n\n'use strict';\n\nvar isNode = require('./isNode');\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/isTextNode.js\n ** module id = 162\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule mapObject\n */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Executes the provided `callback` once for each enumerable own property in the\n * object and constructs a new object from the results. The `callback` is\n * invoked with three arguments:\n *\n *  - the property value\n *  - the property name\n *  - the object being traversed\n *\n * Properties that are added after the call to `mapObject` will not be visited\n * by `callback`. If the values of existing properties are changed, the value\n * passed to `callback` will be the value at the time `mapObject` visits them.\n * Properties that are deleted before being visited are not visited.\n *\n * @grep function objectMap()\n * @grep function objMap()\n *\n * @param {?object} object\n * @param {function} callback\n * @param {*} context\n * @return {?object}\n */\nfunction mapObject(object, callback, context) {\n  if (!object) {\n    return null;\n  }\n  var result = {};\n  for (var name in object) {\n    if (hasOwnProperty.call(object, name)) {\n      result[name] = callback.call(context, object[name], name, object);\n    }\n  }\n  return result;\n}\n\nmodule.exports = mapObject;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/mapObject.js\n ** module id = 163\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule memoizeStringOnly\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Memoizes the return value of a function that accepts one string argument.\n *\n * @param {function} callback\n * @return {function}\n */\nfunction memoizeStringOnly(callback) {\n  var cache = {};\n  return function (string) {\n    if (!cache.hasOwnProperty(string)) {\n      cache[string] = callback.call(this, string);\n    }\n    return cache[string];\n  };\n}\n\nmodule.exports = memoizeStringOnly;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/memoizeStringOnly.js\n ** module id = 164\n ** module chunks = 0\n **/","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule toArray\n * @typechecks\n */\n\n'use strict';\n\nvar invariant = require('./invariant');\n\n/**\n * Convert array-like objects to arrays.\n *\n * This API assumes the caller knows the contents of the data type. For less\n * well defined inputs use createArrayFromMixed.\n *\n * @param {object|function|filelist} obj\n * @return {array}\n */\nfunction toArray(obj) {\n  var length = obj.length;\n\n  // Some browse builtin objects can report typeof 'function' (e.g. NodeList in\n  // old versions of Safari).\n  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : undefined;\n\n  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : undefined;\n\n  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : undefined;\n\n  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs\n  // without method will throw during the slice call and skip straight to the\n  // fallback.\n  if (obj.hasOwnProperty) {\n    try {\n      return Array.prototype.slice.call(obj);\n    } catch (e) {\n      // IE < 9 does not support Array#slice on collections objects\n    }\n  }\n\n  // Fall back to copying key by key. This assumes all keys have a value,\n  // so will not preserve sparsely populated inputs.\n  var ret = Array(length);\n  for (var ii = 0; ii < length; ii++) {\n    ret[ii] = obj[ii];\n  }\n  return ret;\n}\n\nmodule.exports = toArray;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/react/~/fbjs/lib/toArray.js\n ** module id = 165\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 166\n ** module chunks = 0\n **/"],"sourceRoot":""}